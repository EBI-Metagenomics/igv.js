{"version":3,"sources":["webpack://igv/webpack/universalModuleDefinition","webpack://igv/webpack/bootstrap","webpack://igv/(webpack)/buildin/global.js","webpack://igv/./tmp/igv.js","webpack://igv/./node_modules/buffer/index.js","webpack://igv/./node_modules/base64-js/index.js","webpack://igv/./node_modules/ieee754/index.js","webpack://igv/./node_modules/isarray/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","e","Buffer","global","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","style","$","jQuery","document","createElement","setAttribute","innerHTML","head","insertBefore","childNodes","length","arr","getProto","getPrototypeOf","slice","concat","push","indexOf","class2type","toString","hasOwn","fnToString","ObjectFunctionString","support","isFunction","obj","nodeType","isWindow","preservedScriptAttributes","type","src","noModule","DOMEval","code","doc","node","script","text","appendChild","parentNode","removeChild","toType","version","selector","context","fn","init","rtrim","jquery","constructor","toArray","num","pushStack","elems","ret","merge","prevObject","each","callback","map","elem","apply","arguments","first","eq","last","len","j","end","sort","splice","extend","options","copy","copyIsArray","clone","target","deep","isPlainObject","Array","isArray","undefined","expando","Math","random","replace","isReady","error","msg","Error","noop","proto","Ctor","isEmptyObject","globalEval","isArrayLike","trim","makeArray","results","inArray","second","grep","invert","matches","callbackExpect","arg","guid","iterator","split","toLowerCase","Sizzle","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","Date","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","sortOrder","a","b","pop","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","_","escaped","escapedWhitespace","high","String","fromCharCode","rcssescape","fcssescape","ch","asCodePoint","charCodeAt","unloadHandler","disabledAncestor","addCombinator","disabled","dir","next","els","seed","nid","match","groups","newSelector","newContext","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","nodeName","getAttribute","toSelector","join","testContext","querySelectorAll","qsaError","removeAttribute","keys","cache","cacheLength","shift","markFunction","assert","el","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","createPositionalPseudo","argument","matchIndexes","documentElement","hasCompare","subWindow","defaultView","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","filter","attrId","find","getAttributeNode","tag","tmp","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","val","specified","escape","sel","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","createPseudo","relative",">"," ","+","~","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","result","what","simple","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","start","parent","useCache","lastChild","uniqueID","pseudo","args","setFilters","idx","matched","not","matcher","unmatched","has","innerText","lang","elemLang","hash","location","focus","activeElement","hasFocus","href","tabIndex","enabled","checked","selected","selectedIndex","empty","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","tokens","combinator","base","skip","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","filters","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","token","compiled","defaultValue","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","rneedsContext","rsingleTag","winnow","qualifier","self","rootjQuery","parseHTML","ready","rparentsprev","guaranteedUnique","children","contents","prev","sibling","targets","closest","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","content","reverse","rnothtmlwhite","Identity","v","Thrower","ex","adoptValue","resolve","reject","noValue","method","promise","fail","then","Callbacks","flag","createOptions","firing","memory","fired","locked","queue","firingIndex","fire","once","stopOnFalse","remove","disable","lock","fireWith","Deferred","func","tuples","state","always","deferred","catch","pipe","fns","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","depth","special","that","mightThrow","TypeError","notifyWith","resolveWith","process","exceptionHook","stackTrace","rejectWith","getStackHook","setTimeout","stateString","when","singleValue","remaining","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","console","warn","message","readyException","readyList","completed","removeEventListener","readyWait","wait","readyState","doScroll","access","chainable","emptyGet","raw","bulk","rmsPrefix","rdashAlpha","fcamelCase","all","letter","toUpperCase","camelCase","string","acceptData","owner","Data","uid","configurable","set","data","prop","hasData","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","JSON","parse","getData","removeData","_data","_removeData","dequeue","startLength","hooks","_queueHooks","stop","setter","clearQueue","count","defer","pnum","source","rcssNum","cssExpand","isHiddenWithinTree","display","css","swap","old","defaultDisplayMap","getDefaultDisplay","body","showHide","show","values","hide","toggle","rcheckableType","rtagName","rscriptType","wrapMap","option","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","optgroup","tbody","tfoot","colgroup","caption","th","rhtml","buildFragment","scripts","selection","ignored","wrap","fragment","createDocumentFragment","nodes","htmlPrefilter","createTextNode","div","checkClone","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","safeActiveElement","err","on","types","one","origFn","event","off","handleObjIn","eventHandle","events","handleObj","handlers","namespaces","origType","elemData","handle","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","Event","originalEvent","writable","load","noBubble","trigger","blur","click","beforeunload","returnValue","props","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","now","isSimulated","stopImmediatePropagation","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","rxhtmlTag","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","fixInput","domManip","collection","hasScripts","iNoClone","valueIsFunction","html","_evalUrl","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","rnumnonpx","getStyles","opener","getComputedStyle","rboxStyle","curCSS","computed","width","minWidth","maxWidth","getPropertyValue","pixelBoxStyles","addGetHookIf","conditionFn","hookFn","computeStyleTests","container","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","position","scrollboxSizeVal","offsetWidth","measure","round","parseFloat","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","cssPrefixes","emptyStyle","finalPropName","cssProps","capName","vendorPropName","setPositiveNumber","subtract","max","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","ceil","getWidthOrHeight","valueIsBorderBox","cssHooks","opacity","cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","origName","isCustomProp","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","initialInUnit","adjustCSS","setProperty","isFinite","getClientRects","getBoundingClientRect","left","margin","padding","border","prefix","suffix","expand","expanded","parts","delay","time","fx","speeds","timeout","clearTimeout","opt","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","lowercaseName","rfocusable","rclickable","removeProp","propFix","propHooks","tabindex","parseInt","for","class","stripAndCollapse","getClass","classesToArray","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","isValidValue","classNames","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","isTrigger","parentWindow","simulate","triggerHandler","attaches","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","traditional","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","hidden","visible","offsetHeight","createHTMLDocument","implementation","keepScripts","parsed","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollLeft","scrollTop","scrollTo","Height","Width","","defaultExtra","funcName","hover","fnOver","fnOut","unbind","delegate","undelegate","proxy","holdReady","hold","parseJSON","isNumeric","isNaN","_wrapped","ArrayProto","ObjProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","VERSION","optimizeCb","argCount","other","accumulator","cb","identity","isObject","iteratee","Infinity","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","pow","getLength","createReduce","memo","currentKey","forEach","collect","reduce","foldl","inject","reduceRight","foldr","detect","predicate","findIndex","findKey","negate","every","some","any","includes","include","item","fromIndex","guard","invoke","isFunc","pluck","where","findWhere","lastComputed","min","shuffle","rand","shuffled","sample","sortBy","criteria","group","behavior","groupBy","indexBy","countBy","size","partition","pass","take","array","rest","tail","drop","compact","flatten","shallow","strict","startIndex","output","isArguments","createPredicateIndexFinder","createIndexFinder","predicateFind","sortedIndex","without","difference","uniq","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","findLastIndex","low","mid","floor","lastIndexOf","range","step","executeBound","sourceFunc","boundFunc","callingContext","bound","partial","boundArgs","bindAll","memoize","hasher","address","throttle","previous","later","leading","trailing","debounce","immediate","timestamp","callNow","wrapper","compose","times","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","allKeys","mapObject","pairs","functions","methods","names","extendOwn","assign","pick","oiteratee","omit","defaults","tap","interceptor","isMatch","aStack","bStack","areArrays","aCtor","bCtor","isEqual","isEmpty","isString","isElement","Int8Array","isNumber","isNull","isUndefined","constant","propertyOf","accum","getTime","escapeMap","&","<","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","unescape","fallback","idCounter","uniqueId","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","settings","oldSettings","variable","render","chain","instance","_chain","mixin","valueOf","toJSON","USE_TYPEDARRAY","Zlib","Huffman","Util","CRC32","CompressionMethod","DEFLATE","RESERVED","Zip","opt_params","files","comment","STORE","OperatingSystem","MSDOS","UNIX","MACINTOSH","Flags","ENCRYPT","DESCRIPTOR","UTF8","FileHeaderSignature","LocalFileHeaderSignature","CentralDirectorySignature","addFile","compressed","crc32","Uint8Array","calc","deflateWithOption","buffer","encrypted","setPassword","compress","op1","op2","op3","endOfCentralDirectorySize","flags","compressionMethod","date","plainSize","filenameLength","extraFieldLength","commentLength","filename","extraField","il","jl","localFileSize","centralDirectorySize","createEncryptionKey","encode","needVersion","getMinutes","getSeconds","getHours","getMonth","getDate","getFullYear","RawDeflate","getByte","updateKeys","single","Uint32Array","buildHuffmanTable","lengths","table","bitLength","reversed","rtemp","listSize","maxCodeLength","minCodeLength","Number","POSITIVE_INFINITY","ZLIB_RAW_INFLATE_BUFFER_SIZE","RawInflate","blocks","bufferSize","totalpos","ip","bitsbuf","bitsbuflen","op","bfinal","bufferType","BufferType","ADAPTIVE","resize","BLOCK","MaxBackwardLength","MaxCopyLength","decompress","parseBlock","concatBufferBlock","concatBufferDynamic","Order","Uint16Array","LengthCodeTable","LengthExtraTable","DistCodeTable","DistExtraTable","FixedLiteralLengthTable","FixedDistanceTable","hdr","readBits","parseUncompressedBlock","parseFixedHuffmanBlock","parseDynamicHuffmanBlock","octet","readCodeByTable","codeWithLength","codeLength","inputLength","codeTable","preCopy","olength","subarray","expandBufferBlock","expandBufferAdaptive","fixRatio","decodeHuffmanAdaptive","decodeHuffmanBlock","codeLengthsTable","litlenTable","distTable","lengthTable","repeat","hlit","hdist","hclen","codeLengths","litlen","dist","currentLitlenTable","ti","codeDist","lengthCodeTable","lengthExtraTable","distCodeTable","distExtraTable","opt_param","backward","newSize","maxInflateSize","ratio","addRatio","block","pos","limit","RawInflateStream","opt_buffersize","ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE","blockLength","sp","status","Status","INITIALIZED","ip_","bitsbuflen_","bitsbuf_","BlockType","UNCOMPRESSED","FIXED","DYNAMIC","BLOCK_HEADER_START","BLOCK_HEADER_END","BLOCK_BODY_START","BLOCK_BODY_END","DECODE_BLOCK_START","DECODE_BLOCK_END","newInput","readBlockHeader","currentBlockType","readUncompressedBlockHeader","decodeHuffman","concatBuffer","save_","restore_","expandBuffer","bits","Inflate","cmf","flg","rawinflate","verify","Adler32","InflateStream","readHeader","Gunzip","member","decompressed","getMembers","decodeMember","concatMember","isize","inflated","inflen","ci","str","mtime","GunzipMember","id1","id2","cm","xfl","os","Gzip","FlagsMask","FEXTRA","xlen","decodeSubField","FNAME","FCOMMENT","FHCRC","crc16","getName","getMtime","deflateOptions","DefaultBufferSize","rawdeflate","UNKNOWN","byteLength","FAT","AMIGA","VMS","VM_CMS","ATARI_TOS","HPFS","Z_SYSTEM","CP_M","TOPS_20","NTFS","QDOS","ACORN_RISCOS","FTEXT","Heap","getParent","getChild","current","heap","compressionType","CompressionType","lazy","freqsLitLen","freqsDist","NONE","Lz77MinLength","Lz77MaxLength","WindowSize","MaxCodeLength","HUFMAX","FixedHuffmanTable","blockArray","makeNocompressBlock","makeFixedHuffmanBlock","makeDynamicHuffmanBlock","isFinalBlock","btype","nlen","stream","BitStream","writeBits","lz77","fixedHuffman","finish","litLenLengths","litLenCodes","distLengths","distCodes","treeSymbols","treeLengths","treeCodes","bitlen","hclenOrder","transLengths","getLengths_","getCodesFromLengths_","getTreeSymbols_","freqs","codes","dynamicHuffman","dataArray","litLen","literal","Lz77Match","backwardDistance","getDistanceCode_","toLz77Array","codeArray","matchKey","matchList","longestMatch","prevMatch","windowSize","lz77buf","skipLength","writeMatch","lz77Array","searchLongestMatch_","currentMatch","matchLength","matchMax","dl","permatch","litlenLengths","runLength","nResult","rpt","nSymbols","reversePackageMerge_","symbols","weight","minimumCost","currentPosition","half","takePackage","x","startCode","Unzip","eocdrOffset","numberOfThisDisk","startDisk","totalEntriesThisDisk","totalEntries","centralDirectoryOffset","fileHeaderList","filenameToIndex","FileHeader","compression","compressedSize","fileNameLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","relativeOffset","LocalFileHeader","searchEndOfCentralDirectoryRecord","parseEndOfCentralDirectoryRecord","parseFileHeader","fileHeader","filelist","filetable","getFileData","localFileHeader","createDecryptionKey","decode","getFilenames","filenameList","stringToByteArray","update","adler","tlen","s1","s2","OptimizationParameter","bufferPosition","bitindex","DefaultBlockSize","oldbuf","number","ReverseTable","rev32_","ZLIB_CRC32_COMPACT","crc","Table","Table_","Deflate","rawDeflate","rawDeflateOption","cinfo","flevel","LOG2E","log","MAX_WBITS","DEF_WBITS","MAX_MEM_LEVEL","MANY","BMAX","PRESET_DICT","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_DEFLATED","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_VERSION_ERROR","METHOD","FLAG","DICT4","DICT3","DICT2","DICT1","DICT0","BLOCKS","CHECK4","CHECK3","CHECK2","CHECK1","DONE","BAD","inflate_mask","IB_TYPE","IB_LENS","IB_STORED","IB_TABLE","IB_BTREE","IB_DTREE","IB_CODES","IB_DRY","IB_DONE","IB_BAD","fixed_bl","fixed_bd","fixed_tl","fixed_td","cplens","cplext","cpdist","cpdext","ZStream","was","inflateInit","w","nowrap","istate","inflate","f","inflateEnd","inflateSync","inflateSetDictionary","dictionary","dictLength","inflateReset","z","total_in","total_out","free","wbits","InfBlocks","next_in","avail_in","next_in_index","marker","need","proc","_adler","adler32","set_dictionary","mark","inflateSyncPoint","sync_point","INFBLOCKS_BORDER","checkfn","hufts","Int32Array","blens","bb","tb","InfCodes","bitk","bitb","read","write","inftree","InfTree","k","q","inflate_flush","inflate_trees_fixed","bl","bd","tl","arrayCopy","inflate_trees_bits","inflate_trees_dynamic","next_out_index","avail_out","next_out","IC_START","IC_LEN","IC_LENEXT","IC_DIST","IC_DISTEXT","IC_COPY","IC_LIT","IC_WASH","IC_END","IC_BADCODE","tl_index","td_index","lbits","dbits","ltree","ltree_index","dtree","dtree_index","tree","tindex","inflate_fast","tree_index","lit","tp","tp_index","ml","md","tp_index_t_3","huft_build","bindex","hp","hn","h","mask","xp","y","u","initWorkArea","nl","nd","vsize","testArray","hasSubarray","hasSlice","srcOffset","destOffset","arrayCopy_fast","BYTES_PER_ELEMENT","byteOffset","arrayCopy_slow","ADLER_BASE","ADLER_NMAX","buf","jszlib_inflate_buffer","afterUncOffset","oBlockList","totalSize","obuf","newob","out","cursor","TreeBase","Iterator","_tree","_ancestors","_cursor","Node","red","RBTree","comparator","_root","_comparator","is_red","single_rotate","save","get_child","set_child","double_rotate","TDigest","K","CX","discrete","centroids","compare_centroid_means","nreset","mean","compare_centroid_mean_cumns","mean_cumn","pop_random","choices","Digest","config","digest_ratio","digest_thresh","thresh","n_unique","clear","res","findIter","iter","lowerBound","cmp","upperBound","it","reach","_minNode","_maxNode","gp","ggp","dir2","found","sr","gpc","last_cumulate","everything","_cumulate","summary","percentile","_digest","push_centroid","exact","cumn","find_nearest","abs","_new_centroid","_addweight","nearest","bound_mean","lower","p_rank","x_or_xlist","ps","_p_rank","upper","bound_mean_cumn","p_or_plist","qs","_percentile","compressing","points","check_continuous","gmodCRAM","default","__e","__proto__","CramBufferOverrunError","CramMalformedError","CramUnimplementedError","CramSizeLimitError","CramArgumentError","F","G","S","P","B","W","virtual","R","U","__g","store","TYPED_ARRAY_SUPPORT","RangeError","ArrayBuffer","isEncoding","isBuffer","isView","D","from","readUInt16BE","substr","E","fromByteArray","A","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","kMaxLength","poolSize","_augment","species","fill","allocUnsafe","allocUnsafeSlow","_isBuffer","swap16","swap32","swap64","C","T","I","equals","inspect","_arr","L","M","O","N","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","toByteArray","ReferenceError","run","fun","nextTick","title","browser","env","argv","versions","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","super_","inherits","readable","allowHalfOpen","_writableState","ended","highWaterMark","_readableState","destroyed","_destroy","int","byte","long","byteArray","byteArrayBlock","parameters","dataType","bytePosition","bitPosition","return","_t","_i","isNullOrUndefined","isSymbol","isRegExp","isDate","isError","isPrimitive","itf8Size","parseItf8","parseItem","_endPosition","_size","tinyMemoize","sequenceMD5","shrinkBuf","arraySet","flattenChunks","setTyped","Buf8","Buf16","Buf32","FC","AriDecoder","fc","freq","symbolInit","advanceStep","advanceSymbolStep","advanceSymbol","RANS_BYTE_L","renormalize","TF_SHIFT","TOTFREQ","contentWindow","open","close","copyright","callee","getIteratorMethod","_events","_maxListeners","EventEmitter","defaultMaxListeners","setMaxListeners","newListener","listener","warned","trace","listenerCount","Stream","Readable","Writable","Duplex","Transform","PassThrough","entry","pendingcb","corkedRequestsFree","WritableState","deprecate","objectMode","writableObjectMode","writableHighWaterMark","finalCalled","needDrain","ending","finished","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","errorEmitted","bufferedRequest","lastBufferedRequest","prefinished","bufferedRequestCount","_write","writev","_writev","destroy","final","_final","isBuf","allBuffers","chunk","encoding","getBuffer","hasInstance","cork","uncork","setDefaultEncoding","_undestroy","undestroy","setImmediate","charAt","getOwnPropertySymbols","CRAM_FLAG_PRESERVE_QUAL_SCORES","CRAM_FLAG_DETACHED","CRAM_FLAG_MATE_DOWNSTREAM","CRAM_FLAG_NO_SEQ","CRAM_FLAG_MASK","CRAM_M_REVERSE","CRAM_M_UNMAP","BAM_FPAIRED","BAM_FPROPER_PAIR","BAM_FUNMAP","BAM_FMUNMAP","BAM_FREVERSE","BAM_FMREVERSE","BAM_FREAD1","BAM_FREAD2","BAM_FSECONDARY","BAM_FQCFAIL","BAM_FDUP","BAM_FSUPPLEMENTARY","BAM_CMATCH","BAM_CINS","BAM_CDEL","BAM_CREF_SKIP","BAM_CSOFT_CLIP","BAM_CHARD_CLIP","BAM_CPAD","BAM_CEQUAL","BAM_CDIFF","BAM_CBACK","BAM_CIGAR_STR","BAM_CIGAR_SHIFT","BAM_CIGAR_MASK","BAM_CIGAR_TYPE","entries","clearImmediate","MessageChannel","Dispatch","port2","port1","onmessage","postMessage","importScripts","onreadystatechange","ok","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_DEFAULT_WINDOWBITS","Z_MIN_CHUNK","Z_MAX_CHUNK","Z_DEFAULT_CHUNK","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","Z_DEFAULT_MEMLEVEL","Z_MIN_LEVEL","Z_MAX_LEVEL","Z_DEFAULT_LEVEL","Z_DEFAULT_COMPRESSION","_finishFlushFlag","_processChunk","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","UNZIP","Z_BLOCK","_opts","_chunkSize","chunkSize","flush","finishFlush","_flushFlag","windowBits","level","memLevel","strategy","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","_handle","_hadError","onerror","errno","_buffer","_offset","_level","_strategy","freeze","DeflateRaw","InflateRaw","createDeflate","createInflate","createDeflateRaw","createInflateRaw","createGzip","createGunzip","createUnzip","deflate","deflateSync","gzip","gzipSync","deflateRaw","deflateRawSync","unzipSync","gunzip","gunzipSync","inflateRaw","inflateRawSync","params","_flush","_transform","writeSync","ReadableState","debuglog","readableObjectMode","readableHighWaterMark","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","decoder","StringDecoder","_read","isPaused","setEncoding","stdout","stderr","hasUnpiped","pause","unpipe","resume","_fromList","fillLast","lastNeed","lastTotal","lastChar","_transformState","transforming","writechunk","afterTransform","needTransform","writeencoding","transform","DataView","AssertionError","actual","expected","stackStartFunction","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","isPrototypeOf","generatedMessage","captureStackTrace","substring","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","format","stringify","noDeprecation","throwDeprecation","traceDeprecation","stylize","colors","showHidden","_extend","customInspect","getOwnPropertyNames","toUTCString","getOwnPropertyDescriptor","NODE_DEBUG","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","yellow","boolean","null","regexp","[object Object]","maxSize","Map","_set","delete","WebAssembly","Instance","Module","unsigned","__isLong__","isLong","neg","fromInt","fromNumber","fromBits","mul","fromString","fromValue","ZERO","UZERO","ONE","UONE","NEG_ONE","MAX_VALUE","MAX_UNSIGNED_VALUE","MIN_VALUE","toInt","toNumber","isZero","isNegative","sub","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","eqz","isPositive","isOdd","isEven","notEquals","neq","ne","lessThan","comp","lessThanOrEqual","lte","le","greaterThan","greaterThanOrEqual","gte","ge","multiply","get_high","divide","div_u","div_s","toUnsigned","shru","shr","shl","LN2","modulo","rem_u","rem_s","mod","rem","and","or","xor","shiftLeft","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","utf8","stringToBytes","bin","bytesToString","decodeURIComponent","protocol","pathname","LocalFile","RemoteFile","fromUrl","Promise","argumentNames","promisify","CramFile","IndexedCramFile","CraiIndex","cramFileDefinition","getSectionParsers","parseHeaderText","url","path","filehandle","validateChecksums","fetchReferenceSequenceCallback","seqFetch","checkSequenceMD5","cacheSize","featureCache","stat","maxLength","parser","majorVersion","abrupt","getContainerById","sent","getFirstBlock","getDefinition","cramContainerHeader1","getContainerAtPosition","getHeader","numBlocks","readBlock","cramBlockHeader","uncompress","contentPosition","uncompressedSize","_uncompress","_parseSection","cramBlockCrc32","checkCrc32","NaN","regeneratorRuntime","asyncIterator","displayName","isGeneratorFunction","setPrototypeOf","awrap","__await","AsyncIterator","async","_sent","tryEntries","completion","rval","dispatchException","tryLoc","catchLoc","finallyLoc","complete","afterLoc","delegateYield","resultName","nextLoc","_invoke","defineProperties","_k","Arguments","v8","PromiseRejectionEvent","_n","_c","_v","_s","domain","_h","enter","exit","onunhandledrejection","reason","_a","onrejectionhandled","_d","_w","race","BREAK","RETURN","MutationObserver","WebKitMutationObserver","navigator","standalone","observe","characterData","userAgent","finally","try","_isStdio","custom","_id","_clearFn","setInterval","clearInterval","unref","ref","enroll","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","localStorage","init_done","write_in_progress","pending_close","gzip_id_bytes_read","deflateEnd","strm","_process","_checkError","_afterSync","_after","_error","_init","_setDictionary","_reset","deflateInit2","inflateInit2","deflateSetDictionary","deflateReset","data_type","Z","H","V","Y","X","Q","J","tt","pending","pending_buf","pending_out","et","_tr_flush_block","block_start","strstart","rt","nt","max_chain_length","prev_length","nice_match","w_size","w_mask","good_match","lookahead","match_start","ot","window_size","hash_size","ins_h","hash_shift","hash_mask","at","match_length","_tr_tally","max_lazy_match","last_lit","st","prev_match","match_available","ut","good_length","max_lazy","nice_length","max_chain","ft","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","ct","_tr_init","ht","deflateInit","deflateResetKeep","deflateSetHeader","hcrc","_tr_align","_tr_stored_block","deflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","2","1","0","-1","-2","-3","-4","-5","-6","havedict","dmax","total","wsize","whave","wnext","lencode","distcode","lenbits","distbits","ncode","ndist","have","lens","work","lendyn","distdyn","sane","back","dt","inflateReset2","inflateResetKeep","pt","vt","mt","yt","bt","wt","xt","Et","St","kt","At","Ct","Tt","xflags","extra_len","inflateGetHeader","inflateInfo","Z_TREES","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_BINARY","Z_TEXT","Z_UNKNOWN","signed","KEY","QObject","findChild","keyFor","useSetter","useSimple","isExtensible","preventExtensions","NEED","fastKey","getWeak","onFreeze","_position","getInt","readStatsO0","readStatsO1","getByteAt","RansDecSymbol","putAt","setPosition","put","Parser","itf8","uint8","stripNull","formatter","uint32","choice","MI","UI","PI","RN","AP","RR","SM","TD","nest","cramUnmappedSliceHeader","ltf8","cramMappedSliceHeader","cramEncoding","namely","3","4","5","6","7","8","9","cramDataSeriesEncodingMap","cramTagEncodingMap","cramCompressionHeader","int32","cramContainerHeader2","Context","UInt8","UInt16LE","UInt16BE","UInt32LE","UInt32BE","Int8","Int16LE","Int16BE","Int32LE","Int32BE","FloatLE","FloatBE","DoubleLE","DoubleBE","Skip","Choice","Nest","Bit","Itf8","Ltf8","varName","endian","constructorFn","alias","setNextParser","zeroTerminated","greedy","readUntil","lengthInBytes","endianess","getCode","pushCode","generateError","addAliasedCode","addRawCode","generate","resolveReferences","markResolved","getUnresolvedReferences","markRequested","runInThisContext","sizeOf","generateAssert","generateVariable","generateFormatter","generateNext","generateBit","bitFields","generateTmpVariable","generateSkip","generateOption","generateString","generateBuffer","generateArray","addReference","pushScope","popScope","generateChoiceCase","pushPath","popPath","generateChoice","defaultChoice","generateNest","isInteger","generateItf8","generateLtf8","Object_keys","defineProp","globals","Script","runInContext","eval","execScript","runInNewContext","createContext","createScript","scopes","isAsync","tmpVariableCount","references","resolved","requested","filePosition","_readContainerHeader","numRecords","contentType","getCompressionHeaderBlock","numLandmarks","bytesToWords","_ff","_gg","_hh","_ii","_blocksize","_digestsize","wordsToBytes","asBytes","asString","bytesToHex","rotl","rotr","randomBytes","hexToBytes","bytesToBase64","base64ToBytes","mate","mateRecordNumber","readName","sequenceId","alignmentStart","templateLength","readLength","containerPosition","_contentType","getBlocks","contentId","_getBlocksContentIdIndex","refSeqId","getCompressionScheme","refBaseBlockId","getBlockByContentId","span","seq","refSeqStart","refSeqSpan","referenceRequired","getRecords","md5","getReferenceRegion","getCoreDataBlock","lastAlignmentStart","coreBlock","externalBlocks","getCursor","getCodecForDataSeries","recordCounter","t0","_fetchRecords","lengthOnRef","addReferenceSequence","cramFlags","APdelta","readGroupId","readNamesIncluded","isDetached","templateSize","hasMateDownStream","getTagNames","getCodecForTag","tags","isSegmentUnmapped","isUnknownBases","readBases","qualityScores","isPreservingQualityScores","readFeatures","refPos","mappingQuality","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isIterable","getIterator","_refRegion","isPaired","isMateUnmapped","isReverseComplemented","isMateReverseComplemented","isRead1","isRead2","substitutionMatrix","getReadBases","instantiateCodec","BF","CF","RI","RL","RG","MF","NS","NP","TS","NF","TC","TN","FN","FP","BS","IN","SC","DL","BA","BB","RS","PD","HC","MQ","QS","QQ","TL","TM","TV","preservation","tagIdsDictionary","dataSeriesCodecCache","tagCodecCache","tagEncoding","dataSeriesEncoding","getCodecClassWithId","codecId","buildCodeBook","buildCodes","buildCaches","sortedCodes","_decode","_decodeZeroLengthCode","numCodes","symbol","bitLengths","codeBook","bitCode","sortedByValue","sortedValuesByBitCode","sortedBitCodes","sortedBitLengthsByBitCode","bitCodeToValue","_getBits","_decodeData","_decodeInt","_decodeByte","blockContentId","_decodeByteArray","stopByte","_getLengthCodec","_getDataCodec","lengthsEncoding","valuesEncoding","slashes","auth","host","port","hostname","search","query","resolveObject","Url","javascript","javascript:","http","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","parseHost","toASCII","overflow","not-basic","invalid-input","ucs2","toUnicode","webpackPolyfill","paths","maxKeys","fetch","_fetch","headers","redirect","arrayBuffer","t1","_stat","searchParams","iterable","blob","Blob","formData","bodyUsed","onload","FileReader","readAsArrayBuffer","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","readAsText","json","credentials","signal","referrer","statusText","DOMException","aborted","XMLHttpRequest","abort","getAllResponseHeaders","responseURL","response","responseText","ontimeout","onabort","withCredentials","responseType","setRequestHeader","send","polyfill","Headers","Request","Response","lruCache","_getChunk","chunkNumber","fd","t2","t3","t4","t5","cram","cramUrl","cramPath","cramFilehandle","getEntriesForRange","fetchSizeLimit","viewAsPairs","pairAcrossChr","maxInsertSize","sliceBytes","toLocaleString","getRecordsInSlice","localeCompare","containerStart","sliceStart","getSlice","hasDataForReferenceSequence","readFile","parseIndex","igv","AlignmentBlock","seqIndexAt","genomicLocation","seqOffset","canBePaired","alignment","isMateMapped","chr","isFirstOfPair","isSecondOfPair","isSecondary","isSupplementary","finishBucket","alignments","currentBucket","downsampledCount","downsampledIntervals","DownsampledInterval","paired","DownsampleBucket","alignmentContainer","samplingDepth","pairsSupported","downsampledReads","pairsCache","CoverageMap","bpStart","coverage","maximum","threshold","qualityWeight","Coverage","posA","negA","posT","negT","posC","negC","posG","negG","posN","negN","qualA","qualT","qualC","qualG","qualN","qual","AlignmentContainer","samplingWindowSize","coverageMap","Set","isMapped","isFailsVendorQualityCheck","pairedEndStats","PairedEndStats","incCounts","addAlignment","compute","hasDownsampledIntervals","replacedAlignment","pairedAlignment","setSecondAlignment","PairedAlignment","incBlockCount","counts","lowerPercentile","upperPercentile","totalCount","frCount","rfCount","ffCount","sumF","sumF2","isMismatch","refBase","mismatchQualitySum","myself","popupData","isProperPair","fragmentLength","po","pairOrientation","orienation","fMean","stdDev","sqrt","lowerFragmentLength","upperFragmentLength","blockAtGenomicLocation","readInt","ba","readShort","readFloat","getFloat32","BamAlignment","isDuplicate","isNegativeStrand","isMateNegativeStrand","tagDict","tagBA","cc","decodeTags","nameValues","insertions","insertion","ins_start","numberFormatter","borderTop","strand","cigar","yesNo","mq","isFirst","readBaseAt","readBaseQualityAt","BamFilter","vendorFailed","secondary","supplementary","mqThreshold","readgroups","rg","BamAlignmentRow","score","findAlignment","centerAlignment","alignmentContains","firstAlignment","secondAlignment","updateScore","genomicInterval","sortOption","sortDirection","calculateScore","interval","readBase","quality","reference","sequence","calculateBaseScore","loadBamIndex","indexURL","tabix","genome","fullfill","xhr","loadArrayBuffer","buildOptions","magic","nbin","nintv","nref","binIndex","linearIndex","binNumber","cs","ce","sequenceIndexMap","indices","blockMin","blockMax","BinaryParser","seq_name","getString","getChromosomeName","nchnk","getVPointer","getLong","BamIndex","firstAlignmentBlock","lastAlignmentBlock","blocksForRange","refId","overlappingBins","chunks","lowest","minLin","maxLin","vp","beg","reg2bins","binChunks","minv","maxv","isLessThan","mergedChunks","lastChunk","c0","c1","dif","isGreaterThan","optimizeChunks","MAX_GZIP_BLOCK_SIZE","getIndex","baiPath","BamReader","bamPath","inferIndexPath","BamUtils","setReaderDefaults","readAlignments","bpEnd","chrId","chrToIndex","indexToChr","chrNames","chrAliasTable","promises","fetchMin","compressedChunks","unbgzf","decodeBamRecords","BamReaderNonIndexed","isDataUri","startsWith","alignmentCache","fetchAlignments","dataURI","bytes","info","dataString","atob","decodeURI","decodeDataURI","unc","parseAlignments","decodeBamHeader","FeatureCache","queryChr","qAlignments","queryFeatures","unpairAlignments","rows","row","packAlignmentRows","maxRows","showSoftClips","nextStart","alignmentRow","bucket","bucketStart","bucketList","allocatedCount","lastAllocatedCount","packedAlignmentRows","scStart","buckListIndex","scLengthOnRef","BamSource","indexed","sourceType","bamReader","Ga4ghAlignmentReader","BamWebserviceReader","HtsgetReader","ShardedBamReader","CramReader","setViewAsPairs","pairCache","setShowSoftClips","allAlignments","getAlignments","hasAlignments","getSequence","refSeq","alignmentStartGap","downsampleRowHeight","DEFAULT_COVERAGE_TRACK_HEIGHT","DEFAULT_TRACK_HEIGHT","DEFAULT_ALIGNMENT_COLOR","DEFAULT_COVERAGE_COLOR","DEFAULT_CONNECTOR_COLOR","BAMTrack","getChrColor","chrColorMap","color","Color","randomRGB","trackFactory","shadedBaseColor","nucleotide","alpha","baseColor","nucleotideColors","foregroundColor","nucleotideColorComponents","TrackBase","height","coverageTrackHeight","featureSource","coverageTrack","CoverageTrack","alignmentTrack","AlignmentTrack","visibilityWindow","showAllBases","coverageColor","minFragmentLength","maxFragmentLength","sortObjects","assignSort","currentSorts","parseLocusString","locus","gs","genomicStateList","chromosome","direction","getFeatures","bpPerPixel","viewport","genomicState","sortAlignmentRows","computePixelHeight","draw","graphics","fillRect","pixelWidth","pixelHeight","fillStyle","paintAxis","ctx","isMultiLocusMode","clearRect","contextMenuItemList","menuItemList","menuItems","colorByMenuItems","label","hasPairs","tagLabel","colorByTag","$e","colorBy","menuItem","showCheck","createCheckbox","trackView","repaintViews","clickFunction","inputDialog","$input","tagColors","PaletteColorTable","configure","present","trackDiv","colorByCB","$fa","updateViews","dispose","getState","dataRange","translate","features","darkenLighten","setProperties","strokeStyle","accumulatedHeight","hh","getCachedFeatures","referenceFrame","coverageMapIndex","chrName","alignmentRowHeight","negStrandColor","posStrandColor","insertionColor","deletionColor","skippedColor","pairConnectorColor","smallFragmentLengthColor","largeFragmentLengthColor","pairOrienation","pairColors","rlColor","rrColor","llColor","bamColorTag","referenceSequence","alignmentRowYInset","xBlockStart","xBlockEnd","alignmentsYOffset","nRows","rowIndex","yRect","alignmentHeight","drawPairConnector","drawSingleAlignment","connectorColor","getConnectorColor","connectingStart","connectingEnd","yStrokedLine","addAlpha","strokeLine","alignmentColor","lastBlockEnd","outlineColor","getAlignmentColor","drawBlock","refOffset","offsetBP","blockStartPixel","blockEndPixel","blockWidthPixel","arrowHeadWidthPixel","isSoftClip","strokeOutline","highlightedAlignmentReadNamed","blockOutlineColor","gapType","lastBlockPositiveStrand","lastBlockReverseStrand","lastBlock","xListPixel","yListPixel","fillPolygon","strokePolygon","strokeRect","restore","readChar","refChar","readQual","xPixel","widthPixel","renderBlockOrReadChar","bpp","bbox","center","font","strokeText","measureText","rowA","rowB","clickedObject","getClickedObject","clickState","tile","isSingleAlignment","presentSplitScreenMultiLocusPanel","packedAlignmentsIndex","clicked","firstOfPairStrand","oTypes","orientationTypes","pairColor","tagValue","getColor","fr","F1R2","F2R1","F1F2","F2F1","R1R2","R2R1","R1F2","R2F1","rf","ff","defineClass","chrX","chrY","chrUn","chr1","chrI","chr2","chrII","chr2a","chr2b","chr3","chrIII","chr4","chrIV","chr5","chr6","chr7","chr8","chr9","chr10","chr11","chr12","chr13","chr14","chr15","chr16","chr17","chr18","chr19","chr20","chr21","chr22","chr23","chr24","chr25","chr26","chr27","chr28","chr29","chr30","chr31","chr32","chr33","chr34","chr35","chr36","chr37","chr38","chr39","chr40","chr41","chr42","chr43","chr44","chr45","chr46","chr47","chr48","SEQ_DECODER","CIGAR_DECODER","BAM1_MAGIC_NUMBER","makeBlocks","cigarArray","ltr","scPos","buildOperators","cigarString","operators","prevOp","nBases","decodeSamTags","compressedBuffer","uncba","samHeaderLen","nRef","lName","magicNumber","bam_tag2cigar","block_end","seq_offset","lseq","al","type2size","cigar_len","cigar_offset","cigop","opLen","opLtr","chrIdx","blockEnd","refID","bin_mq_nl","flag_nc","nc","mateChrIdx","matePos","seqBytes","sb","qualArray","setPairOrientation","decodeSamRecords","sam","lines","qualString","rnext","splitLines","reader","readgroup","o1","o2","estReadLen","alignmentFile","referenceFile","loadString","lim","ptr","bsize","retryCount","endpoint","loadJson","urls","promiseArray","urlData","dataUri","dataUriToBytes","fulfill","loadUrls","htsget","dataArr","compressedData","arrays","newArray","concatArrays","tryChrAlias","scEnd","bamReaders","sources","sequences","bamConfig","presentAlert","isb","querySegByStudy","study","decodeSeg","seg","BufferedReader","contentLength","dataViewForRange","requestedRange","asUint8","loadRange","subbuffer","bufferedReader","bufferStart","BBFILE_HEADER_SIZE","ZoomLevelHeader","byteBuffer","reductionLevel","reserved","dataOffset","indexOffset","RPTree","fileOffset","littleEndian","RPTreeNode","items","minChromId","maxChromId","minStartBase","maxEndBase","startChrom","endChrom","startBase","endBase","BPTree","binaryParser","startOffset","blockSize","keySize","valSize","itemCount","chromToId","idToChrom","chromToID","readTreeNode","chromId","childOffset","bufferOffset","currOffset","getUShort","getFixedLengthTrimmedString","overlaps","chrIdx1","chrIdx2","BWTotalSummary","basesCovered","minVal","getDouble","maxVal","sumData","sumSquares","computeStats","stddev","defaultRange","decodeWigData","featureArray","chrDict","chromStart","chromEnd","itemStep","itemSpan","getFloat","decodeBedData","feature","exonCount","exonSizes","exonStarts","exons","eStart","eEnd","remLength","cdStart","cdEnd","createColorString","decodeZoomData","windowFunction","validCount","BWReader","rpTreeCache","readWGFeatures","getZoomHeaders","zoomLevelHeaders","chromTree","decodeFunction","treeOffset","zoomLevelHeader","zl","zoomLevelForScale","fullIndexOffset","loadRPTree","rpTree","findLeafItemsOverlapping","leafItems","dataSize","allFeatures","uint8Array","plain","uncompressBuffSize","loadHeader","getUInt","bwVersion","nZoomLevels","chromTreeOffset","fullDataOffset","fieldCount","definedFieldCount","autoSqlOffset","totalSummaryOffset","nZooms","firstZoomDataOffset","zoomNumber","zlh","autoSql","totalSummary","dataCount","rootNodeOffset","readNode","rootNode","isLeaf","dataView","range2","processing","findLeafItems","nodeId","childNode","updateStats","stats","MIN","_minVal","MAX","_maxVal","BWSource","wgValues","getWGValues","getDefaultRange","defaultVisibilityWindow","genomeSize","getGenomeLength","wgFeature","getCumulativeOffset","supportsWholeGenome","VPointer","available","hasNext","retValue","getUint8","getShort","getInt16","getUint16","getInt32","getUint32","getFixedLengthString","getFloat64","print","toggleTrackLabels","trackViews","isVisible","viewports","$trackLabel","knowHowToLoad","isFilePath","Browser","trackContainerDiv","$root","flanking","crossDomainProxy","formats","trackDefaults","searchConfig","coords","chromosomeField","startField","endField","geneField","snpField","resultsField","trackLabelsVisible","isCenterGuideVisible","cursorGuideVisible","featureDB","constants","dragThreshold","scrollThreshold","defaultColor","doubleClickDelay","eventHandlers","handleMouseMove","viewportWidth","loadInProgress","pageCoordinates","vpMouseDown","horizontal","mouseDownX","mouseDownY","$viewport","isDragging","isScrolling","viewportContainerHeight","$viewportContainer","contentHeight","maxContentHeight","shiftPixels","lastMouseX","updateLocusSearchWidget","fireEvent","lastMouseY","scrollBy","mouseUpOrLeave","cancelTrackPan","endTrackDrag","isMultiLocusWholeGenomeView","isWholeGenomeView","hasKnownFileExtension","extension","getExtension","knownFileExtensions","toSVG","trackContainerBBox","anyViewportContainerBBox","ideoPanelBBox","ideoPanel","panels","$ideogram","h_output","svgContext","C2S","backdropColor","multiLocusGap","viewbox","dx","renderSVGContext","deltaX","deltaY","setHeight","getSerializedSvg","renderSVG","svg","$container","URL","createObjectURL","download","loadSession","session","urlOrFile","uncompressSession","getFilename","endsWith","knownGenomes","GenomeUtils","getKnownGenomes","XMLSession","loadSessionFile","loadSessionObject","removeAllTracks","loadGenome","gtexSelections","genomicStates","locusSearchString","gene","snp","GtexSelection","panelWidth","roi","ROI","tracks","track","loadTrackList","showIdeogram","viewportContainerWidth","IdeoPanel","$contentHeader","repaint","windowSizePanel","updateWithGenomicState","idOrConfig","initialLocus","genomeConfig","conf","genomeID","fastaURL","expandReference","genomeChange","$current_genome","chromosomeSelectWidget","loci","getHomeChromosomeName","getInitialLocus","rulerTrack","showRuler","RulerTrack","addTrack","errorString","updateUIWithGenomicStateListChange","isWGV","centerGuide","forcedHide","forcedShow","navbarManager","navbarDidResize","$navigation","setTrackLabelName","setTrackLabel","hideTrackLabels","showTrackLabels","hideCursorGuide","cursorGuide","$guide","showCursorGuide","setCustomCursorGuideMouseHandler","mouseHandler","customMouseHandler","hideCenterGuide","showCenterGuide","configList","unloadableTracks","loadTrack","loadedTracks","groupAutoscaleViews","autoscaleGroup","google","getDriveFileInfo","originalFileName","inferFileFormat","driveDownloadURL","resolveTrackProperties","newTrack","inferTrackTypes","createTrack","postInit","TrackView","reorderTracks","removeTrackByName","removeTrack","trackPanelRemoved","removeSequence","newTrackViews","tv","findTracks","setTrackHeight","newHeight","trackHeight","visibilityChange","gstate","initialEnd","pixel","bpLength","resizeWillExceedChromosomeLength","views","groupAutoscaleTracks","otherTracks","groupTrackViews","getInViewFeatures","doAutoscale","autoscale","isLoading","ss","ee","updateLocusLabel","$searchInput","$select","getChromosome","$track","cw","minimumBases","updateZoomSlider","$slider","maxWindow","scaleFactor","zoomWithScaleFactor","zoomIn","zoomOut","zoomWithRangePercentage","percentage","centerBP","toBP","v0","v1","lerp","viewportWidthBP","centerBPOrUndefined","viewportOrUndefined","chromosomeLengthBP","bppThreshold","clamp","leftMatePairGenomicState","rightMatePairGenomicState","createReferenceFrame","mateChrName","chromosomeName","pixels","alignmentLength","ReferenceFrame","addMultiLocusPanelWithGenomicStateAtIndex","selectMultiLocusPanelWithGenomicState","selectedGenomicState","removeMultiLocusPanelWithGenomicState","doResize","previousGenomicStateListLength","removePanelWithLocusIndex","removeViewportWithLocusIndex","calculateEnd","calculateBPP","addPanelWithGenomicStateAtIndex","Viewport","decorateViewports","configureViewportContainer","emptyViewportContainers","$outerScroll","rulerSweeper","$rulerSweeper","popover","$popover","scrollbar","buildViewportsWithGenomicStateList","goto","createGenomicStateList","discardPanels","buildPanels","isLocusChrNameStartEnd","validateLocusExtent","searchWebService","processSearchResult","appendReferenceFrames","searchServiceResponse","linesTrimmed","line","locusTokens","rangeTokens","parseSearchResults","geneNameLocusObject","numeric","locusObject","extent","minimumBP","loadSampleInformation","File","sampleInformation","loadPlinkFile","eventName","un","callbackIndex","thisObj","scope","eventHandler","trackJson","clientWidth","locusString","showLocus","compressedSession","compressedBytes","compressedString","btoa","enc","sessionURL","httpMessages","401","403","404","alert","$parent","alertDialog","presentMessageWithCallback","mouseDownOnViewport","dragEnd","startTrackDrag","dragTrack","updateTrackDrag","dragDestination","dragged","indexDestination","indexDragged","newOrder","nTracks","lastOrder","$trackDragScrim","STYLES","CanvasGradient","CanvasPattern","namedEntities","randomString","holder","chars","randomstring","getDominantBaseline","textBaseline","mapping","alphabetic","hanging","bottom","middle","radix","entity","base10","lookup","createNamedToNumberedLookup","svgAttr","canvas","lineCap","lineJoin","miterLimit","lineWidth","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textAlign","lineDash","gradientNode","__root","__ctx","addColorStop","__createElement","enableMirroring","__document","__canvas","getContext","isSVG","__setDefaultStyles","__stack","__getStyleState","__groupStack","__ids","__defs","backdropConfig","backdropRect","__rootGroup","__currentElement","setWidth","elementName","properties","resetFill","element","createElementNS","__applyStyleState","styleState","__applyStyleToCurrentElement","currentElement","currentStyleGroup","__currentElementsToStyle","__closestGroupOrSvg","fixNamedEntities","serialized","XMLSerializer","serializeToString","getSvg","__addTransform","__applyCurrentDefaultPath","addTrackGroupWithTranslationAndClipRect","tx","ty","clipYOffset","clip_id","clipPath","rotate","angle","degrees","cx","cy","beginPath","__currentDefaultPath","__currentPosition","__addPathCommand","command","moveTo","closePath","lineTo","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","quadraticCurveTo","cpx","cpy","normalize","vector","arcTo","x1","y1","x2","y2","radius","x0","y0","unit_vec_p1_p0","unit_vec_p1_p2","cos","theta","acos","unit_vec_p1_origin","len_p1_origin","sin","unit_vec_origin_start_tangent","unit_vec_origin_end_tangent","getAngle","startAngle","endAngle","arc","stroke","rect1","rect2","r2","__clearCanvas","rootGroup","createLinearGradient","grad","gradientUnits","createRadialGradient","r0","r1","fy","__parseFont","fontPart","family","decoration","__fontUnderline","__fontHref","__wrapTextLink","setAttributeNS","__applyText","action","textElement","font-family","font-size","font-style","font-weight","text-decoration","text-anchor","dominant-baseline","fillText","counterClockwise","endX","endY","startX","startY","sweepFlag","largeArcFlag","rx","ry","xAxisRotation","clip","newGroup","drawImage","dy","dw","dh","sw","sh","defs","svgImage","sx","sy","translateDirective","transformDirective","originTransform","toDataURL","createPattern","repetition","img","setLineDash","dashArray","drawFocusRing","createImageData","getImageData","putImageData","globalCompositeOperation","setTransform","cBioUtils","fetchStudies","baseURL","fetchSamplesByStudy","studyId","samples","sampleStudyList","sampleIDs","sampleJson","fetchCopyNumberByStudy","sendData","initMenu","studies","samplePromises","sampleStudyListArray","sampleCount","displayMode","queryable","isLog","mappings","sampleKey","CivicVariant","record","entrezName","entrez_name","actionabilityScore","civic_actionability_score","coordinates","reference_bases","refBases","variant_bases","altBases","variant_types","locationString","log10","CivicReader","records","chromosome2","start2","stop2","link","createLink","pd","typeString","display_name","READ_STRAND_FLAG","MATE_STRAND_FLAG","CRAM_MATE_STRAND_FLAG","seqID","cramFile","FileHandler","indexFileHandle","indexedCramFile","getSamHeader","samHeader","readGroups","getRecordsForRange","alignmentEnd","decodeCramRecord","cramRecord","basesUsed","readPos","BufferCache","readPosition","QuickLRU","outputBuffer","firstChunk","fetches","chunksOffset","chunkPositionStart","copyStart","copyEnd","copyOffset","cachedPromise","freshPromise","deleted","oldCacheSize","reservedProperties","FastaSequence","decodeDataUri","isDataURI","indexFile","chromosomeNames","chromosomes","offsets","buildConfig","loadAll","getSequenceFromInterval","qstart","qend","readSequence","GenomicInterval","lineNo","indexEntry","basesPerLine","bytesPerLine","Chromosome","parseFasta","nextLine","currentChr","currentSeq","currentRangeLocus","currentOffset","nameParts","locusParts","nEndBytes","idxEntry","startLine","endLine","startByte","byteCount","allBytes","srcPos","desPos","allBytesLength","CustomServiceReader","mappingKeys","getDataWrapper","StringDataWrapper","ByteArrayDataWrapper","nextLineNoTrim","buildIntervalTree","featureList","iStart","iEnd","subArray","IntervalTree","f1","f2","treeMap","geneList","buildTreeMap","containsRange","genomicRange","intervalFeatures","intervals","findOverlapping","getAllFeatures","mapIntervals","FeatureFileReader","uriParts","parseUri","getParser","loadFeaturesWithIndex","loadFeaturesFromDataURI","loadFeaturesNoIndex","bgz","parseHeader","VcfParser","SegParser","FeatureParser","loadIndex","idxFile","loadTribbleIndex","parseFeatures","endPos","success","startPos","slicedData","slicedFeatures","filteredFeatures","featureArrays","indexOrUndefined","maxFeatureCount","gffNameFields","aedRegexpNoNamespace","aedRegexpNamespace","parseFixedStep","chrom","parseVariableStep","parseAedToken","parseAedHeaderRow","aed","aedToken","columns","metadata","parseTrackLine","tk","curr","kv","parseColumnsDirective","keyValue","colorColumn","thicknessColumn","decodeBed","ignore","findUTRs","thickness","decodeRepeatMasker","swScore","milliDiv","milliDel","milliIns","repName","repClass","repFamily","repStart","repEnd","repLeft","decodeGenePred","exonEnds","decodeGenePredExt","decodeReflat","exon","utr","decodePeak","pValue","qValue","decodeBedGraph","decodeWig","wig","decodeFusionJuncSpan","fusion_name","junction_left","junction_right","num_junction_reads","num_spanning_frags","spanning_frag_coords_text","spanning_frag_coords","min_coord","max_coord","coord_pairs","split_coords","span_left","span_right","decodeGtexGWAS","Strongest SNP-risk allele","Disease/Phenotype","P-value","Odds ratio or beta","decodeGFF","attributeString","delim","keyLower","nameField","GFFFeature","AedFeature","allColumns","aedColumn","aedColumns","decodeAed","aedKey","nonEmptyTokens","decodeBedpe","start1","end1","end2","m1","m2","decodeBedpeDomain","decodeSNP","decodeCustom","fields","field","customFormat","skipRows","delimiter","headerLine","getFormat","dataWrapper","cnt","readTokensAed","quotedString","kvs","featureValue","queryableFormats","addFeaturesToDB","packFeatures","chrFeatureMap","chrs","flist","pack","FeatureSource","filterTypes","mapProperties","static","Ga4ghVariantReader","ImmVarReader","GtexReader","BigQueryFeatureReader","UCSCServiceReader","getFileHeader","GFFHelper","combineFeatures","searchable","supportWholeGenome","intervalStart","intervalEnd","expansionWindow","getFeatureCache","isQueryable","getWGFeatures","wgChromosomeNames","wgFeatures","wg","getGenomeCoordinate","getProductColor","product","getRandomColor","FeatureTrack","calculateFeatureCoordinates","xScale","px","px1","pw","renderFeature","py","colorByValue","pallete","featureHeight","squishedRowHeight","expandedRowHeight","h2","py2","coord","arrowSpacing","xLeft","xRight","srcField","reg","debug","ePxU","ePx","ePx1","ePw","windowX","viewportContainerX","nLoci","windowX1","featureX","featureX1","featureY","geneColor","geneFontStyle","boxX","boxX1","labelX","labelY","textFitsInBox","selectedFeatureName","selectedGene","GtexUtils","gtexLoaded","colorForGene","labelDisplayMode","getFeatureLabelY","labelTransform","renderFusionJuncSpan","rowHeight","top_y","bottom_y","junction_left_px","junction_right_px","spanning_coords","spanning_info","span_left_px","span_right_px","autoHeight","renderSnp","snpColors","onDragEnd","unSubscribe","removedTrack","monitorTrackDrag","maxRow","selectedFeature","lastPxEnd","pxEnd","pxStart","yOffset","filterByRow","clickedFeatures","featureData","extractPopupData","colorScheme","COLLAPSED","SQUISHED","EXPANDED","checkContentHeight","description","desc","codingNonSynonSet","codingSynonSet","spliceSiteSet","untranslatedSet","colorPriority","cls","theFunc","funcArray","colorArrLength","FeatureUtils","sorted","FileFormats","gwascatalog","wgrna","cpgislandext","clinVarMain","transcriptTypes","cdsTypes","codonTypes","utrTypes","exonTypes","transcripts","combinedFeatures","consumedFeatures","transcriptId","gffTranscript","GFFTranscript","getParents","transcript","addExon","addUTR","addCDS","others","cds","exonData","att","InteractionTrack","sinTheta","cosTheta","arcOrientation","colorAlphaCache","pixelStart","pixelEnd","coa","thetaLeft","thetaRight","estimateTheta","xc","yc","trackBaseLine","thicknewss","presentColorPicker","MergedTrack","tconf","mergedFeatures","trackOptions","headings","lineCount","dataColumn","SegTrack","updateSampleKeys","sampleKeys","supportHiDPI","maxHeight","sampleSquishHeight","sampleExpandHeight","posColorScale","GradientColorScale","lowR","lowG","lowB","highR","highG","highB","negColorScale","sortSamples","lut","FILL","log2","checkForLog","sampleHeight","segment","segmentStart","segmentEnd","pixelRect","scores","d2","filteredProperties","isSimpleType","bpWidth","sortHandler","readLinear","binWidth","nBins","longestFeature","nextPos","SEQUENCE_DICTIONARY_FLAG","nProperties","nChrs","TribbleIndex","chrIndexTable","chrIndex","adjustedPosition","startBinNumber","endBinNumber","expandQueryInterval","db","tableName","cdsStart","cdsEnd","addExons","WigTrack","featureType","TDFSource","graphType","dataRangeMenuItem","setDataRange","featureValueMinimum","featureValueMaximum","featureValueRange","baselineColor","basepx","rectEnd","yb","yUnitless","heightUnitLess","pointSize","fillCircle","tolerance","candidateFeature","stopIndex","binarySearch","posString","CigarOperationTable","ALIGNMENT_MATCH","INSERT","DELETE","SKIP","CLIP_SOFT","CLIP_HARD","PAD","SEQUENCE_MATCH","SEQUENCE_MISMATCH","readGroupSetIds","authKey","readMetadata","referenceSetId","readURL","ga4ghSearch","refName","datasetId","populateChrAliasTable","referenceName","pageSize","decodeGa4ghReads","cigarDecoded","jsonRecords","fragmentName","properPlacement","duplicateFragment","numberReads","readNumber","failedVendorQualityChecks","secondaryAlignment","supplementaryAlignment","alignedSequence","alignedQuality","nextMatePosition","encodeCigar","translateCigar","reverseStrand","cigarUnit","operation","operationLength","ga4ghGet","entityId","decodeGa4ghReadset","sequenceNames","fileObject","refSequence","Cache-Control","apiKey","paramSeparator","loadChunk","pageToken","nextPageToken","ga4ghSearchReadGroupSets","datasetIds","readGroupSets","ga4ghSearchVariantSets","variantSets","ga4ghSearchCallSets","variantSetIds","vs","callSets","ga4ghSearchReadAndCallSets","csHash","mergedResults","readGroupSetId","callSetId","variantSetId","callSetIds","includeCalls","filteredCallSets","csIdSet","csid","referenceBounds","rb","variants","createGAVariant","isRefBlock","getGoogleDriveFileID","i1","i2","setApiKey","fileInfoCache","isGoogleURL","translateGoogleCloudURL","gsUrl","qIdx","objectString","paramString","addApiKey","googleDriveURL","endPoint","loadGoogleProperties","propertiesURL","wsRegex","createExons","joinString","lociArray","exonStart","exonEnd","accession","GenbankParser","nameFields","locusName","equalsIgnoreCase","readLocus","readAccession","readAliases","currentLocQualifier","errorCount","keyName","StringUtils","stripQuotes","setName","firstExon","lastExon","setEnd","readOriginSequence","KNOWN_GENOMES","cytobandUrl","cytobandURL","aliasURL","cytobands","aliases","getCytobands","lastChr","bands","stain","Cytoband","loadCytobands","loadAliases","Genome","genomeList","processJson","jsonArray","ideograms","wgChromosomes","chromosomeOrder","nm","median","numericChromosomes","isDigit","alphaChromosomes","constructWG","defName","computeCumulativeOffsets","acc","rangeLocus","getLongestChromosome","longestChr","getChromosomes","getChromosomeCoordinate","genomeCoordinate","cumulativeOffsets","lastCoord","cumulativeOffset","cname","typestain","isGoogleCloudURL","isGoogleStorageURL","isGoogleDrive","EqtlTrack","pValueField","minLogP","maxLogP","autoscalePercentile","background","divider","dotSize","disableButtons","yScale","drawEqtls","drawSelected","eqtl","isSelected","geneName","capped","addGene","mLogP","LN10","strokeCircle","tissue","geneId","geneColors","genesCount","brewer","getTissueInfo","trackConfiguration","tissueSummary","tissueName","tissueSiteDetailId","queryStart","queryEnd","queryURL","singleTissueEqtl","snpId","geneSymbol","gencodeId","cellConditionId","valueThreshold","eqtls","DEFAULT_POPOVER_WINDOW","GWASTrack","trait","popoverWindow","portalURL","origin","variantURL","traitURL","colorScale","thresholds","pvalue","BinnedColorScale","T2DVariantSource","variant","enablePopover","yp","dbSnp","xOffset","CHROM","POS","DBSNP_ID","ZSCORE","VARIANT","TRAIT","dataset","queryJson","queryJsonV1","jsonToVariants","jsonToVariantsV1","queryJsonV2","jsonToVariantsV2","featuresBetween","error_code","lastBin","binSize","binIndeces","phenotype","passback","cproperty","orderBy","dproperty","pproperty","dataset_id","operand","operand_type","user_group","filter_type","startBin","endBin","panelWithGenomicState","panel","outerWidth","$canvas","setupCanvasSize","xy","translateMouseCoordinates","locusLength","chrCoveragePercentage","xPercentage","clickHandler","assessBorders","repaintContext","ideogramWidth","greyScale","stainColors","cytoband","xC","yC","chrLength","roundRect","shim2","polygon","getCytobandColor","shim","drawIdeogram","widthBP","xBP","percentWidth","percentX","ww","xx","yy","shade","devicePixelRatio","doRepaint","repaintPanelWithGenomicState","doPath","transforms","drawArrowhead","dashedLine","dashLen","dX","dY","dashes","dashX","dashY","rgbListFromHSV","accumulation","hsvToRgb","rgbColor","rgbToHex","rgb","hexToRgb","hex","cooked","hslToRgb","hue2rgb","rgbaColor","randomGrey","randomRGBConstantAlpha","isHex","getCompositeColor","amt","components","appleCrayonPalette","licorice","lead","tungsten","iron","steel","tin","nickel","aluminum","magnesium","silver","mercury","snow","cayenne","mocha","aspargus","fern","clover","moss","teal","ocean","midnight","eggplant","plum","maroon","maraschino","tangerine","lemon","lime","spring","seam_foam","turquoise","aqua","blueberry","grape","strawberry","salmon","cantaloupe","banana","honeydew","flora","spindrift","ice","sky","orchid","lavender","bubblegum","carnation","colorPalettes","Set1","Dark2","Set2","Set3","Pastel1","Pastel2","Accent","palette","colorTable","nextIdx","colorGenerator","RandomColorGenerator","hue","goldenRatio","hexwidth","h_i","padHex","saturation","lowColor","highColor","frac","allBrowsers","createBrowser","parentDiv","trackOrder","promisified","showCursorTrackingGuideButton","showCenterGuideButton","showSVGButton","showTrackLabelButton","showCursorTrackingGuide","showControls","showNavigation","showSequence","setDefaults","queryParametersSupported","uri","indexURLs","trackConfig","extractQuery","controlDiv","createControls","$div","$igv_nav_bar_left_container","$igv_nav_bar_right_container","$genomic_location","$locus_size_group","$toggle_button_container","logoDiv","logoSvg","$controls","$searchContainer","NavbarManager","ChromosomeSelectWidget","showChromosomeWidget","change","createIcon","WindowSizePanel","CursorGuide","CenterGuide","trackLabelControl","TrackLabelControl","svgSaveControl","SVGSaveControl","zoomWidget","ZoomWidget","createStandardControls","setControls","$content","userFeedback","UserFeedback","AlertDialog","InputDialog","trackRemovalDialog","TrackRemovalDialog","dataRangeDialog","DataRangeDialog","oauthToken","oauth","setToken","setState","doHide","doShow","startup","removeBrowser","iconMarkup","icon","icons","createWrappedIcon","$svg","$wrapper","initialState","$label","address-book","address-card","arrow-alt-circle-down","arrow-alt-circle-left","arrow-alt-circle-right","arrow-alt-circle-up","bell","bell-slash","bookmark","building","calendar","calendar-alt","calendar-check","calendar-minus","calendar-plus","calendar-times","caret-square-down","caret-square-left","caret-square-right","caret-square-up","chart-bar","check-circle","check-square","circle","clipboard","clock","closed-captioning","comment-alt","comments","compass","credit-card","dot-circle","edit","envelope","envelope-open","eye-slash","file-alt","file-archive","file-audio","file-code","file-excel","file-image","file-pdf","file-powerpoint","file-video","file-word","folder","folder-open","frown","futbol","gem","hand-lizard","hand-paper","hand-peace","hand-point-down","hand-point-left","hand-point-right","hand-point-up","hand-pointer","hand-rock","hand-scissors","hand-spock","handshake","hdd","heart","hospital","hourglass","id-badge","id-card","images","keyboard","life-ring","lightbulb","list-alt","meh","minus-square","money-bill-alt","moon","newspaper","object-group","object-ungroup","paper-plane","pause-circle","play-circle","plus-square","question-circle","registered","share-square","smile","snowflake","square","star","star-half","sticky-note","stop-circle","sun","thumbs-down","thumbs-up","times-circle","trash-alt","user","user-circle","window-close","window-maximize","window-minimize","window-restore","adjust","align-center","align-justify","align-left","align-right","ambulance","american-sign-language-interpreting","anchor","angle-double-down","angle-double-left","angle-double-right","angle-double-up","angle-down","angle-left","angle-right","angle-up","archive","arrow-circle-down","arrow-circle-left","arrow-circle-right","arrow-circle-up","arrow-down","arrow-left","arrow-right","arrow-up","arrows-alt","arrows-alt-h","arrows-alt-v","assistive-listening-systems","asterisk","audio-description","balance-scale","ban","band-aid","barcode","bars","baseball-ball","basketball-ball","bath","battery-empty","battery-full","battery-half","battery-quarter","battery-three-quarters","bed","beer","bicycle","binoculars","birthday-cake","blind","bolt","bomb","book","bowling-ball","boxes","braille","briefcase","bug","bullhorn","bullseye","bus","calculator","camera","camera-retro","car","caret-down","caret-left","caret-right","caret-up","cart-arrow-down","cart-plus","certificate","chart-area","chart-line","chart-pie","chess","chess-bishop","chess-board","chess-king","chess-knight","chess-pawn","chess-queen","chess-rook","chevron-circle-down","chevron-circle-left","chevron-circle-right","chevron-circle-up","chevron-down","chevron-left","chevron-right","chevron-up","child","circle-notch","clipboard-check","clipboard-list","cloud","cloud-download-alt","cloud-upload-alt","code-branch","coffee","cog","cogs","crop","crosshairs","cube","cubes","cut","database","deaf","desktop","dna","dollar-sign","dolly","dolly-flatbed","eject","ellipsis-h","ellipsis-v","envelope-square","eraser","euro-sign","exchange-alt","exclamation","exclamation-circle","exclamation-triangle","expand-arrows-alt","external-link-alt","external-link-square-alt","eye","eye-dropper","fast-backward","fast-forward","fax","female","fighter-jet","film","fire-extinguisher","first-aid","flag-checkered","flask","football-ball","gamepad","gavel","genderless","gift","glass-martini","globe","golf-ball","graduation-cap","h-square","hashtag","heading","headphones","heartbeat","history","hockey-puck","home","hospital-symbol","hourglass-end","hourglass-half","hourglass-start","i-cursor","inbox","indent","industry","info-circle","language","laptop","leaf","level-down-alt","level-up-alt","lira-sign","list-ol","list-ul","location-arrow","lock-open","long-arrow-alt-down","long-arrow-alt-left","long-arrow-alt-right","long-arrow-alt-up","low-vision","magnet","male","map-marker","map-marker-alt","map-pin","map-signs","mars","mars-double","mars-stroke","mars-stroke-h","mars-stroke-v","medkit","microchip","microphone","microphone-slash","minus","minus-circle","mobile","mobile-alt","motorcycle","mouse-pointer","music","neuter","outdent","paint-brush","pallet","paperclip","paragraph","paste","paw","pen-square","pencil-alt","percent","phone","phone-square","phone-volume","pills","plane","play","plug","plus","plus-circle","podcast","pound-sign","power-off","puzzle-piece","qrcode","question","quidditch","quote-left","quote-right","recycle","redo","redo-alt","reply","reply-all","retweet","road","rocket","rss","rss-square","ruble-sign","rupee-sign","search-minus","search-plus","server","share","share-alt","share-alt-square","shekel-sign","shield-alt","ship","shipping-fast","shopping-bag","shopping-basket","shopping-cart","shower","sign-in-alt","sign-language","sign-out-alt","sitemap","sliders-h","sort-alpha-down","sort-alpha-up","sort-amount-down","sort-amount-up","sort-down","sort-numeric-down","sort-numeric-up","sort-up","space-shuttle","spinner","square-full","step-backward","step-forward","stethoscope","stopwatch","street-view","strikethrough","subscript","subway","suitcase","superscript","sync-alt","syringe","table-tennis","tablet","tablet-alt","tachometer-alt","tasks","taxi","terminal","text-height","text-width","th-large","th-list","thermometer","thermometer-empty","thermometer-full","thermometer-half","thermometer-quarter","thermometer-three-quarters","thumbtack","ticket-alt","tint","toggle-off","toggle-on","trademark","train","transgender","transgender-alt","trash","trophy","truck","tty","umbrella","undo","undo-alt","universal-access","university","unlink","unlock","unlock-alt","upload","user-md","user-plus","user-secret","user-times","users","utensil-spoon","utensils","venus","venus-double","venus-mars","video","volleyball-ball","volume-down","volume-off","volume-up","warehouse","wheelchair","wifi","won-sign","wrench","yen-sign","BinaryHeap","meanAndStdev","stdev","numbers","numsLen","selectElement","Rect","make","makeRectZero","makeWithCenterAndSize","halfSize","makeSize","makePoint","bubbleUp","sinkDown","parentN","elemScore","child2N","child1N","child1","child1Score","getMouseXY","domElement","dr","xNormalized","yNormalized","filenameOrURLHasSuffix","fileOrURL","makeToggleButton","configurationKey","get$Target","continuation","$button","attachDialogCloseHandlerWithParent","closeHandler","getSpinnerObjectWithParentElement","parentElement","startSpinnerAtParentElement","spinnerObject","stopSpinnerAtParentElement","strictMode","$0","$1","$2","loose","domElementRectAsString","clientLeft","clientTop","clientHeight","prettyBasePairNumber","units","floored","rawNumber","dec","numberUnFormatter","formatedNumber","$target","touch","splitStringRespectingQuotes","quote","addAjaxExtensions","ajaxTransport","originalOptions","jqXHR","simpleTypes","valueType","toFixed","constrainBBox","$child","topLeft","bboxChild","bboxParent","outerHeight","enableLogging","defaultOptions","isMobile","vendor","opera","getGlobalObject","BGZF","rateLimiter","isCalled","calls","caller","loadFileSlice","localfile","fileReader","rangeEnd","readAsBinaryString","arrayBufferToString","arraybuffer","TextDecoder","octets","bytesNeeded","codePoint","fromCodePoint","decodeUTF8","oauthPromise","limiter","loadURL","mapUrl","getToken","access_token","getOauthToken","applyOauthToken","getLoadPromise","acToken","addOauthHeaders","isChrome","isAmazonV4Signed","mimeType","overrideMimeType","handleError","gapi","retries","authInstance","auth2","getAuthInstance","SigninOptionsBuilder","setPrompt","setScope","signIn","authResponse","getAuthResponse","setGoogleOauthToken","getGoogleAccessToken","accessToken","loadStringFromFile","loadStringFromUrl","startupCalls","RED","NIL","leftRotate","applyUpdate","rightRotate","nodeMax","intervalHigh","nodeMin","intervalLow","Interval","treeInsert","searchInterval","searchAll","logIntervals","logNode","space","applyInterval","otherInterval","compareTo","responsiveClassSchedule","navbarWidth","candidates","regExpEscape","oauthTokens","removeToken","isBlank","isComment","getQueryValue","toPixels","maxStart","RnaStructTrack","sortByScore","startLeft","sl","startRight","endLeft","er","endRight","sa","ea","drawState","ds","dx1","canvasX","dy1","canvasY","d1","outerLim","innerLim","dx2","dy2","_super","descriptors","startLeftNuc","startRightNuc","endLeftNuc","endRightNuc","colorIdx","parseBP","region","startBP","roiSource","drawConfiguration","endBP","regions","ROISource","getRegions","RulerSweeper","contentDiv","addMouseHandlers","disableMouseHandlers","isMouseDown","isMouseIn","mouseDown","mouseCurrent","renderChromosomeRect","shortName","ignoreTrackMenu","removable","$rulerLabel","appendMultiPanelCloseButton","$close","wBP","tickHeight","pixelWidthBP","Tick","drawTicks","majorTick","majorUnit","unitMultiplier","isSVGContext","halfTick","numberOfZeroes","labelWidthBP","numberOfTicks","labelWidth","numer","blurb","SampleInformation","plinkLoaded","line_arr","familyId","fatherId","motherId","sex","getAttributes","getAttributeNames","hasAttributes","SequenceTrack","fillColor","sequenceType","frameTranslate","complement","translationDict","TTT","TTC","TTA","TTG","CTT","CTC","CTA","CTG","ATT","ATC","ATA","ATG","GTT","GTC","GTA","GTG","TCT","TCC","TCA","TCG","CCT","CCC","CCA","CCG","ACT","ACC","ACA","ACG","GCT","GCC","GCA","GCG","TAT","TAC","TAA","CAT","CAC","CAA","CAG","AAT","AAC","AAA","AAG","GAT","GAC","GAA","GAG","TGT","TGC","TGA","TGG","CGT","CGC","CGA","CGG","AGT","AGC","AGA","AGG","GGT","GGC","GGA","GGG","setContentHeight","translateSequence","threeFrame","fNum","codons","aminoA","sequenceBpStart","seqOffsetBp","aPixel","bPixel","transSeq","cv","translatedSequence","aaS","xSeed","p0","p1","pc","xmlString","xmlDoc","DOMParser","parseFromString","ucscID","processRootNode","resourceMap","extractTrackAttributes","autoScale","altColor","dataRangeCltn","visWindow","logScale","subtracks","mergedTrack","processed","SVG","setTransforms","fillRectWithCenter","centerX","centerY","innerString","createFixedStep","dtrack","nPositions","np","createVariableStep","tileStart","createBed","TDFReader","groupCache","datasetCache","indexPos","indexSize","nWindowFunctions","windowFunctions","trackType","trackLine","trackNames","datasetIndex","nEntries","groupIndex","readDataset","dsName","wf","zoomString","nAttributes","tileWidth","nTiles","tiles","readRootGroup","readGroup","maxZoomString","maxZoom","canonicalName","readTiles","tileIndeces","firstEntry","lastEntry","tileData","readTile","chrSize","startTile","endTile","starts","ends","decodeBedTile","decodeVaryTile","decodeFixedTile","minHeight","alleles","alleleFreqs","genomeId","getGenomeId","af","alt","cravatLink","getCravatLink","expandFormat","translateDeprecatedTypes","inferTrackType","ext","txt","getTrackLabelText","prettyPrint","trackContextMenuItemList","trackMenuItemList","vizWindowTypes","hasVizWindow","trackRenameMenuItem","trackHeightMenuItem","colorPickerMenuItem","visibilityWindowMenuItem","trackRemovalMenuItem","trackMenuItemListHelper","itemList","handleClick","trackMenuItem","menuItemLabel","dialogLabelHandler","dialogInputValue","dialogClickHandler","resizeControlCanvas","leftHandGutter","controlCanvas","controlCtx","$leftHandGutter","appendRightHandGutter","$trackManipulationHandle","createColorPicker","TrackScrollbar","createTrackGearPopover","$cogContainer","trackGearPopover","TrackGearPopover","presentMenuList","setColor","setColorSource","srcName","colorPicker","genericContainer","createColorSwatchSelector","force","invalidate","viewportsToReload","checkZoomIn","adjustTrackHeight","currentTop","getContentTop","newTop","heights","getContentHeight","minContentHeight","visibleViewports","rpV","loadFeatures","$innerScroll","moveScrollerBy","$genericContainer","colorHandler","colorSrcHandler","appleColors","$swatchSubtitle","$swatch","borderColor","$catSubtitle","igv_config","$option","rootDiv","lastY","mouseMove","page","mouseUp","moveScrollerTo","outerScrollHeight","innerScrollHeight","contentDivHeight","contentTop","newInnerHeight","$header","$body","$ok_container","$ok","makeDraggable","$alternativeParent","$p","$guideParent","$controlParent","$centerGuideToggle","halfWidth","ls","ws","showAllChromosomes","$o","$cursorGuideParent","$viewportContent","elementFromPoint","interpolant","$guideLine","viewportContentMouseXY","_startBP","_endBP","$trackContainer","$host","host_css_left","enable","processResults","$minimum_input","$maximum_input","$buttons","$minimum","$maximum","$cancel","offset_top","scroll_top","dragData","styleX","styleY","dragFunction","dragEndFunction","$input_container","clampPopoverLocation","popupRect","containerCoordinates","containerRect","popupX","popupY","Popover","$popoverHeader","$popoverContent","presentTrackContextMenu","presentTrackContent","TrackMenuPopupDialog","trackMenu","dialogLabel","inputValue","dialogLabelRE","inputValueRE","htmlString","dialogForm","form","tips","dialog","autoOpen","modal","cancel","updateTips","$track_name","$exclamation","$a","$dismiss","$b","$bodyCopyContainer","$bodyCopy","$zoomContainer","hideSlider","showSlider","altTokens","alternateBases","minAltLength","referenceBases","maxAltLength","AC","AN","heterozygosity","ac","an","sum","altFreqs","altCount","altFreq","altFrac","refFrac","initSTR","isRef","alleleStart","alleleEnd","isKnownAlt","altLength","createVCFVariant","Variant","infoStr","getInfoObject","knownAltBases","altAlleles","arrayToString","altArray","genotype","valueArray","DEFAULT_VISIBILITY_WINDOW","MAX_PIXEL_HEIGHT","strColors","VariantTrack","getCallsetsLength","getAlleleString","alleleNum","extractGenotypePopupData","allele","numRepeats","alleleFrac","cravatLinks","alt_ac","PERIOD","REFAC","callSetName","phaseset","genotypeLikelihood","attrName","displayText","infoKeys","variantHeight","squishedCallHeight","expandedCallHeight","expandedVGap","squishedVGap","expandedGroupGap","squishedGroupGap","homrefColor","homvarColor","hetvarColor","filterBy","callSetGroups","None","nCalls","maxCallHeight","vGap","groupsLength","groupGap","groupSpace","callHeight","callSet","allRef","allVar","firstAllele","secondAllele","lowColorScale","highColorScale","callsDrawn","variantBandHeight","filteredCallSetGroups","getSTRColor","getFillColor","period","totalCalls","groupName","groupCalls","sortCallSetsByAlleleLength","aNan","bNan","a0","a1","b0","b1","groupCallSets","attribute","filteredCallSetResults","createGroups","callSetResults","groupedCallSets","attrA","attrB","filterByFamily","extractCallFields","callFields","genotypeIndex","ltIdx","gtIdx","callToken","searchString","mouseDownCoords","popupTimerID","lastClickTime","handleMouseUp","enableClick","mouseX","mouseXCanvas","shiftClick","createClickState","dataList","popupClickHandlerResult","markup","nameValue","getPopupContent","viewportCoords","canvasCoords","saveImage","saveSVG","$spinner","stopSpinner","$zoomInNotice","$notice","mousedown","mouseup","mousemove","startSpinner","showMessage","messageDiv","hideMessage","pixelOffset","loading","cachedFeatures","Tile","origPixelHeight","newCanvas","offsetTop","imageData","exportCanvas","exportCtx","yScrollDelta","viewportBBox","drawConfig","tileEnd","overlapsRange","requiredContentHeight","base64","ieee754","createBuffer","encodingOrOffset","fromArrayLike","fromArrayBuffer","fromObject","assertSize","loweredCase","utf8ToBytes","bidirectionalIndexOf","arrayIndexOf","arrLength","valLength","foundIndex","hexWrite","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","hi","lo","utf16leToBytes","base64Slice","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","typedArraySupport","hexSlice","asciiSlice","latin1Slice","utf16leSlice","thisStart","thisEnd","thisCopy","targetCopy","toHex","checkOffset","checkInt","objectWriteUInt16","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","targetStart","INVALID_BASE64_RE","leadSurrogate","stringtrim","base64clean","dst","b64","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","extraBytes","len2","encodeChunk","isLE","mLen","nBytes","eLen","eMax","eBias","nBits"],"mappings":"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ACA,8BACA,6BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,gCACA,+BAEA,8BACA,6BACA,6BACA,+BACA,+BACA,6BACA,8BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,8BACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,8BACA,6BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,gCACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,6BACA,8BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,8BACA,8BACA,+BACA,8BACA,6BACA,6BACA,+BACA,+BACA,8BACA,6BACA,+BACA,+BACA,6BACA,6BACA,+BACA,+BACA,+BAEAC,SAAA,CACA,kCACA,oCACA,kCACA,sCACA,kCACA,oCACA,mCACA,wCAIAC,OAAA,CACA,yCACA,kDAIAC,OAAA,CACA,gCACA,mCAGAC,OAAA,CACA,2CACA,8CACA,wBAGAC,OAAA,CACA,gCACA,wBACA,aAMA,SAAAC,WA+IA,SAAAxP,UACAx0C,KAAAikD,IAAA,IA5IAD,QAAArkD,UAAAukD,YAAA,SAAAC,EAAAC,GAQA,OAPAD,IACAA,EAAAxD,WAEAyD,IACAA,GAAA,GAEApkD,KAAAqkD,OAAA,IAAA7P,QACAx0C,KAAAqkD,OAAAH,YAAAlkD,KAAAokD,GAAAD,MAGAH,QAAArkD,UAAA2kD,QAAA,SAAAC,GACA,aAAAvkD,KAAAqkD,OAAA3C,eACA1hD,KAAAqkD,OAAAC,QAAAtkD,KAAAukD,IAGAP,QAAArkD,UAAA6kD,WAAA,WACA,SAAAxkD,KAAAqkD,OAAA,OAAA3C,eACA,IAAA59C,EAAAugD,OAAAG,WAAAxkD,MAEA,OADAA,KAAAqkD,OAAA,KACAvgD,GAEAkgD,QAAArkD,UAAA8kD,YAAA,WAEA,OAAAJ,OAAAI,YAAAzkD,OAEAgkD,QAAArkD,UAAA+kD,qBAAA,SAAAC,EAAAC,GAEA,OAAAP,OAAAK,qBAAA1kD,KAAA2kD,EAAAC,IAmHApQ,QAAA70C,UAAAklD,aAAA,SAAAC,GACA,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9+C,KAAA8+C,cAIA,OAAA9+C,KAAAqqE,QACA,iBACA,gBACA,YACArqE,KAAA8+C,OAAAy5F,EACAv4I,KAAA07I,UAAA,MACA,MACA,eACA17I,KAAA8+C,OAAA45F,EACA14I,KAAA07I,UAAA,MACA,MACA,UACA17I,KAAA8+C,OAAA65F,EACA34I,KAAA07I,UAAA,MACA,MACA,WACA,UACA,UACA17I,KAAA8+C,OAAAk7F,EACAh6I,KAAA07I,UAAA,KACA,MACA,qBAEA17I,KAAA8+C,OAAA+5F,EACA74I,KAAA07I,UAAA,MACA,MACA,eACA17I,KAAAy7I,SAAA,EACAz7I,KAAA8+C,OAAA66F,EACA35I,KAAA07I,UAAA,KACA,MACA,cACA17I,KAAA8+C,OAAAs5F,EACAp4I,KAAA07I,UAAA,MACA,MACA,eACA17I,KAAA8+C,OAAAm5F,EACAj4I,KAAA07I,UAAA,MACA,MACA,kBACA17I,KAAA8+C,OAAAq5F,EACAn4I,KAAA07I,UAAA,MACA,MACA,cACA17I,KAAA8+C,OAAAm5F,EACAj4I,KAAA2N,MAAA,EACA3N,KAAA07I,UAAA,MACA,MACA,cACA17I,KAAA8+C,OAAAq5F,EACAn4I,KAAA07I,UAAA,MACA17I,KAAA2N,MAAA,EACA,MACA,UACA3N,KAAA8+C,OAAA47F,EACA16I,KAAA07I,UAAA,KACA,MACA,UACA17I,KAAA8+C,OAAAo4F,EACAl3I,KAAA07I,UAAApuF,EAAAouF,WAAA,MACA,MACA,YACA17I,KAAAy7I,SAAA,EACAz7I,KAAA8+C,OAAA+7F,EACA76I,KAAA07I,UAAA,MACA,MACA,mBACA17I,KAAA8+C,OAAAq8F,EACAn7I,KAAA27I,YAAA,EACA37I,KAAA07I,UAAA,MACA,MACA,iBACA17I,KAAA8+C,OAAA+7F,EACA76I,KAAA07I,UAAA,MACA17I,KAAAy7I,SAAA,EACAz7I,KAAAkV,OAAA,CAAmC8hI,YAAA,GACnC,MACA,UACAh3I,KAAA8+C,OAAAs8F,EACAp7I,KAAA07I,UAAA,KACA,MACA,WACA17I,KAAA8+C,OAAAw4F,EACA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AAA,+KACAC,KAAA,gnBACAC,gBAAA,mNACAC,MAAA,6iCACAC,YAAA,koBACAC,iBAAA,ktBACAC,WAAA,yXACA3M,cAAA,mZACAC,aAAA,0lBACAC,aAAA,qdACAC,kBAAA,+uBACAC,kBAAA,mvBACAC,mBAAA,svBACAC,gBAAA,ivBACAC,eAAA,ofACAC,YAAA,+pBACAC,gBAAA,0dACAC,aAAA,wwBACAC,UAAA,wqCACAiM,QAAA,s1BACAhM,IAAA,odACAiM,QAAA,8gBACAC,WAAA,2eACAjM,MAAA,iPACAkM,UAAA,6aACAC,QAAA,wuBACAC,cAAA,+KACAC,KAAA,kjBACApM,SAAA,44BACAqM,kBAAA,4RACApM,UAAA,sYACAqM,gBAAA,2cACAC,iBAAA,8iBACAC,kBAAA,ycACAC,WAAA,svBACAvM,WAAA,8hBACAC,UAAA,k3BACA72J,MAAA,qWACA82J,OAAA,4dACAsM,MAAA,0UACAC,OAAA,4nBACAC,SAAA,0QACA5vE,KAAA,2UACA6vE,cAAA,saACA9tG,OAAA,yYACA/rE,IAAA,ieACAqtK,SAAA,i+CACAyM,SAAA,m0CACAC,OAAA,yWACAC,KAAA,0gBACApY,MAAA,knBACAqY,iBAAA,kTACAC,eAAA,sTACA5M,YAAA,8qBACAC,UAAA,wjBACA3+B,KAAA,svCACAurC,YAAA,qpBACAtwK,KAAA,osBACA2jK,WAAA,utBACA4M,UAAA,k4DACAC,UAAA,mlBACAC,iBAAA,kMACA78J,KAAA,2OACA88J,YAAA,4SACAC,sBAAA,yPACAC,sBAAA,0PACAC,uBAAA,yPACAC,oBAAA,yPACAC,aAAA,2iCACAn1E,MAAA,qiCACAo1E,OAAA,wdACAC,KAAA,sUACAj2K,IAAA,ojBACAk2K,aAAA,wLACAC,iBAAA,2QACAC,UAAA,2TACAC,YAAA,ikBACAC,KAAA,6UACAC,cAAA,qvBACAC,cAAA,mfACAC,gBAAA,khBACAC,gBAAA,ihBACAC,OAAA,wfACA/N,IAAA,izBACA7M,QAAA,iqBACA6a,UAAA,i0BACAC,WAAA,ogBACAC,mBAAA,g3BACAC,MAAA,yIACAC,eAAA,iMACAnO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","file":"igv.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"igv\"] = factory();\n\telse\n\t\troot[\"igv\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/* Module header based on https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n */\n\n(function (root, factory) {\n   \n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        if(!root) root = window;   // Neccessary for Babel transform, which changes \"this\" to void\n        root.igv = factory();\n    }\n }(this, function () {\n//\n//     // Just return a value to define the module export.\n//     // This example returns an object, but the module\n//     // can return a function as the exported value.\n//     return igv;\n//\n// }));\n\n\n\n(function () {\n\n    var css =  '.igv-user-feedback {\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  width: 512px;\\n  height: 360px;\\n  z-index: 2048;\\n  background-color: white;\\n  border-color: #a2a2a2;\\n  border-style: solid;\\n  border-width: thin;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: medium;\\n  font-weight: 400;\\n  color: #444;\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center; }\\n  .igv-user-feedback div:first-child {\\n    position: relative;\\n    height: 24px;\\n    width: 100%;\\n    background-color: white;\\n    border-bottom-color: #a2a2a2;\\n    border-bottom-style: solid;\\n    border-bottom-width: thin; }\\n    .igv-user-feedback div:first-child div {\\n      position: absolute;\\n      top: 2px;\\n      width: 16px;\\n      height: 16px;\\n      background-color: transparent; }\\n    .igv-user-feedback div:first-child div:first-child {\\n      left: 8px; }\\n    .igv-user-feedback div:first-child div:last-child {\\n      cursor: pointer;\\n      right: 8px; }\\n  .igv-user-feedback div:last-child {\\n    width: 100%;\\n    height: calc(100% - 24px);\\n    border-width: 0; }\\n    .igv-user-feedback div:last-child div {\\n      width: auto;\\n      height: auto;\\n      margin: 8px; }\\n\\n.igv-color-swatch {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  align-items: center;\\n  width: 32px;\\n  height: 32px;\\n  border-style: solid;\\n  border-width: 2px;\\n  border-color: white;\\n  border-radius: 4px; }\\n\\n.igv-colorpicker-menu-close-button {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-end;\\n  align-items: center;\\n  width: 100%;\\n  height: 32px;\\n  margin-top: 4px;\\n  margin-bottom: 4px;\\n  padding-right: 8px; }\\n  .igv-colorpicker-menu-close-button i.fa {\\n    display: block;\\n    margin-left: 4px;\\n    margin-right: 4px;\\n    color: #5f5f5f; }\\n  .igv-colorpicker-menu-close-button i.fa:hover,\\n  .igv-colorpicker-menu-close-button i.fa:focus,\\n  .igv-colorpicker-menu-close-button i.fa:active {\\n    cursor: pointer;\\n    color: #0f0f0f; }\\n\\n.igv-alert-dialog-container {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 300px;\\n  height: 256px;\\n  border-color: #7F7F7F;\\n  border-radius: 4px;\\n  border-style: solid;\\n  border-width: thin;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 15px;\\n  font-weight: 400;\\n  z-index: 2048;\\n  background-color: white;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center; }\\n  .igv-alert-dialog-container div:first-child {\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center;\\n    width: 100%;\\n    height: 24px;\\n    cursor: move;\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    border-bottom-color: #7F7F7F;\\n    border-bottom-style: solid;\\n    border-bottom-width: thin;\\n    background-color: #eee; }\\n    .igv-alert-dialog-container div:first-child div {\\n      margin-right: 4px;\\n      margin-bottom: 2px;\\n      height: 12px;\\n      width: 12px;\\n      color: #7F7F7F; }\\n    .igv-alert-dialog-container div:first-child div:hover {\\n      cursor: pointer;\\n      color: #444; }\\n  .igv-alert-dialog-container #igv-alert-dialog-body {\\n    color: #373737;\\n    width: 100%;\\n    height: calc(100% - 24px - 64px);\\n    overflow-y: scroll; }\\n    .igv-alert-dialog-container #igv-alert-dialog-body #igv-alert-dialog-body-copy {\\n      cursor: pointer;\\n      margin: 16px;\\n      width: auto;\\n      height: auto;\\n      overflow-wrap: break-word;\\n      word-break: break-word;\\n      background-color: white;\\n      border: unset; }\\n  .igv-alert-dialog-container div:last-child {\\n    width: 100%;\\n    height: 64px;\\n    background-color: white;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: center;\\n    align-items: center; }\\n    .igv-alert-dialog-container div:last-child div {\\n      width: 98px;\\n      height: 36px;\\n      line-height: 36px;\\n      text-align: center;\\n      color: white;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: medium;\\n      font-weight: 400;\\n      border-color: #2B81AF;\\n      border-style: solid;\\n      border-width: thin;\\n      border-radius: 4px;\\n      background-color: #2B81AF; }\\n    .igv-alert-dialog-container div:last-child div:hover {\\n      cursor: pointer;\\n      border-color: #25597f;\\n      background-color: #25597f; }\\n\\n.igv-generic-container {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 2048;\\n  background-color: white;\\n  cursor: pointer;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  justify-content: flex-start;\\n  align-items: center; }\\n  .igv-generic-container div:first-child {\\n    cursor: move;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center;\\n    height: 24px;\\n    width: 100%;\\n    background-color: #dddddd; }\\n    .igv-generic-container div:first-child i {\\n      display: block;\\n      color: #5f5f5f;\\n      cursor: pointer;\\n      width: 14px;\\n      height: 14px;\\n      margin-right: 8px;\\n      margin-bottom: 4px; }\\n\\n.igv-generic-dialog-container {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 300px;\\n  height: 200px;\\n  border-color: #7F7F7F;\\n  border-radius: 4px;\\n  border-style: solid;\\n  border-width: thin;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: medium;\\n  font-weight: 400;\\n  z-index: 2048;\\n  background-color: white;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center; }\\n  .igv-generic-dialog-container .igv-generic-dialog-header {\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center;\\n    width: 100%;\\n    height: 24px;\\n    cursor: move;\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    border-bottom-color: #7F7F7F;\\n    border-bottom-style: solid;\\n    border-bottom-width: thin;\\n    background-color: #eee; }\\n    .igv-generic-dialog-container .igv-generic-dialog-header div {\\n      margin-right: 4px;\\n      margin-bottom: 2px;\\n      height: 12px;\\n      width: 12px;\\n      color: #7F7F7F; }\\n    .igv-generic-dialog-container .igv-generic-dialog-header div:hover {\\n      cursor: pointer;\\n      color: #444; }\\n  .igv-generic-dialog-container .igv-generic-dialog-one-liner {\\n    color: #373737;\\n    width: 95%;\\n    height: 24px;\\n    line-height: 24px;\\n    text-align: left;\\n    margin-top: 8px;\\n    padding-left: 8px;\\n    overflow-wrap: break-word;\\n    background-color: white; }\\n  .igv-generic-dialog-container .igv-generic-dialog-label-input {\\n    margin-top: 8px;\\n    width: 95%;\\n    height: 24px;\\n    color: #373737;\\n    line-height: 24px;\\n    padding-left: 8px;\\n    background-color: white;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n    align-items: center; }\\n    .igv-generic-dialog-container .igv-generic-dialog-label-input div {\\n      width: 30%;\\n      height: 100%;\\n      font-size: 16px;\\n      text-align: right;\\n      padding-right: 8px;\\n      background-color: white; }\\n    .igv-generic-dialog-container .igv-generic-dialog-label-input input {\\n      display: block;\\n      height: 100%;\\n      width: 100%;\\n      padding-left: 4px;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-weight: 400;\\n      color: #373737;\\n      text-align: left;\\n      outline: none;\\n      border-style: solid;\\n      border-width: thin;\\n      border-color: #7F7F7F;\\n      background-color: white; }\\n    .igv-generic-dialog-container .igv-generic-dialog-label-input input {\\n      width: 50%;\\n      font-size: 16px; }\\n  .igv-generic-dialog-container .igv-generic-dialog-input {\\n    margin-top: 8px;\\n    width: calc(100% - 16px);\\n    height: 24px;\\n    color: #373737;\\n    line-height: 24px;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: space-around;\\n    align-items: center; }\\n    .igv-generic-dialog-container .igv-generic-dialog-input input {\\n      display: block;\\n      height: 100%;\\n      width: 100%;\\n      padding-left: 4px;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-weight: 400;\\n      color: #373737;\\n      text-align: left;\\n      outline: none;\\n      border-style: solid;\\n      border-width: thin;\\n      border-color: #7F7F7F;\\n      background-color: white; }\\n    .igv-generic-dialog-container .igv-generic-dialog-input input {\\n      font-size: 16px; }\\n  .igv-generic-dialog-container .igv-generic-dialog-ok-cancel {\\n    width: 100%;\\n    height: 28px;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: space-around;\\n    align-items: center; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div {\\n      margin-top: 32px;\\n      color: white;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: 14px;\\n      font-weight: 400;\\n      width: 75px;\\n      height: 28px;\\n      line-height: 28px;\\n      text-align: center;\\n      border-color: transparent;\\n      border-style: solid;\\n      border-width: thin;\\n      border-radius: 2px; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:first-child {\\n      margin-left: 32px;\\n      margin-right: 0;\\n      background-color: #5ea4e0; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:last-child {\\n      margin-left: 0;\\n      margin-right: 32px;\\n      background-color: #c4c4c4; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:first-child:hover {\\n      cursor: pointer;\\n      background-color: #3b5c7f; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:last-child:hover {\\n      cursor: pointer;\\n      background-color: #7f7f7f; }\\n  .igv-generic-dialog-container .igv-generic-dialog-ok {\\n    width: 100%;\\n    height: 36px;\\n    margin-top: 32px;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: space-around;\\n    align-items: center; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok div {\\n      width: 98px;\\n      height: 36px;\\n      line-height: 36px;\\n      text-align: center;\\n      color: white;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-size: medium;\\n      font-weight: 400;\\n      border-color: white;\\n      border-style: solid;\\n      border-width: thin;\\n      border-radius: 4px;\\n      background-color: #2B81AF; }\\n    .igv-generic-dialog-container .igv-generic-dialog-ok div:hover {\\n      cursor: pointer;\\n      background-color: #25597f; }\\n\\n.igv-popover {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  min-width: 128px;\\n  z-index: 4096;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: small;\\n  font-weight: 400;\\n  color: #4b4b4b;\\n  background-color: white;\\n  border-radius: 4px;\\n  border-color: #7F7F7F;\\n  border-style: solid;\\n  border-width: thin;\\n  display: none; }\\n\\n.igv-popover-header {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  justify-content: flex-end;\\n  align-items: center;\\n  width: 100%;\\n  height: 24px;\\n  cursor: move;\\n  border-top-left-radius: 4px;\\n  border-top-right-radius: 4px;\\n  border-bottom-color: #7F7F7F;\\n  border-bottom-style: solid;\\n  border-bottom-width: thin;\\n  background-color: #eee; }\\n  .igv-popover-header div {\\n    margin-right: 4px;\\n    height: 12px;\\n    width: 12px;\\n    color: #7F7F7F; }\\n  .igv-popover-header div:hover {\\n    cursor: pointer;\\n    color: #444; }\\n\\n.igv-popover-track-popup-content {\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  max-height: 384px;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n  background-color: white; }\\n  .igv-popover-track-popup-content div {\\n    margin-left: 4px;\\n    background-color: white; }\\n  .igv-popover-track-popup-content div:hover {\\n    cursor: pointer;\\n    background-color: #efefef; }\\n\\n.igv-popover-name-value {\\n  cursor: default;\\n  text-wrap: none;\\n  white-space: nowrap;\\n  max-width: 384px; }\\n\\n.igv-popover-name {\\n  font-weight: bold;\\n  padding-right: 4px;\\n  float: left; }\\n\\n.igv-popover-value {\\n  padding-left: 4px;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  max-width: 256px;\\n  display: inline-block; }\\n\\n.igv-trackgear-container {\\n  position: relative;\\n  width: 20px;\\n  height: 20px;\\n  margin-left: 4px;\\n  color: #7F7F7F; }\\n\\n.igv-trackgear-container:hover {\\n  cursor: pointer;\\n  color: #444; }\\n\\n.igv-trackgear-popover {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  min-width: 132px;\\n  z-index: 4096;\\n  cursor: pointer;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: small;\\n  font-weight: 400;\\n  color: #4b4b4b;\\n  background: white;\\n  border-radius: 4px;\\n  border-color: #7F7F7F;\\n  border-style: solid;\\n  border-width: thin;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: flex-end;\\n  text-align: left; }\\n  .igv-trackgear-popover > div:not(:first-child) {\\n    width: 100%; }\\n    .igv-trackgear-popover > div:not(:first-child) > div {\\n      background: white; }\\n    .igv-trackgear-popover > div:not(:first-child) > div:last-child {\\n      border-bottom-left-radius: 4px;\\n      border-bottom-right-radius: 4px;\\n      border-bottom-color: transparent;\\n      border-bottom-style: solid;\\n      border-bottom-width: thin; }\\n    .igv-trackgear-popover > div:not(:first-child) > div:hover {\\n      background: #efefef; }\\n\\n.igv-trackgear-popover-shim {\\n  padding-left: 8px;\\n  padding-right: 8px; }\\n\\n.igv-trackgear-popover-header {\\n  position: relative;\\n  width: 100%;\\n  height: 24px;\\n  cursor: move;\\n  border-top-color: transparent;\\n  border-top-left-radius: 4px;\\n  border-top-right-radius: 4px;\\n  border-bottom-color: #7F7F7F;\\n  border-bottom-style: solid;\\n  border-bottom-width: thin;\\n  background-color: #eee;\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-end;\\n  align-items: center; }\\n  .igv-trackgear-popover-header div {\\n    margin-right: 4px;\\n    height: 12px;\\n    width: 12px;\\n    color: #7F7F7F; }\\n  .igv-trackgear-popover-header div:hover {\\n    cursor: pointer;\\n    color: #444; }\\n\\n.igv-trackgear-popover-check-container {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center;\\n  width: 100%;\\n  height: 20px;\\n  background-color: transparent; }\\n  .igv-trackgear-popover-check-container div {\\n    padding-top: 2px;\\n    padding-left: 8px; }\\n  .igv-trackgear-popover-check-container div:first-child {\\n    position: relative;\\n    width: 12px;\\n    height: 12px; }\\n    .igv-trackgear-popover-check-container div:first-child svg {\\n      position: absolute;\\n      width: 12px;\\n      height: 12px; }\\n\\n.igvControlDiv {\\n  position: relative; }\\n\\n.igv-content-header {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: flex-start;\\n  align-items: center;\\n  margin-top: 10px;\\n  height: 16px;\\n  width: 100%; }\\n  .igv-content-header .igv-ideogram-shim {\\n    height: 100%;\\n    width: 50px;\\n    background-color: white; }\\n  .igv-content-header .igv-ideogram-content {\\n    height: 100%;\\n    background-color: white; }\\n  .igv-content-header .igv-ideogram-content-border-right {\\n    border-right-color: #292929;\\n    border-right-style: solid;\\n    border-right-width: 1px; }\\n\\n.igv-multi-locus-panel-border {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 1px;\\n  background-color: green;\\n  border-right-color: #ff0000;\\n  border-right-style: solid;\\n  border-right-width: 1px; }\\n\\n.igv-navbar {\\n  position: relative;\\n  padding-left: 8px;\\n  padding-right: 8px;\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  color: #444;\\n  font-size: 12px;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-weight: 400;\\n  line-height: 32px;\\n  margin-top: 2px;\\n  margin-bottom: 4px;\\n  height: 32px;\\n  border-style: solid;\\n  border-radius: 3px;\\n  border-width: thin;\\n  border-color: #bfbfbf;\\n  background-color: #f3f3f3; }\\n\\n.igv-nav-bar-left-container {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 32px;\\n  line-height: 32px; }\\n  .igv-nav-bar-left-container .igv-logo {\\n    width: 34px;\\n    height: 32px;\\n    margin-top: 6px;\\n    margin-right: 8px; }\\n  .igv-nav-bar-left-container .igv-current-genome {\\n    height: 32px;\\n    width: 40px;\\n    margin-left: 4px;\\n    margin-right: 4px;\\n    user-select: none;\\n    line-height: 32px;\\n    vertical-align: middle;\\n    text-align: center; }\\n\\n.igv-nav-bar-genomic-location {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 100%; }\\n\\n.igv-chromosome-select-widget-container {\\n  height: 100%;\\n  width: 125px;\\n  margin-right: 4px;\\n  display: flex;\\n  flex-flow: column;\\n  flex-wrap: nowrap;\\n  justify-content: space-around;\\n  align-items: center; }\\n  .igv-chromosome-select-widget-container select {\\n    display: block;\\n    cursor: pointer;\\n    width: 100px;\\n    height: 75%;\\n    outline: none;\\n    font-size: 12px;\\n    font-family: \\\"Open Sans\\\", sans-serif;\\n    font-weight: 400; }\\n\\n.igv-locus-size-group {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-left: 8px;\\n  height: calc(32px - 10px); }\\n  .igv-locus-size-group .igv-search-container {\\n    width: 200px;\\n    height: calc(32px - 10px);\\n    line-height: calc(32px - 10px);\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-start;\\n    align-items: center; }\\n    .igv-locus-size-group .igv-search-container input {\\n      cursor: text;\\n      width: 85%;\\n      height: calc(32px - 10px);\\n      line-height: calc(32px - 10px);\\n      font-size: 12px;\\n      font-family: \\\"Open Sans\\\", sans-serif;\\n      font-weight: 400;\\n      text-align: left;\\n      padding-left: 8px;\\n      margin-right: 8px;\\n      outline: none;\\n      border-style: solid;\\n      border-radius: 3px;\\n      border-width: thin;\\n      border-color: #bfbfbf;\\n      background-color: white; }\\n    .igv-locus-size-group .igv-search-container div {\\n      cursor: pointer;\\n      height: 16px;\\n      width: 16px; }\\n  .igv-locus-size-group .igv-windowsizepanel-content-div {\\n    margin-left: 4px;\\n    user-select: none; }\\n\\n.igv-nav-bar-right-container {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 32px;\\n  line-height: 32px; }\\n  .igv-nav-bar-right-container .igv-nav-bar-toggle-button-container {\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: space-between;\\n    align-items: center;\\n    height: 100%; }\\n    .igv-nav-bar-right-container .igv-nav-bar-toggle-button-container div {\\n      margin-left: 0;\\n      margin-right: 4px; }\\n    .igv-nav-bar-right-container .igv-nav-bar-toggle-button-container div:last-child {\\n      margin-left: 0;\\n      margin-right: 0; }\\n  .igv-nav-bar-right-container .igv-nav-bar-toggle-button-container-750 {\\n    display: none; }\\n  .igv-nav-bar-right-container .igv-zoom-widget {\\n    color: #737373;\\n    font-size: 18px;\\n    height: 32px;\\n    line-height: 32px;\\n    margin-left: 8px;\\n    user-select: none;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center; }\\n    .igv-nav-bar-right-container .igv-zoom-widget div {\\n      cursor: pointer;\\n      margin-left: unset;\\n      margin-right: unset; }\\n    .igv-nav-bar-right-container .igv-zoom-widget div:first-child {\\n      height: 24px;\\n      width: 24px;\\n      margin-left: unset;\\n      margin-right: 8px; }\\n    .igv-nav-bar-right-container .igv-zoom-widget div:last-child {\\n      height: 24px;\\n      width: 24px;\\n      margin-left: 8px;\\n      margin-right: unset; }\\n    .igv-nav-bar-right-container .igv-zoom-widget div:nth-child(even) {\\n      display: block;\\n      height: fit-content; }\\n    .igv-nav-bar-right-container .igv-zoom-widget input {\\n      display: block;\\n      width: 125px; }\\n    .igv-nav-bar-right-container .igv-zoom-widget svg {\\n      display: block; }\\n  .igv-nav-bar-right-container .igv-zoom-widget-900 {\\n    color: #737373;\\n    font-size: 18px;\\n    height: 32px;\\n    line-height: 32px;\\n    margin-left: 8px;\\n    user-select: none;\\n    display: flex;\\n    flex-flow: row;\\n    flex-wrap: nowrap;\\n    justify-content: flex-end;\\n    align-items: center; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 div {\\n      cursor: pointer;\\n      margin-left: unset;\\n      margin-right: unset; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 div:first-child {\\n      height: 24px;\\n      width: 24px;\\n      margin-left: unset;\\n      margin-right: 8px; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 div:last-child {\\n      height: 24px;\\n      width: 24px;\\n      margin-left: 8px;\\n      margin-right: unset; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 div:nth-child(even) {\\n      width: 0;\\n      height: 0;\\n      display: none; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 input {\\n      width: 0;\\n      height: 0;\\n      display: none; }\\n    .igv-nav-bar-right-container .igv-zoom-widget-900 svg {\\n      display: block; }\\n  .igv-nav-bar-right-container .igv-zoom-widget-hidden {\\n    display: none; }\\n\\n.igv-nav-bar-button {\\n  box-sizing: unset;\\n  padding-left: 6px;\\n  padding-right: 6px;\\n  height: 18px;\\n  text-transform: capitalize;\\n  user-select: none;\\n  line-height: 18px;\\n  text-align: center;\\n  vertical-align: middle;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 11px;\\n  font-weight: 200;\\n  color: #737373;\\n  background-color: #f3f3f3;\\n  border-color: #737373;\\n  border-style: solid;\\n  border-width: thin;\\n  border-radius: 6px; }\\n\\n.igv-nav-bar-button-clicked {\\n  color: white;\\n  background-color: #737373; }\\n\\n.igv-nav-bar-button:hover {\\n  cursor: pointer; }\\n\\n.igv-logo-nonav {\\n  margin-left: 4px;\\n  margin-top: 12px;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 34px;\\n  height: 16px; }\\n\\n.igv-search-results {\\n  position: absolute;\\n  top: 32px;\\n  left: 2px;\\n  height: 320px;\\n  width: 213px;\\n  background-color: white;\\n  border-color: #7F7F7F;\\n  border-style: solid;\\n  border-width: thin;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n  z-index: 9999; }\\n  .igv-search-results tr {\\n    font-family: \\\"Open Sans\\\", sans-serif;\\n    font-size: small;\\n    font-weight: 400;\\n    color: #444; }\\n  .igv-search-results tr:hover,\\n  .igv-search-results tr:focus,\\n  .igv-search-results tr:active {\\n    cursor: pointer;\\n    font-weight: 700;\\n    color: #141414; }\\n\\n.igv-root-div {\\n  position: relative;\\n  left: 0;\\n  right: 0;\\n  height: auto;\\n  margin-left: 10px;\\n  margin-right: 10px;\\n  padding-top: 4px; }\\n\\n.igv-content-div {\\n  position: relative;\\n  width: 100%;\\n  height: 100%; }\\n\\n.igv-track-container-div {\\n  user-select: none;\\n  position: relative;\\n  clear: both; }\\n\\n.igv-track-div {\\n  position: relative;\\n  width: 100%;\\n  margin-top: 5px;\\n  margin-bottom: 5px; }\\n\\n.igv-viewport-container {\\n  position: absolute;\\n  left: 50px;\\n  right: 50px;\\n  height: 100%;\\n  white-space: nowrap;\\n  overflow-x: hidden;\\n  overflow-y: hidden; }\\n\\n.igv-viewport-div {\\n  position: relative;\\n  display: inline-block;\\n  height: 100%;\\n  overflow-x: hidden;\\n  overflow-y: hidden; }\\n\\n.igv-viewport-content-div {\\n  position: absolute;\\n  width: 100%; }\\n\\n.igv-viewport-message {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  color: rgba(0, 0, 0, 0.15);\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 25px;\\n  font-weight: bold;\\n  user-select: none; }\\n\\n.igv-whole-genome-container {\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: nowrap;\\n  justify-content: space-between;\\n  width: 100%;\\n  height: 100%;\\n  background-color: white; }\\n  .igv-whole-genome-container div {\\n    font-family: \\\"Open Sans\\\", sans-serif;\\n    font-size: 10px;\\n    font-weight: 400;\\n    color: #444;\\n    height: 100%;\\n    text-align: center;\\n    border-right-color: #bfbfbf;\\n    border-right-style: solid;\\n    border-right-width: thin; }\\n    .igv-whole-genome-container div span {\\n      display: block;\\n      padding-top: 6px;\\n      text-overflow: ellipsis; }\\n  .igv-whole-genome-container div:last-child {\\n    border-right-color: transparent; }\\n  .igv-whole-genome-container div:hover,\\n  .igv-whole-genome-container div:focus,\\n  .igv-whole-genome-container div:active {\\n    cursor: pointer;\\n    background-color: #efefef; }\\n\\n.igv-viewport-div-border-right {\\n  border-right-color: #292929;\\n  border-right-style: solid;\\n  border-right-width: 1px; }\\n\\n.igv-multi-locus-panel-close-container {\\n  position: absolute;\\n  top: 4px;\\n  right: 4px;\\n  width: 16px;\\n  height: 16px;\\n  color: #666666;\\n  z-index: 1000; }\\n\\n.igv-multi-locus-panel-close-container:hover {\\n  cursor: pointer;\\n  color: #434343; }\\n\\n.igv-multi-locus-panel-label-div {\\n  position: absolute;\\n  left: 50%;\\n  top: 25%;\\n  transform: translate(-50%, -25%);\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 12px;\\n  font-weight: 400;\\n  text-align: center;\\n  min-width: 16px;\\n  z-index: 64;\\n  color: #373737;\\n  background-color: white;\\n  padding: 1px; }\\n\\n.igv-multi-locus-panel-label-div:hover {\\n  cursor: pointer; }\\n\\n.igv-viewport-ruler {\\n  cursor: pointer;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 10px;\\n  font-weight: 200;\\n  text-align: center; }\\n  .igv-viewport-ruler > div {\\n    height: 100%; }\\n\\n.igv-viewport-sequence {\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: 8px;\\n  font-weight: 200;\\n  text-align: center; }\\n\\n.igv-viewport-spinner {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  z-index: 1024;\\n  width: 24px;\\n  height: 24px;\\n  pointer-events: none;\\n  color: #737373; }\\n\\n.igv-ruler-sweeper-div {\\n  display: none;\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 0;\\n  height: 100%;\\n  z-index: 99999;\\n  background-color: rgba(68, 134, 247, 0.25); }\\n\\n.igv-right-hand-gutter {\\n  position: absolute;\\n  right: 0;\\n  width: 36px;\\n  height: 100%;\\n  background: white; }\\n\\n.igv-left-hand-gutter {\\n  position: absolute;\\n  left: 0;\\n  width: 50px;\\n  height: 100%; }\\n  .igv-left-hand-gutter canvas {\\n    position: absolute; }\\n\\n.igv-track-menu-border-top {\\n  border-top-color: #a2a2a2;\\n  border-top-style: solid;\\n  border-top-width: thin; }\\n\\n.igv-track-menu-category {\\n  padding-left: 4px;\\n  font-weight: 400; }\\n\\n.igv-track-drag-scrim {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 256;\\n  background-color: rgba(68, 134, 247, 0.25); }\\n\\n.igv-track-manipulation-handle {\\n  cursor: pointer;\\n  position: absolute;\\n  right: 36px;\\n  width: 12px;\\n  margin-left: 2px;\\n  height: 100%;\\n  box-sizing: border-box;\\n  font-size: medium;\\n  border-color: #c4c4c4;\\n  border-style: solid;\\n  border-width: thin;\\n  border-top-right-radius: 6px;\\n  border-bottom-right-radius: 6px;\\n  z-index: 512;\\n  background-color: #c4c4c4; }\\n\\n.igv-track-manipulation-handle:hover,\\n.igv-track-manipulation-handle:focus,\\n.igv-track-manipulation-handle:active {\\n  border-color: #7e7e7e;\\n  background-color: #7e7e7e; }\\n\\n.igv-track-label {\\n  position: absolute;\\n  left: 8px;\\n  top: 4px;\\n  width: auto;\\n  height: auto;\\n  max-width: 200px;\\n  padding-left: 4px;\\n  padding-right: 4px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  font-family: \\\"Open Sans\\\", sans-serif;\\n  font-size: small;\\n  font-weight: 400;\\n  text-align: center;\\n  user-select: none;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  border-color: #444;\\n  border-radius: 2px;\\n  border-style: solid;\\n  border-width: thin;\\n  background-color: white;\\n  z-index: 128;\\n  cursor: pointer; }\\n\\n.igv-track-label:hover,\\n.igv-track-label:focus,\\n.igv-track-label:active {\\n  background-color: rgba(0, 0, 0, 0.05); }\\n\\n.igv-scrollbar-outer-div {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 14px;\\n  height: 100%;\\n  background-color: white; }\\n  .igv-scrollbar-outer-div div {\\n    position: absolute;\\n    top: 0;\\n    left: 3px;\\n    width: 8px;\\n    border-style: solid;\\n    border-width: thin;\\n    border-color: #c4c4c4;\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    border-bottom-left-radius: 4px;\\n    border-bottom-right-radius: 4px;\\n    background-color: white; }\\n  .igv-scrollbar-outer-div div:hover,\\n  .igv-scrollbar-outer-div div:focus,\\n  .igv-scrollbar-outer-div div:active {\\n    cursor: pointer;\\n    background-color: #c4c4c4; }\\n\\n.zoom-in-notice-container {\\n  position: absolute;\\n  top: 10px;\\n  left: 50%; }\\n  .zoom-in-notice-container div {\\n    position: relative;\\n    left: -50%;\\n    font-family: \\\"Open Sans\\\", sans-serif;\\n    font-size: medium;\\n    font-weight: 400;\\n    color: #3f3f3f;\\n    background-color: rgba(255, 255, 255, 0.51);\\n    z-index: 64; }\\n\\n.igv-center-guide {\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 50%;\\n  width: 8px;\\n  z-index: 8;\\n  display: none;\\n  user-select: none;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  border-left-style: dashed;\\n  border-left-width: thin;\\n  border-right-style: dashed;\\n  border-right-width: thin; }\\n\\n.igv-center-guide-wide {\\n  background-color: rgba(0, 0, 0, 0);\\n  border-left-color: rgba(127, 127, 127, 0.51);\\n  border-right-color: rgba(127, 127, 127, 0.51); }\\n\\n.igv-center-guide-thin {\\n  left: 50%;\\n  width: 1px;\\n  background-color: rgba(0, 0, 0, 0);\\n  border-left-color: rgba(127, 127, 127, 0.51);\\n  border-right-color: rgba(0, 0, 0, 0);\\n  /*background-color: rgba(127, 127, 127, 0.51);*/\\n  /*border-left-color: rgba(0,0,0,0);*/\\n  /*border-right-color: rgba(0,0,0,0);*/ }\\n\\n.igv-cursor-tracking-guide {\\n  pointer-events: none;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 50%;\\n  width: 1px;\\n  z-index: 1;\\n  border-left-style: dotted;\\n  border-left-width: thin;\\n  border-left-color: rgba(127, 127, 127, 0.76);\\n  display: none;\\n  user-select: none;\\n  -moz-user-select: none;\\n  -webkit-user-select: none; }\\n\\n.igv-clickable {\\n  cursor: pointer;\\n  background-color: white; }\\n\\n#color-by-tag {\\n  color: #444; }\\n\\n#color-by-tag:hover,\\n#color-by-tag:focus,\\n#color-by-tag:active {\\n  cursor: pointer;\\n  padding-left: 2px;\\n  padding-right: 2px;\\n  color: white;\\n  border-color: #444;\\n  border-radius: 2px;\\n  border-style: solid;\\n  border-width: thin;\\n  background-color: #7f7f7f; }\\n\\n.igv-ellipsis {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n\\n.igv-spinner-container {\\n  color: #3f3f3f;\\n  width: 100%;\\n  height: 100%;\\n  text-align: center;\\n  padding-top: 8px;\\n  font-size: 24px;\\n  z-index: 512; }\\n\\n.igv-fa-check-visible {\\n  color: inherit;\\n  padding-right: 2px; }\\n\\n.igv-fa-check-hidden {\\n  color: transparent;\\n  padding-right: 2px; }\\n\\n.validateTips {\\n  border: 1px solid transparent;\\n  padding: 0.3em; }\\n  .validateTips fieldset {\\n    border: 0; }\\n\\n.igv-spacer-10 {\\n  height: 10px;\\n  width: 100%;\\n  font-size: 0;\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  display: block; }\\n\\n/*# sourceMappingURL=igv.css.map */\\n\\n/*!\\n * Font Awesome Free 5.0.8 by @fontawesome - https://fontawesome.com\\n * License - https://fontawesome.com/license (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\\n */\\nsvg:not(:root).svg-inline--fa5 {\\n  overflow: visible;\\n  }\\n\\n.svg-inline--fa5 {\\n  display: inline-block;\\n  font-size: inherit;\\n  height: 1em;\\n  overflow: visible;\\n  vertical-align: -.125em; }\\n  .svg-inline--fa5.fa5-lg {\\n    vertical-align: -.225em; }\\n  .svg-inline--fa5.fa5-w-1 {\\n    width: 0.0625em; }\\n  .svg-inline--fa5.fa5-w-2 {\\n    width: 0.125em; }\\n  .svg-inline--fa5.fa5-w-3 {\\n    width: 0.1875em; }\\n  .svg-inline--fa5.fa5-w-4 {\\n    width: 0.25em; }\\n  .svg-inline--fa5.fa5-w-5 {\\n    width: 0.3125em; }\\n  .svg-inline--fa5.fa5-w-6 {\\n    width: 0.375em; }\\n  .svg-inline--fa5.fa5-w-7 {\\n    width: 0.4375em; }\\n  .svg-inline--fa5.fa5-w-8 {\\n    width: 0.5em; }\\n  .svg-inline--fa5.fa5-w-9 {\\n    width: 0.5625em; }\\n  .svg-inline--fa5.fa5-w-10 {\\n    width: 0.625em; }\\n  .svg-inline--fa5.fa5-w-11 {\\n    width: 0.6875em; }\\n  .svg-inline--fa5.fa5-w-12 {\\n    width: 0.75em; }\\n  .svg-inline--fa5.fa5-w-13 {\\n    width: 0.8125em; }\\n  .svg-inline--fa5.fa5-w-14 {\\n    width: 0.875em; }\\n  .svg-inline--fa5.fa5-w-15 {\\n    width: 0.9375em; }\\n  .svg-inline--fa5.fa5-w-16 {\\n    /* width: 1em; */\\n    }\\n  .svg-inline--fa5.fa5-w-17 {\\n    width: 1.0625em; }\\n  .svg-inline--fa5.fa5-w-18 {\\n    width: 1.125em; }\\n  .svg-inline--fa5.fa5-w-19 {\\n    width: 1.1875em; }\\n  .svg-inline--fa5.fa5-w-20 {\\n    width: 1.25em; }\\n  .svg-inline--fa5.fa5-pull-left {\\n    margin-right: .3em;\\n    width: auto; }\\n  .svg-inline--fa5.fa5-pull-right {\\n    margin-left: .3em;\\n    width: auto; }\\n  .svg-inline--fa5.fa5-border {\\n    height: 1.5em; }\\n  .svg-inline--fa5.fa5-li {\\n    width: 2em; }\\n  .svg-inline--fa5.fa5-fw {\\n    width: 1.25em; }\\n\\n.fa5-layers svg.svg-inline--fa5 {\\n  bottom: 0;\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  right: 0;\\n  top: 0; }\\n\\n.fa5-layers {\\n  display: inline-block;\\n  height: 1em;\\n  position: relative;\\n  text-align: center;\\n  vertical-align: -.125em;\\n  width: 1em; }\\n  .fa5-layers svg.svg-inline--fa5 {\\n    -webkit-transform-origin: center center;\\n            transform-origin: center center; }\\n\\n.fa5-layers-text, .fa5-layers-counter {\\n  display: inline-block;\\n  position: absolute;\\n  text-align: center; }\\n\\n.fa5-layers-text {\\n  left: 50%;\\n  top: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  -webkit-transform-origin: center center;\\n          transform-origin: center center; }\\n\\n.fa5-layers-counter {\\n  background-color: #ff253a;\\n  border-radius: 1em;\\n  color: #fff;\\n  height: 1.5em;\\n  line-height: 1;\\n  max-width: 5em;\\n  min-width: 1.5em;\\n  overflow: hidden;\\n  padding: .25em;\\n  right: 0;\\n  text-overflow: ellipsis;\\n  top: 0;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: top right;\\n          transform-origin: top right; }\\n\\n.fa5-layers-bottom-right {\\n  bottom: 0;\\n  right: 0;\\n  top: auto;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: bottom right;\\n          transform-origin: bottom right; }\\n\\n.fa5-layers-bottom-left {\\n  bottom: 0;\\n  left: 0;\\n  right: auto;\\n  top: auto;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: bottom left;\\n          transform-origin: bottom left; }\\n\\n.fa5-layers-top-right {\\n  right: 0;\\n  top: 0;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: top right;\\n          transform-origin: top right; }\\n\\n.fa5-layers-top-left {\\n  left: 0;\\n  right: auto;\\n  top: 0;\\n  -webkit-transform: scale(0.25);\\n          transform: scale(0.25);\\n  -webkit-transform-origin: top left;\\n          transform-origin: top left; }\\n\\n.fa5-lg {\\n  font-size: 1.33333em;\\n  line-height: 0.75em;\\n  vertical-align: -.0667em; }\\n\\n.fa5-xs {\\n  font-size: .75em; }\\n\\n.fa5-sm {\\n  font-size: .875em; }\\n\\n.fa5-1x {\\n  font-size: 1em; }\\n\\n.fa5-2x {\\n  font-size: 2em; }\\n\\n.fa5-3x {\\n  font-size: 3em; }\\n\\n.fa5-4x {\\n  font-size: 4em; }\\n\\n.fa5-5x {\\n  font-size: 5em; }\\n\\n.fa5-6x {\\n  font-size: 6em; }\\n\\n.fa5-7x {\\n  font-size: 7em; }\\n\\n.fa5-8x {\\n  font-size: 8em; }\\n\\n.fa5-9x {\\n  font-size: 9em; }\\n\\n.fa5-10x {\\n  font-size: 10em; }\\n\\n.fa5-fw {\\n  text-align: center;\\n  width: 1.25em; }\\n\\n.fa5-ul {\\n  list-style-type: none;\\n  margin-left: 2.5em;\\n  padding-left: 0; }\\n  .fa5-ul > li {\\n    position: relative; }\\n\\n.fa5-li {\\n  left: -2em;\\n  position: absolute;\\n  text-align: center;\\n  width: 2em;\\n  line-height: inherit; }\\n\\n.fa5-border {\\n  border: solid 0.08em #eee;\\n  border-radius: .1em;\\n  padding: .2em .25em .15em; }\\n\\n.fa5-pull-left {\\n  float: left; }\\n\\n.fa5-pull-right {\\n  float: right; }\\n\\n.fa5.fa5-pull-left,\\n.fas.fa5-pull-left,\\n.far.fa5-pull-left,\\n.fal.fa5-pull-left,\\n.fab.fa5-pull-left {\\n  margin-right: .3em; }\\n\\n.fa5.fa5-pull-right,\\n.fas.fa5-pull-right,\\n.far.fa5-pull-right,\\n.fal.fa5-pull-right,\\n.fab.fa5-pull-right {\\n  margin-left: .3em; }\\n\\n.fa5-spin {\\n  -webkit-animation: fa5-spin 2s infinite linear;\\n          animation: fa5-spin 2s infinite linear; }\\n\\n.fa5-pulse {\\n  -webkit-animation: fa5-spin 1s infinite steps(8);\\n          animation: fa5-spin 1s infinite steps(8); }\\n\\n@-webkit-keyframes fa5-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\\n@keyframes fa5-spin {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\\n.fa5-rotate-90 {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\\\";\\n  -webkit-transform: rotate(90deg);\\n          transform: rotate(90deg); }\\n\\n.fa5-rotate-180 {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\\\";\\n  -webkit-transform: rotate(180deg);\\n          transform: rotate(180deg); }\\n\\n.fa5-rotate-270 {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\\\";\\n  -webkit-transform: rotate(270deg);\\n          transform: rotate(270deg); }\\n\\n.fa5-flip-horizontal {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\\\";\\n  -webkit-transform: scale(-1, 1);\\n          transform: scale(-1, 1); }\\n\\n.fa5-flip-vertical {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\\\";\\n  -webkit-transform: scale(1, -1);\\n          transform: scale(1, -1); }\\n\\n.fa5-flip-horizontal.fa5-flip-vertical {\\n  -ms-filter: \\\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\\\";\\n  -webkit-transform: scale(-1, -1);\\n          transform: scale(-1, -1); }\\n\\n:root .fa5-rotate-90,\\n:root .fa5-rotate-180,\\n:root .fa5-rotate-270,\\n:root .fa5-flip-horizontal,\\n:root .fa5-flip-vertical {\\n  -webkit-filter: none;\\n          filter: none; }\\n\\n.fa5-stack {\\n  display: inline-block;\\n  height: 2em;\\n  position: relative;\\n  width: 2em; }\\n\\n.fa5-stack-1x,\\n.fa5-stack-2x {\\n  bottom: 0;\\n  left: 0;\\n  margin: auto;\\n  position: absolute;\\n  right: 0;\\n  top: 0; }\\n\\n.svg-inline--fa5.fa5-stack-1x {\\n  height: 1em;\\n  width: 1em; }\\n\\n.svg-inline--fa5.fa5-stack-2x {\\n  height: 2em;\\n  width: 2em; }\\n\\n.fa5-inverse {\\n  color: #fff; }\\n\\n.sr-only {\\n  border: 0;\\n  clip: rect(0, 0, 0, 0);\\n  height: 1px;\\n  margin: -1px;\\n  overflow: hidden;\\n  padding: 0;\\n  position: absolute;\\n  width: 1px; }\\n\\n.sr-only-focusable:active, .sr-only-focusable:focus {\\n  clip: auto;\\n  height: auto;\\n  margin: 0;\\n  overflow: visible;\\n  position: static;\\n  width: auto; }\\n';\n\n    var style = document.createElement('style');\n    style.setAttribute('type', 'text/css');\n    style.innerHTML = css;\n\n    document.head.insertBefore(style, document.head.childNodes[ document.head.childNodes.length - 1 ]);\n\n})();\n\n/*!\n * jQuery JavaScript Library v3.3.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/Tween,-effects/animatedSelector\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n// Modified for encapsulation in igv module\n// * no exports\n// * no global definition\n// * noConflict not supported (as _ is encapsulated its not needed)\n\nvar $, jQuery;\n\n(function (global, factory) {\n\n\n    $ = factory(global);\n    jQuery = $;\n\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function (window) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n      // Support: Chrome <=57, Firefox <=52\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n      // We don't want to classify *any* DOM node as a function.\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, doc, node ) {\n\t\tdoc = doc || document;\n\n\t\tvar i,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\t\t\t\tif ( node[ i ] ) {\n\t\t\t\t\tscript[ i ] = node[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.3.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/Tween,-effects/animatedSelector\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n        if ( nodeName( elem, \"iframe\" ) ) {\n            return elem.contentDocument;\n        }\n\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n        // Treat the template element as a regular one in browsers that\n        // don't support it.\n        if ( nodeName( elem, \"template\" ) ) {\n            elem = elem.content || elem;\n        }\n\n        return jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc, node );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a property mapped along what jQuery.cssProps suggests or to\n// a vendor prefixed property.\nfunction finalPropName( name ) {\n\tvar ret = jQuery.cssProps[ name ];\n\tif ( !ret ) {\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t}\n\treturn ret;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\t\t) );\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\t\tval = curCSS( elem, dimension, styles ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox;\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\t// Check for style in case a browser which returns unreliable values\n\t// for getComputedStyle silently falls back to the reliable elem.style\n\tvalueIsBorderBox = valueIsBorderBox &&\n\t\t( support.boxSizingReliable() || val === elem.style[ dimension ] );\n\n\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\t// Support: Android <=4.1 - 4.3 only\n\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\tif ( val === \"auto\" ||\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) {\n\n\t\tval = elem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];\n\n\t\t// offsetWidth/offsetHeight provide border-box values\n\t\tvalueIsBorderBox = true;\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\t\t\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra && boxModelAdjustment(\n\t\t\t\t\telem,\n\t\t\t\t\tdimension,\n\t\t\t\t\textra,\n\t\t\t\t\tisBorderBox,\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && support.scrollboxSize() === styles.position ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\n\n\n\n    /*\n     // Register as a named AMD module, since jQuery can be concatenated with other\n     // files that may use define, but not via a proper concatenation script that\n     // understands anonymous AMD modules. A named AMD is safest and most robust\n     // way to register. Lowercase jquery is used because AMD module names are\n     // derived from file names, and jQuery is normally delivered in a lowercase\n     // file name. Do this after creating the global so that if an AMD module wants\n     // to call noConflict to hide this version of jQuery, it will work.\n\n     // Note that for maximum portability, libraries that are not jQuery should\n     // declare themselves as anonymous modules, and avoid setting a global if an\n     // AMD loader is present. jQuery is a special case. For more information, see\n     // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n     if (typeof define === \"function\" && define.amd) {\n     define(\"jquery\", [], function () {\n     return jQuery;\n     });\n     }\n\n\n     var\n\n     // Map over jQuery in case of overwrite\n     _jQuery = window.jQuery,\n\n     // Map over the $ in case of overwrite\n     _$ = window.$;\n\n     jQuery.noConflict = function (deep) {\n     if (window.$ === jQuery) {\n     window.$ = _$;\n     }\n\n     if (deep && window.jQuery === jQuery) {\n     window.jQuery = _jQuery;\n     }\n\n     return jQuery;\n     };\n\n     // Expose jQuery and $ identifiers, even in\n     // AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n     // and CommonJS for browser emulators (#13566)\n     if (!noGlobal) {\n     window.jQuery = window.$ = jQuery;\n     }\n     */\n\n    return jQuery;\n}));\n//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n// Modified for encapsulation in igv module\n// * no exports\n// * no global definition\n// * noConflict not supported (as _ is encapsulated its not needed)\n\n\n// Create a safe reference to the Underscore object for use below.\nvar _ = function (obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n};\n\n(function () {\n\n    // Baseline setup\n    // --------------\n\n\n    // Save bytes in the minified (but not gzipped) version:\n    var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n    // Create quick reference variables for speed access to core prototypes.\n    var\n        push = ArrayProto.push,\n        slice = ArrayProto.slice,\n        toString = ObjProto.toString,\n        hasOwnProperty = ObjProto.hasOwnProperty;\n\n    // All **ECMAScript 5** native function implementations that we hope to use\n    // are declared here.\n    var\n        nativeIsArray = Array.isArray,\n        nativeKeys = Object.keys,\n        nativeBind = FuncProto.bind,\n        nativeCreate = Object.create;\n\n    // Naked function reference for surrogate-prototype-swapping.\n    var Ctor = function () {\n    };\n\n\n    // Current version.\n    _.VERSION = '1.8.3';\n\n    // Internal function that returns an efficient (for current engines) version\n    // of the passed-in callback, to be repeatedly applied in other Underscore\n    // functions.\n    var optimizeCb = function (func, context, argCount) {\n        if (context === void 0) return func;\n        switch (argCount == null ? 3 : argCount) {\n            case 1:\n                return function (value) {\n                    return func.call(context, value);\n                };\n            case 2:\n                return function (value, other) {\n                    return func.call(context, value, other);\n                };\n            case 3:\n                return function (value, index, collection) {\n                    return func.call(context, value, index, collection);\n                };\n            case 4:\n                return function (accumulator, value, index, collection) {\n                    return func.call(context, accumulator, value, index, collection);\n                };\n        }\n        return function () {\n            return func.apply(context, arguments);\n        };\n    };\n\n    // A mostly-internal function to generate callbacks that can be applied\n    // to each element in a collection, returning the desired result — either\n    // identity, an arbitrary callback, a property matcher, or a property accessor.\n    var cb = function (value, context, argCount) {\n        if (value == null) return _.identity;\n        if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n        if (_.isObject(value)) return _.matcher(value);\n        return _.property(value);\n    };\n    _.iteratee = function (value, context) {\n        return cb(value, context, Infinity);\n    };\n\n    // An internal function for creating assigner functions.\n    var createAssigner = function (keysFunc, undefinedOnly) {\n        return function (obj) {\n            var length = arguments.length;\n            if (length < 2 || obj == null) return obj;\n            for (var index = 1; index < length; index++) {\n                var source = arguments[index],\n                    keys = keysFunc(source),\n                    l = keys.length;\n                for (var i = 0; i < l; i++) {\n                    var key = keys[i];\n                    if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n                }\n            }\n            return obj;\n        };\n    };\n\n    // An internal function for creating a new object that inherits from another.\n    var baseCreate = function (prototype) {\n        if (!_.isObject(prototype)) return {};\n        if (nativeCreate) return nativeCreate(prototype);\n        Ctor.prototype = prototype;\n        var result = new Ctor;\n        Ctor.prototype = null;\n        return result;\n    };\n\n    var property = function (key) {\n        return function (obj) {\n            return obj == null ? void 0 : obj[key];\n        };\n    };\n\n    // Helper for collection methods to determine whether a collection\n    // should be iterated as an array or as an object\n    // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n    // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n    var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n    var getLength = property('length');\n    var isArrayLike = function (collection) {\n        var length = getLength(collection);\n        return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n    };\n\n    // Collection Functions\n    // --------------------\n\n    // The cornerstone, an `each` implementation, aka `forEach`.\n    // Handles raw objects in addition to array-likes. Treats all\n    // sparse array-likes as if they were dense.\n    _.each = _.forEach = function (obj, iteratee, context) {\n        iteratee = optimizeCb(iteratee, context);\n        var i, length;\n        if (isArrayLike(obj)) {\n            for (i = 0, length = obj.length; i < length; i++) {\n                iteratee(obj[i], i, obj);\n            }\n        } else {\n            var keys = _.keys(obj);\n            for (i = 0, length = keys.length; i < length; i++) {\n                iteratee(obj[keys[i]], keys[i], obj);\n            }\n        }\n        return obj;\n    };\n\n    // Return the results of applying the iteratee to each element.\n    _.map = _.collect = function (obj, iteratee, context) {\n        iteratee = cb(iteratee, context);\n        var keys = !isArrayLike(obj) && _.keys(obj),\n            length = (keys || obj).length,\n            results = Array(length);\n        for (var index = 0; index < length; index++) {\n            var currentKey = keys ? keys[index] : index;\n            results[index] = iteratee(obj[currentKey], currentKey, obj);\n        }\n        return results;\n    };\n\n    // Create a reducing function iterating left or right.\n    function createReduce(dir) {\n        // Optimized iterator function as using arguments.length\n        // in the main function will deoptimize the, see #1991.\n        function iterator(obj, iteratee, memo, keys, index, length) {\n            for (; index >= 0 && index < length; index += dir) {\n                var currentKey = keys ? keys[index] : index;\n                memo = iteratee(memo, obj[currentKey], currentKey, obj);\n            }\n            return memo;\n        }\n\n        return function (obj, iteratee, memo, context) {\n            iteratee = optimizeCb(iteratee, context, 4);\n            var keys = !isArrayLike(obj) && _.keys(obj),\n                length = (keys || obj).length,\n                index = dir > 0 ? 0 : length - 1;\n            // Determine the initial value if none is provided.\n            if (arguments.length < 3) {\n                memo = obj[keys ? keys[index] : index];\n                index += dir;\n            }\n            return iterator(obj, iteratee, memo, keys, index, length);\n        };\n    }\n\n    // **Reduce** builds up a single result from a list of values, aka `inject`,\n    // or `foldl`.\n    _.reduce = _.foldl = _.inject = createReduce(1);\n\n    // The right-associative version of reduce, also known as `foldr`.\n    _.reduceRight = _.foldr = createReduce(-1);\n\n    // Return the first value which passes a truth test. Aliased as `detect`.\n    _.find = _.detect = function (obj, predicate, context) {\n        var key;\n        if (isArrayLike(obj)) {\n            key = _.findIndex(obj, predicate, context);\n        } else {\n            key = _.findKey(obj, predicate, context);\n        }\n        if (key !== void 0 && key !== -1) return obj[key];\n    };\n\n    // Return all the elements that pass a truth test.\n    // Aliased as `select`.\n    _.filter = _.select = function (obj, predicate, context) {\n        var results = [];\n        predicate = cb(predicate, context);\n        _.each(obj, function (value, index, list) {\n            if (predicate(value, index, list)) results.push(value);\n        });\n        return results;\n    };\n\n    // Return all the elements for which a truth test fails.\n    _.reject = function (obj, predicate, context) {\n        return _.filter(obj, _.negate(cb(predicate)), context);\n    };\n\n    // Determine whether all of the elements match a truth test.\n    // Aliased as `all`.\n    _.every = _.all = function (obj, predicate, context) {\n        predicate = cb(predicate, context);\n        var keys = !isArrayLike(obj) && _.keys(obj),\n            length = (keys || obj).length;\n        for (var index = 0; index < length; index++) {\n            var currentKey = keys ? keys[index] : index;\n            if (!predicate(obj[currentKey], currentKey, obj)) return false;\n        }\n        return true;\n    };\n\n    // Determine if at least one element in the object matches a truth test.\n    // Aliased as `any`.\n    _.some = _.any = function (obj, predicate, context) {\n        predicate = cb(predicate, context);\n        var keys = !isArrayLike(obj) && _.keys(obj),\n            length = (keys || obj).length;\n        for (var index = 0; index < length; index++) {\n            var currentKey = keys ? keys[index] : index;\n            if (predicate(obj[currentKey], currentKey, obj)) return true;\n        }\n        return false;\n    };\n\n    // Determine if the array or object contains a given item (using `===`).\n    // Aliased as `includes` and `include`.\n    _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {\n        if (!isArrayLike(obj)) obj = _.values(obj);\n        if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n        return _.indexOf(obj, item, fromIndex) >= 0;\n    };\n\n    // Invoke a method (with arguments) on every item in a collection.\n    _.invoke = function (obj, method) {\n        var args = slice.call(arguments, 2);\n        var isFunc = _.isFunction(method);\n        return _.map(obj, function (value) {\n            var func = isFunc ? method : value[method];\n            return func == null ? func : func.apply(value, args);\n        });\n    };\n\n    // Convenience version of a common use case of `map`: fetching a property.\n    _.pluck = function (obj, key) {\n        return _.map(obj, _.property(key));\n    };\n\n    // Convenience version of a common use case of `filter`: selecting only objects\n    // containing specific `key:value` pairs.\n    _.where = function (obj, attrs) {\n        return _.filter(obj, _.matcher(attrs));\n    };\n\n    // Convenience version of a common use case of `find`: getting the first object\n    // containing specific `key:value` pairs.\n    _.findWhere = function (obj, attrs) {\n        return _.find(obj, _.matcher(attrs));\n    };\n\n    // Return the maximum element (or element-based computation).\n    _.max = function (obj, iteratee, context) {\n        var result = -Infinity, lastComputed = -Infinity,\n            value, computed;\n        if (iteratee == null && obj != null) {\n            obj = isArrayLike(obj) ? obj : _.values(obj);\n            for (var i = 0, length = obj.length; i < length; i++) {\n                value = obj[i];\n                if (value > result) {\n                    result = value;\n                }\n            }\n        } else {\n            iteratee = cb(iteratee, context);\n            _.each(obj, function (value, index, list) {\n                computed = iteratee(value, index, list);\n                if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n                    result = value;\n                    lastComputed = computed;\n                }\n            });\n        }\n        return result;\n    };\n\n    // Return the minimum element (or element-based computation).\n    _.min = function (obj, iteratee, context) {\n        var result = Infinity, lastComputed = Infinity,\n            value, computed;\n        if (iteratee == null && obj != null) {\n            obj = isArrayLike(obj) ? obj : _.values(obj);\n            for (var i = 0, length = obj.length; i < length; i++) {\n                value = obj[i];\n                if (value < result) {\n                    result = value;\n                }\n            }\n        } else {\n            iteratee = cb(iteratee, context);\n            _.each(obj, function (value, index, list) {\n                computed = iteratee(value, index, list);\n                if (computed < lastComputed || computed === Infinity && result === Infinity) {\n                    result = value;\n                    lastComputed = computed;\n                }\n            });\n        }\n        return result;\n    };\n\n    // Shuffle a collection, using the modern version of the\n    // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n    _.shuffle = function (obj) {\n        var set = isArrayLike(obj) ? obj : _.values(obj);\n        var length = set.length;\n        var shuffled = Array(length);\n        for (var index = 0, rand; index < length; index++) {\n            rand = _.random(0, index);\n            if (rand !== index) shuffled[index] = shuffled[rand];\n            shuffled[rand] = set[index];\n        }\n        return shuffled;\n    };\n\n    // Sample **n** random values from a collection.\n    // If **n** is not specified, returns a single random element.\n    // The internal `guard` argument allows it to work with `map`.\n    _.sample = function (obj, n, guard) {\n        if (n == null || guard) {\n            if (!isArrayLike(obj)) obj = _.values(obj);\n            return obj[_.random(obj.length - 1)];\n        }\n        return _.shuffle(obj).slice(0, Math.max(0, n));\n    };\n\n    // Sort the object's values by a criterion produced by an iteratee.\n    _.sortBy = function (obj, iteratee, context) {\n        iteratee = cb(iteratee, context);\n        return _.pluck(_.map(obj, function (value, index, list) {\n            return {\n                value: value,\n                index: index,\n                criteria: iteratee(value, index, list)\n            };\n        }).sort(function (left, right) {\n            var a = left.criteria;\n            var b = right.criteria;\n            if (a !== b) {\n                if (a > b || a === void 0) return 1;\n                if (a < b || b === void 0) return -1;\n            }\n            return left.index - right.index;\n        }), 'value');\n    };\n\n    // An internal function used for aggregate \"group by\" operations.\n    var group = function (behavior) {\n        return function (obj, iteratee, context) {\n            var result = {};\n            iteratee = cb(iteratee, context);\n            _.each(obj, function (value, index) {\n                var key = iteratee(value, index, obj);\n                behavior(result, value, key);\n            });\n            return result;\n        };\n    };\n\n    // Groups the object's values by a criterion. Pass either a string attribute\n    // to group by, or a function that returns the criterion.\n    _.groupBy = group(function (result, value, key) {\n        if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n    });\n\n    // Indexes the object's values by a criterion, similar to `groupBy`, but for\n    // when you know that your index values will be unique.\n    _.indexBy = group(function (result, value, key) {\n        result[key] = value;\n    });\n\n    // Counts instances of an object that group by a certain criterion. Pass\n    // either a string attribute to count by, or a function that returns the\n    // criterion.\n    _.countBy = group(function (result, value, key) {\n        if (_.has(result, key)) result[key]++; else result[key] = 1;\n    });\n\n    // Safely create a real, live array from anything iterable.\n    _.toArray = function (obj) {\n        if (!obj) return [];\n        if (_.isArray(obj)) return slice.call(obj);\n        if (isArrayLike(obj)) return _.map(obj, _.identity);\n        return _.values(obj);\n    };\n\n    // Return the number of elements in an object.\n    _.size = function (obj) {\n        if (obj == null) return 0;\n        return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n    };\n\n    // Split a collection into two arrays: one whose elements all satisfy the given\n    // predicate, and one whose elements all do not satisfy the predicate.\n    _.partition = function (obj, predicate, context) {\n        predicate = cb(predicate, context);\n        var pass = [], fail = [];\n        _.each(obj, function (value, key, obj) {\n            (predicate(value, key, obj) ? pass : fail).push(value);\n        });\n        return [pass, fail];\n    };\n\n    // Array Functions\n    // ---------------\n\n    // Get the first element of an array. Passing **n** will return the first N\n    // values in the array. Aliased as `head` and `take`. The **guard** check\n    // allows it to work with `_.map`.\n    _.first = _.head = _.take = function (array, n, guard) {\n        if (array == null) return void 0;\n        if (n == null || guard) return array[0];\n        return _.initial(array, array.length - n);\n    };\n\n    // Returns everything but the last entry of the array. Especially useful on\n    // the arguments object. Passing **n** will return all the values in\n    // the array, excluding the last N.\n    _.initial = function (array, n, guard) {\n        return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n    };\n\n    // Get the last element of an array. Passing **n** will return the last N\n    // values in the array.\n    _.last = function (array, n, guard) {\n        if (array == null) return void 0;\n        if (n == null || guard) return array[array.length - 1];\n        return _.rest(array, Math.max(0, array.length - n));\n    };\n\n    // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n    // Especially useful on the arguments object. Passing an **n** will return\n    // the rest N values in the array.\n    _.rest = _.tail = _.drop = function (array, n, guard) {\n        return slice.call(array, n == null || guard ? 1 : n);\n    };\n\n    // Trim out all falsy values from an array.\n    _.compact = function (array) {\n        return _.filter(array, _.identity);\n    };\n\n    // Internal implementation of a recursive `flatten` function.\n    var flatten = function (input, shallow, strict, startIndex) {\n        var output = [], idx = 0;\n        for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n            var value = input[i];\n            if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n                //flatten current level of array or arguments object\n                if (!shallow) value = flatten(value, shallow, strict);\n                var j = 0, len = value.length;\n                output.length += len;\n                while (j < len) {\n                    output[idx++] = value[j++];\n                }\n            } else if (!strict) {\n                output[idx++] = value;\n            }\n        }\n        return output;\n    };\n\n    // Flatten out an array, either recursively (by default), or just one level.\n    _.flatten = function (array, shallow) {\n        return flatten(array, shallow, false);\n    };\n\n    // Return a version of the array that does not contain the specified value(s).\n    _.without = function (array) {\n        return _.difference(array, slice.call(arguments, 1));\n    };\n\n    // Produce a duplicate-free version of the array. If the array has already\n    // been sorted, you have the option of using a faster algorithm.\n    // Aliased as `unique`.\n    _.uniq = _.unique = function (array, isSorted, iteratee, context) {\n        if (!_.isBoolean(isSorted)) {\n            context = iteratee;\n            iteratee = isSorted;\n            isSorted = false;\n        }\n        if (iteratee != null) iteratee = cb(iteratee, context);\n        var result = [];\n        var seen = [];\n        for (var i = 0, length = getLength(array); i < length; i++) {\n            var value = array[i],\n                computed = iteratee ? iteratee(value, i, array) : value;\n            if (isSorted) {\n                if (!i || seen !== computed) result.push(value);\n                seen = computed;\n            } else if (iteratee) {\n                if (!_.contains(seen, computed)) {\n                    seen.push(computed);\n                    result.push(value);\n                }\n            } else if (!_.contains(result, value)) {\n                result.push(value);\n            }\n        }\n        return result;\n    };\n\n    // Produce an array that contains the union: each distinct element from all of\n    // the passed-in arrays.\n    _.union = function () {\n        return _.uniq(flatten(arguments, true, true));\n    };\n\n    // Produce an array that contains every item shared between all the\n    // passed-in arrays.\n    _.intersection = function (array) {\n        var result = [];\n        var argsLength = arguments.length;\n        for (var i = 0, length = getLength(array); i < length; i++) {\n            var item = array[i];\n            if (_.contains(result, item)) continue;\n            for (var j = 1; j < argsLength; j++) {\n                if (!_.contains(arguments[j], item)) break;\n            }\n            if (j === argsLength) result.push(item);\n        }\n        return result;\n    };\n\n    // Take the difference between one array and a number of other arrays.\n    // Only the elements present in just the first array will remain.\n    _.difference = function (array) {\n        var rest = flatten(arguments, true, true, 1);\n        return _.filter(array, function (value) {\n            return !_.contains(rest, value);\n        });\n    };\n\n    // Zip together multiple lists into a single array -- elements that share\n    // an index go together.\n    _.zip = function () {\n        return _.unzip(arguments);\n    };\n\n    // Complement of _.zip. Unzip accepts an array of arrays and groups\n    // each array's elements on shared indices\n    _.unzip = function (array) {\n        var length = array && _.max(array, getLength).length || 0;\n        var result = Array(length);\n\n        for (var index = 0; index < length; index++) {\n            result[index] = _.pluck(array, index);\n        }\n        return result;\n    };\n\n    // Converts lists into objects. Pass either a single array of `[key, value]`\n    // pairs, or two parallel arrays of the same length -- one of keys, and one of\n    // the corresponding values.\n    _.object = function (list, values) {\n        var result = {};\n        for (var i = 0, length = getLength(list); i < length; i++) {\n            if (values) {\n                result[list[i]] = values[i];\n            } else {\n                result[list[i][0]] = list[i][1];\n            }\n        }\n        return result;\n    };\n\n    // Generator function to create the findIndex and findLastIndex functions\n    function createPredicateIndexFinder(dir) {\n        return function (array, predicate, context) {\n            predicate = cb(predicate, context);\n            var length = getLength(array);\n            var index = dir > 0 ? 0 : length - 1;\n            for (; index >= 0 && index < length; index += dir) {\n                if (predicate(array[index], index, array)) return index;\n            }\n            return -1;\n        };\n    }\n\n    // Returns the first index on an array-like that passes a predicate test\n    _.findIndex = createPredicateIndexFinder(1);\n    _.findLastIndex = createPredicateIndexFinder(-1);\n\n    // Use a comparator function to figure out the smallest index at which\n    // an object should be inserted so as to maintain order. Uses binary search.\n    _.sortedIndex = function (array, obj, iteratee, context) {\n        iteratee = cb(iteratee, context, 1);\n        var value = iteratee(obj);\n        var low = 0, high = getLength(array);\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n        }\n        return low;\n    };\n\n    // Generator function to create the indexOf and lastIndexOf functions\n    function createIndexFinder(dir, predicateFind, sortedIndex) {\n        return function (array, item, idx) {\n            var i = 0, length = getLength(array);\n            if (typeof idx == 'number') {\n                if (dir > 0) {\n                    i = idx >= 0 ? idx : Math.max(idx + length, i);\n                } else {\n                    length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n                }\n            } else if (sortedIndex && idx && length) {\n                idx = sortedIndex(array, item);\n                return array[idx] === item ? idx : -1;\n            }\n            if (item !== item) {\n                idx = predicateFind(slice.call(array, i, length), _.isNaN);\n                return idx >= 0 ? idx + i : -1;\n            }\n            for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n                if (array[idx] === item) return idx;\n            }\n            return -1;\n        };\n    }\n\n    // Return the position of the first occurrence of an item in an array,\n    // or -1 if the item is not included in the array.\n    // If the array is large and already in sort order, pass `true`\n    // for **isSorted** to use binary search.\n    _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n    _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n    // Generate an integer Array containing an arithmetic progression. A port of\n    // the native Python `range()` function. See\n    // [the Python documentation](http://docs.python.org/library/functions.html#range).\n    _.range = function (start, stop, step) {\n        if (stop == null) {\n            stop = start || 0;\n            start = 0;\n        }\n        step = step || 1;\n\n        var length = Math.max(Math.ceil((stop - start) / step), 0);\n        var range = Array(length);\n\n        for (var idx = 0; idx < length; idx++, start += step) {\n            range[idx] = start;\n        }\n\n        return range;\n    };\n\n    // Function (ahem) Functions\n    // ------------------\n\n    // Determines whether to execute a function as a constructor\n    // or a normal function with the provided arguments\n    var executeBound = function (sourceFunc, boundFunc, context, callingContext, args) {\n        if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n        var self = baseCreate(sourceFunc.prototype);\n        var result = sourceFunc.apply(self, args);\n        if (_.isObject(result)) return result;\n        return self;\n    };\n\n    // Create a function bound to a given object (assigning `this`, and arguments,\n    // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n    // available.\n    _.bind = function (func, context) {\n        if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n        if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n        var args = slice.call(arguments, 2);\n        var bound = function () {\n            return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n        };\n        return bound;\n    };\n\n    // Partially apply a function by creating a version that has had some of its\n    // arguments pre-filled, without changing its dynamic `this` context. _ acts\n    // as a placeholder, allowing any combination of arguments to be pre-filled.\n    _.partial = function (func) {\n        var boundArgs = slice.call(arguments, 1);\n        var bound = function () {\n            var position = 0, length = boundArgs.length;\n            var args = Array(length);\n            for (var i = 0; i < length; i++) {\n                args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n            }\n            while (position < arguments.length) args.push(arguments[position++]);\n            return executeBound(func, bound, this, this, args);\n        };\n        return bound;\n    };\n\n    // Bind a number of an object's methods to that object. Remaining arguments\n    // are the method names to be bound. Useful for ensuring that all callbacks\n    // defined on an object belong to it.\n    _.bindAll = function (obj) {\n        var i, length = arguments.length, key;\n        if (length <= 1) throw new Error('bindAll must be passed function names');\n        for (i = 1; i < length; i++) {\n            key = arguments[i];\n            obj[key] = _.bind(obj[key], obj);\n        }\n        return obj;\n    };\n\n    // Memoize an expensive function by storing its results.\n    _.memoize = function (func, hasher) {\n        var memoize = function (key) {\n            var cache = memoize.cache;\n            var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n            if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n            return cache[address];\n        };\n        memoize.cache = {};\n        return memoize;\n    };\n\n    // Delays a function for the given number of milliseconds, and then calls\n    // it with the arguments supplied.\n    _.delay = function (func, wait) {\n        var args = slice.call(arguments, 2);\n        return setTimeout(function () {\n            return func.apply(null, args);\n        }, wait);\n    };\n\n    // Defers a function, scheduling it to run after the current call stack has\n    // cleared.\n    _.defer = _.partial(_.delay, _, 1);\n\n    // Returns a function, that, when invoked, will only be triggered at most once\n    // during a given window of time. Normally, the throttled function will run\n    // as much as it can, without ever going more than once per `wait` duration;\n    // but if you'd like to disable the execution on the leading edge, pass\n    // `{leading: false}`. To disable execution on the trailing edge, ditto.\n    _.throttle = function (func, wait, options) {\n        var context, args, result;\n        var timeout = null;\n        var previous = 0;\n        if (!options) options = {};\n        var later = function () {\n            previous = options.leading === false ? 0 : _.now();\n            timeout = null;\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n        };\n        return function () {\n            var now = _.now();\n            if (!previous && options.leading === false) previous = now;\n            var remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0 || remaining > wait) {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                previous = now;\n                result = func.apply(context, args);\n                if (!timeout) context = args = null;\n            } else if (!timeout && options.trailing !== false) {\n                timeout = setTimeout(later, remaining);\n            }\n            return result;\n        };\n    };\n\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds. If `immediate` is passed, trigger the function on the\n    // leading edge, instead of the trailing.\n    _.debounce = function (func, wait, immediate) {\n        var timeout, args, context, timestamp, result;\n\n        var later = function () {\n            var last = _.now() - timestamp;\n\n            if (last < wait && last >= 0) {\n                timeout = setTimeout(later, wait - last);\n            } else {\n                timeout = null;\n                if (!immediate) {\n                    result = func.apply(context, args);\n                    if (!timeout) context = args = null;\n                }\n            }\n        };\n\n        return function () {\n            context = this;\n            args = arguments;\n            timestamp = _.now();\n            var callNow = immediate && !timeout;\n            if (!timeout) timeout = setTimeout(later, wait);\n            if (callNow) {\n                result = func.apply(context, args);\n                context = args = null;\n            }\n\n            return result;\n        };\n    };\n\n    // Returns the first function passed as an argument to the second,\n    // allowing you to adjust arguments, run code before and after, and\n    // conditionally execute the original function.\n    _.wrap = function (func, wrapper) {\n        return _.partial(wrapper, func);\n    };\n\n    // Returns a negated version of the passed-in predicate.\n    _.negate = function (predicate) {\n        return function () {\n            return !predicate.apply(this, arguments);\n        };\n    };\n\n    // Returns a function that is the composition of a list of functions, each\n    // consuming the return value of the function that follows.\n    _.compose = function () {\n        var args = arguments;\n        var start = args.length - 1;\n        return function () {\n            var i = start;\n            var result = args[start].apply(this, arguments);\n            while (i--) result = args[i].call(this, result);\n            return result;\n        };\n    };\n\n    // Returns a function that will only be executed on and after the Nth call.\n    _.after = function (times, func) {\n        return function () {\n            if (--times < 1) {\n                return func.apply(this, arguments);\n            }\n        };\n    };\n\n    // Returns a function that will only be executed up to (but not including) the Nth call.\n    _.before = function (times, func) {\n        var memo;\n        return function () {\n            if (--times > 0) {\n                memo = func.apply(this, arguments);\n            }\n            if (times <= 1) func = null;\n            return memo;\n        };\n    };\n\n    // Returns a function that will be executed at most one time, no matter how\n    // often you call it. Useful for lazy initialization.\n    _.once = _.partial(_.before, 2);\n\n    // Object Functions\n    // ----------------\n\n    // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n    var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n    var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n        'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n    function collectNonEnumProps(obj, keys) {\n        var nonEnumIdx = nonEnumerableProps.length;\n        var constructor = obj.constructor;\n        var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n        // Constructor is a special case.\n        var prop = 'constructor';\n        if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n        while (nonEnumIdx--) {\n            prop = nonEnumerableProps[nonEnumIdx];\n            if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n                keys.push(prop);\n            }\n        }\n    }\n\n    // Retrieve the names of an object's own properties.\n    // Delegates to **ECMAScript 5**'s native `Object.keys`\n    _.keys = function (obj) {\n        if (!_.isObject(obj)) return [];\n        if (nativeKeys) return nativeKeys(obj);\n        var keys = [];\n        for (var key in obj) if (_.has(obj, key)) keys.push(key);\n        // Ahem, IE < 9.\n        if (hasEnumBug) collectNonEnumProps(obj, keys);\n        return keys;\n    };\n\n    // Retrieve all the property names of an object.\n    _.allKeys = function (obj) {\n        if (!_.isObject(obj)) return [];\n        var keys = [];\n        for (var key in obj) keys.push(key);\n        // Ahem, IE < 9.\n        if (hasEnumBug) collectNonEnumProps(obj, keys);\n        return keys;\n    };\n\n    // Retrieve the values of an object's properties.\n    _.values = function (obj) {\n        var keys = _.keys(obj);\n        var length = keys.length;\n        var values = Array(length);\n        for (var i = 0; i < length; i++) {\n            values[i] = obj[keys[i]];\n        }\n        return values;\n    };\n\n    // Returns the results of applying the iteratee to each element of the object\n    // In contrast to _.map it returns an object\n    _.mapObject = function (obj, iteratee, context) {\n        iteratee = cb(iteratee, context);\n        var keys = _.keys(obj),\n            length = keys.length,\n            results = {},\n            currentKey;\n        for (var index = 0; index < length; index++) {\n            currentKey = keys[index];\n            results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n        }\n        return results;\n    };\n\n    // Convert an object into a list of `[key, value]` pairs.\n    _.pairs = function (obj) {\n        var keys = _.keys(obj);\n        var length = keys.length;\n        var pairs = Array(length);\n        for (var i = 0; i < length; i++) {\n            pairs[i] = [keys[i], obj[keys[i]]];\n        }\n        return pairs;\n    };\n\n    // Invert the keys and values of an object. The values must be serializable.\n    _.invert = function (obj) {\n        var result = {};\n        var keys = _.keys(obj);\n        for (var i = 0, length = keys.length; i < length; i++) {\n            result[obj[keys[i]]] = keys[i];\n        }\n        return result;\n    };\n\n    // Return a sorted list of the function names available on the object.\n    // Aliased as `methods`\n    _.functions = _.methods = function (obj) {\n        var names = [];\n        for (var key in obj) {\n            if (_.isFunction(obj[key])) names.push(key);\n        }\n        return names.sort();\n    };\n\n    // Extend a given object with all the properties in passed-in object(s).\n    _.extend = createAssigner(_.allKeys);\n\n    // Assigns a given object with all the own properties in the passed-in object(s)\n    // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    _.extendOwn = _.assign = createAssigner(_.keys);\n\n    // Returns the first key on an object that passes a predicate test\n    _.findKey = function (obj, predicate, context) {\n        predicate = cb(predicate, context);\n        var keys = _.keys(obj), key;\n        for (var i = 0, length = keys.length; i < length; i++) {\n            key = keys[i];\n            if (predicate(obj[key], key, obj)) return key;\n        }\n    };\n\n    // Return a copy of the object only containing the whitelisted properties.\n    _.pick = function (object, oiteratee, context) {\n        var result = {}, obj = object, iteratee, keys;\n        if (obj == null) return result;\n        if (_.isFunction(oiteratee)) {\n            keys = _.allKeys(obj);\n            iteratee = optimizeCb(oiteratee, context);\n        } else {\n            keys = flatten(arguments, false, false, 1);\n            iteratee = function (value, key, obj) {\n                return key in obj;\n            };\n            obj = Object(obj);\n        }\n        for (var i = 0, length = keys.length; i < length; i++) {\n            var key = keys[i];\n            var value = obj[key];\n            if (iteratee(value, key, obj)) result[key] = value;\n        }\n        return result;\n    };\n\n    // Return a copy of the object without the blacklisted properties.\n    _.omit = function (obj, iteratee, context) {\n        if (_.isFunction(iteratee)) {\n            iteratee = _.negate(iteratee);\n        } else {\n            var keys = _.map(flatten(arguments, false, false, 1), String);\n            iteratee = function (value, key) {\n                return !_.contains(keys, key);\n            };\n        }\n        return _.pick(obj, iteratee, context);\n    };\n\n    // Fill in a given object with default properties.\n    _.defaults = createAssigner(_.allKeys, true);\n\n    // Creates an object that inherits from the given prototype object.\n    // If additional properties are provided then they will be added to the\n    // created object.\n    _.create = function (prototype, props) {\n        var result = baseCreate(prototype);\n        if (props) _.extendOwn(result, props);\n        return result;\n    };\n\n    // Create a (shallow-cloned) duplicate of an object.\n    _.clone = function (obj) {\n        if (!_.isObject(obj)) return obj;\n        return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n    };\n\n    // Invokes interceptor with the obj, and then returns obj.\n    // The primary purpose of this method is to \"tap into\" a method chain, in\n    // order to perform operations on intermediate results within the chain.\n    _.tap = function (obj, interceptor) {\n        interceptor(obj);\n        return obj;\n    };\n\n    // Returns whether an object has a given set of `key:value` pairs.\n    _.isMatch = function (object, attrs) {\n        var keys = _.keys(attrs), length = keys.length;\n        if (object == null) return !length;\n        var obj = Object(object);\n        for (var i = 0; i < length; i++) {\n            var key = keys[i];\n            if (attrs[key] !== obj[key] || !(key in obj)) return false;\n        }\n        return true;\n    };\n\n\n    // Internal recursive comparison function for `isEqual`.\n    var eq = function (a, b, aStack, bStack) {\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\n        // A strict comparison is necessary because `null == undefined`.\n        if (a == null || b == null) return a === b;\n        // Unwrap any wrapped objects.\n        if (a instanceof _) a = a._wrapped;\n        if (b instanceof _) b = b._wrapped;\n        // Compare `[[Class]]` names.\n        var className = toString.call(a);\n        if (className !== toString.call(b)) return false;\n        switch (className) {\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n            case '[object RegExp]':\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n            case '[object String]':\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n                // equivalent to `new String(\"5\")`.\n                return '' + a === '' + b;\n            case '[object Number]':\n                // `NaN`s are equivalent, but non-reflexive.\n                // Object(NaN) is equivalent to NaN\n                if (+a !== +a) return +b !== +b;\n                // An `egal` comparison is performed for other numeric values.\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n            case '[object Date]':\n            case '[object Boolean]':\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n                // millisecond representations. Note that invalid dates with millisecond representations\n                // of `NaN` are not equivalent.\n                return +a === +b;\n        }\n\n        var areArrays = className === '[object Array]';\n        if (!areArrays) {\n            if (typeof a != 'object' || typeof b != 'object') return false;\n\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n            // from different frames are.\n            var aCtor = a.constructor, bCtor = b.constructor;\n            if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                _.isFunction(bCtor) && bCtor instanceof bCtor)\n                && ('constructor' in a && 'constructor' in b)) {\n                return false;\n            }\n        }\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n        // Initializing stack of traversed objects.\n        // It's done here since we only need them for objects and arrays comparison.\n        aStack = aStack || [];\n        bStack = bStack || [];\n        var length = aStack.length;\n        while (length--) {\n            // Linear search. Performance is inversely proportional to the number of\n            // unique nested structures.\n            if (aStack[length] === a) return bStack[length] === b;\n        }\n\n        // Add the first object to the stack of traversed objects.\n        aStack.push(a);\n        bStack.push(b);\n\n        // Recursively compare objects and arrays.\n        if (areArrays) {\n            // Compare array lengths to determine if a deep comparison is necessary.\n            length = a.length;\n            if (length !== b.length) return false;\n            // Deep compare the contents, ignoring non-numeric properties.\n            while (length--) {\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\n            }\n        } else {\n            // Deep compare objects.\n            var keys = _.keys(a), key;\n            length = keys.length;\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\n            if (_.keys(b).length !== length) return false;\n            while (length--) {\n                // Deep compare each member\n                key = keys[length];\n                if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n            }\n        }\n        // Remove the first object from the stack of traversed objects.\n        aStack.pop();\n        bStack.pop();\n        return true;\n    };\n\n    // Perform a deep comparison to check if two objects are equal.\n    _.isEqual = function (a, b) {\n        return eq(a, b);\n    };\n\n    // Is a given array, string, or object empty?\n    // An \"empty\" object has no enumerable own-properties.\n    _.isEmpty = function (obj) {\n        if (obj == null) return true;\n        if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n        return _.keys(obj).length === 0;\n    };\n\n    // Is a given value a DOM element?\n    _.isElement = function (obj) {\n        return !!(obj && obj.nodeType === 1);\n    };\n\n    // Is a given value an array?\n    // Delegates to ECMA5's native Array.isArray\n    _.isArray = nativeIsArray || function (obj) {\n            return toString.call(obj) === '[object Array]';\n        };\n\n    // Is a given variable an object?\n    _.isObject = function (obj) {\n        var type = typeof obj;\n        return type === 'function' || type === 'object' && !!obj;\n    };\n\n    // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n    _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function (name) {\n        _['is' + name] = function (obj) {\n            return toString.call(obj) === '[object ' + name + ']';\n        };\n    });\n\n    // Define a fallback version of the method in browsers (ahem, IE < 9), where\n    // there isn't any inspectable \"Arguments\" type.\n    if (!_.isArguments(arguments)) {\n        _.isArguments = function (obj) {\n            return _.has(obj, 'callee');\n        };\n    }\n\n    // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n    // IE 11 (#1621), and in Safari 8 (#1929).\n    if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n        _.isFunction = function (obj) {\n            return typeof obj == 'function' || false;\n        };\n    }\n\n    // Is a given object a finite number?\n    _.isFinite = function (obj) {\n        return isFinite(obj) && !isNaN(parseFloat(obj));\n    };\n\n    // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n    _.isNaN = function (obj) {\n        return _.isNumber(obj) && obj !== +obj;\n    };\n\n    // Is a given value a boolean?\n    _.isBoolean = function (obj) {\n        return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n    };\n\n    // Is a given value equal to null?\n    _.isNull = function (obj) {\n        return obj === null;\n    };\n\n    // Is a given variable undefined?\n    _.isUndefined = function (obj) {\n        return obj === void 0;\n    };\n\n    // Shortcut function for checking if an object has a given property directly\n    // on itself (in other words, not on a prototype).\n    _.has = function (obj, key) {\n        return obj != null && hasOwnProperty.call(obj, key);\n    };\n\n    // Utility Functions\n    // -----------------\n\n    // Keep the identity function around for default iteratees.\n    _.identity = function (value) {\n        return value;\n    };\n\n    // Predicate-generating functions. Often useful outside of Underscore.\n    _.constant = function (value) {\n        return function () {\n            return value;\n        };\n    };\n\n    _.noop = function () {\n    };\n\n    _.property = property;\n\n    // Generates a function for a given object that returns a given property.\n    _.propertyOf = function (obj) {\n        return obj == null ? function () {\n        } : function (key) {\n            return obj[key];\n        };\n    };\n\n    // Returns a predicate for checking whether an object has a given set of\n    // `key:value` pairs.\n    _.matcher = _.matches = function (attrs) {\n        attrs = _.extendOwn({}, attrs);\n        return function (obj) {\n            return _.isMatch(obj, attrs);\n        };\n    };\n\n    // Run a function **n** times.\n    _.times = function (n, iteratee, context) {\n        var accum = Array(Math.max(0, n));\n        iteratee = optimizeCb(iteratee, context, 1);\n        for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n        return accum;\n    };\n\n    // Return a random integer between min and max (inclusive).\n    _.random = function (min, max) {\n        if (max == null) {\n            max = min;\n            min = 0;\n        }\n        return min + Math.floor(Math.random() * (max - min + 1));\n    };\n\n    // A (possibly faster) way to get the current timestamp as an integer.\n    _.now = Date.now || function () {\n            return new Date().getTime();\n        };\n\n    // List of HTML entities for escaping.\n    var escapeMap = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '`': '&#x60;'\n    };\n    var unescapeMap = _.invert(escapeMap);\n\n    // Functions for escaping and unescaping strings to/from HTML interpolation.\n    var createEscaper = function (map) {\n        var escaper = function (match) {\n            return map[match];\n        };\n        // Regexes for identifying a key that needs to be escaped\n        var source = '(?:' + _.keys(map).join('|') + ')';\n        var testRegexp = RegExp(source);\n        var replaceRegexp = RegExp(source, 'g');\n        return function (string) {\n            string = string == null ? '' : '' + string;\n            return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n        };\n    };\n    _.escape = createEscaper(escapeMap);\n    _.unescape = createEscaper(unescapeMap);\n\n    // If the value of the named `property` is a function then invoke it with the\n    // `object` as context; otherwise, return it.\n    _.result = function (object, property, fallback) {\n        var value = object == null ? void 0 : object[property];\n        if (value === void 0) {\n            value = fallback;\n        }\n        return _.isFunction(value) ? value.call(object) : value;\n    };\n\n    // Generate a unique integer id (unique within the entire client session).\n    // Useful for temporary DOM ids.\n    var idCounter = 0;\n    _.uniqueId = function (prefix) {\n        var id = ++idCounter + '';\n        return prefix ? prefix + id : id;\n    };\n\n    // By default, Underscore uses ERB-style template delimiters, change the\n    // following template settings to use alternative delimiters.\n    _.templateSettings = {\n        evaluate: /<%([\\s\\S]+?)%>/g,\n        interpolate: /<%=([\\s\\S]+?)%>/g,\n        escape: /<%-([\\s\\S]+?)%>/g\n    };\n\n    // When customizing `templateSettings`, if you don't want to define an\n    // interpolation, evaluation or escaping regex, we need one that is\n    // guaranteed not to match.\n    var noMatch = /(.)^/;\n\n    // Certain characters need to be escaped so that they can be put into a\n    // string literal.\n    var escapes = {\n        \"'\": \"'\",\n        '\\\\': '\\\\',\n        '\\r': 'r',\n        '\\n': 'n',\n        '\\u2028': 'u2028',\n        '\\u2029': 'u2029'\n    };\n\n    var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n    var escapeChar = function (match) {\n        return '\\\\' + escapes[match];\n    };\n\n    // JavaScript micro-templating, similar to John Resig's implementation.\n    // Underscore templating handles arbitrary delimiters, preserves whitespace,\n    // and correctly escapes quotes within interpolated code.\n    // NB: `oldSettings` only exists for backwards compatibility.\n    _.template = function (text, settings, oldSettings) {\n        if (!settings && oldSettings) settings = oldSettings;\n        settings = _.defaults({}, settings, _.templateSettings);\n\n        // Combine delimiters into one regular expression via alternation.\n        var matcher = RegExp([\n                (settings.escape || noMatch).source,\n                (settings.interpolate || noMatch).source,\n                (settings.evaluate || noMatch).source\n            ].join('|') + '|$', 'g');\n\n        // Compile the template source, escaping string literals appropriately.\n        var index = 0;\n        var source = \"__p+='\";\n        text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n            source += text.slice(index, offset).replace(escaper, escapeChar);\n            index = offset + match.length;\n\n            if (escape) {\n                source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n            } else if (interpolate) {\n                source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n            } else if (evaluate) {\n                source += \"';\\n\" + evaluate + \"\\n__p+='\";\n            }\n\n            // Adobe VMs need the match returned to produce the correct offest.\n            return match;\n        });\n        source += \"';\\n\";\n\n        // If a variable is not specified, place data values in local scope.\n        if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n        source = \"var __t,__p='',__j=Array.prototype.join,\" +\n            \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n            source + 'return __p;\\n';\n\n        try {\n            var render = new Function(settings.variable || 'obj', '_', source);\n        } catch (e) {\n            e.source = source;\n            throw e;\n        }\n\n        var template = function (data) {\n            return render.call(this, data, _);\n        };\n\n        // Provide the compiled source as a convenience for precompilation.\n        var argument = settings.variable || 'obj';\n        template.source = 'function(' + argument + '){\\n' + source + '}';\n\n        return template;\n    };\n\n    // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n    _.chain = function (obj) {\n        var instance = _(obj);\n        instance._chain = true;\n        return instance;\n    };\n\n    // OOP\n    // ---------------\n    // If Underscore is called as a function, it returns a wrapped object that\n    // can be used OO-style. This wrapper holds altered versions of all the\n    // underscore functions. Wrapped objects may be chained.\n\n    // Helper function to continue chaining intermediate results.\n    var result = function (instance, obj) {\n        return instance._chain ? _(obj).chain() : obj;\n    };\n\n    // Add your own custom functions to the Underscore object.\n    _.mixin = function (obj) {\n        _.each(_.functions(obj), function (name) {\n            var func = _[name] = obj[name];\n            _.prototype[name] = function () {\n                var args = [this._wrapped];\n                push.apply(args, arguments);\n                return result(this, func.apply(_, args));\n            };\n        });\n    };\n\n    // Add all of the Underscore functions to the wrapper object.\n    _.mixin(_);\n\n    // Add all mutator Array functions to the wrapper.\n    _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n        var method = ArrayProto[name];\n        _.prototype[name] = function () {\n            var obj = this._wrapped;\n            method.apply(obj, arguments);\n            if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n            return result(this, obj);\n        };\n    });\n\n    // Add all accessor Array functions to the wrapper.\n    _.each(['concat', 'join', 'slice'], function (name) {\n        var method = ArrayProto[name];\n        _.prototype[name] = function () {\n            return result(this, method.apply(this._wrapped, arguments));\n        };\n    });\n\n    // Extracts the result from a wrapped and chained object.\n    _.prototype.value = function () {\n        return this._wrapped;\n    };\n\n    // Provide unwrapping proxy for some methods used in engine operations\n    // such as arithmetic and JSON stringification.\n    _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n    _.prototype.toString = function () {\n        return '' + this._wrapped;\n    };\n\n\n}());\n\n/**\n * @fileoverview Zlib namespace. Zlib の仕様に準拠した圧縮は Zlib.Deflate で実装\n * されている. これは Inflate との共存を考慮している為.\n */\n\nvar USE_TYPEDARRAY = true;\n\nvar Zlib = {\n  Huffman: {},\n  Util: {},\n  CRC32: {}\n};\n\n\n/**\n * Compression Method\n * @enum {number}\n */\nZlib.CompressionMethod = {\n  DEFLATE: 8,\n  RESERVED: 15\n};\n\n\n\n\n/**\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Zip = function(opt_params) {\n  opt_params = opt_params || {};\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  this.files = [];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment = opt_params['comment'];\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password;\n};\n\n\n/**\n * @enum {number}\n */\nZlib.Zip.CompressionMethod = {\n  STORE: 0,\n  DEFLATE: 8\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.OperatingSystem = {\n  MSDOS: 0,\n  UNIX: 3,\n  MACINTOSH: 7\n};\n\n/**\n * @enum {number}\n */\nZlib.Zip.Flags = {\n  ENCRYPT:    0x0001,\n  DESCRIPTOR: 0x0008,\n  UTF8:       0x0800\n};\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.FileHeaderSignature = [0x50, 0x4b, 0x01, 0x02];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.LocalFileHeaderSignature = [0x50, 0x4b, 0x03, 0x04];\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Zip.CentralDirectorySignature = [0x50, 0x4b, 0x05, 0x06];\n\n/**\n * @param {Array.<number>|Uint8Array} input\n * @param {Object=} opt_params options.\n */\nZlib.Zip.prototype.addFile = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {string} */\n  var filename = '' || opt_params['filename'];\n  /** @type {boolean} */\n  var compressed;\n  /** @type {number} */\n  var size = input.length;\n  /** @type {number} */\n  var crc32 = 0;\n\n  if (USE_TYPEDARRAY && input instanceof Array) {\n    input = new Uint8Array(input);\n  }\n\n  // default\n  if (typeof opt_params['compressionMethod'] !== 'number') {\n    opt_params['compressionMethod'] = Zlib.Zip.CompressionMethod.DEFLATE;\n  }\n\n  // その場で圧縮する場合\n  if (opt_params['compress']) {\n    switch (opt_params['compressionMethod']) {\n      case Zlib.Zip.CompressionMethod.STORE:\n        break;\n      case Zlib.Zip.CompressionMethod.DEFLATE:\n        crc32 = Zlib.CRC32.calc(input);\n        input = this.deflateWithOption(input, opt_params);\n        compressed = true;\n        break;\n      default:\n        throw new Error('unknown compression method:' + opt_params['compressionMethod']);\n    }\n  }\n\n  this.files.push({\n    buffer: input,\n    option: opt_params,\n    compressed: compressed,\n    encrypted: false,\n    size: size,\n    crc32: crc32\n  });\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Zip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\nZlib.Zip.prototype.compress = function() {\n  /** @type {Array.<{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }>} */\n  var files = this.files;\n  /** @type {{\n   *   buffer: !(Array.<number>|Uint8Array),\n   *   option: Object,\n   *   compressed: boolean,\n   *   encrypted: boolean,\n   *   size: number,\n   *   crc32: number\n   * }} */\n  var file;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var op1;\n  /** @type {number} */\n  var op2;\n  /** @type {number} */\n  var op3;\n  /** @type {number} */\n  var localFileSize = 0;\n  /** @type {number} */\n  var centralDirectorySize = 0;\n  /** @type {number} */\n  var endOfCentralDirectorySize;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var needVersion;\n  /** @type {number} */\n  var flags;\n  /** @type {Zlib.Zip.CompressionMethod} */\n  var compressionMethod;\n  /** @type {Date} */\n  var date;\n  /** @type {number} */\n  var crc32;\n  /** @type {number} */\n  var size;\n  /** @type {number} */\n  var plainSize;\n  /** @type {number} */\n  var filenameLength;\n  /** @type {number} */\n  var extraFieldLength;\n  /** @type {number} */\n  var commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var filename;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var extraField;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var comment;\n  /** @type {(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {*} */\n  var tmp;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var jl;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n      (file.option['filename']) ? file.option['filename'].length : 0;\n    extraFieldLength =\n      (file.option['extraField']) ? file.option['extraField'].length : 0;\n    commentLength =\n      (file.option['comment']) ? file.option['comment'].length : 0;\n\n    // 圧縮されていなかったら圧縮\n    if (!file.compressed) {\n      // 圧縮前に CRC32 の計算をしておく\n      file.crc32 = Zlib.CRC32.calc(file.buffer);\n\n      switch (file.option['compressionMethod']) {\n        case Zlib.Zip.CompressionMethod.STORE:\n          break;\n        case Zlib.Zip.CompressionMethod.DEFLATE:\n          file.buffer = this.deflateWithOption(file.buffer, file.option);\n          file.compressed = true;\n          break;\n        default:\n          throw new Error('unknown compression method:' + file.option['compressionMethod']);\n      }\n    }\n\n    // encryption\n    if (file.option['password'] !== void 0|| this.password !== void 0) {\n      // init encryption\n      key = this.createEncryptionKey(file.option['password'] || this.password);\n\n      // add header\n      buffer = file.buffer;\n      if (USE_TYPEDARRAY) {\n        tmp = new Uint8Array(buffer.length + 12);\n        tmp.set(buffer, 12);\n        buffer = tmp;\n      } else {\n        buffer.unshift(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n      }\n\n      for (j = 0; j < 12; ++j) {\n        buffer[j] = this.encode(\n          key,\n          i === 11 ? (file.crc32 & 0xff) : (Math.random() * 256 | 0)\n        );\n      }\n\n      // data encryption\n      for (jl = buffer.length; j < jl; ++j) {\n        buffer[j] = this.encode(key, buffer[j]);\n      }\n      file.buffer = buffer;\n    }\n\n    // 必要バッファサイズの計算\n    localFileSize +=\n      // local file header\n      30 + filenameLength +\n      // file data\n      file.buffer.length;\n\n    centralDirectorySize +=\n      // file header\n      46 + filenameLength + commentLength;\n  }\n\n  // end of central directory\n  endOfCentralDirectorySize = 22 + (this.comment ? this.comment.length : 0);\n  output = new (USE_TYPEDARRAY ? Uint8Array : Array)(\n    localFileSize + centralDirectorySize + endOfCentralDirectorySize\n  );\n  op1 = 0;\n  op2 = localFileSize;\n  op3 = op2 + centralDirectorySize;\n\n  // ファイルの圧縮\n  for (i = 0, il = files.length; i < il; ++i) {\n    file = files[i];\n    filenameLength =\n      file.option['filename'] ? file.option['filename'].length :  0;\n    extraFieldLength = 0; // TODO\n    commentLength =\n      file.option['comment'] ? file.option['comment'].length : 0;\n\n    //-------------------------------------------------------------------------\n    // local file header & file header\n    //-------------------------------------------------------------------------\n\n    offset = op1;\n\n    // signature\n    // local file header\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[0];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[1];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[2];\n    output[op1++] = Zlib.Zip.LocalFileHeaderSignature[3];\n    // file header\n    output[op2++] = Zlib.Zip.FileHeaderSignature[0];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[1];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[2];\n    output[op2++] = Zlib.Zip.FileHeaderSignature[3];\n\n    // compressor info\n    needVersion = 20;\n    output[op2++] = needVersion & 0xff;\n    output[op2++] =\n      /** @type {Zlib.Zip.OperatingSystem} */\n      (file.option['os']) ||\n      Zlib.Zip.OperatingSystem.MSDOS;\n\n    // need version\n    output[op1++] = output[op2++] =  needVersion       & 0xff;\n    output[op1++] = output[op2++] = (needVersion >> 8) & 0xff;\n\n    // general purpose bit flag\n    flags = 0;\n    if (file.option['password'] || this.password) {\n      flags |= Zlib.Zip.Flags.ENCRYPT;\n    }\n    output[op1++] = output[op2++] =  flags       & 0xff;\n    output[op1++] = output[op2++] = (flags >> 8) & 0xff;\n\n    // compression method\n    compressionMethod =\n      /** @type {Zlib.Zip.CompressionMethod} */\n      (file.option['compressionMethod']);\n    output[op1++] = output[op2++] =  compressionMethod       & 0xff;\n    output[op1++] = output[op2++] = (compressionMethod >> 8) & 0xff;\n\n    // date\n    date = /** @type {(Date|undefined)} */(file.option['date']) || new Date();\n    output[op1++] = output[op2++] =\n      ((date.getMinutes() & 0x7) << 5) |\n      (date.getSeconds() / 2 | 0);\n    output[op1++] = output[op2++] =\n      (date.getHours()   << 3) |\n      (date.getMinutes() >> 3);\n    //\n    output[op1++] = output[op2++] =\n      ((date.getMonth() + 1 & 0x7) << 5) |\n      (date.getDate());\n    output[op1++] = output[op2++] =\n      ((date.getFullYear() - 1980 & 0x7f) << 1) |\n      (date.getMonth() + 1 >> 3);\n\n    // CRC-32\n    crc32 = file.crc32;\n    output[op1++] = output[op2++] =  crc32        & 0xff;\n    output[op1++] = output[op2++] = (crc32 >>  8) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 16) & 0xff;\n    output[op1++] = output[op2++] = (crc32 >> 24) & 0xff;\n\n    // compressed size\n    size = file.buffer.length;\n    output[op1++] = output[op2++] =  size        & 0xff;\n    output[op1++] = output[op2++] = (size >>  8) & 0xff;\n    output[op1++] = output[op2++] = (size >> 16) & 0xff;\n    output[op1++] = output[op2++] = (size >> 24) & 0xff;\n\n    // uncompressed size\n    plainSize = file.size;\n    output[op1++] = output[op2++] =  plainSize        & 0xff;\n    output[op1++] = output[op2++] = (plainSize >>  8) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 16) & 0xff;\n    output[op1++] = output[op2++] = (plainSize >> 24) & 0xff;\n\n    // filename length\n    output[op1++] = output[op2++] =  filenameLength       & 0xff;\n    output[op1++] = output[op2++] = (filenameLength >> 8) & 0xff;\n\n    // extra field length\n    output[op1++] = output[op2++] =  extraFieldLength       & 0xff;\n    output[op1++] = output[op2++] = (extraFieldLength >> 8) & 0xff;\n\n    // file comment length\n    output[op2++] =  commentLength       & 0xff;\n    output[op2++] = (commentLength >> 8) & 0xff;\n\n    // disk number start\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // internal file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // external file attributes\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n    output[op2++] = 0;\n\n    // relative offset of local header\n    output[op2++] =  offset        & 0xff;\n    output[op2++] = (offset >>  8) & 0xff;\n    output[op2++] = (offset >> 16) & 0xff;\n    output[op2++] = (offset >> 24) & 0xff;\n\n    // filename\n    filename = file.option['filename'];\n    if (filename) {\n      if (USE_TYPEDARRAY) {\n        output.set(filename, op1);\n        output.set(filename, op2);\n        op1 += filenameLength;\n        op2 += filenameLength;\n      } else {\n        for (j = 0; j < filenameLength; ++j) {\n          output[op1++] = output[op2++] = filename[j];\n        }\n      }\n    }\n\n    // extra field\n    extraField = file.option['extraField'];\n    if (extraField) {\n      if (USE_TYPEDARRAY) {\n        output.set(extraField, op1);\n        output.set(extraField, op2);\n        op1 += extraFieldLength;\n        op2 += extraFieldLength;\n      } else {\n        for (j = 0; j < commentLength; ++j) {\n          output[op1++] = output[op2++] = extraField[j];\n        }\n      }\n    }\n\n    // comment\n    comment = file.option['comment'];\n    if (comment) {\n      if (USE_TYPEDARRAY) {\n        output.set(comment, op2);\n        op2 += commentLength;\n      } else {\n        for (j = 0; j < commentLength; ++j) {\n          output[op2++] = comment[j];\n        }\n      }\n    }\n\n    //-------------------------------------------------------------------------\n    // file data\n    //-------------------------------------------------------------------------\n\n    if (USE_TYPEDARRAY) {\n      output.set(file.buffer, op1);\n      op1 += file.buffer.length;\n    } else {\n      for (j = 0, jl = file.buffer.length; j < jl; ++j) {\n        output[op1++] = file.buffer[j];\n      }\n    }\n  }\n\n  //-------------------------------------------------------------------------\n  // end of central directory\n  //-------------------------------------------------------------------------\n\n  // signature\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[0];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[1];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[2];\n  output[op3++] = Zlib.Zip.CentralDirectorySignature[3];\n\n  // number of this disk\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // number of the disk with the start of the central directory\n  output[op3++] = 0;\n  output[op3++] = 0;\n\n  // total number of entries in the central directory on this disk\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // total number of entries in the central directory\n  output[op3++] =  il       & 0xff;\n  output[op3++] = (il >> 8) & 0xff;\n\n  // size of the central directory\n  output[op3++] =  centralDirectorySize        & 0xff;\n  output[op3++] = (centralDirectorySize >>  8) & 0xff;\n  output[op3++] = (centralDirectorySize >> 16) & 0xff;\n  output[op3++] = (centralDirectorySize >> 24) & 0xff;\n\n  // offset of start of central directory with respect to the starting disk number\n  output[op3++] =  localFileSize        & 0xff;\n  output[op3++] = (localFileSize >>  8) & 0xff;\n  output[op3++] = (localFileSize >> 16) & 0xff;\n  output[op3++] = (localFileSize >> 24) & 0xff;\n\n  // .ZIP file comment length\n  commentLength = this.comment ? this.comment.length : 0;\n  output[op3++] =  commentLength       & 0xff;\n  output[op3++] = (commentLength >> 8) & 0xff;\n\n  // .ZIP file comment\n  if (this.comment) {\n    if (USE_TYPEDARRAY) {\n      output.set(this.comment, op3);\n      op3 += commentLength;\n    } else {\n      for (j = 0, jl = commentLength; j < jl; ++j) {\n        output[op3++] = this.comment[j];\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input\n * @param {Object=} opt_params options.\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Zip.prototype.deflateWithOption = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate} */\n  var deflator = new Zlib.RawDeflate(input, opt_params['deflateOption']);\n\n  return deflator.compress();\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @return {number}\n */\nZlib.Zip.prototype.getByte = function(key) {\n  /** @type {number} */\n  var tmp = ((key[2] & 0xffff) | 2);\n\n  return ((tmp * (tmp ^ 1)) >> 8) & 0xff;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Zip.prototype.encode = function(key, n) {\n  /** @type {number} */\n  var tmp = this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return tmp ^ n;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array)} key\n * @param {number} n\n */\nZlib.Zip.prototype.updateKeys = function(key, n) {\n  key[0] = Zlib.CRC32.single(key[0], n);\n  key[1] =\n    (((((key[1] + (key[0] & 0xff)) * 20173 >>> 0) * 6681) >>> 0) + 1) >>> 0;\n  key[2] = Zlib.CRC32.single(key[2], key[1] >>> 24);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n * @return {!(Array.<number>|Uint32Array|Object)}\n */\nZlib.Zip.prototype.createEncryptionKey = function(password) {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var key = [305419896, 591751049, 878082192];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (USE_TYPEDARRAY) {\n    key = new Uint32Array(key);\n  }\n\n  for (i = 0, il = password.length; i < il; ++i) {\n    this.updateKeys(key, password[i] & 0xff);\n  }\n\n  return key;\n};\n\n\n\n/**\n * build huffman table from length list.\n * @param {!(Array.<number>|Uint8Array)} lengths length list.\n * @return {!Array} huffman table.\n */\nZlib.Huffman.buildHuffmanTable = function(lengths) {\n  /** @type {number} length list size. */\n  var listSize = lengths.length;\n  /** @type {number} max code length for table size. */\n  var maxCodeLength = 0;\n  /** @type {number} min code length for table size. */\n  var minCodeLength = Number.POSITIVE_INFINITY;\n  /** @type {number} table size. */\n  var size;\n  /** @type {!(Array|Uint8Array)} huffman code table. */\n  var table;\n  /** @type {number} bit length. */\n  var bitLength;\n  /** @type {number} huffman code. */\n  var code;\n  /**\n   * サイズが 2^maxlength 個のテーブルを埋めるためのスキップ長.\n   * @type {number} skip length for table filling.\n   */\n  var skip;\n  /** @type {number} reversed code. */\n  var reversed;\n  /** @type {number} reverse temp. */\n  var rtemp;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} table value. */\n  var value;\n\n  // Math.max は遅いので最長の値は for-loop で取得する\n  for (i = 0, il = listSize; i < il; ++i) {\n    if (lengths[i] > maxCodeLength) {\n      maxCodeLength = lengths[i];\n    }\n    if (lengths[i] < minCodeLength) {\n      minCodeLength = lengths[i];\n    }\n  }\n\n  size = 1 << maxCodeLength;\n  table = new (USE_TYPEDARRAY ? Uint32Array : Array)(size);\n\n  // ビット長の短い順からハフマン符号を割り当てる\n  for (bitLength = 1, code = 0, skip = 2; bitLength <= maxCodeLength;) {\n    for (i = 0; i < listSize; ++i) {\n      if (lengths[i] === bitLength) {\n        // ビットオーダーが逆になるためビット長分並びを反転する\n        for (reversed = 0, rtemp = code, j = 0; j < bitLength; ++j) {\n          reversed = (reversed << 1) | (rtemp & 1);\n          rtemp >>= 1;\n        }\n\n        // 最大ビット長をもとにテーブルを作るため、\n        // 最大ビット長以外では 0 / 1 どちらでも良い箇所ができる\n        // そのどちらでも良い場所は同じ値で埋めることで\n        // 本来のビット長以上のビット数取得しても問題が起こらないようにする\n        value = (bitLength << 16) | i;\n        for (j = reversed; j < size; j += skip) {\n          table[j] = value;\n        }\n\n        ++code;\n      }\n    }\n\n    // 次のビット長へ\n    ++bitLength;\n    code <<= 1;\n    skip <<= 1;\n  }\n\n  return [table, maxCodeLength, minCodeLength];\n};\n\n\n\n\n//-----------------------------------------------------------------------------\n\n/** @define {number} buffer block size. */\nvar ZLIB_RAW_INFLATE_BUFFER_SIZE = 0x8000; // [ 0x8000 >= ZLIB_BUFFER_BLOCK_SIZE ]\n\n//-----------------------------------------------------------------------------\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {Object} opt_params option parameter.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - bufferType: Zlib.RawInflate.BufferType の値によってバッファの管理方法を指定する.\n *   - resize: 確保したバッファが実際の大きさより大きかった場合に切り詰める.\n */\nZlib.RawInflate = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} inflated buffer */\n  this.buffer;\n  /** @type {!Array.<(Array.<number>|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize = ZLIB_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = USE_TYPEDARRAY ? new Uint8Array(input) : input;\n  /** @type {!(Uint8Array|Array.<number>)} output buffer. */\n  this.output;\n  /** @type {!number} output buffer pointer. */\n  this.op;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {Zlib.RawInflate.BufferType} buffer management. */\n  this.bufferType = Zlib.RawInflate.BufferType.ADAPTIVE;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['bufferSize']) {\n      this.bufferSize = opt_params['bufferSize'];\n    }\n    if (opt_params['bufferType']) {\n      this.bufferType = opt_params['bufferType'];\n    }\n    if (opt_params['resize']) {\n      this.resize = opt_params['resize'];\n    }\n  }\n\n  // initialize\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.op = Zlib.RawInflate.MaxBackwardLength;\n      this.output =\n        new (USE_TYPEDARRAY ? Uint8Array : Array)(\n          Zlib.RawInflate.MaxBackwardLength +\n          this.bufferSize +\n          Zlib.RawInflate.MaxCopyLength\n        );\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.op = 0;\n      this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(this.bufferSize);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflate.BufferType = {\n  BLOCK: 0,\n  ADAPTIVE: 1\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array.<number>)} inflated buffer.\n */\nZlib.RawInflate.prototype.decompress = function() {\n  while (!this.bfinal) {\n    this.parseBlock();\n  }\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      return this.concatBufferBlock();\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      return this.concatBufferDynamic();\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflate.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflate.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.Order = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.LengthCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.LengthExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflate.DistCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflate.DistExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n      (i <= 143) ? 8 :\n      (i <= 255) ? 9 :\n      (i <= 279) ? 7 :\n      8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflate.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflate.prototype.parseBlock = function() {\n  /** @type {number} header */\n  var hdr = this.readBits(3);\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    // uncompressed\n    case 0:\n      this.parseUncompressedBlock();\n      break;\n    // fixed huffman\n    case 1:\n      this.parseFixedHuffmanBlock();\n      break;\n    // dynamic huffman\n    case 2:\n      this.parseDynamicHuffmanBlock();\n      break;\n    // reserved or other\n    default:\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflate.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // input byte\n  if (ip + ((length - bitsbuflen + 7) >> 3) >= inputLength) {\n    throw new Error('input buffer is broken');\n  }\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {!(Array.<number>|Uint8Array|Uint16Array)} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflate.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {!(Array.<number>|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (ip >= inputLength) {\n      break;\n    }\n    bitsbuf |= input[ip++] << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflate.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} */\n  var inputLength = input.length;\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n  /** @type {number} output buffer length */\n  var olength = output.length;\n  /** @type {number} copy counter */\n  var preCopy;\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  // len\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: LEN');\n  }\n  len = input[ip++] | (input[ip++] << 8);\n\n  // nlen\n  if (ip + 1 >= inputLength) {\n    throw new Error('invalid uncompressed block header: NLEN');\n  }\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // check size\n  if (ip + len > input.length) { throw new Error('input buffer is broken'); }\n\n  // expand buffer\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.BLOCK:\n      // pre copy\n      while (op + len > output.length) {\n        preCopy = olength - op;\n        len -= preCopy;\n        if (USE_TYPEDARRAY) {\n          output.set(input.subarray(ip, ip + preCopy), op);\n          op += preCopy;\n          ip += preCopy;\n        } else {\n          while (preCopy--) {\n            output[op++] = input[ip++];\n          }\n        }\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      break;\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      while (op + len > output.length) {\n        output = this.expandBufferAdaptive({fixRatio: 2});\n      }\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n\n  // copy\n  if (USE_TYPEDARRAY) {\n    output.set(input.subarray(ip, ip + len), op);\n    op += len;\n    ip += len;\n  } else {\n    while (len--) {\n      output[op++] = input[ip++];\n    }\n  }\n\n  this.ip = ip;\n  this.op = op;\n  this.output = output;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflate.prototype.parseFixedHuffmanBlock = function() {\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(\n        Zlib.RawInflate.FixedLiteralLengthTable,\n        Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(\n        Zlib.RawInflate.FixedLiteralLengthTable,\n        Zlib.RawInflate.FixedDistanceTable\n      );\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflate.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit = this.readBits(5) + 257;\n  /** @type {number} number of distance codes. */\n  var hdist = this.readBits(5) + 1;\n  /** @type {number} number of code lengths. */\n  var hclen = this.readBits(4) + 4;\n  /** @type {!(Uint8Array|Array.<number>)} code lengths. */\n  var codeLengths =\n    new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.RawInflate.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint8Array|Array.<number>)} literal and length code table. */\n  var litlenTable;\n  /** @type {!(Uint8Array|Array.<number>)} distance code table. */\n  var distTable;\n  /** @type {!(Uint8Array|Array.<number>)} code length table. */\n  var lengthTable;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var prev;\n  /** @type {number} */\n  var repeat;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limit. */\n  var il;\n\n  // decode code lengths\n  for (i = 0; i < hclen; ++i) {\n    codeLengths[Zlib.RawInflate.Order[i]] = this.readBits(3);\n  }\n  if (!USE_TYPEDARRAY) {\n    for (i = hclen, hclen = codeLengths.length; i < hclen; ++i) {\n      codeLengths[Zlib.RawInflate.Order[i]] = 0;\n    }\n  }\n\n  // decode length table\n  codeLengthsTable = buildHuffmanTable(codeLengths);\n  lengthTable = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit + hdist);\n  for (i = 0, il = hlit + hdist; i < il;) {\n    code = this.readCodeByTable(codeLengthsTable);\n    switch (code) {\n      case 16:\n        repeat = 3 + this.readBits(2);\n        while (repeat--) { lengthTable[i++] = prev; }\n        break;\n      case 17:\n        repeat = 3 + this.readBits(3);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      case 18:\n        repeat = 11 + this.readBits(7);\n        while (repeat--) { lengthTable[i++] = 0; }\n        prev = 0;\n        break;\n      default:\n        lengthTable[i++] = code;\n        prev = code;\n        break;\n    }\n  }\n\n  litlenTable = USE_TYPEDARRAY\n    ? buildHuffmanTable(lengthTable.subarray(0, hlit))\n    : buildHuffmanTable(lengthTable.slice(0, hlit));\n  distTable = USE_TYPEDARRAY\n    ? buildHuffmanTable(lengthTable.subarray(hlit))\n    : buildHuffmanTable(lengthTable.slice(hlit));\n\n  switch (this.bufferType) {\n    case Zlib.RawInflate.BufferType.ADAPTIVE:\n      this.decodeHuffmanAdaptive(litlenTable, distTable);\n      break;\n    case Zlib.RawInflate.BufferType.BLOCK:\n      this.decodeHuffmanBlock(litlenTable, distTable);\n      break;\n    default:\n      throw new Error('invalid inflate mode');\n  }\n};\n\n/**\n * decode huffman code\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanBlock = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length - Zlib.RawInflate.MaxCopyLength;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        this.op = op;\n        output = this.expandBufferBlock();\n        op = this.op;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op >= olength) {\n      this.op = op;\n      output = this.expandBufferBlock();\n      op = this.op;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * decode huffman code (adaptive)\n * @param {!(Array.<number>|Uint16Array)} litlen literal and length code table.\n * @param {!(Array.<number>|Uint8Array)} dist distination code table.\n */\nZlib.RawInflate.prototype.decodeHuffmanAdaptive = function(litlen, dist) {\n  var output = this.output;\n  var op = this.op;\n\n  this.currentLitlenTable = litlen;\n\n  /** @type {number} output position limit. */\n  var olength = output.length;\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var lengthCodeTable = Zlib.RawInflate.LengthCodeTable;\n  var lengthExtraTable = Zlib.RawInflate.LengthExtraTable;\n  var distCodeTable = Zlib.RawInflate.DistCodeTable;\n  var distExtraTable = Zlib.RawInflate.DistExtraTable;\n\n  while ((code = this.readCodeByTable(litlen)) !== 256) {\n    // literal\n    if (code < 256) {\n      if (op >= olength) {\n        output = this.expandBufferAdaptive();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = lengthCodeTable[ti];\n    if (lengthExtraTable[ti] > 0) {\n      codeLength += this.readBits(lengthExtraTable[ti]);\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    codeDist = distCodeTable[code];\n    if (distExtraTable[code] > 0) {\n      codeDist += this.readBits(distExtraTable[code]);\n    }\n\n    // lz77 decode\n    if (op + codeLength > olength) {\n      output = this.expandBufferAdaptive();\n      olength = output.length;\n    }\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n  this.op = op;\n};\n\n/**\n * expand output buffer.\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.expandBufferBlock = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer =\n    new (USE_TYPEDARRAY ? Uint8Array : Array)(\n        this.op - Zlib.RawInflate.MaxBackwardLength\n    );\n  /** @type {number} backward base point */\n  var backward = this.op - Zlib.RawInflate.MaxBackwardLength;\n  /** @type {number} copy index. */\n  var i;\n  /** @type {number} copy limit */\n  var il;\n\n  var output = this.output;\n\n  // copy to output buffer\n  if (USE_TYPEDARRAY) {\n    buffer.set(output.subarray(Zlib.RawInflate.MaxBackwardLength, buffer.length));\n  } else {\n    for (i = 0, il = buffer.length; i < il; ++i) {\n      buffer[i] = output[i + Zlib.RawInflate.MaxBackwardLength];\n    }\n  }\n\n  this.blocks.push(buffer);\n  this.totalpos += buffer.length;\n\n  // copy to backward buffer\n  if (USE_TYPEDARRAY) {\n    output.set(\n      output.subarray(backward, backward + Zlib.RawInflate.MaxBackwardLength)\n    );\n  } else {\n    for (i = 0; i < Zlib.RawInflate.MaxBackwardLength; ++i) {\n      output[i] = output[backward + i];\n    }\n  }\n\n  this.op = Zlib.RawInflate.MaxBackwardLength;\n\n  return output;\n};\n\n/**\n * expand output buffer. (adaptive)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array.<number>|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflate.prototype.expandBufferAdaptive = function(opt_param) {\n  /** @type {!(Array.<number>|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n      (input.length - this.ip) / this.currentLitlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n      output.length + maxInflateSize :\n      output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  if (USE_TYPEDARRAY) {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  } else {\n    buffer = output;\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer.\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferBlock = function() {\n  /** @type {number} buffer pointer. */\n  var pos = 0;\n  /** @type {number} buffer pointer. */\n  var limit = this.totalpos + (this.op - Zlib.RawInflate.MaxBackwardLength);\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var output = this.output;\n  /** @type {!Array} blocks array. */\n  var blocks = this.blocks;\n  /** @type {!(Array.<number>|Uint8Array)} output block array. */\n  var block;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  var buffer = new (USE_TYPEDARRAY ? Uint8Array : Array)(limit);\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {number} loop counter. */\n  var j;\n  /** @type {number} loop limiter. */\n  var jl;\n\n  // single buffer\n  if (blocks.length === 0) {\n    return USE_TYPEDARRAY ?\n      this.output.subarray(Zlib.RawInflate.MaxBackwardLength, this.op) :\n      this.output.slice(Zlib.RawInflate.MaxBackwardLength, this.op);\n  }\n\n  // copy to buffer\n  for (i = 0, il = blocks.length; i < il; ++i) {\n    block = blocks[i];\n    for (j = 0, jl = block.length; j < jl; ++j) {\n      buffer[pos++] = block[j];\n    }\n  }\n\n  // current buffer\n  for (i = Zlib.RawInflate.MaxBackwardLength, il = this.op; i < il; ++i) {\n    buffer[pos++] = output[i];\n  }\n\n  this.blocks = [];\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array.<number>|Uint8Array)} output buffer.\n */\nZlib.RawInflate.prototype.concatBufferDynamic = function() {\n  /** @type {Array.<number>|Uint8Array} output buffer. */\n  var buffer;\n  var op = this.op;\n\n  if (USE_TYPEDARRAY) {\n    if (this.resize) {\n      buffer = new Uint8Array(op);\n      buffer.set(this.output.subarray(0, op));\n    } else {\n      buffer = this.output.subarray(0, op);\n    }\n  } else {\n    if (this.output.length > op) {\n      this.output.length = op;\n    }\n    buffer = this.output;\n  }\n\n  this.buffer = buffer;\n\n  return this.buffer;\n};\n\n\n\n\nvar buildHuffmanTable = Zlib.Huffman.buildHuffmanTable;\n\n/**\n * @param {!(Uint8Array|Array.<number>)} input input buffer.\n * @param {number} ip input buffer pointer.\n * @param {number=} opt_buffersize buffer block size.\n * @constructor\n */\nZlib.RawInflateStream = function(input, ip, opt_buffersize) {\n  /** @type {!Array.<(Array|Uint8Array)>} */\n  this.blocks = [];\n  /** @type {number} block size. */\n  this.bufferSize =\n    opt_buffersize ? opt_buffersize : ZLIB_STREAM_RAW_INFLATE_BUFFER_SIZE;\n  /** @type {!number} total output buffer pointer. */\n  this.totalpos = 0;\n  /** @type {!number} input buffer pointer. */\n  this.ip = ip === void 0 ? 0 : ip;\n  /** @type {!number} bit stream reader buffer. */\n  this.bitsbuf = 0;\n  /** @type {!number} bit stream reader buffer size. */\n  this.bitsbuflen = 0;\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  this.input = USE_TYPEDARRAY ? new Uint8Array(input) : input;\n  /** @type {!(Uint8Array|Array)} output buffer. */\n  this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(this.bufferSize);\n  /** @type {!number} output buffer pointer. */\n  this.op = 0;\n  /** @type {boolean} is final block flag. */\n  this.bfinal = false;\n  /** @type {number} uncompressed block length. */\n  this.blockLength;\n  /** @type {boolean} resize flag for memory size optimization. */\n  this.resize = false;\n  /** @type {Array} */\n  this.litlenTable;\n  /** @type {Array} */\n  this.distTable;\n  /** @type {number} */\n  this.sp = 0; // stream pointer\n  /** @type {Zlib.RawInflateStream.Status} */\n  this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n\n  //\n  // backup\n  //\n  /** @type {!number} */\n  this.ip_;\n  /** @type {!number} */\n  this.bitsbuflen_;\n  /** @type {!number} */\n  this.bitsbuf_;\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.BlockType = {\n  UNCOMPRESSED: 0,\n  FIXED: 1,\n  DYNAMIC: 2\n};\n\n/**\n * @enum {number}\n */\nZlib.RawInflateStream.Status = {\n  INITIALIZED: 0,\n  BLOCK_HEADER_START: 1,\n  BLOCK_HEADER_END: 2,\n  BLOCK_BODY_START: 3,\n  BLOCK_BODY_END: 4,\n  DECODE_BLOCK_START: 5,\n  DECODE_BLOCK_END: 6\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.RawInflateStream.prototype.decompress = function(newInput, ip) {\n  /** @type {boolean} */\n  var stop = false;\n\n  if (newInput !== void 0) {\n    this.input = newInput;\n  }\n\n  if (ip !== void 0) {\n    this.ip = ip;\n  }\n\n  // decompress\n  while (!stop) {\n    switch (this.status) {\n      // block header\n      case Zlib.RawInflateStream.Status.INITIALIZED:\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_START:\n        if (this.readBlockHeader() < 0) {\n          stop = true;\n        }\n        break;\n      // block body\n      case Zlib.RawInflateStream.Status.BLOCK_HEADER_END: /* FALLTHROUGH */\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.readUncompressedBlockHeader() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED:\n            if (this.parseFixedHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.parseDynamicHuffmanBlock() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      // decode data\n      case Zlib.RawInflateStream.Status.BLOCK_BODY_END:\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_START:\n        switch(this.currentBlockType) {\n          case Zlib.RawInflateStream.BlockType.UNCOMPRESSED:\n            if (this.parseUncompressedBlock() < 0) {\n              stop = true;\n            }\n            break;\n          case Zlib.RawInflateStream.BlockType.FIXED: /* FALLTHROUGH */\n          case Zlib.RawInflateStream.BlockType.DYNAMIC:\n            if (this.decodeHuffman() < 0) {\n              stop = true;\n            }\n            break;\n        }\n        break;\n      case Zlib.RawInflateStream.Status.DECODE_BLOCK_END:\n        if (this.bfinal) {\n          stop = true;\n        } else {\n          this.status = Zlib.RawInflateStream.Status.INITIALIZED;\n        }\n        break;\n    }\n  }\n\n  return this.concatBuffer();\n};\n\n/**\n * @const\n * @type {number} max backward length for LZ77.\n */\nZlib.RawInflateStream.MaxBackwardLength = 32768;\n\n/**\n * @const\n * @type {number} max copy length for LZ77.\n */\nZlib.RawInflateStream.MaxCopyLength = 258;\n\n/**\n * huffman order\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.Order = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n/**\n * huffman length code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.LengthCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008, 0x0009, 0x000a, 0x000b,\n  0x000d, 0x000f, 0x0011, 0x0013, 0x0017, 0x001b, 0x001f, 0x0023, 0x002b,\n  0x0033, 0x003b, 0x0043, 0x0053, 0x0063, 0x0073, 0x0083, 0x00a3, 0x00c3,\n  0x00e3, 0x0102, 0x0102, 0x0102\n]);\n\n/**\n * huffman length extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.LengthExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5,\n  5, 5, 0, 0, 0\n]);\n\n/**\n * huffman dist code table.\n * @const\n * @type {!(Array.<number>|Uint16Array)}\n */\nZlib.RawInflateStream.DistCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint16Array(table) : table;\n})([\n  0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0007, 0x0009, 0x000d, 0x0011,\n  0x0019, 0x0021, 0x0031, 0x0041, 0x0061, 0x0081, 0x00c1, 0x0101, 0x0181,\n  0x0201, 0x0301, 0x0401, 0x0601, 0x0801, 0x0c01, 0x1001, 0x1801, 0x2001,\n  0x3001, 0x4001, 0x6001\n]);\n\n/**\n * huffman dist extra-bits table.\n * @const\n * @type {!(Array.<number>|Uint8Array)}\n */\nZlib.RawInflateStream.DistExtraTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint8Array(table) : table;\n})([\n  0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11,\n  11, 12, 12, 13, 13\n]);\n\n/**\n * fixed huffman length code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedLiteralLengthTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(288);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] =\n      (i <= 143) ? 8 :\n      (i <= 255) ? 9 :\n      (i <= 279) ? 7 :\n      8;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * fixed huffman distance code table\n * @const\n * @type {!Array}\n */\nZlib.RawInflateStream.FixedDistanceTable = (function(table) {\n  return table;\n})((function() {\n  var lengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(30);\n  var i, il;\n\n  for (i = 0, il = lengths.length; i < il; ++i) {\n    lengths[i] = 5;\n  }\n\n  return buildHuffmanTable(lengths);\n})());\n\n/**\n * parse deflated block.\n */\nZlib.RawInflateStream.prototype.readBlockHeader = function() {\n  /** @type {number} header */\n  var hdr;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_START;\n\n  this.save_();\n  if ((hdr = this.readBits(3)) < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  // BFINAL\n  if (hdr & 0x1) {\n    this.bfinal = true;\n  }\n\n  // BTYPE\n  hdr >>>= 1;\n  switch (hdr) {\n    case 0: // uncompressed\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.UNCOMPRESSED;\n      break;\n    case 1: // fixed huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.FIXED;\n      break;\n    case 2: // dynamic huffman\n      this.currentBlockType = Zlib.RawInflateStream.BlockType.DYNAMIC;\n      break;\n    default: // reserved or other\n      throw new Error('unknown BTYPE: ' + hdr);\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_HEADER_END;\n};\n\n/**\n * read inflate bits\n * @param {number} length bits length.\n * @return {number} read bits.\n */\nZlib.RawInflateStream.prototype.readBits = function(length) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {number} input and output byte. */\n  var octet;\n\n  // not enough buffer\n  while (bitsbuflen < length) {\n    // input byte\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n\n    // concat octet\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // output byte\n  octet = bitsbuf & /* MASK */ ((1 << length) - 1);\n  bitsbuf >>>= length;\n  bitsbuflen -= length;\n\n  this.bitsbuf = bitsbuf;\n  this.bitsbuflen = bitsbuflen;\n  this.ip = ip;\n\n  return octet;\n};\n\n/**\n * read huffman code using table\n * @param {Array} table huffman code table.\n * @return {number} huffman code.\n */\nZlib.RawInflateStream.prototype.readCodeByTable = function(table) {\n  var bitsbuf = this.bitsbuf;\n  var bitsbuflen = this.bitsbuflen;\n  var input = this.input;\n  var ip = this.ip;\n\n  /** @type {!(Array|Uint8Array)} huffman code table */\n  var codeTable = table[0];\n  /** @type {number} */\n  var maxCodeLength = table[1];\n  /** @type {number} input byte */\n  var octet;\n  /** @type {number} code length & code (16bit, 16bit) */\n  var codeWithLength;\n  /** @type {number} code bits length */\n  var codeLength;\n\n  // not enough buffer\n  while (bitsbuflen < maxCodeLength) {\n    if (input.length <= ip) {\n      return -1;\n    }\n    octet = input[ip++];\n    bitsbuf |= octet << bitsbuflen;\n    bitsbuflen += 8;\n  }\n\n  // read max length\n  codeWithLength = codeTable[bitsbuf & ((1 << maxCodeLength) - 1)];\n  codeLength = codeWithLength >>> 16;\n\n  if (codeLength > bitsbuflen) {\n    throw new Error('invalid code length: ' + codeLength);\n  }\n\n  this.bitsbuf = bitsbuf >> codeLength;\n  this.bitsbuflen = bitsbuflen - codeLength;\n  this.ip = ip;\n\n  return codeWithLength & 0xffff;\n};\n\n/**\n * read uncompressed block header\n */\nZlib.RawInflateStream.prototype.readUncompressedBlockHeader = function() {\n  /** @type {number} block length */\n  var len;\n  /** @type {number} number for check block length */\n  var nlen;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  if (ip + 4 >= input.length) {\n    return -1;\n  }\n\n  len = input[ip++] | (input[ip++] << 8);\n  nlen = input[ip++] | (input[ip++] << 8);\n\n  // check len & nlen\n  if (len === ~nlen) {\n    throw new Error('invalid uncompressed block header: length verify');\n  }\n\n  // skip buffered header bits\n  this.bitsbuf = 0;\n  this.bitsbuflen = 0;\n\n  this.ip = ip;\n  this.blockLength = len;\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n};\n\n/**\n * parse uncompressed block.\n */\nZlib.RawInflateStream.prototype.parseUncompressedBlock = function() {\n  var input = this.input;\n  var ip = this.ip;\n  var output = this.output;\n  var op = this.op;\n  var len = this.blockLength;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  // copy\n  // XXX: とりあえず素直にコピー\n  while (len--) {\n    if (op === output.length) {\n      output = this.expandBuffer({fixRatio: 2});\n    }\n\n    // not enough input buffer\n    if (ip >= input.length) {\n      this.ip = ip;\n      this.op = op;\n      this.blockLength = len + 1; // コピーしてないので戻す\n      return -1;\n    }\n\n    output[op++] = input[ip++];\n  }\n\n  if (len < 0) {\n    this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n  }\n\n  this.ip = ip;\n  this.op = op;\n\n  return 0;\n};\n\n/**\n * parse fixed huffman block.\n */\nZlib.RawInflateStream.prototype.parseFixedHuffmanBlock = function() {\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.litlenTable = Zlib.RawInflateStream.FixedLiteralLengthTable;\n  this.distTable = Zlib.RawInflateStream.FixedDistanceTable;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * オブジェクトのコンテキストを別のプロパティに退避する.\n * @private\n */\nZlib.RawInflateStream.prototype.save_ = function() {\n  this.ip_ = this.ip;\n  this.bitsbuflen_ = this.bitsbuflen;\n  this.bitsbuf_ = this.bitsbuf;\n};\n\n/**\n * 別のプロパティに退避したコンテキストを復元する.\n * @private\n */\nZlib.RawInflateStream.prototype.restore_ = function() {\n  this.ip = this.ip_;\n  this.bitsbuflen = this.bitsbuflen_;\n  this.bitsbuf = this.bitsbuf_;\n};\n\n/**\n * parse dynamic huffman block.\n */\nZlib.RawInflateStream.prototype.parseDynamicHuffmanBlock = function() {\n  /** @type {number} number of literal and length codes. */\n  var hlit;\n  /** @type {number} number of distance codes. */\n  var hdist;\n  /** @type {number} number of code lengths. */\n  var hclen;\n  /** @type {!(Uint8Array|Array)} code lengths. */\n  var codeLengths =\n    new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.RawInflateStream.Order.length);\n  /** @type {!Array} code lengths table. */\n  var codeLengthsTable;\n  /** @type {!(Uint32Array|Array)} literal and length code lengths. */\n  var litlenLengths;\n  /** @type {!(Uint32Array|Array)} distance code lengths. */\n  var distLengths;\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_START;\n\n  this.save_();\n  hlit = this.readBits(5) + 257;\n  hdist = this.readBits(5) + 1;\n  hclen = this.readBits(4) + 4;\n  if (hlit < 0 || hdist < 0 || hclen < 0) {\n    this.restore_();\n    return -1;\n  }\n\n  try {\n    parseDynamicHuffmanBlockImpl.call(this);\n  } catch(e) {\n    this.restore_();\n    return -1;\n  }\n\n  function parseDynamicHuffmanBlockImpl() {\n    /** @type {number} */\n    var bits;\n    var code;\n    var prev = 0;\n    var repeat;\n    /** @type {!(Uint8Array|Array.<number>)} code length table. */\n    var lengthTable;\n    /** @type {number} loop counter. */\n    var i;\n    /** @type {number} loop limit. */\n    var il;\n\n    // decode code lengths\n    for (i = 0; i < hclen; ++i) {\n      if ((bits = this.readBits(3)) < 0) {\n        throw new Error('not enough input');\n      }\n      codeLengths[Zlib.RawInflateStream.Order[i]] = bits;\n    }\n\n    // decode length table\n    codeLengthsTable = buildHuffmanTable(codeLengths);\n    lengthTable = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit + hdist);\n    for (i = 0, il = hlit + hdist; i < il;) {\n      code = this.readCodeByTable(codeLengthsTable);\n      if (code < 0) {\n        throw new Error('not enough input');\n      }\n      switch (code) {\n        case 16:\n          if ((bits = this.readBits(2)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = prev; }\n          break;\n        case 17:\n          if ((bits = this.readBits(3)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 3 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        case 18:\n          if ((bits = this.readBits(7)) < 0) {\n            throw new Error('not enough input');\n          }\n          repeat = 11 + bits;\n          while (repeat--) { lengthTable[i++] = 0; }\n          prev = 0;\n          break;\n        default:\n          lengthTable[i++] = code;\n          prev = code;\n          break;\n      }\n    }\n\n    // literal and length code\n    litlenLengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(hlit);\n\n    // distance code\n    distLengths = new (USE_TYPEDARRAY ? Uint8Array : Array)(hdist);\n\n    this.litlenTable = USE_TYPEDARRAY\n      ? buildHuffmanTable(lengthTable.subarray(0, hlit))\n      : buildHuffmanTable(lengthTable.slice(0, hlit));\n    this.distTable = USE_TYPEDARRAY\n      ? buildHuffmanTable(lengthTable.subarray(hlit))\n      : buildHuffmanTable(lengthTable.slice(hlit));\n  }\n\n  this.status = Zlib.RawInflateStream.Status.BLOCK_BODY_END;\n\n  return 0;\n};\n\n/**\n * decode huffman code (dynamic)\n * @return {(number|undefined)} -1 is error.\n */\nZlib.RawInflateStream.prototype.decodeHuffman = function() {\n  var output = this.output;\n  var op = this.op;\n\n  /** @type {number} huffman code. */\n  var code;\n  /** @type {number} table index. */\n  var ti;\n  /** @type {number} huffman code distination. */\n  var codeDist;\n  /** @type {number} huffman code length. */\n  var codeLength;\n\n  var litlen = this.litlenTable;\n  var dist = this.distTable;\n\n  var olength = output.length;\n  var bits;\n\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_START;\n\n  while (true) {\n    this.save_();\n\n    code = this.readCodeByTable(litlen);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n\n    if (code === 256) {\n      break;\n    }\n\n    // literal\n    if (code < 256) {\n      if (op === olength) {\n        output = this.expandBuffer();\n        olength = output.length;\n      }\n      output[op++] = code;\n\n      continue;\n    }\n\n    // length code\n    ti = code - 257;\n    codeLength = Zlib.RawInflateStream.LengthCodeTable[ti];\n    if (Zlib.RawInflateStream.LengthExtraTable[ti] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.LengthExtraTable[ti]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeLength += bits;\n    }\n\n    // dist code\n    code = this.readCodeByTable(dist);\n    if (code < 0) {\n      this.op = op;\n      this.restore_();\n      return -1;\n    }\n    codeDist = Zlib.RawInflateStream.DistCodeTable[code];\n    if (Zlib.RawInflateStream.DistExtraTable[code] > 0) {\n      bits = this.readBits(Zlib.RawInflateStream.DistExtraTable[code]);\n      if (bits < 0) {\n        this.op = op;\n        this.restore_();\n        return -1;\n      }\n      codeDist += bits;\n    }\n\n    // lz77 decode\n    if (op + codeLength >= olength) {\n      output = this.expandBuffer();\n      olength = output.length;\n    }\n\n    while (codeLength--) {\n      output[op] = output[(op++) - codeDist];\n    }\n\n    // break\n    if (this.ip === this.input.length) {\n      this.op = op;\n      return -1;\n    }\n  }\n\n  while (this.bitsbuflen >= 8) {\n    this.bitsbuflen -= 8;\n    this.ip--;\n  }\n\n  this.op = op;\n  this.status = Zlib.RawInflateStream.Status.DECODE_BLOCK_END;\n};\n\n/**\n * expand output buffer. (dynamic)\n * @param {Object=} opt_param option parameters.\n * @return {!(Array|Uint8Array)} output buffer pointer.\n */\nZlib.RawInflateStream.prototype.expandBuffer = function(opt_param) {\n  /** @type {!(Array|Uint8Array)} store buffer. */\n  var buffer;\n  /** @type {number} expantion ratio. */\n  var ratio = (this.input.length / this.ip + 1) | 0;\n  /** @type {number} maximum number of huffman code. */\n  var maxHuffCode;\n  /** @type {number} new output buffer size. */\n  var newSize;\n  /** @type {number} max inflate size. */\n  var maxInflateSize;\n\n  var input = this.input;\n  var output = this.output;\n\n  if (opt_param) {\n    if (typeof opt_param.fixRatio === 'number') {\n      ratio = opt_param.fixRatio;\n    }\n    if (typeof opt_param.addRatio === 'number') {\n      ratio += opt_param.addRatio;\n    }\n  }\n\n  // calculate new buffer size\n  if (ratio < 2) {\n    maxHuffCode =\n      (input.length - this.ip) / this.litlenTable[2];\n    maxInflateSize = (maxHuffCode / 2 * 258) | 0;\n    newSize = maxInflateSize < output.length ?\n      output.length + maxInflateSize :\n      output.length << 1;\n  } else {\n    newSize = output.length * ratio;\n  }\n\n  // buffer expantion\n  if (USE_TYPEDARRAY) {\n    buffer = new Uint8Array(newSize);\n    buffer.set(output);\n  } else {\n    buffer = output;\n  }\n\n  this.output = buffer;\n\n  return this.output;\n};\n\n/**\n * concat output buffer. (dynamic)\n * @return {!(Array|Uint8Array)} output buffer.\n */\nZlib.RawInflateStream.prototype.concatBuffer = function() {\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var buffer;\n  /** @type {number} */\n  var op = this.op;\n  /** @type {Uint8Array} */\n  var tmp;\n\n  if (this.resize) {\n    if (USE_TYPEDARRAY) {\n      buffer = new Uint8Array(this.output.subarray(this.sp, op));\n    } else {\n      buffer = this.output.slice(this.sp, op);\n    }\n  } else {\n    buffer =\n      USE_TYPEDARRAY ? this.output.subarray(this.sp, op) : this.output.slice(this.sp, op);\n  }\n\n  this.sp = op;\n\n  // compaction\n  if (op > Zlib.RawInflateStream.MaxBackwardLength + this.bufferSize) {\n    this.op = this.sp = Zlib.RawInflateStream.MaxBackwardLength;\n    if (USE_TYPEDARRAY) {\n      tmp = /** @type {Uint8Array} */(this.output);\n      this.output = new Uint8Array(this.bufferSize + Zlib.RawInflateStream.MaxBackwardLength);\n      this.output.set(tmp.subarray(op - Zlib.RawInflateStream.MaxBackwardLength, op));\n    } else {\n      this.output = this.output.slice(op - Zlib.RawInflateStream.MaxBackwardLength);\n    }\n  }\n\n  return buffer;\n};\n\n\n/**\n * @constructor\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @param {Object=} opt_params option parameters.\n *\n * opt_params は以下のプロパティを指定する事ができます。\n *   - index: input buffer の deflate コンテナの開始位置.\n *   - blockSize: バッファのブロックサイズ.\n *   - verify: 伸張が終わった後 adler-32 checksum の検証を行うか.\n *   - bufferType: Zlib.Inflate.BufferType の値によってバッファの管理方法を指定する.\n *       Zlib.Inflate.BufferType は Zlib.RawInflate.BufferType のエイリアス.\n */\nZlib.Inflate = function(input, opt_params) {\n  /** @type {number} */\n  var bufferSize;\n  /** @type {Zlib.Inflate.BufferType} */\n  var bufferType;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflate} */\n  this.rawinflate;\n  /** @type {(boolean|undefined)} verify flag. */\n  this.verify;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (opt_params['index']) {\n      this.ip = opt_params['index'];\n    }\n    if (opt_params['verify']) {\n      this.verify = opt_params['verify'];\n    }\n  }\n\n  // Compression Method and Flags\n  cmf = input[this.ip++];\n  flg = input[this.ip++];\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  // RawInflate\n  this.rawinflate = new Zlib.RawInflate(input, {\n    'index': this.ip,\n    'bufferSize': opt_params['bufferSize'],\n    'bufferType': opt_params['bufferType'],\n    'resize': opt_params['resize']\n  });\n}\n\n/**\n * @enum {number}\n */\nZlib.Inflate.BufferType = Zlib.RawInflate.BufferType;\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.Inflate.prototype.decompress = function() {\n  /** @type {!(Array|Uint8Array)} input buffer. */\n  var input = this.input;\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  buffer = this.rawinflate.decompress();\n  this.ip = this.rawinflate.ip;\n\n  // verify adler-32\n  if (this.verify) {\n    adler32 = (\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++]\n    ) >>> 0;\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n\n  return buffer;\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n\n/**\n * @param {!(Uint8Array|Array)} input deflated buffer.\n * @constructor\n */\nZlib.InflateStream = function(input) {\n  /** @type {!(Uint8Array|Array)} */\n  this.input = input === void 0 ? new (USE_TYPEDARRAY ? Uint8Array : Array)() : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {Zlib.RawInflateStream} */\n  this.rawinflate = new Zlib.RawInflateStream(this.input, this.ip);\n  /** @type {Zlib.CompressionMethod} */\n  this.method;\n  /** @type {!(Array|Uint8Array)} */\n  this.output = this.rawinflate.output;\n};\n\n/**\n * decompress.\n * @return {!(Uint8Array|Array)} inflated buffer.\n */\nZlib.InflateStream.prototype.decompress = function(input) {\n  /** @type {!(Uint8Array|Array)} inflated buffer. */\n  var buffer;\n  /** @type {number} adler-32 checksum */\n  var adler32;\n\n  // 新しい入力を入力バッファに結合する\n  // XXX Array, Uint8Array のチェックを行うか確認する\n  if (input !== void 0) {\n    if (USE_TYPEDARRAY) {\n      var tmp = new Uint8Array(this.input.length + input.length);\n      tmp.set(this.input, 0);\n      tmp.set(input, this.input.length);\n      this.input = tmp;\n    } else {\n      this.input = this.input.concat(input);\n    }\n  }\n\n  if (this.method === void 0) {\n    if(this.readHeader() < 0) {\n      return new (USE_TYPEDARRAY ? Uint8Array : Array)();\n    }\n  }\n\n  buffer = this.rawinflate.decompress(this.input, this.ip);\n  if (this.rawinflate.ip !== 0) {\n    this.input = USE_TYPEDARRAY ?\n      this.input.subarray(this.rawinflate.ip) :\n      this.input.slice(this.rawinflate.ip);\n    this.ip = 0;\n  }\n\n  // verify adler-32\n  /*\n  if (this.verify) {\n    adler32 =\n      input[this.ip++] << 24 | input[this.ip++] << 16 |\n      input[this.ip++] << 8 | input[this.ip++];\n\n    if (adler32 !== Zlib.Adler32(buffer)) {\n      throw new Error('invalid adler-32 checksum');\n    }\n  }\n  */\n\n  return buffer;\n};\n\nZlib.InflateStream.prototype.readHeader = function() {\n  var ip = this.ip;\n  var input = this.input;\n\n  // Compression Method and Flags\n  var cmf = input[ip++];\n  var flg = input[ip++];\n\n  if (cmf === void 0 || flg === void 0) {\n    return -1;\n  }\n\n  // compression method\n  switch (cmf & 0x0f) {\n    case Zlib.CompressionMethod.DEFLATE:\n      this.method = Zlib.CompressionMethod.DEFLATE;\n      break;\n    default:\n      throw new Error('unsupported compression method');\n  }\n\n  // fcheck\n  if (((cmf << 8) + flg) % 31 !== 0) {\n    throw new Error('invalid fcheck flag:' + ((cmf << 8) + flg) % 31);\n  }\n\n  // fdict (not supported)\n  if (flg & 0x20) {\n    throw new Error('fdict flag is not supported');\n  }\n\n  this.ip = ip;\n};\n\n\n/**\n * @fileoverview GZIP (RFC1952) 展開コンテナ実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gunzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {Array.<Zlib.GunzipMember>} */\n  this.member = [];\n  /** @type {boolean} */\n  this.decompressed = false;\n};\n\n/**\n * @return {Array.<Zlib.GunzipMember>}\n */\nZlib.Gunzip.prototype.getMembers = function() {\n  if (!this.decompressed) {\n    this.decompress();\n  }\n\n  return this.member.slice();\n};\n\n/**\n * inflate gzip data.\n * @return {!(Array.<number>|Uint8Array)} inflated buffer.\n */\nZlib.Gunzip.prototype.decompress = function() {\n  /** @type {number} input length. */\n  var il = this.input.length;\n\n  while (this.ip < il) {\n    this.decodeMember();\n  }\n\n  this.decompressed = true;\n\n  return this.concatMember();\n};\n\n/**\n * decode gzip member.\n */\nZlib.Gunzip.prototype.decodeMember = function() {\n  /** @type {Zlib.GunzipMember} */\n  var member = new Zlib.GunzipMember();\n  /** @type {number} */\n  var isize;\n  /** @type {Zlib.RawInflate} RawInflate implementation. */\n  var rawinflate;\n  /** @type {!(Array.<number>|Uint8Array)} inflated data. */\n  var inflated;\n  /** @type {number} inflate size */\n  var inflen;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} character index in string. */\n  var ci;\n  /** @type {Array.<string>} character array. */\n  var str;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} */\n  var crc32;\n\n  var input = this.input;\n  var ip = this.ip;\n\n  member.id1 = input[ip++];\n  member.id2 = input[ip++];\n\n  // check signature\n  if (member.id1 !== 0x1f || member.id2 !== 0x8b) {\n    throw new Error('invalid file signature:' + member.id1 + ',' + member.id2);\n  }\n\n  // check compression method\n  member.cm = input[ip++];\n  switch (member.cm) {\n    case 8: /* XXX: use Zlib const */\n      break;\n    default:\n      throw new Error('unknown compression method: ' + member.cm);\n  }\n\n  // flags\n  member.flg = input[ip++];\n\n  // modification time\n  mtime = (input[ip++])       |\n          (input[ip++] << 8)  |\n          (input[ip++] << 16) |\n          (input[ip++] << 24);\n  member.mtime = new Date(mtime * 1000);\n\n  // extra flags\n  member.xfl = input[ip++];\n\n  // operating system\n  member.os = input[ip++];\n\n  // extra\n  if ((member.flg & Zlib.Gzip.FlagsMask.FEXTRA) > 0) {\n    member.xlen = input[ip++] | (input[ip++] << 8);\n    ip = this.decodeSubField(ip, member.xlen);\n  }\n\n  // fname\n  if ((member.flg & Zlib.Gzip.FlagsMask.FNAME) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.name = str.join('');\n  }\n\n  // fcomment\n  if ((member.flg & Zlib.Gzip.FlagsMask.FCOMMENT) > 0) {\n    for(str = [], ci = 0; (c = input[ip++]) > 0;) {\n      str[ci++] = String.fromCharCode(c);\n    }\n    member.comment = str.join('');\n  }\n\n  // fhcrc\n  if ((member.flg & Zlib.Gzip.FlagsMask.FHCRC) > 0) {\n    member.crc16 = Zlib.CRC32.calc(input, 0, ip) & 0xffff;\n    if (member.crc16 !== (input[ip++] | (input[ip++] << 8))) {\n      throw new Error('invalid header crc16');\n    }\n  }\n\n  // isize を事前に取得すると展開後のサイズが分かるため、\n  // inflate処理のバッファサイズが事前に分かり、高速になる\n  isize = (input[input.length - 4])       | (input[input.length - 3] << 8) |\n          (input[input.length - 2] << 16) | (input[input.length - 1] << 24);\n\n  // isize の妥当性チェック\n  // ハフマン符号では最小 2-bit のため、最大で 1/4 になる\n  // LZ77 符号では 長さと距離 2-Byte で最大 258-Byte を表現できるため、\n  // 1/128 になるとする\n  // ここから入力バッファの残りが isize の 512 倍以上だったら\n  // サイズ指定のバッファ確保は行わない事とする\n  if (input.length - ip - /* CRC-32 */4 - /* ISIZE */4 < isize * 512) {\n    inflen = isize;\n  }\n\n  // compressed block\n  rawinflate = new Zlib.RawInflate(input, {'index': ip, 'bufferSize': inflen});\n  member.data = inflated = rawinflate.decompress();\n  ip = rawinflate.ip;\n\n  // crc32\n  member.crc32 = crc32 =\n    ((input[ip++])       | (input[ip++] << 8) |\n     (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if (Zlib.CRC32.calc(inflated) !== crc32) {\n    throw new Error('invalid CRC-32 checksum: 0x' +\n        Zlib.CRC32.calc(inflated).toString(16) + ' / 0x' + crc32.toString(16));\n  }\n\n  // input size\n  member.isize = isize =\n    ((input[ip++])       | (input[ip++] << 8) |\n     (input[ip++] << 16) | (input[ip++] << 24)) >>> 0;\n  if ((inflated.length & 0xffffffff) !== isize) {\n    throw new Error('invalid input size: ' +\n        (inflated.length & 0xffffffff) + ' / ' + isize);\n  }\n\n  this.member.push(member);\n  this.ip = ip;\n};\n\n/**\n * サブフィールドのデコード\n * XXX: 現在は何もせずスキップする\n */\nZlib.Gunzip.prototype.decodeSubField = function(ip, length) {\n  return ip + length;\n};\n\n/**\n * @return {!(Array.<number>|Uint8Array)}\n */\nZlib.Gunzip.prototype.concatMember = function() {\n  /** @type {Array.<Zlib.GunzipMember>} */\n  var member = this.member;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {number} */\n  var p = 0;\n  /** @type {number} */\n  var size = 0;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n\n  for (i = 0, il = member.length; i < il; ++i) {\n    size += member[i].data.length;\n  }\n\n  if (USE_TYPEDARRAY) {\n    buffer = new Uint8Array(size);\n    for (i = 0; i < il; ++i) {\n      buffer.set(member[i].data, p);\n      p += member[i].data.length;\n    }\n  } else {\n    buffer = [];\n    for (i = 0; i < il; ++i) {\n      buffer[i] = member[i].data;\n    }\n    buffer = Array.prototype.concat.apply([], buffer);\n  }\n\n  return buffer;\n};\n\n\n\n/**\n * @constructor\n */\nZlib.GunzipMember = function() {\n  /** @type {number} signature first byte. */\n  this.id1;\n  /** @type {number} signature second byte. */\n  this.id2;\n  /** @type {number} compression method. */\n  this.cm;\n  /** @type {number} flags. */\n  this.flg;\n  /** @type {Date} modification time. */\n  this.mtime;\n  /** @type {number} extra flags. */\n  this.xfl;\n  /** @type {number} operating system number. */\n  this.os;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  this.crc16;\n  /** @type {number} extra length. */\n  this.xlen;\n  /** @type {number} CRC-32 value for verification. */\n  this.crc32;\n  /** @type {number} input size modulo 32 value. */\n  this.isize;\n  /** @type {string} filename. */\n  this.name;\n  /** @type {string} comment. */\n  this.comment;\n  /** @type {!(Uint8Array|Array.<number>)} */\n  this.data;\n};\n\nZlib.GunzipMember.prototype.getName = function() {\n  return this.name;\n};\n\nZlib.GunzipMember.prototype.getData = function() {\n  return this.data;\n};\n\nZlib.GunzipMember.prototype.getMtime = function() {\n  return this.mtime;\n}\n\n/**\n * @fileoverview GZIP (RFC1952) 実装.\n */\n\n/**\n * @constructor\n * @param {!(Array|Uint8Array)} input input buffer.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Gzip = function(input, opt_params) {\n  /** @type {!(Array.<number>|Uint8Array)} input buffer. */\n  this.input = input;\n  /** @type {number} input buffer pointer. */\n  this.ip = 0;\n  /** @type {!(Array.<number>|Uint8Array)} output buffer. */\n  this.output;\n  /** @type {number} output buffer. */\n  this.op = 0;\n  /** @type {!Object} flags option flags. */\n  this.flags = {};\n  /** @type {!string} filename. */\n  this.filename;\n  /** @type {!string} comment. */\n  this.comment;\n  /** @type {!Object} deflate options. */\n  this.deflateOptions;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['flags']) {\n      this.flags = opt_params['flags'];\n    }\n    if (typeof opt_params['filename'] === 'string') {\n      this.filename = opt_params['filename'];\n    }\n    if (typeof opt_params['comment'] === 'string') {\n      this.comment = opt_params['comment'];\n    }\n    if (opt_params['deflateOptions']) {\n      this.deflateOptions = opt_params['deflateOptions'];\n    }\n  }\n\n  if (!this.deflateOptions) {\n    this.deflateOptions = {};\n  }\n};\n\n/**\n * @type {number}\n * @const\n */\nZlib.Gzip.DefaultBufferSize = 0x8000;\n\n/**\n * encode gzip members.\n * @return {!(Array|Uint8Array)} gzip binary array.\n */\nZlib.Gzip.prototype.compress = function() {\n  /** @type {number} flags. */\n  var flg;\n  /** @type {number} modification time. */\n  var mtime;\n  /** @type {number} CRC-16 value for FHCRC flag. */\n  var crc16;\n  /** @type {number} CRC-32 value for verification. */\n  var crc32;\n  /** @type {!Zlib.RawDeflate} raw deflate object. */\n  var rawdeflate;\n  /** @type {number} character code */\n  var c;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il;\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output =\n    new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.Gzip.DefaultBufferSize);\n  /** @type {number} output buffer pointer. */\n  var op = 0;\n\n  var input = this.input;\n  var ip = this.ip;\n  var filename = this.filename;\n  var comment = this.comment;\n\n  // check signature\n  output[op++] = 0x1f;\n  output[op++] = 0x8b;\n\n  // check compression method\n  output[op++] = 8; /* XXX: use Zlib const */\n\n  // flags\n  flg = 0;\n  if (this.flags['fname'])    flg |= Zlib.Gzip.FlagsMask.FNAME;\n  if (this.flags['fcomment']) flg |= Zlib.Gzip.FlagsMask.FCOMMENT;\n  if (this.flags['fhcrc'])    flg |= Zlib.Gzip.FlagsMask.FHCRC;\n  // XXX: FTEXT\n  // XXX: FEXTRA\n  output[op++] = flg;\n\n  // modification time\n  mtime = (Date.now ? Date.now() : +new Date()) / 1000 | 0;\n  output[op++] = mtime        & 0xff;\n  output[op++] = mtime >>>  8 & 0xff;\n  output[op++] = mtime >>> 16 & 0xff;\n  output[op++] = mtime >>> 24 & 0xff;\n\n  // extra flags\n  output[op++] = 0;\n\n  // operating system\n  output[op++] = Zlib.Gzip.OperatingSystem.UNKNOWN;\n\n  // extra\n  /* NOP */\n\n  // fname\n  if (this.flags['fname'] !== void 0) {\n    for (i = 0, il = filename.length; i < il; ++i) {\n      c = filename.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fcomment\n  if (this.flags['comment']) {\n    for (i = 0, il = comment.length; i < il; ++i) {\n      c = comment.charCodeAt(i);\n      if (c > 0xff) { output[op++] = (c >>> 8) & 0xff; }\n      output[op++] = c & 0xff;\n    }\n    output[op++] = 0; // null termination\n  }\n\n  // fhcrc\n  if (this.flags['fhcrc']) {\n    crc16 = Zlib.CRC32.calc(output, 0, op) & 0xffff;\n    output[op++] = (crc16      ) & 0xff;\n    output[op++] = (crc16 >>> 8) & 0xff;\n  }\n\n  // add compress option\n  this.deflateOptions['outputBuffer'] = output;\n  this.deflateOptions['outputIndex'] = op;\n\n  // compress\n  rawdeflate = new Zlib.RawDeflate(input, this.deflateOptions);\n  output = rawdeflate.compress();\n  op = rawdeflate.op;\n\n  // expand buffer\n  if (USE_TYPEDARRAY) {\n    if (op + 8 > output.buffer.byteLength) {\n      this.output = new Uint8Array(op + 8);\n      this.output.set(new Uint8Array(output.buffer));\n      output = this.output;\n    } else {\n      output = new Uint8Array(output.buffer);\n    }\n  }\n\n  // crc32\n  crc32 = Zlib.CRC32.calc(input);\n  output[op++] = (crc32       ) & 0xff;\n  output[op++] = (crc32 >>>  8) & 0xff;\n  output[op++] = (crc32 >>> 16) & 0xff;\n  output[op++] = (crc32 >>> 24) & 0xff;\n\n  // input size\n  il = input.length;\n  output[op++] = (il       ) & 0xff;\n  output[op++] = (il >>>  8) & 0xff;\n  output[op++] = (il >>> 16) & 0xff;\n  output[op++] = (il >>> 24) & 0xff;\n\n  this.ip = ip;\n\n  if (USE_TYPEDARRAY && op < output.length) {\n    this.output = output = output.subarray(0, op);\n  }\n\n  return output;\n};\n\n/** @enum {number} */\nZlib.Gzip.OperatingSystem = {\n  FAT: 0,\n  AMIGA: 1,\n  VMS: 2,\n  UNIX: 3,\n  VM_CMS: 4,\n  ATARI_TOS: 5,\n  HPFS: 6,\n  MACINTOSH: 7,\n  Z_SYSTEM: 8,\n  CP_M: 9,\n  TOPS_20: 10,\n  NTFS: 11,\n  QDOS: 12,\n  ACORN_RISCOS: 13,\n  UNKNOWN: 255\n};\n\n/** @enum {number} */\nZlib.Gzip.FlagsMask = {\n  FTEXT: 0x01,\n  FHCRC: 0x02,\n  FEXTRA: 0x04,\n  FNAME: 0x08,\n  FCOMMENT: 0x10\n};\n\n\n/**\n * @fileoverview Heap Sort 実装. ハフマン符号化で使用する.\n */\n\n/**\n * カスタムハフマン符号で使用するヒープ実装\n * @param {number} length ヒープサイズ.\n * @constructor\n */\nZlib.Heap = function(length) {\n  this.buffer = new (USE_TYPEDARRAY ? Uint16Array : Array)(length * 2);\n  this.length = 0;\n};\n\n/**\n * 親ノードの index 取得\n * @param {number} index 子ノードの index.\n * @return {number} 親ノードの index.\n *\n */\nZlib.Heap.prototype.getParent = function(index) {\n  return ((index - 2) / 4 | 0) * 2;\n};\n\n/**\n * 子ノードの index 取得\n * @param {number} index 親ノードの index.\n * @return {number} 子ノードの index.\n */\nZlib.Heap.prototype.getChild = function(index) {\n  return 2 * index + 2;\n};\n\n/**\n * Heap に値を追加する\n * @param {number} index キー index.\n * @param {number} value 値.\n * @return {number} 現在のヒープ長.\n */\nZlib.Heap.prototype.push = function(index, value) {\n  var current, parent,\n      heap = this.buffer,\n      swap;\n\n  current = this.length;\n  heap[this.length++] = value;\n  heap[this.length++] = index;\n\n  // ルートノードにたどり着くまで入れ替えを試みる\n  while (current > 0) {\n    parent = this.getParent(current);\n\n    // 親ノードと比較して親の方が小さければ入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[current];\n      heap[current] = heap[parent];\n      heap[parent] = swap;\n\n      swap = heap[current + 1];\n      heap[current + 1] = heap[parent + 1];\n      heap[parent + 1] = swap;\n\n      current = parent;\n    // 入れ替えが必要なくなったらそこで抜ける\n    } else {\n      break;\n    }\n  }\n\n  return this.length;\n};\n\n/**\n * Heapから一番大きい値を返す\n * @return {{index: number, value: number, length: number}} {index: キーindex,\n *     value: 値, length: ヒープ長} の Object.\n */\nZlib.Heap.prototype.pop = function() {\n  var index, value,\n      heap = this.buffer, swap,\n      current, parent;\n\n  value = heap[0];\n  index = heap[1];\n\n  // 後ろから値を取る\n  this.length -= 2;\n  heap[0] = heap[this.length];\n  heap[1] = heap[this.length + 1];\n\n  parent = 0;\n  // ルートノードから下がっていく\n  while (true) {\n    current = this.getChild(parent);\n\n    // 範囲チェック\n    if (current >= this.length) {\n      break;\n    }\n\n    // 隣のノードと比較して、隣の方が値が大きければ隣を現在ノードとして選択\n    if (current + 2 < this.length && heap[current + 2] > heap[current]) {\n      current += 2;\n    }\n\n    // 親ノードと比較して親の方が小さい場合は入れ替える\n    if (heap[current] > heap[parent]) {\n      swap = heap[parent];\n      heap[parent] = heap[current];\n      heap[current] = swap;\n\n      swap = heap[parent + 1];\n      heap[parent + 1] = heap[current + 1];\n      heap[current + 1] = swap;\n    } else {\n      break;\n    }\n\n    parent = current;\n  }\n\n  return {index: index, value: value, length: this.length};\n};\n\n\n/* vim:set expandtab ts=2 sw=2 tw=80: */\n\n/**\n * @fileoverview Deflate (RFC1951) 符号化アルゴリズム実装.\n */\n\n\n/**\n * Raw Deflate 実装\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} input 符号化する対象のバッファ.\n * @param {Object=} opt_params option parameters.\n *\n * typed array が使用可能なとき、outputBuffer が Array は自動的に Uint8Array に\n * 変換されます.\n * 別のオブジェクトになるため出力バッファを参照している変数などは\n * 更新する必要があります.\n */\nZlib.RawDeflate = function(input, opt_params) {\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  this.compressionType = Zlib.RawDeflate.CompressionType.DYNAMIC;\n  /** @type {number} */\n  this.lazy = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsLitLen;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  this.freqsDist;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n    (USE_TYPEDARRAY && input instanceof Array) ? new Uint8Array(input) : input;\n  /** @type {!(Array.<number>|Uint8Array)} output output buffer. */\n  this.output;\n  /** @type {number} pos output buffer position. */\n  this.op = 0;\n\n  // option parameters\n  if (opt_params) {\n    if (opt_params['lazy']) {\n      this.lazy = opt_params['lazy'];\n    }\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n    if (opt_params['outputBuffer']) {\n      this.output =\n        (USE_TYPEDARRAY && opt_params['outputBuffer'] instanceof Array) ?\n        new Uint8Array(opt_params['outputBuffer']) : opt_params['outputBuffer'];\n    }\n    if (typeof opt_params['outputIndex'] === 'number') {\n      this.op = opt_params['outputIndex'];\n    }\n  }\n\n  if (!this.output) {\n    this.output = new (USE_TYPEDARRAY ? Uint8Array : Array)(0x8000);\n  }\n};\n\n/**\n * @enum {number}\n */\nZlib.RawDeflate.CompressionType = {\n  NONE: 0,\n  FIXED: 1,\n  DYNAMIC: 2,\n  RESERVED: 3\n};\n\n\n/**\n * LZ77 の最小マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MinLength = 3;\n\n/**\n * LZ77 の最大マッチ長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.Lz77MaxLength = 258;\n\n/**\n * LZ77 のウィンドウサイズ\n * @const\n * @type {number}\n */\nZlib.RawDeflate.WindowSize = 0x8000;\n\n/**\n * 最長の符号長\n * @const\n * @type {number}\n */\nZlib.RawDeflate.MaxCodeLength = 16;\n\n/**\n * ハフマン符号の最大数値\n * @const\n * @type {number}\n */\nZlib.RawDeflate.HUFMAX = 286;\n\n/**\n * 固定ハフマン符号の符号化テーブル\n * @const\n * @type {Array.<Array.<number, number>>}\n */\nZlib.RawDeflate.FixedHuffmanTable = (function() {\n  var table = [], i;\n\n  for (i = 0; i < 288; i++) {\n    switch (true) {\n      case (i <= 143): table.push([i       + 0x030, 8]); break;\n      case (i <= 255): table.push([i - 144 + 0x190, 9]); break;\n      case (i <= 279): table.push([i - 256 + 0x000, 7]); break;\n      case (i <= 287): table.push([i - 280 + 0x0C0, 8]); break;\n      default:\n        throw 'invalid literal: ' + i;\n    }\n  }\n\n  return table;\n})();\n\n/**\n * DEFLATE ブロックの作成\n * @return {!(Array.<number>|Uint8Array)} 圧縮済み byte array.\n */\nZlib.RawDeflate.prototype.compress = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var blockArray;\n  /** @type {number} */\n  var position;\n  /** @type {number} */\n  var length;\n\n  var input = this.input;\n\n  // compression\n  switch (this.compressionType) {\n    case Zlib.RawDeflate.CompressionType.NONE:\n      // each 65535-Byte (length header: 16-bit)\n      for (position = 0, length = input.length; position < length;) {\n        blockArray = USE_TYPEDARRAY ?\n          input.subarray(position, position + 0xffff) :\n          input.slice(position, position + 0xffff);\n        position += blockArray.length;\n        this.makeNocompressBlock(blockArray, (position === length));\n      }\n      break;\n    case Zlib.RawDeflate.CompressionType.FIXED:\n      this.output = this.makeFixedHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    case Zlib.RawDeflate.CompressionType.DYNAMIC:\n      this.output = this.makeDynamicHuffmanBlock(input, true);\n      this.op = this.output.length;\n      break;\n    default:\n      throw 'invalid compression type';\n  }\n\n  return this.output;\n};\n\n/**\n * 非圧縮ブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 非圧縮ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeNocompressBlock =\nfunction(blockArray, isFinalBlock) {\n  /** @type {number} */\n  var bfinal;\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  var btype;\n  /** @type {number} */\n  var len;\n  /** @type {number} */\n  var nlen;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  var output = this.output;\n  var op = this.op;\n\n  // expand buffer\n  if (USE_TYPEDARRAY) {\n    output = new Uint8Array(this.output.buffer);\n    while (output.length <= op + blockArray.length + 5) {\n      output = new Uint8Array(output.length << 1);\n    }\n    output.set(this.output);\n  }\n\n  // header\n  bfinal = isFinalBlock ? 1 : 0;\n  btype = Zlib.RawDeflate.CompressionType.NONE;\n  output[op++] = (bfinal) | (btype << 1);\n\n  // length\n  len = blockArray.length;\n  nlen = (~len + 0x10000) & 0xffff;\n  output[op++] =          len & 0xff;\n  output[op++] =  (len >>> 8) & 0xff;\n  output[op++] =         nlen & 0xff;\n  output[op++] = (nlen >>> 8) & 0xff;\n\n  // copy buffer\n  if (USE_TYPEDARRAY) {\n     output.set(blockArray, op);\n     op += blockArray.length;\n     output = output.subarray(0, op);\n  } else {\n    for (i = 0, il = blockArray.length; i < il; ++i) {\n      output[op++] = blockArray[i];\n    }\n    output.length = op;\n  }\n\n  this.op = op;\n  this.output = output;\n\n  return output;\n};\n\n/**\n * 固定ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 固定ハフマン符号化ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeFixedHuffmanBlock =\nfunction(blockArray, isFinalBlock) {\n  /** @type {Zlib.BitStream} */\n  var stream = new Zlib.BitStream(USE_TYPEDARRAY ?\n    new Uint8Array(this.output.buffer) : this.output, this.op);\n  /** @type {number} */\n  var bfinal;\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  var btype;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var data;\n\n  // header\n  bfinal = isFinalBlock ? 1 : 0;\n  btype = Zlib.RawDeflate.CompressionType.FIXED;\n\n  stream.writeBits(bfinal, 1, true);\n  stream.writeBits(btype, 2, true);\n\n  data = this.lz77(blockArray);\n  this.fixedHuffman(data, stream);\n\n  return stream.finish();\n};\n\n/**\n * 動的ハフマンブロックの作成\n * @param {!(Array.<number>|Uint8Array)} blockArray ブロックデータ byte array.\n * @param {!boolean} isFinalBlock 最後のブロックならばtrue.\n * @return {!(Array.<number>|Uint8Array)} 動的ハフマン符号ブロック byte array.\n */\nZlib.RawDeflate.prototype.makeDynamicHuffmanBlock =\nfunction(blockArray, isFinalBlock) {\n  /** @type {Zlib.BitStream} */\n  var stream = new Zlib.BitStream(USE_TYPEDARRAY ?\n    new Uint8Array(this.output.buffer) : this.output, this.op);\n  /** @type {number} */\n  var bfinal;\n  /** @type {Zlib.RawDeflate.CompressionType} */\n  var btype;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var data;\n  /** @type {number} */\n  var hlit;\n  /** @type {number} */\n  var hdist;\n  /** @type {number} */\n  var hclen;\n  /** @const @type {Array.<number>} */\n  var hclenOrder =\n        [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var litLenLengths;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var litLenCodes;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var distLengths;\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var distCodes;\n  /** @type {{\n   *   codes: !(Array.<number>|Uint32Array),\n   *   freqs: !(Array.<number>|Uint8Array)\n   * }} */\n  var treeSymbols;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var treeLengths;\n  /** @type {Array} */\n  var transLengths = new Array(19);\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var treeCodes;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var bitlen;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // header\n  bfinal = isFinalBlock ? 1 : 0;\n  btype = Zlib.RawDeflate.CompressionType.DYNAMIC;\n\n  stream.writeBits(bfinal, 1, true);\n  stream.writeBits(btype, 2, true);\n\n  data = this.lz77(blockArray);\n\n  // リテラル・長さ, 距離のハフマン符号と符号長の算出\n  litLenLengths = this.getLengths_(this.freqsLitLen, 15);\n  litLenCodes = this.getCodesFromLengths_(litLenLengths);\n  distLengths = this.getLengths_(this.freqsDist, 7);\n  distCodes = this.getCodesFromLengths_(distLengths);\n\n  // HLIT, HDIST の決定\n  for (hlit = 286; hlit > 257 && litLenLengths[hlit - 1] === 0; hlit--) {}\n  for (hdist = 30; hdist > 1 && distLengths[hdist - 1] === 0; hdist--) {}\n\n  // HCLEN\n  treeSymbols =\n    this.getTreeSymbols_(hlit, litLenLengths, hdist, distLengths);\n  treeLengths = this.getLengths_(treeSymbols.freqs, 7);\n  for (i = 0; i < 19; i++) {\n    transLengths[i] = treeLengths[hclenOrder[i]];\n  }\n  for (hclen = 19; hclen > 4 && transLengths[hclen - 1] === 0; hclen--) {}\n\n  treeCodes = this.getCodesFromLengths_(treeLengths);\n\n  // 出力\n  stream.writeBits(hlit - 257, 5, true);\n  stream.writeBits(hdist - 1, 5, true);\n  stream.writeBits(hclen - 4, 4, true);\n  for (i = 0; i < hclen; i++) {\n    stream.writeBits(transLengths[i], 3, true);\n  }\n\n  // ツリーの出力\n  for (i = 0, il = treeSymbols.codes.length; i < il; i++) {\n    code = treeSymbols.codes[i];\n\n    stream.writeBits(treeCodes[code], treeLengths[code], true);\n\n    // extra bits\n    if (code >= 16) {\n      i++;\n      switch (code) {\n        case 16: bitlen = 2; break;\n        case 17: bitlen = 3; break;\n        case 18: bitlen = 7; break;\n        default:\n          throw 'invalid code: ' + code;\n      }\n\n      stream.writeBits(treeSymbols.codes[i], bitlen, true);\n    }\n  }\n\n  this.dynamicHuffman(\n    data,\n    [litLenCodes, litLenLengths],\n    [distCodes, distLengths],\n    stream\n  );\n\n  return stream.finish();\n};\n\n\n/**\n * 動的ハフマン符号化(カスタムハフマンテーブル)\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.dynamicHuffman =\nfunction(dataArray, litLen, dist, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n  /** @type {number} */\n  var code;\n  /** @type {number} */\n  var litLenCodes;\n  /** @type {number} */\n  var litLenLengths;\n  /** @type {number} */\n  var distCodes;\n  /** @type {number} */\n  var distLengths;\n\n  litLenCodes = litLen[0];\n  litLenLengths = litLen[1];\n  distCodes = dist[0];\n  distLengths = dist[1];\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; ++index) {\n    literal = dataArray[index];\n\n    // literal or length\n    stream.writeBits(litLenCodes[literal], litLenLengths[literal], true);\n\n    // 長さ・距離符号\n    if (literal > 256) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      code = dataArray[++index];\n      stream.writeBits(distCodes[code], distLengths[code], true);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n    // 終端\n    } else if (literal === 256) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * 固定ハフマン符号化\n * @param {!(Array.<number>|Uint16Array)} dataArray LZ77 符号化済み byte array.\n * @param {!Zlib.BitStream} stream 書き込み用ビットストリーム.\n * @return {!Zlib.BitStream} ハフマン符号化済みビットストリームオブジェクト.\n */\nZlib.RawDeflate.prototype.fixedHuffman = function(dataArray, stream) {\n  /** @type {number} */\n  var index;\n  /** @type {number} */\n  var length;\n  /** @type {number} */\n  var literal;\n\n  // 符号を BitStream に書き込んでいく\n  for (index = 0, length = dataArray.length; index < length; index++) {\n    literal = dataArray[index];\n\n    // 符号の書き込み\n    Zlib.BitStream.prototype.writeBits.apply(\n      stream,\n      Zlib.RawDeflate.FixedHuffmanTable[literal]\n    );\n\n    // 長さ・距離符号\n    if (literal > 0x100) {\n      // length extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n      // distance\n      stream.writeBits(dataArray[++index], 5);\n      // distance extra\n      stream.writeBits(dataArray[++index], dataArray[++index], true);\n    // 終端\n    } else if (literal === 0x100) {\n      break;\n    }\n  }\n\n  return stream;\n};\n\n/**\n * マッチ情報\n * @param {!number} length マッチした長さ.\n * @param {!number} backwardDistance マッチ位置との距離.\n * @constructor\n */\nZlib.RawDeflate.Lz77Match = function(length, backwardDistance) {\n  /** @type {number} match length. */\n  this.length = length;\n  /** @type {number} backward distance. */\n  this.backwardDistance = backwardDistance;\n};\n\n/**\n * 長さ符号テーブル.\n * [コード, 拡張ビット, 拡張ビット長] の配列となっている.\n * @const\n * @type {!(Array.<number>|Uint32Array)}\n */\nZlib.RawDeflate.Lz77Match.LengthCodeTable = (function(table) {\n  return USE_TYPEDARRAY ? new Uint32Array(table) : table;\n})((function() {\n  /** @type {!Array} */\n  var table = [];\n  /** @type {number} */\n  var i;\n  /** @type {!Array.<number>} */\n  var c;\n\n  for (i = 3; i <= 258; i++) {\n    c = code(i);\n    table[i] = (c[2] << 24) | (c[1] << 16) | c[0];\n  }\n\n  /**\n   * @param {number} length lz77 length.\n   * @return {!Array.<number>} lz77 codes.\n   */\n  function code(length) {\n    switch (true) {\n      case (length === 3): return [257, length - 3, 0]; break;\n      case (length === 4): return [258, length - 4, 0]; break;\n      case (length === 5): return [259, length - 5, 0]; break;\n      case (length === 6): return [260, length - 6, 0]; break;\n      case (length === 7): return [261, length - 7, 0]; break;\n      case (length === 8): return [262, length - 8, 0]; break;\n      case (length === 9): return [263, length - 9, 0]; break;\n      case (length === 10): return [264, length - 10, 0]; break;\n      case (length <= 12): return [265, length - 11, 1]; break;\n      case (length <= 14): return [266, length - 13, 1]; break;\n      case (length <= 16): return [267, length - 15, 1]; break;\n      case (length <= 18): return [268, length - 17, 1]; break;\n      case (length <= 22): return [269, length - 19, 2]; break;\n      case (length <= 26): return [270, length - 23, 2]; break;\n      case (length <= 30): return [271, length - 27, 2]; break;\n      case (length <= 34): return [272, length - 31, 2]; break;\n      case (length <= 42): return [273, length - 35, 3]; break;\n      case (length <= 50): return [274, length - 43, 3]; break;\n      case (length <= 58): return [275, length - 51, 3]; break;\n      case (length <= 66): return [276, length - 59, 3]; break;\n      case (length <= 82): return [277, length - 67, 4]; break;\n      case (length <= 98): return [278, length - 83, 4]; break;\n      case (length <= 114): return [279, length - 99, 4]; break;\n      case (length <= 130): return [280, length - 115, 4]; break;\n      case (length <= 162): return [281, length - 131, 5]; break;\n      case (length <= 194): return [282, length - 163, 5]; break;\n      case (length <= 226): return [283, length - 195, 5]; break;\n      case (length <= 257): return [284, length - 227, 5]; break;\n      case (length === 258): return [285, length - 258, 0]; break;\n      default: throw 'invalid length: ' + length;\n    }\n  }\n\n  return table;\n})());\n\n/**\n * 距離符号テーブル\n * @param {!number} dist 距離.\n * @return {!Array.<number>} コード、拡張ビット、拡張ビット長の配列.\n * @private\n */\nZlib.RawDeflate.Lz77Match.prototype.getDistanceCode_ = function(dist) {\n  /** @type {!Array.<number>} distance code table. */\n  var r;\n\n  switch (true) {\n    case (dist === 1): r = [0, dist - 1, 0]; break;\n    case (dist === 2): r = [1, dist - 2, 0]; break;\n    case (dist === 3): r = [2, dist - 3, 0]; break;\n    case (dist === 4): r = [3, dist - 4, 0]; break;\n    case (dist <= 6): r = [4, dist - 5, 1]; break;\n    case (dist <= 8): r = [5, dist - 7, 1]; break;\n    case (dist <= 12): r = [6, dist - 9, 2]; break;\n    case (dist <= 16): r = [7, dist - 13, 2]; break;\n    case (dist <= 24): r = [8, dist - 17, 3]; break;\n    case (dist <= 32): r = [9, dist - 25, 3]; break;\n    case (dist <= 48): r = [10, dist - 33, 4]; break;\n    case (dist <= 64): r = [11, dist - 49, 4]; break;\n    case (dist <= 96): r = [12, dist - 65, 5]; break;\n    case (dist <= 128): r = [13, dist - 97, 5]; break;\n    case (dist <= 192): r = [14, dist - 129, 6]; break;\n    case (dist <= 256): r = [15, dist - 193, 6]; break;\n    case (dist <= 384): r = [16, dist - 257, 7]; break;\n    case (dist <= 512): r = [17, dist - 385, 7]; break;\n    case (dist <= 768): r = [18, dist - 513, 8]; break;\n    case (dist <= 1024): r = [19, dist - 769, 8]; break;\n    case (dist <= 1536): r = [20, dist - 1025, 9]; break;\n    case (dist <= 2048): r = [21, dist - 1537, 9]; break;\n    case (dist <= 3072): r = [22, dist - 2049, 10]; break;\n    case (dist <= 4096): r = [23, dist - 3073, 10]; break;\n    case (dist <= 6144): r = [24, dist - 4097, 11]; break;\n    case (dist <= 8192): r = [25, dist - 6145, 11]; break;\n    case (dist <= 12288): r = [26, dist - 8193, 12]; break;\n    case (dist <= 16384): r = [27, dist - 12289, 12]; break;\n    case (dist <= 24576): r = [28, dist - 16385, 13]; break;\n    case (dist <= 32768): r = [29, dist - 24577, 13]; break;\n    default: throw 'invalid distance';\n  }\n\n  return r;\n};\n\n/**\n * マッチ情報を LZ77 符号化配列で返す.\n * なお、ここでは以下の内部仕様で符号化している\n * [ CODE, EXTRA-BIT-LEN, EXTRA, CODE, EXTRA-BIT-LEN, EXTRA ]\n * @return {!Array.<number>} LZ77 符号化 byte array.\n */\nZlib.RawDeflate.Lz77Match.prototype.toLz77Array = function() {\n  /** @type {number} */\n  var length = this.length;\n  /** @type {number} */\n  var dist = this.backwardDistance;\n  /** @type {Array} */\n  var codeArray = [];\n  /** @type {number} */\n  var pos = 0;\n  /** @type {!Array.<number>} */\n  var code;\n\n  // length\n  code = Zlib.RawDeflate.Lz77Match.LengthCodeTable[length];\n  codeArray[pos++] = code & 0xffff;\n  codeArray[pos++] = (code >> 16) & 0xff;\n  codeArray[pos++] = code >> 24;\n\n  // distance\n  code = this.getDistanceCode_(dist);\n  codeArray[pos++] = code[0];\n  codeArray[pos++] = code[1];\n  codeArray[pos++] = code[2];\n\n  return codeArray;\n};\n\n/**\n * LZ77 実装\n * @param {!(Array.<number>|Uint8Array)} dataArray LZ77 符号化するバイト配列.\n * @return {!(Array.<number>|Uint16Array)} LZ77 符号化した配列.\n */\nZlib.RawDeflate.prototype.lz77 = function(dataArray) {\n  /** @type {number} input position */\n  var position;\n  /** @type {number} input length */\n  var length;\n  /** @type {number} loop counter */\n  var i;\n  /** @type {number} loop limiter */\n  var il;\n  /** @type {number} chained-hash-table key */\n  var matchKey;\n  /** @type {Object.<number, Array.<number>>} chained-hash-table */\n  var table = {};\n  /** @const @type {number} */\n  var windowSize = Zlib.RawDeflate.WindowSize;\n  /** @type {Array.<number>} match list */\n  var matchList;\n  /** @type {Zlib.RawDeflate.Lz77Match} longest match */\n  var longestMatch;\n  /** @type {Zlib.RawDeflate.Lz77Match} previous longest match */\n  var prevMatch;\n  /** @type {!(Array.<number>|Uint16Array)} lz77 buffer */\n  var lz77buf = USE_TYPEDARRAY ?\n    new Uint16Array(dataArray.length * 2) : [];\n  /** @type {number} lz77 output buffer pointer */\n  var pos = 0;\n  /** @type {number} lz77 skip length */\n  var skipLength = 0;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsLitLen = new (USE_TYPEDARRAY ? Uint32Array : Array)(286);\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var freqsDist = new (USE_TYPEDARRAY ? Uint32Array : Array)(30);\n  /** @type {number} */\n  var lazy = this.lazy;\n  /** @type {*} temporary variable */\n  var tmp;\n\n  // 初期化\n  if (!USE_TYPEDARRAY) {\n    for (i = 0; i <= 285;) { freqsLitLen[i++] = 0; }\n    for (i = 0; i <= 29;) { freqsDist[i++] = 0; }\n  }\n  freqsLitLen[256] = 1; // EOB の最低出現回数は 1\n\n  /**\n   * マッチデータの書き込み\n   * @param {Zlib.RawDeflate.Lz77Match} match LZ77 Match data.\n   * @param {!number} offset スキップ開始位置(相対指定).\n   * @private\n   */\n  function writeMatch(match, offset) {\n    /** @type {Array.<number>} */\n    var lz77Array = match.toLz77Array();\n    /** @type {number} */\n    var i;\n    /** @type {number} */\n    var il;\n\n    for (i = 0, il = lz77Array.length; i < il; ++i) {\n      lz77buf[pos++] = lz77Array[i];\n    }\n    freqsLitLen[lz77Array[0]]++;\n    freqsDist[lz77Array[3]]++;\n    skipLength = match.length + offset - 1;\n    prevMatch = null;\n  }\n\n  // LZ77 符号化\n  for (position = 0, length = dataArray.length; position < length; ++position) {\n    // ハッシュキーの作成\n    for (matchKey = 0, i = 0, il = Zlib.RawDeflate.Lz77MinLength; i < il; ++i) {\n      if (position + i === length) {\n        break;\n      }\n      matchKey = (matchKey << 8) | dataArray[position + i];\n    }\n\n    // テーブルが未定義だったら作成する\n    if (table[matchKey] === void 0) { table[matchKey] = []; }\n    matchList = table[matchKey];\n\n    // skip\n    if (skipLength-- > 0) {\n      matchList.push(position);\n      continue;\n    }\n\n    // マッチテーブルの更新 (最大戻り距離を超えているものを削除する)\n    while (matchList.length > 0 && position - matchList[0] > windowSize) {\n      matchList.shift();\n    }\n\n    // データ末尾でマッチしようがない場合はそのまま流しこむ\n    if (position + Zlib.RawDeflate.Lz77MinLength >= length) {\n      if (prevMatch) {\n        writeMatch(prevMatch, -1);\n      }\n\n      for (i = 0, il = length - position; i < il; ++i) {\n        tmp = dataArray[position + i];\n        lz77buf[pos++] = tmp;\n        ++freqsLitLen[tmp];\n      }\n      break;\n    }\n\n    // マッチ候補から最長のものを探す\n    if (matchList.length > 0) {\n      longestMatch = this.searchLongestMatch_(dataArray, position, matchList);\n\n      if (prevMatch) {\n        // 現在のマッチの方が前回のマッチよりも長い\n        if (prevMatch.length < longestMatch.length) {\n          // write previous literal\n          tmp = dataArray[position - 1];\n          lz77buf[pos++] = tmp;\n          ++freqsLitLen[tmp];\n\n          // write current match\n          writeMatch(longestMatch, 0);\n        } else {\n          // write previous match\n          writeMatch(prevMatch, -1);\n        }\n      } else if (longestMatch.length < lazy) {\n        prevMatch = longestMatch;\n      } else {\n        writeMatch(longestMatch, 0);\n      }\n    // 前回マッチしていて今回マッチがなかったら前回のを採用\n    } else if (prevMatch) {\n      writeMatch(prevMatch, -1);\n    } else {\n      tmp = dataArray[position];\n      lz77buf[pos++] = tmp;\n      ++freqsLitLen[tmp];\n    }\n\n    matchList.push(position); // マッチテーブルに現在の位置を保存\n  }\n\n  // 終端処理\n  lz77buf[pos++] = 256;\n  freqsLitLen[256]++;\n  this.freqsLitLen = freqsLitLen;\n  this.freqsDist = freqsDist;\n\n  return /** @type {!(Uint16Array|Array.<number>)} */ (\n    USE_TYPEDARRAY ?  lz77buf.subarray(0, pos) : lz77buf\n  );\n};\n\n/**\n * マッチした候補の中から最長一致を探す\n * @param {!Object} data plain data byte array.\n * @param {!number} position plain data byte array position.\n * @param {!Array.<number>} matchList 候補となる位置の配列.\n * @return {!Zlib.RawDeflate.Lz77Match} 最長かつ最短距離のマッチオブジェクト.\n * @private\n */\nZlib.RawDeflate.prototype.searchLongestMatch_ =\nfunction(data, position, matchList) {\n  var match,\n      currentMatch,\n      matchMax = 0, matchLength,\n      i, j, l, dl = data.length;\n\n  // 候補を後ろから 1 つずつ絞り込んでゆく\n  permatch:\n  for (i = 0, l = matchList.length; i < l; i++) {\n    match = matchList[l - i - 1];\n    matchLength = Zlib.RawDeflate.Lz77MinLength;\n\n    // 前回までの最長一致を末尾から一致検索する\n    if (matchMax > Zlib.RawDeflate.Lz77MinLength) {\n      for (j = matchMax; j > Zlib.RawDeflate.Lz77MinLength; j--) {\n        if (data[match + j - 1] !== data[position + j - 1]) {\n          continue permatch;\n        }\n      }\n      matchLength = matchMax;\n    }\n\n    // 最長一致探索\n    while (matchLength < Zlib.RawDeflate.Lz77MaxLength &&\n           position + matchLength < dl &&\n           data[match + matchLength] === data[position + matchLength]) {\n      ++matchLength;\n    }\n\n    // マッチ長が同じ場合は後方を優先\n    if (matchLength > matchMax) {\n      currentMatch = match;\n      matchMax = matchLength;\n    }\n\n    // 最長が確定したら後の処理は省略\n    if (matchLength === Zlib.RawDeflate.Lz77MaxLength) {\n      break;\n    }\n  }\n\n  return new Zlib.RawDeflate.Lz77Match(matchMax, position - currentMatch);\n};\n\n/**\n * Tree-Transmit Symbols の算出\n * reference: PuTTY Deflate implementation\n * @param {number} hlit HLIT.\n * @param {!(Array.<number>|Uint8Array)} litlenLengths リテラルと長さ符号の符号長配列.\n * @param {number} hdist HDIST.\n * @param {!(Array.<number>|Uint8Array)} distLengths 距離符号の符号長配列.\n * @return {{\n *   codes: !(Array.<number>|Uint32Array),\n *   freqs: !(Array.<number>|Uint8Array)\n * }} Tree-Transmit Symbols.\n */\nZlib.RawDeflate.prototype.getTreeSymbols_ =\nfunction(hlit, litlenLengths, hdist, distLengths) {\n  var src = new (USE_TYPEDARRAY ? Uint32Array : Array)(hlit + hdist),\n      i, j, runLength, l,\n      result = new (USE_TYPEDARRAY ? Uint32Array : Array)(286 + 30),\n      nResult,\n      rpt,\n      freqs = new (USE_TYPEDARRAY ? Uint8Array : Array)(19);\n\n  j = 0;\n  for (i = 0; i < hlit; i++) {\n    src[j++] = litlenLengths[i];\n  }\n  for (i = 0; i < hdist; i++) {\n    src[j++] = distLengths[i];\n  }\n\n  // 初期化\n  if (!USE_TYPEDARRAY) {\n    for (i = 0, l = freqs.length; i < l; ++i) {\n      freqs[i] = 0;\n    }\n  }\n\n  // 符号化\n  nResult = 0;\n  for (i = 0, l = src.length; i < l; i += j) {\n    // Run Length Encoding\n    for (j = 1; i + j < l && src[i + j] === src[i]; ++j) {}\n\n    runLength = j;\n\n    if (src[i] === 0) {\n      // 0 の繰り返しが 3 回未満ならばそのまま\n      if (runLength < 3) {\n        while (runLength-- > 0) {\n          result[nResult++] = 0;\n          freqs[0]++;\n        }\n      } else {\n        while (runLength > 0) {\n          // 繰り返しは最大 138 までなので切り詰める\n          rpt = (runLength < 138 ? runLength : 138);\n\n          if (rpt > runLength - 3 && rpt < runLength) {\n            rpt = runLength - 3;\n          }\n\n          // 3-10 回 -> 17\n          if (rpt <= 10) {\n            result[nResult++] = 17;\n            result[nResult++] = rpt - 3;\n            freqs[17]++;\n          // 11-138 回 -> 18\n          } else {\n            result[nResult++] = 18;\n            result[nResult++] = rpt - 11;\n            freqs[18]++;\n          }\n\n          runLength -= rpt;\n        }\n      }\n    } else {\n      result[nResult++] = src[i];\n      freqs[src[i]]++;\n      runLength--;\n\n      // 繰り返し回数が3回未満ならばランレングス符号は要らない\n      if (runLength < 3) {\n        while (runLength-- > 0) {\n          result[nResult++] = src[i];\n          freqs[src[i]]++;\n        }\n      // 3 回以上ならばランレングス符号化\n      } else {\n        while (runLength > 0) {\n          // runLengthを 3-6 で分割\n          rpt = (runLength < 6 ? runLength : 6);\n\n          if (rpt > runLength - 3 && rpt < runLength) {\n            rpt = runLength - 3;\n          }\n\n          result[nResult++] = 16;\n          result[nResult++] = rpt - 3;\n          freqs[16]++;\n\n          runLength -= rpt;\n        }\n      }\n    }\n  }\n\n  return {\n    codes:\n      USE_TYPEDARRAY ? result.subarray(0, nResult) : result.slice(0, nResult),\n    freqs: freqs\n  };\n};\n\n/**\n * ハフマン符号の長さを取得する\n * @param {!(Array.<number>|Uint8Array|Uint32Array)} freqs 出現カウント.\n * @param {number} limit 符号長の制限.\n * @return {!(Array.<number>|Uint8Array)} 符号長配列.\n * @private\n */\nZlib.RawDeflate.prototype.getLengths_ = function(freqs, limit) {\n  /** @type {number} */\n  var nSymbols = freqs.length;\n  /** @type {Zlib.Heap} */\n  var heap = new Zlib.Heap(2 * Zlib.RawDeflate.HUFMAX);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var length = new (USE_TYPEDARRAY ? Uint8Array : Array)(nSymbols);\n  /** @type {Array} */\n  var nodes;\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var values;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  // 配列の初期化\n  if (!USE_TYPEDARRAY) {\n    for (i = 0; i < nSymbols; i++) {\n      length[i] = 0;\n    }\n  }\n\n  // ヒープの構築\n  for (i = 0; i < nSymbols; ++i) {\n    if (freqs[i] > 0) {\n      heap.push(i, freqs[i]);\n    }\n  }\n  nodes = new Array(heap.length / 2);\n  values = new (USE_TYPEDARRAY ? Uint32Array : Array)(heap.length / 2);\n\n  // 非 0 の要素が一つだけだった場合は、そのシンボルに符号長 1 を割り当てて終了\n  if (nodes.length === 1) {\n    length[heap.pop().index] = 1;\n    return length;\n  }\n\n  // Reverse Package Merge Algorithm による Canonical Huffman Code の符号長決定\n  for (i = 0, il = heap.length / 2; i < il; ++i) {\n    nodes[i] = heap.pop();\n    values[i] = nodes[i].value;\n  }\n  codeLength = this.reversePackageMerge_(values, values.length, limit);\n\n  for (i = 0, il = nodes.length; i < il; ++i) {\n    length[nodes[i].index] = codeLength[i];\n  }\n\n  return length;\n};\n\n/**\n * Reverse Package Merge Algorithm.\n * @param {!(Array.<number>|Uint32Array)} freqs sorted probability.\n * @param {number} symbols number of symbols.\n * @param {number} limit code length limit.\n * @return {!(Array.<number>|Uint8Array)} code lengths.\n */\nZlib.RawDeflate.prototype.reversePackageMerge_ = function(freqs, symbols, limit) {\n  /** @type {!(Array.<number>|Uint16Array)} */\n  var minimumCost = new (USE_TYPEDARRAY ? Uint16Array : Array)(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var flag = new (USE_TYPEDARRAY ? Uint8Array : Array)(limit);\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var codeLength = new (USE_TYPEDARRAY ? Uint8Array : Array)(symbols);\n  /** @type {Array} */\n  var value = new Array(limit);\n  /** @type {Array} */\n  var type  = new Array(limit);\n  /** @type {Array.<number>} */\n  var currentPosition = new Array(limit);\n  /** @type {number} */\n  var excess = (1 << limit) - symbols;\n  /** @type {number} */\n  var half = (1 << (limit - 1));\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n  /** @type {number} */\n  var t;\n  /** @type {number} */\n  var weight;\n  /** @type {number} */\n  var next;\n\n  /**\n   * @param {number} j\n   */\n  function takePackage(j) {\n    /** @type {number} */\n    var x = type[j][currentPosition[j]];\n\n    if (x === symbols) {\n      takePackage(j+1);\n      takePackage(j+1);\n    } else {\n      --codeLength[x];\n    }\n\n    ++currentPosition[j];\n  }\n\n  minimumCost[limit-1] = symbols;\n\n  for (j = 0; j < limit; ++j) {\n    if (excess < half) {\n      flag[j] = 0;\n    } else {\n      flag[j] = 1;\n      excess -= half;\n    }\n    excess <<= 1;\n    minimumCost[limit-2-j] = (minimumCost[limit-1-j] / 2 | 0) + symbols;\n  }\n  minimumCost[0] = flag[0];\n\n  value[0] = new Array(minimumCost[0]);\n  type[0]  = new Array(minimumCost[0]);\n  for (j = 1; j < limit; ++j) {\n    if (minimumCost[j] > 2 * minimumCost[j-1] + flag[j]) {\n      minimumCost[j] = 2 * minimumCost[j-1] + flag[j];\n    }\n    value[j] = new Array(minimumCost[j]);\n    type[j]  = new Array(minimumCost[j]);\n  }\n\n  for (i = 0; i < symbols; ++i) {\n    codeLength[i] = limit;\n  }\n\n  for (t = 0; t < minimumCost[limit-1]; ++t) {\n    value[limit-1][t] = freqs[t];\n    type[limit-1][t]  = t;\n  }\n\n  for (i = 0; i < limit; ++i) {\n    currentPosition[i] = 0;\n  }\n  if (flag[limit-1] === 1) {\n    --codeLength[0];\n    ++currentPosition[limit-1];\n  }\n\n  for (j = limit-2; j >= 0; --j) {\n    i = 0;\n    weight = 0;\n    next = currentPosition[j+1];\n\n    for (t = 0; t < minimumCost[j]; t++) {\n      weight = value[j+1][next] + value[j+1][next+1];\n\n      if (weight > freqs[i]) {\n        value[j][t] = weight;\n        type[j][t] = symbols;\n        next += 2;\n      } else {\n        value[j][t] = freqs[i];\n        type[j][t] = i;\n        ++i;\n      }\n    }\n\n    currentPosition[j] = 0;\n    if (flag[j] === 1) {\n      takePackage(j);\n    }\n  }\n\n  return codeLength;\n};\n\n/**\n * 符号長配列からハフマン符号を取得する\n * reference: PuTTY Deflate implementation\n * @param {!(Array.<number>|Uint8Array)} lengths 符号長配列.\n * @return {!(Array.<number>|Uint16Array)} ハフマン符号配列.\n * @private\n */\nZlib.RawDeflate.prototype.getCodesFromLengths_ = function(lengths) {\n  var codes = new (USE_TYPEDARRAY ? Uint16Array : Array)(lengths.length),\n      count = [],\n      startCode = [],\n      code = 0, i, il, j, m;\n\n  // Count the codes of each length.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    count[lengths[i]] = (count[lengths[i]] | 0) + 1;\n  }\n\n  // Determine the starting code for each length block.\n  for (i = 1, il = Zlib.RawDeflate.MaxCodeLength; i <= il; i++) {\n    startCode[i] = code;\n    code += count[i] | 0;\n    code <<= 1;\n  }\n\n  // Determine the code for each symbol. Mirrored, of course.\n  for (i = 0, il = lengths.length; i < il; i++) {\n    code = startCode[lengths[i]];\n    startCode[lengths[i]] += 1;\n    codes[i] = 0;\n\n    for (j = 0, m = lengths[i]; j < m; j++) {\n      codes[i] = (codes[i] << 1) | (code & 1);\n      code >>>= 1;\n    }\n  }\n\n  return codes;\n};\n\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {Object=} opt_params options.\n * @constructor\n */\nZlib.Unzip = function(input, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input =\n    (USE_TYPEDARRAY && (input instanceof Array)) ?\n    new Uint8Array(input) : input;\n  /** @type {number} */\n  this.ip = 0;\n  /** @type {number} */\n  this.eocdrOffset;\n  /** @type {number} */\n  this.numberOfThisDisk;\n  /** @type {number} */\n  this.startDisk;\n  /** @type {number} */\n  this.totalEntriesThisDisk;\n  /** @type {number} */\n  this.totalEntries;\n  /** @type {number} */\n  this.centralDirectorySize;\n  /** @type {number} */\n  this.centralDirectoryOffset;\n  /** @type {number} */\n  this.commentLength;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.comment;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  this.fileHeaderList;\n  /** @type {Object.<string, number>} */\n  this.filenameToIndex;\n  /** @type {boolean} */\n  this.verify = opt_params['verify'] || false;\n  /** @type {(Array.<number>|Uint8Array)} */\n  this.password = opt_params['password'];\n};\n\nZlib.Unzip.CompressionMethod = Zlib.Zip.CompressionMethod;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.FileHeaderSignature = Zlib.Zip.FileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.LocalFileHeaderSignature = Zlib.Zip.LocalFileHeaderSignature;\n\n/**\n * @type {Array.<number>}\n * @const\n */\nZlib.Unzip.CentralDirectorySignature = Zlib.Zip.CentralDirectorySignature;\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.FileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.version;\n  /** @type {number} */\n  this.os;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {number} */\n  this.fileCommentLength;\n  /** @type {number} */\n  this.diskNumberStart;\n  /** @type {number} */\n  this.internalFileAttributes;\n  /** @type {number} */\n  this.externalFileAttributes;\n  /** @type {number} */\n  this.relativeOffset;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.comment;\n};\n\nZlib.Unzip.FileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // central file header signature\n  if (input[ip++] !== Zlib.Unzip.FileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.FileHeaderSignature[3]) {\n    throw new Error('invalid file header signature');\n  }\n\n  // version made by\n  this.version = input[ip++];\n  this.os = input[ip++];\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file comment length\n  this.fileCommentLength = input[ip++] | (input[ip++] << 8);\n\n  // disk number start\n  this.diskNumberStart = input[ip++] | (input[ip++] << 8);\n\n  // internal file attributes\n  this.internalFileAttributes = input[ip++] | (input[ip++] << 8);\n\n  // external file attributes\n  this.externalFileAttributes =\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24);\n\n  // relative offset of local header\n  this.relativeOffset = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, USE_TYPEDARRAY ?\n    input.subarray(ip, ip += this.fileNameLength) :\n    input.slice(ip, ip += this.fileNameLength)\n  );\n\n  // extra field\n  this.extraField = USE_TYPEDARRAY ?\n    input.subarray(ip, ip += this.extraFieldLength) :\n    input.slice(ip, ip += this.extraFieldLength);\n\n  // file comment\n  this.comment = USE_TYPEDARRAY ?\n    input.subarray(ip, ip + this.fileCommentLength) :\n    input.slice(ip, ip + this.fileCommentLength);\n\n  this.length = ip - this.offset;\n};\n\n/**\n * @param {!(Array.<number>|Uint8Array)} input input buffer.\n * @param {number} ip input position.\n * @constructor\n */\nZlib.Unzip.LocalFileHeader = function(input, ip) {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.input = input;\n  /** @type {number} */\n  this.offset = ip;\n  /** @type {number} */\n  this.length;\n  /** @type {number} */\n  this.needVersion;\n  /** @type {number} */\n  this.flags;\n  /** @type {number} */\n  this.compression;\n  /** @type {number} */\n  this.time;\n  /** @type {number} */\n  this.date;\n  /** @type {number} */\n  this.crc32;\n  /** @type {number} */\n  this.compressedSize;\n  /** @type {number} */\n  this.plainSize;\n  /** @type {number} */\n  this.fileNameLength;\n  /** @type {number} */\n  this.extraFieldLength;\n  /** @type {string} */\n  this.filename;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  this.extraField;\n};\n\nZlib.Unzip.LocalFileHeader.Flags = Zlib.Zip.Flags;\n\nZlib.Unzip.LocalFileHeader.prototype.parse = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip = this.offset;\n\n  // local file header signature\n  if (input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[0] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[1] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[2] ||\n      input[ip++] !== Zlib.Unzip.LocalFileHeaderSignature[3]) {\n    throw new Error('invalid local file header signature');\n  }\n\n  // version needed to extract\n  this.needVersion = input[ip++] | (input[ip++] << 8);\n\n  // general purpose bit flag\n  this.flags = input[ip++] | (input[ip++] << 8);\n\n  // compression method\n  this.compression = input[ip++] | (input[ip++] << 8);\n\n  // last mod file time\n  this.time = input[ip++] | (input[ip++] << 8);\n\n  //last mod file date\n  this.date = input[ip++] | (input[ip++] << 8);\n\n  // crc-32\n  this.crc32 = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // compressed size\n  this.compressedSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // uncompressed size\n  this.plainSize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // file name length\n  this.fileNameLength = input[ip++] | (input[ip++] << 8);\n\n  // extra field length\n  this.extraFieldLength = input[ip++] | (input[ip++] << 8);\n\n  // file name\n  this.filename = String.fromCharCode.apply(null, USE_TYPEDARRAY ?\n    input.subarray(ip, ip += this.fileNameLength) :\n    input.slice(ip, ip += this.fileNameLength)\n  );\n\n  // extra field\n  this.extraField = USE_TYPEDARRAY ?\n    input.subarray(ip, ip += this.extraFieldLength) :\n    input.slice(ip, ip += this.extraFieldLength);\n\n  this.length = ip - this.offset;\n};\n\n\nZlib.Unzip.prototype.searchEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  for (ip = input.length - 12; ip > 0; --ip) {\n    if (input[ip  ] === Zlib.Unzip.CentralDirectorySignature[0] &&\n        input[ip+1] === Zlib.Unzip.CentralDirectorySignature[1] &&\n        input[ip+2] === Zlib.Unzip.CentralDirectorySignature[2] &&\n        input[ip+3] === Zlib.Unzip.CentralDirectorySignature[3]) {\n      this.eocdrOffset = ip;\n      return;\n    }\n  }\n\n  throw new Error('End of Central Directory Record not found');\n};\n\nZlib.Unzip.prototype.parseEndOfCentralDirectoryRecord = function() {\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {number} */\n  var ip;\n\n  if (!this.eocdrOffset) {\n    this.searchEndOfCentralDirectoryRecord();\n  }\n  ip = this.eocdrOffset;\n\n  // signature\n  if (input[ip++] !== Zlib.Unzip.CentralDirectorySignature[0] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[1] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[2] ||\n      input[ip++] !== Zlib.Unzip.CentralDirectorySignature[3]) {\n    throw new Error('invalid signature');\n  }\n\n  // number of this disk\n  this.numberOfThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // number of the disk with the start of the central directory\n  this.startDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory on this disk\n  this.totalEntriesThisDisk = input[ip++] | (input[ip++] << 8);\n\n  // total number of entries in the central directory\n  this.totalEntries = input[ip++] | (input[ip++] << 8);\n\n  // size of the central directory\n  this.centralDirectorySize = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // offset of start of central directory with respect to the starting disk number\n  this.centralDirectoryOffset = (\n    (input[ip++]      ) | (input[ip++] <<  8) |\n    (input[ip++] << 16) | (input[ip++] << 24)\n  ) >>> 0;\n\n  // .ZIP file comment length\n  this.commentLength = input[ip++] | (input[ip++] << 8);\n\n  // .ZIP file comment\n  this.comment = USE_TYPEDARRAY ?\n    input.subarray(ip, ip + this.commentLength) :\n    input.slice(ip, ip + this.commentLength);\n};\n\nZlib.Unzip.prototype.parseFileHeader = function() {\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var filelist = [];\n  /** @type {Object.<string, number>} */\n  var filetable = {};\n  /** @type {number} */\n  var ip;\n  /** @type {Zlib.Unzip.FileHeader} */\n  var fileHeader;\n  /*: @type {number} */\n  var i;\n  /*: @type {number} */\n  var il;\n\n  if (this.fileHeaderList) {\n    return;\n  }\n\n  if (this.centralDirectoryOffset === void 0) {\n    this.parseEndOfCentralDirectoryRecord();\n  }\n  ip = this.centralDirectoryOffset;\n\n  for (i = 0, il = this.totalEntries; i < il; ++i) {\n    fileHeader = new Zlib.Unzip.FileHeader(this.input, ip);\n    fileHeader.parse();\n    ip += fileHeader.length;\n    filelist[i] = fileHeader;\n    filetable[fileHeader.filename] = i;\n  }\n\n  if (this.centralDirectorySize < ip - this.centralDirectoryOffset) {\n    throw new Error('invalid file header size');\n  }\n\n  this.fileHeaderList = filelist;\n  this.filenameToIndex = filetable;\n};\n\n/**\n * @param {number} index file header index.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} file data.\n */\nZlib.Unzip.prototype.getFileData = function(index, opt_params) {\n  opt_params = opt_params || {};\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var input = this.input;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList = this.fileHeaderList;\n  /** @type {Zlib.Unzip.LocalFileHeader} */\n  var localFileHeader;\n  /** @type {number} */\n  var offset;\n  /** @type {number} */\n  var length;\n  /** @type {!(Array.<number>|Uint8Array)} */\n  var buffer;\n  /** @type {number} */\n  var crc32;\n  /** @type {Array.<number>|Uint32Array|Object} */\n  var key;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  if (!fileHeaderList) {\n    this.parseFileHeader();\n  }\n\n  if (fileHeaderList[index] === void 0) {\n    throw new Error('wrong index');\n  }\n\n  offset = fileHeaderList[index].relativeOffset;\n  localFileHeader = new Zlib.Unzip.LocalFileHeader(this.input, offset);\n  localFileHeader.parse();\n  offset += localFileHeader.length;\n  length = localFileHeader.compressedSize;\n\n  // decryption\n  if ((localFileHeader.flags & Zlib.Unzip.LocalFileHeader.Flags.ENCRYPT) !== 0) {\n    if (!(opt_params['password'] || this.password)) {\n      throw new Error('please set password');\n    }\n    key =  this.createDecryptionKey(opt_params['password'] || this.password);\n\n    // encryption header\n    for(i = offset, il = offset + 12; i < il; ++i) {\n      this.decode(key, input[i]);\n    }\n    offset += 12;\n    length -= 12;\n\n    // decryption\n    for (i = offset, il = offset + length; i < il; ++i) {\n      input[i] = this.decode(key, input[i]);\n    }\n  }\n\n  switch (localFileHeader.compression) {\n    case Zlib.Unzip.CompressionMethod.STORE:\n      buffer = USE_TYPEDARRAY ?\n        this.input.subarray(offset, offset + length) :\n        this.input.slice(offset, offset + length);\n      break;\n    case Zlib.Unzip.CompressionMethod.DEFLATE:\n      buffer = new Zlib.RawInflate(this.input, {\n        'index': offset,\n        'bufferSize': localFileHeader.plainSize\n      }).decompress();\n      break;\n    default:\n      throw new Error('unknown compression type');\n  }\n\n  if (this.verify) {\n    crc32 = Zlib.CRC32.calc(buffer);\n    if (localFileHeader.crc32 !== crc32) {\n      throw new Error(\n        'wrong crc: file=0x' + localFileHeader.crc32.toString(16) +\n        ', data=0x' + crc32.toString(16)\n      );\n    }\n  }\n\n  return buffer;\n};\n\n/**\n * @return {Array.<string>}\n */\nZlib.Unzip.prototype.getFilenames = function() {\n  /** @type {Array.<string>} */\n  var filenameList = [];\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n  /** @type {Array.<Zlib.Unzip.FileHeader>} */\n  var fileHeaderList;\n\n  if (!this.fileHeaderList) {\n    this.parseFileHeader();\n  }\n  fileHeaderList = this.fileHeaderList;\n\n  for (i = 0, il = fileHeaderList.length; i < il; ++i) {\n    filenameList[i] = fileHeaderList[i].filename;\n  }\n\n  return filenameList;\n};\n\n/**\n * @param {string} filename extract filename.\n * @param {Object=} opt_params\n * @return {!(Array.<number>|Uint8Array)} decompressed data.\n */\nZlib.Unzip.prototype.decompress = function(filename, opt_params) {\n  /** @type {number} */\n  var index;\n\n  if (!this.filenameToIndex) {\n    this.parseFileHeader();\n  }\n  index = this.filenameToIndex[filename];\n\n  if (index === void 0) {\n    throw new Error(filename + ' not found');\n  }\n\n  return this.getFileData(index, opt_params);\n};\n\n/**\n * @param {(Array.<number>|Uint8Array)} password\n */\nZlib.Unzip.prototype.setPassword = function(password) {\n  this.password = password;\n};\n\n/**\n * @param {(Array.<number>|Uint32Array|Object)} key\n * @param {number} n\n * @return {number}\n */\nZlib.Unzip.prototype.decode = function(key, n) {\n  n ^= this.getByte(/** @type {(Array.<number>|Uint32Array)} */(key));\n  this.updateKeys(/** @type {(Array.<number>|Uint32Array)} */(key), n);\n\n  return n;\n};\n\n// common method\nZlib.Unzip.prototype.updateKeys = Zlib.Zip.prototype.updateKeys;\nZlib.Unzip.prototype.createDecryptionKey = Zlib.Zip.prototype.createEncryptionKey;\nZlib.Unzip.prototype.getByte = Zlib.Zip.prototype.getByte;\n\n/**\n * @fileoverview 雑多な関数群をまとめたモジュール実装.\n */\n\n\n/**\n * Byte String から Byte Array に変換.\n * @param {!string} str byte string.\n * @return {!Array.<number>} byte array.\n */\nZlib.Util.stringToByteArray = function(str) {\n  /** @type {!Array.<(string|number)>} */\n  var tmp = str.split('');\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var il;\n\n  for (i = 0, il = tmp.length; i < il; i++) {\n    tmp[i] = (tmp[i].charCodeAt(0) & 0xff) >>> 0;\n  }\n\n  return tmp;\n};\n\n\n/**\n * @fileoverview Adler32 checksum 実装.\n */\n\n\n/**\n * Adler32 ハッシュ値の作成\n * @param {!(Array|Uint8Array|string)} array 算出に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32 = function(array) {\n  if (typeof(array) === 'string') {\n    array = Zlib.Util.stringToByteArray(array);\n  }\n  return Zlib.Adler32.update(1, array);\n};\n\n/**\n * Adler32 ハッシュ値の更新\n * @param {number} adler 現在のハッシュ値.\n * @param {!(Array|Uint8Array)} array 更新に使用する byte array.\n * @return {number} Adler32 ハッシュ値.\n */\nZlib.Adler32.update = function(adler, array) {\n  /** @type {number} */\n  var s1 = adler & 0xffff;\n  /** @type {number} */\n  var s2 = (adler >>> 16) & 0xffff;\n  /** @type {number} array length */\n  var len = array.length;\n  /** @type {number} loop length (don't overflow) */\n  var tlen;\n  /** @type {number} array index */\n  var i = 0;\n\n  while (len > 0) {\n    tlen = len > Zlib.Adler32.OptimizationParameter ?\n      Zlib.Adler32.OptimizationParameter : len;\n    len -= tlen;\n    do {\n      s1 += array[i++];\n      s2 += s1;\n    } while (--tlen);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return ((s2 << 16) | s1) >>> 0;\n};\n\n/**\n * Adler32 最適化パラメータ\n * 現状では 1024 程度が最適.\n * @see http://jsperf.com/adler-32-simple-vs-optimized/3\n * @define {number}\n */\nZlib.Adler32.OptimizationParameter = 1024;\n\n\n\n\n/**\n * ビットストリーム\n * @constructor\n * @param {!(Array|Uint8Array)=} buffer output buffer.\n * @param {number=} bufferPosition start buffer pointer.\n */\nZlib.BitStream = function(buffer, bufferPosition) {\n  /** @type {number} buffer index. */\n  this.index = typeof bufferPosition === 'number' ? bufferPosition : 0;\n  /** @type {number} bit index. */\n  this.bitindex = 0;\n  /** @type {!(Array|Uint8Array)} bit-stream output buffer. */\n  this.buffer = buffer instanceof (USE_TYPEDARRAY ? Uint8Array : Array) ?\n    buffer :\n    new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.BitStream.DefaultBlockSize);\n\n  // 入力された index が足りなかったら拡張するが、倍にしてもダメなら不正とする\n  if (this.buffer.length * 2 <= this.index) {\n    throw new Error(\"invalid index\");\n  } else if (this.buffer.length <= this.index) {\n    this.expandBuffer();\n  }\n};\n\n/**\n * デフォルトブロックサイズ.\n * @const\n * @type {number}\n */\nZlib.BitStream.DefaultBlockSize = 0x8000;\n\n/**\n * expand buffer.\n * @return {!(Array|Uint8Array)} new buffer.\n */\nZlib.BitStream.prototype.expandBuffer = function() {\n  /** @type {!(Array|Uint8Array)} old buffer. */\n  var oldbuf = this.buffer;\n  /** @type {number} loop counter. */\n  var i;\n  /** @type {number} loop limiter. */\n  var il = oldbuf.length;\n  /** @type {!(Array|Uint8Array)} new buffer. */\n  var buffer =\n    new (USE_TYPEDARRAY ? Uint8Array : Array)(il << 1);\n\n  // copy buffer\n  if (USE_TYPEDARRAY) {\n    buffer.set(oldbuf);\n  } else {\n    // XXX: loop unrolling\n    for (i = 0; i < il; ++i) {\n      buffer[i] = oldbuf[i];\n    }\n  }\n\n  return (this.buffer = buffer);\n};\n\n\n/**\n * 数値をビットで指定した数だけ書き込む.\n * @param {number} number 書き込む数値.\n * @param {number} n 書き込むビット数.\n * @param {boolean=} reverse 逆順に書き込むならば true.\n */\nZlib.BitStream.prototype.writeBits = function(number, n, reverse) {\n  var buffer = this.buffer;\n  var index = this.index;\n  var bitindex = this.bitindex;\n\n  /** @type {number} current octet. */\n  var current = buffer[index];\n  /** @type {number} loop counter. */\n  var i;\n\n  /**\n   * 32-bit 整数のビット順を逆にする\n   * @param {number} n 32-bit integer.\n   * @return {number} reversed 32-bit integer.\n   * @private\n   */\n  function rev32_(n) {\n    return (Zlib.BitStream.ReverseTable[n & 0xFF] << 24) |\n      (Zlib.BitStream.ReverseTable[n >>> 8 & 0xFF] << 16) |\n      (Zlib.BitStream.ReverseTable[n >>> 16 & 0xFF] << 8) |\n      Zlib.BitStream.ReverseTable[n >>> 24 & 0xFF];\n  }\n\n  if (reverse && n > 1) {\n    number = n > 8 ?\n      rev32_(number) >> (32 - n) :\n      Zlib.BitStream.ReverseTable[number] >> (8 - n);\n  }\n\n  // Byte 境界を超えないとき\n  if (n + bitindex < 8) {\n    current = (current << n) | number;\n    bitindex += n;\n  // Byte 境界を超えるとき\n  } else {\n    for (i = 0; i < n; ++i) {\n      current = (current << 1) | ((number >> n - i - 1) & 1);\n\n      // next byte\n      if (++bitindex === 8) {\n        bitindex = 0;\n        buffer[index++] = Zlib.BitStream.ReverseTable[current];\n        current = 0;\n\n        // expand\n        if (index === buffer.length) {\n          buffer = this.expandBuffer();\n        }\n      }\n    }\n  }\n  buffer[index] = current;\n\n  this.buffer = buffer;\n  this.bitindex = bitindex;\n  this.index = index;\n};\n\n\n/**\n * ストリームの終端処理を行う\n * @return {!(Array|Uint8Array)} 終端処理後のバッファを byte array で返す.\n */\nZlib.BitStream.prototype.finish = function() {\n  var buffer = this.buffer;\n  var index = this.index;\n\n  /** @type {!(Array|Uint8Array)} output buffer. */\n  var output;\n\n  // bitindex が 0 の時は余分に index が進んでいる状態\n  if (this.bitindex > 0) {\n    buffer[index] <<= 8 - this.bitindex;\n    buffer[index] = Zlib.BitStream.ReverseTable[buffer[index]];\n    index++;\n  }\n\n  // array truncation\n  if (USE_TYPEDARRAY) {\n    output = buffer.subarray(0, index);\n  } else {\n    buffer.length = index;\n    output = buffer;\n  }\n\n  return output;\n};\n\n/**\n * 0-255 のビット順を反転したテーブル\n * @const\n * @type {!(Uint8Array|Array.<number>)}\n */\nZlib.BitStream.ReverseTable = (function(table) {\n  return table;\n})((function() {\n  /** @type {!(Array|Uint8Array)} reverse table. */\n  var table = new (USE_TYPEDARRAY ? Uint8Array : Array)(256);\n  /** @type {number} loop counter. */\n  var i;\n\n  // generate\n  for (i = 0; i < 256; ++i) {\n    table[i] = (function(n) {\n      var r = n;\n      var s = 7;\n\n      for (n >>>= 1; n; n >>>= 1) {\n        r <<= 1;\n        r |= n & 1;\n        --s;\n      }\n\n      return (r << s & 0xff) >>> 0;\n    })(i);\n  }\n\n  return table;\n})());\n\n\n/**\n * @fileoverview CRC32 実装.\n */\n\n\n/** @define {boolean} */\nvar ZLIB_CRC32_COMPACT = false;\n\n/**\n * CRC32 ハッシュ値を取得\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.calc = function(data, pos, length) {\n  return Zlib.CRC32.update(data, 0, pos, length);\n};\n\n/**\n * CRC32ハッシュ値を更新\n * @param {!(Array.<number>|Uint8Array)} data data byte array.\n * @param {number} crc CRC32.\n * @param {number=} pos data position.\n * @param {number=} length data length.\n * @return {number} CRC32.\n */\nZlib.CRC32.update = function(data, crc, pos, length) {\n  var table = Zlib.CRC32.Table;\n  var i = (typeof pos === 'number') ? pos : (pos = 0);\n  var il = (typeof length === 'number') ? length : data.length;\n\n  crc ^= 0xffffffff;\n\n  // loop unrolling for performance\n  for (i = il & 7; i--; ++pos) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos]) & 0xff];\n  }\n  for (i = il >> 3; i--; pos += 8) {\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos    ]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 1]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 2]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 3]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 4]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 5]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 6]) & 0xff];\n    crc = (crc >>> 8) ^ table[(crc ^ data[pos + 7]) & 0xff];\n  }\n\n  return (crc ^ 0xffffffff) >>> 0;\n};\n\n/**\n * @param {number} num\n * @param {number} crc\n * @returns {number}\n */\nZlib.CRC32.single = function(num, crc) {\n  return (Zlib.CRC32.Table[(num ^ crc) & 0xff] ^ (num >>> 8)) >>> 0;\n};\n\n/**\n * @type {Array.<number>}\n * @const\n * @private\n */\nZlib.CRC32.Table_ = [\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,\n  0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n  0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n  0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n  0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,\n  0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n  0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n  0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,\n  0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,\n  0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n  0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,\n  0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,\n  0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n  0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n  0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,\n  0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n  0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n  0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n  0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,\n  0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,\n  0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n  0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n  0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n  0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,\n  0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n  0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n  0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,\n  0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n];\n\n/**\n * @type {!(Array.<number>|Uint32Array)} CRC-32 Table.\n * @const\n */\nZlib.CRC32.Table = ZLIB_CRC32_COMPACT ? (function() {\n  /** @type {!(Array.<number>|Uint32Array)} */\n  var table = new (USE_TYPEDARRAY ? Uint32Array : Array)(256);\n  /** @type {number} */\n  var c;\n  /** @type {number} */\n  var i;\n  /** @type {number} */\n  var j;\n\n  for (i = 0; i < 256; ++i) {\n    c = i;\n    for (j = 0; j < 8; ++j) {\n      c = (c & 1) ? (0xedB88320 ^ (c >>> 1)) : (c >>> 1);\n    }\n    table[i] = c >>> 0;\n  }\n\n  return table;\n})() : USE_TYPEDARRAY ? new Uint32Array(Zlib.CRC32.Table_) : Zlib.CRC32.Table_;\n\n/**\n * @fileoverview Deflate (RFC1951) 実装.\n * Deflateアルゴリズム本体は Zlib.RawDeflate で実装されている.\n */\n\n/**\n * Zlib Deflate\n * @constructor\n * @param {!(Array|Uint8Array)} input 符号化する対象の byte array.\n * @param {Object=} opt_params option parameters.\n */\nZlib.Deflate = function(input, opt_params) {\n  /** @type {!(Array|Uint8Array)} */\n  this.input = input;\n  /** @type {!(Array|Uint8Array)} */\n  this.output =\n    new (USE_TYPEDARRAY ? Uint8Array : Array)(Zlib.Deflate.DefaultBufferSize);\n  /** @type {Zlib.Deflate.CompressionType} */\n  this.compressionType = Zlib.Deflate.CompressionType.DYNAMIC;\n  /** @type {Zlib.RawDeflate} */\n  this.rawDeflate;\n  /** @type {Object} */\n  var rawDeflateOption = {};\n  /** @type {string} */\n  var prop;\n\n  // option parameters\n  if (opt_params || !(opt_params = {})) {\n    if (typeof opt_params['compressionType'] === 'number') {\n      this.compressionType = opt_params['compressionType'];\n    }\n  }\n\n  // copy options\n  for (prop in opt_params) {\n    rawDeflateOption[prop] = opt_params[prop];\n  }\n\n  // set raw-deflate output buffer\n  rawDeflateOption['outputBuffer'] = this.output;\n\n  this.rawDeflate = new Zlib.RawDeflate(this.input, rawDeflateOption);\n};\n\n/**\n * @const\n * @type {number} デフォルトバッファサイズ.\n */\nZlib.Deflate.DefaultBufferSize = 0x8000;\n\n/**\n * @enum {number}\n */\nZlib.Deflate.CompressionType = Zlib.RawDeflate.CompressionType;\n\n/**\n * 直接圧縮に掛ける.\n * @param {!(Array|Uint8Array)} input target buffer.\n * @param {Object=} opt_params option parameters.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.compress = function(input, opt_params) {\n  return (new Zlib.Deflate(input, opt_params)).compress();\n};\n\n/**\n * Deflate Compression.\n * @return {!(Array|Uint8Array)} compressed data byte array.\n */\nZlib.Deflate.prototype.compress = function() {\n  /** @type {Zlib.CompressionMethod} */\n  var cm;\n  /** @type {number} */\n  var cinfo;\n  /** @type {number} */\n  var cmf;\n  /** @type {number} */\n  var flg;\n  /** @type {number} */\n  var fcheck;\n  /** @type {number} */\n  var fdict;\n  /** @type {number} */\n  var flevel;\n  /** @type {number} */\n  var clevel;\n  /** @type {number} */\n  var adler;\n  /** @type {boolean} */\n  var error = false;\n  /** @type {!(Array|Uint8Array)} */\n  var output;\n  /** @type {number} */\n  var pos = 0;\n\n  output = this.output;\n\n  // Compression Method and Flags\n  cm = Zlib.CompressionMethod.DEFLATE;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      cinfo = Math.LOG2E * Math.log(Zlib.RawDeflate.WindowSize) - 8;\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  cmf = (cinfo << 4) | cm;\n  output[pos++] = cmf;\n\n  // Flags\n  fdict = 0;\n  switch (cm) {\n    case Zlib.CompressionMethod.DEFLATE:\n      switch (this.compressionType) {\n        case Zlib.Deflate.CompressionType.NONE: flevel = 0; break;\n        case Zlib.Deflate.CompressionType.FIXED: flevel = 1; break;\n        case Zlib.Deflate.CompressionType.DYNAMIC: flevel = 2; break;\n        default: throw new Error('unsupported compression type');\n      }\n      break;\n    default:\n      throw new Error('invalid compression method');\n  }\n  flg = (flevel << 6) | (fdict << 5);\n  fcheck = 31 - (cmf * 256 + flg) % 31;\n  flg |= fcheck;\n  output[pos++] = flg;\n\n  // Adler-32 checksum\n  adler = Zlib.Adler32(this.input);\n\n  this.rawDeflate.op = pos;\n  output = this.rawDeflate.compress();\n  pos = output.length;\n\n  if (USE_TYPEDARRAY) {\n    // subarray 分を元にもどす\n    output = new Uint8Array(output.buffer);\n    // expand buffer\n    if (output.length <= pos + 4) {\n      this.output = new Uint8Array(output.length + 4);\n      this.output.set(output);\n      output = this.output;\n    }\n    output = output.subarray(0, pos + 4);\n  }\n\n  // adler32\n  output[pos++] = (adler >> 24) & 0xff;\n  output[pos++] = (adler >> 16) & 0xff;\n  output[pos++] = (adler >>  8) & 0xff;\n  output[pos++] = (adler      ) & 0xff;\n\n  return output;\n};\n\n\n/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: nil -*- */\n\n// \n// Javascript ZLib\n// By Thomas Down 2010-2011\n//\n// Based very heavily on portions of jzlib (by ymnk@jcraft.com), who in\n// turn credits Jean-loup Gailly and Mark Adler for the original zlib code.\n//\n// inflate.js: ZLib inflate code\n//\n\n//\n// Shared constants\n//\n\nvar MAX_WBITS=15; // 32K LZ77 window\nvar DEF_WBITS=MAX_WBITS;\nvar MAX_MEM_LEVEL=9;\nvar MANY=1440;\nvar BMAX = 15;\n\n// preset dictionary flag in zlib header\nvar PRESET_DICT=0x20;\n\nvar Z_NO_FLUSH=0;\nvar Z_PARTIAL_FLUSH=1;\nvar Z_SYNC_FLUSH=2;\nvar Z_FULL_FLUSH=3;\nvar Z_FINISH=4;\n\nvar Z_DEFLATED=8;\n\nvar Z_OK=0;\nvar Z_STREAM_END=1;\nvar Z_NEED_DICT=2;\nvar Z_ERRNO=-1;\nvar Z_STREAM_ERROR=-2;\nvar Z_DATA_ERROR=-3;\nvar Z_MEM_ERROR=-4;\nvar Z_BUF_ERROR=-5;\nvar Z_VERSION_ERROR=-6;\n\nvar METHOD=0;   // waiting for method byte\nvar FLAG=1;     // waiting for flag byte\nvar DICT4=2;    // four dictionary check bytes to go\nvar DICT3=3;    // three dictionary check bytes to go\nvar DICT2=4;    // two dictionary check bytes to go\nvar DICT1=5;    // one dictionary check byte to go\nvar DICT0=6;    // waiting for inflateSetDictionary\nvar BLOCKS=7;   // decompressing blocks\nvar CHECK4=8;   // four check bytes to go\nvar CHECK3=9;   // three check bytes to go\nvar CHECK2=10;  // two check bytes to go\nvar CHECK1=11;  // one check byte to go\nvar DONE=12;    // finished check, done\nvar BAD=13;     // got an error--stay here\n\nvar inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff, 0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\nvar IB_TYPE=0;  // get type bits (3, including end bit)\nvar IB_LENS=1;  // get lengths for stored\nvar IB_STORED=2;// processing stored block\nvar IB_TABLE=3; // get table lengths\nvar IB_BTREE=4; // get bit lengths tree for a dynamic block\nvar IB_DTREE=5; // get length, distance trees for a dynamic block\nvar IB_CODES=6; // processing fixed or dynamic block\nvar IB_DRY=7;   // output remaining window bytes\nvar IB_DONE=8;  // finished last block, done\nvar IB_BAD=9;   // ot a data error--stuck here\n\nvar fixed_bl = 9;\nvar fixed_bd = 5;\n\nvar fixed_tl = [\n    96,7,256, 0,8,80, 0,8,16, 84,8,115,\n    82,7,31, 0,8,112, 0,8,48, 0,9,192,\n    80,7,10, 0,8,96, 0,8,32, 0,9,160,\n    0,8,0, 0,8,128, 0,8,64, 0,9,224,\n    80,7,6, 0,8,88, 0,8,24, 0,9,144,\n    83,7,59, 0,8,120, 0,8,56, 0,9,208,\n    81,7,17, 0,8,104, 0,8,40, 0,9,176,\n    0,8,8, 0,8,136, 0,8,72, 0,9,240,\n    80,7,4, 0,8,84, 0,8,20, 85,8,227,\n    83,7,43, 0,8,116, 0,8,52, 0,9,200,\n    81,7,13, 0,8,100, 0,8,36, 0,9,168,\n    0,8,4, 0,8,132, 0,8,68, 0,9,232,\n    80,7,8, 0,8,92, 0,8,28, 0,9,152,\n    84,7,83, 0,8,124, 0,8,60, 0,9,216,\n    82,7,23, 0,8,108, 0,8,44, 0,9,184,\n    0,8,12, 0,8,140, 0,8,76, 0,9,248,\n    80,7,3, 0,8,82, 0,8,18, 85,8,163,\n    83,7,35, 0,8,114, 0,8,50, 0,9,196,\n    81,7,11, 0,8,98, 0,8,34, 0,9,164,\n    0,8,2, 0,8,130, 0,8,66, 0,9,228,\n    80,7,7, 0,8,90, 0,8,26, 0,9,148,\n    84,7,67, 0,8,122, 0,8,58, 0,9,212,\n    82,7,19, 0,8,106, 0,8,42, 0,9,180,\n    0,8,10, 0,8,138, 0,8,74, 0,9,244,\n    80,7,5, 0,8,86, 0,8,22, 192,8,0,\n    83,7,51, 0,8,118, 0,8,54, 0,9,204,\n    81,7,15, 0,8,102, 0,8,38, 0,9,172,\n    0,8,6, 0,8,134, 0,8,70, 0,9,236,\n    80,7,9, 0,8,94, 0,8,30, 0,9,156,\n    84,7,99, 0,8,126, 0,8,62, 0,9,220,\n    82,7,27, 0,8,110, 0,8,46, 0,9,188,\n    0,8,14, 0,8,142, 0,8,78, 0,9,252,\n    96,7,256, 0,8,81, 0,8,17, 85,8,131,\n    82,7,31, 0,8,113, 0,8,49, 0,9,194,\n    80,7,10, 0,8,97, 0,8,33, 0,9,162,\n    0,8,1, 0,8,129, 0,8,65, 0,9,226,\n    80,7,6, 0,8,89, 0,8,25, 0,9,146,\n    83,7,59, 0,8,121, 0,8,57, 0,9,210,\n    81,7,17, 0,8,105, 0,8,41, 0,9,178,\n    0,8,9, 0,8,137, 0,8,73, 0,9,242,\n    80,7,4, 0,8,85, 0,8,21, 80,8,258,\n    83,7,43, 0,8,117, 0,8,53, 0,9,202,\n    81,7,13, 0,8,101, 0,8,37, 0,9,170,\n    0,8,5, 0,8,133, 0,8,69, 0,9,234,\n    80,7,8, 0,8,93, 0,8,29, 0,9,154,\n    84,7,83, 0,8,125, 0,8,61, 0,9,218,\n    82,7,23, 0,8,109, 0,8,45, 0,9,186,\n    0,8,13, 0,8,141, 0,8,77, 0,9,250,\n    80,7,3, 0,8,83, 0,8,19, 85,8,195,\n    83,7,35, 0,8,115, 0,8,51, 0,9,198,\n    81,7,11, 0,8,99, 0,8,35, 0,9,166,\n    0,8,3, 0,8,131, 0,8,67, 0,9,230,\n    80,7,7, 0,8,91, 0,8,27, 0,9,150,\n    84,7,67, 0,8,123, 0,8,59, 0,9,214,\n    82,7,19, 0,8,107, 0,8,43, 0,9,182,\n    0,8,11, 0,8,139, 0,8,75, 0,9,246,\n    80,7,5, 0,8,87, 0,8,23, 192,8,0,\n    83,7,51, 0,8,119, 0,8,55, 0,9,206,\n    81,7,15, 0,8,103, 0,8,39, 0,9,174,\n    0,8,7, 0,8,135, 0,8,71, 0,9,238,\n    80,7,9, 0,8,95, 0,8,31, 0,9,158,\n    84,7,99, 0,8,127, 0,8,63, 0,9,222,\n    82,7,27, 0,8,111, 0,8,47, 0,9,190,\n    0,8,15, 0,8,143, 0,8,79, 0,9,254,\n    96,7,256, 0,8,80, 0,8,16, 84,8,115,\n    82,7,31, 0,8,112, 0,8,48, 0,9,193,\n\n    80,7,10, 0,8,96, 0,8,32, 0,9,161,\n    0,8,0, 0,8,128, 0,8,64, 0,9,225,\n    80,7,6, 0,8,88, 0,8,24, 0,9,145,\n    83,7,59, 0,8,120, 0,8,56, 0,9,209,\n    81,7,17, 0,8,104, 0,8,40, 0,9,177,\n    0,8,8, 0,8,136, 0,8,72, 0,9,241,\n    80,7,4, 0,8,84, 0,8,20, 85,8,227,\n    83,7,43, 0,8,116, 0,8,52, 0,9,201,\n    81,7,13, 0,8,100, 0,8,36, 0,9,169,\n    0,8,4, 0,8,132, 0,8,68, 0,9,233,\n    80,7,8, 0,8,92, 0,8,28, 0,9,153,\n    84,7,83, 0,8,124, 0,8,60, 0,9,217,\n    82,7,23, 0,8,108, 0,8,44, 0,9,185,\n    0,8,12, 0,8,140, 0,8,76, 0,9,249,\n    80,7,3, 0,8,82, 0,8,18, 85,8,163,\n    83,7,35, 0,8,114, 0,8,50, 0,9,197,\n    81,7,11, 0,8,98, 0,8,34, 0,9,165,\n    0,8,2, 0,8,130, 0,8,66, 0,9,229,\n    80,7,7, 0,8,90, 0,8,26, 0,9,149,\n    84,7,67, 0,8,122, 0,8,58, 0,9,213,\n    82,7,19, 0,8,106, 0,8,42, 0,9,181,\n    0,8,10, 0,8,138, 0,8,74, 0,9,245,\n    80,7,5, 0,8,86, 0,8,22, 192,8,0,\n    83,7,51, 0,8,118, 0,8,54, 0,9,205,\n    81,7,15, 0,8,102, 0,8,38, 0,9,173,\n    0,8,6, 0,8,134, 0,8,70, 0,9,237,\n    80,7,9, 0,8,94, 0,8,30, 0,9,157,\n    84,7,99, 0,8,126, 0,8,62, 0,9,221,\n    82,7,27, 0,8,110, 0,8,46, 0,9,189,\n    0,8,14, 0,8,142, 0,8,78, 0,9,253,\n    96,7,256, 0,8,81, 0,8,17, 85,8,131,\n    82,7,31, 0,8,113, 0,8,49, 0,9,195,\n    80,7,10, 0,8,97, 0,8,33, 0,9,163,\n    0,8,1, 0,8,129, 0,8,65, 0,9,227,\n    80,7,6, 0,8,89, 0,8,25, 0,9,147,\n    83,7,59, 0,8,121, 0,8,57, 0,9,211,\n    81,7,17, 0,8,105, 0,8,41, 0,9,179,\n    0,8,9, 0,8,137, 0,8,73, 0,9,243,\n    80,7,4, 0,8,85, 0,8,21, 80,8,258,\n    83,7,43, 0,8,117, 0,8,53, 0,9,203,\n    81,7,13, 0,8,101, 0,8,37, 0,9,171,\n    0,8,5, 0,8,133, 0,8,69, 0,9,235,\n    80,7,8, 0,8,93, 0,8,29, 0,9,155,\n    84,7,83, 0,8,125, 0,8,61, 0,9,219,\n    82,7,23, 0,8,109, 0,8,45, 0,9,187,\n    0,8,13, 0,8,141, 0,8,77, 0,9,251,\n    80,7,3, 0,8,83, 0,8,19, 85,8,195,\n    83,7,35, 0,8,115, 0,8,51, 0,9,199,\n    81,7,11, 0,8,99, 0,8,35, 0,9,167,\n    0,8,3, 0,8,131, 0,8,67, 0,9,231,\n    80,7,7, 0,8,91, 0,8,27, 0,9,151,\n    84,7,67, 0,8,123, 0,8,59, 0,9,215,\n    82,7,19, 0,8,107, 0,8,43, 0,9,183,\n    0,8,11, 0,8,139, 0,8,75, 0,9,247,\n    80,7,5, 0,8,87, 0,8,23, 192,8,0,\n    83,7,51, 0,8,119, 0,8,55, 0,9,207,\n    81,7,15, 0,8,103, 0,8,39, 0,9,175,\n    0,8,7, 0,8,135, 0,8,71, 0,9,239,\n    80,7,9, 0,8,95, 0,8,31, 0,9,159,\n    84,7,99, 0,8,127, 0,8,63, 0,9,223,\n    82,7,27, 0,8,111, 0,8,47, 0,9,191,\n    0,8,15, 0,8,143, 0,8,79, 0,9,255\n];\nvar fixed_td = [\n    80,5,1, 87,5,257, 83,5,17, 91,5,4097,\n    81,5,5, 89,5,1025, 85,5,65, 93,5,16385,\n    80,5,3, 88,5,513, 84,5,33, 92,5,8193,\n    82,5,9, 90,5,2049, 86,5,129, 192,5,24577,\n    80,5,2, 87,5,385, 83,5,25, 91,5,6145,\n    81,5,7, 89,5,1537, 85,5,97, 93,5,24577,\n    80,5,4, 88,5,769, 84,5,49, 92,5,12289,\n    82,5,13, 90,5,3073, 86,5,193, 192,5,24577\n];\n\n  // Tables for deflate from PKZIP's appnote.txt.\n  var cplens = [ // Copy lengths for literal codes 257..285\n        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n        35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n  ];\n\n  // see note #13 above about 258\n  var cplext = [ // Extra bits for literal codes 257..285\n        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,\n        3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112  // 112==invalid\n  ];\n\n var cpdist = [ // Copy offsets for distance codes 0..29\n        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n        257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n        8193, 12289, 16385, 24577\n  ];\n\n  var cpdext = [ // Extra bits for distance codes\n        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\n        7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\n        12, 12, 13, 13];\n\n//\n// ZStream.java\n//\n\nfunction ZStream() {\n}\n\n\nZStream.prototype.inflateInit = function(w, nowrap) {\n    if (!w) {\n\tw = DEF_WBITS;\n    }\n    if (nowrap) {\n\tnowrap = false;\n    }\n    this.istate = new Inflate();\n    return this.istate.inflateInit(this, nowrap?-w:w);\n}\n\nZStream.prototype.inflate = function(f) {\n    if(this.istate==null) return Z_STREAM_ERROR;\n    return this.istate.inflate(this, f);\n}\n\nZStream.prototype.inflateEnd = function(){\n    if(this.istate==null) return Z_STREAM_ERROR;\n    var ret=istate.inflateEnd(this);\n    this.istate = null;\n    return ret;\n}\nZStream.prototype.inflateSync = function(){\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSync(this);\n}\nZStream.prototype.inflateSetDictionary = function(dictionary, dictLength){\n    // if(istate == null) return Z_STREAM_ERROR;\n    return istate.inflateSetDictionary(this, dictionary, dictLength);\n}\n\n/*\n\n  public int deflateInit(int level){\n    return deflateInit(level, MAX_WBITS);\n  }\n  public int deflateInit(int level, boolean nowrap){\n    return deflateInit(level, MAX_WBITS, nowrap);\n  }\n  public int deflateInit(int level, int bits){\n    return deflateInit(level, bits, false);\n  }\n  public int deflateInit(int level, int bits, boolean nowrap){\n    dstate=new Deflate();\n    return dstate.deflateInit(this, level, nowrap?-bits:bits);\n  }\n  public int deflate(int flush){\n    if(dstate==null){\n      return Z_STREAM_ERROR;\n    }\n    return dstate.deflate(this, flush);\n  }\n  public int deflateEnd(){\n    if(dstate==null) return Z_STREAM_ERROR;\n    int ret=dstate.deflateEnd();\n    dstate=null;\n    return ret;\n  }\n  public int deflateParams(int level, int strategy){\n    if(dstate==null) return Z_STREAM_ERROR;\n    return dstate.deflateParams(this, level, strategy);\n  }\n  public int deflateSetDictionary (byte[] dictionary, int dictLength){\n    if(dstate == null)\n      return Z_STREAM_ERROR;\n    return dstate.deflateSetDictionary(this, dictionary, dictLength);\n  }\n\n*/\n\n/*\n  // Flush as much pending output as possible. All deflate() output goes\n  // through this function so some applications may wish to modify it\n  // to avoid allocating a large strm->next_out buffer and copying into it.\n  // (See also read_buf()).\n  void flush_pending(){\n    int len=dstate.pending;\n\n    if(len>avail_out) len=avail_out;\n    if(len==0) return;\n\n    if(dstate.pending_buf.length<=dstate.pending_out ||\n       next_out.length<=next_out_index ||\n       dstate.pending_buf.length<(dstate.pending_out+len) ||\n       next_out.length<(next_out_index+len)){\n      System.out.println(dstate.pending_buf.length+\", \"+dstate.pending_out+\n\t\t\t \", \"+next_out.length+\", \"+next_out_index+\", \"+len);\n      System.out.println(\"avail_out=\"+avail_out);\n    }\n\n    System.arraycopy(dstate.pending_buf, dstate.pending_out,\n\t\t     next_out, next_out_index, len);\n\n    next_out_index+=len;\n    dstate.pending_out+=len;\n    total_out+=len;\n    avail_out-=len;\n    dstate.pending-=len;\n    if(dstate.pending==0){\n      dstate.pending_out=0;\n    }\n  }\n\n  // Read a new buffer from the current input stream, update the adler32\n  // and total number of bytes read.  All deflate() input goes through\n  // this function so some applications may wish to modify it to avoid\n  // allocating a large strm->next_in buffer and copying from it.\n  // (See also flush_pending()).\n  int read_buf(byte[] buf, int start, int size) {\n    int len=avail_in;\n\n    if(len>size) len=size;\n    if(len==0) return 0;\n\n    avail_in-=len;\n\n    if(dstate.noheader==0) {\n      adler=_adler.adler32(adler, next_in, next_in_index, len);\n    }\n    System.arraycopy(next_in, next_in_index, buf, start, len);\n    next_in_index  += len;\n    total_in += len;\n    return len;\n  }\n\n  public void free(){\n    next_in=null;\n    next_out=null;\n    msg=null;\n    _adler=null;\n  }\n}\n*/\n\n\n//\n// Inflate.java\n//\n\nfunction Inflate() {\n    this.was = [0];\n}\n\nInflate.prototype.inflateReset = function(z) {\n    if(z == null || z.istate == null) return Z_STREAM_ERROR;\n    \n    z.total_in = z.total_out = 0;\n    z.msg = null;\n    z.istate.mode = z.istate.nowrap!=0 ? BLOCKS : METHOD;\n    z.istate.blocks.reset(z, null);\n    return Z_OK;\n}\n\nInflate.prototype.inflateEnd = function(z){\n    if(this.blocks != null)\n      this.blocks.free(z);\n    this.blocks=null;\n    return Z_OK;\n}\n\nInflate.prototype.inflateInit = function(z, w){\n    z.msg = null;\n    this.blocks = null;\n\n    // handle undocumented nowrap option (no zlib header or check)\n    var nowrap = 0;\n    if(w < 0){\n      w = - w;\n      nowrap = 1;\n    }\n\n    // set window size\n    if(w<8 ||w>15){\n      this.inflateEnd(z);\n      return Z_STREAM_ERROR;\n    }\n    this.wbits=w;\n\n    z.istate.blocks=new InfBlocks(z, \n\t\t\t\t  z.istate.nowrap!=0 ? null : this,\n\t\t\t\t  1<<w);\n\n    // reset state\n    this.inflateReset(z);\n    return Z_OK;\n  }\n\nInflate.prototype.inflate = function(z, f){\n    var r, b;\n\n    if(z == null || z.istate == null || z.next_in == null)\n      return Z_STREAM_ERROR;\n    f = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n    r = Z_BUF_ERROR;\n    while (true){\n      switch (z.istate.mode){\n      case METHOD:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        if(((z.istate.method = z.next_in[z.next_in_index++])&0xf)!=Z_DEFLATED){\n          z.istate.mode = BAD;\n          z.msg=\"unknown compression method\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n        if((z.istate.method>>4)+8>z.istate.wbits){\n          z.istate.mode = BAD;\n          z.msg=\"invalid window size\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n        z.istate.mode=FLAG;\n      case FLAG:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        b = (z.next_in[z.next_in_index++])&0xff;\n\n        if((((z.istate.method << 8)+b) % 31)!=0){\n          z.istate.mode = BAD;\n          z.msg = \"incorrect header check\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n\n        if((b&PRESET_DICT)==0){\n          z.istate.mode = BLOCKS;\n          break;\n        }\n        z.istate.mode = DICT4;\n      case DICT4:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need=((z.next_in[z.next_in_index++]&0xff)<<24)&0xff000000;\n        z.istate.mode=DICT3;\n      case DICT3:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<16)&0xff0000;\n        z.istate.mode=DICT2;\n      case DICT2:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<8)&0xff00;\n        z.istate.mode=DICT1;\n      case DICT1:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need += (z.next_in[z.next_in_index++]&0xff);\n        z.adler = z.istate.need;\n        z.istate.mode = DICT0;\n        return Z_NEED_DICT;\n      case DICT0:\n        z.istate.mode = BAD;\n        z.msg = \"need dictionary\";\n        z.istate.marker = 0;       // can try inflateSync\n        return Z_STREAM_ERROR;\n      case BLOCKS:\n\n        r = z.istate.blocks.proc(z, r);\n        if(r == Z_DATA_ERROR){\n          z.istate.mode = BAD;\n          z.istate.marker = 0;     // can try inflateSync\n          break;\n        }\n        if(r == Z_OK){\n          r = f;\n        }\n        if(r != Z_STREAM_END){\n          return r;\n        }\n        r = f;\n        z.istate.blocks.reset(z, z.istate.was);\n        if(z.istate.nowrap!=0){\n          z.istate.mode=DONE;\n          break;\n        }\n        z.istate.mode=CHECK4;\n      case CHECK4:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need=((z.next_in[z.next_in_index++]&0xff)<<24)&0xff000000;\n        z.istate.mode=CHECK3;\n      case CHECK3:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<16)&0xff0000;\n        z.istate.mode = CHECK2;\n      case CHECK2:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=((z.next_in[z.next_in_index++]&0xff)<<8)&0xff00;\n        z.istate.mode = CHECK1;\n      case CHECK1:\n\n        if(z.avail_in==0)return r;r=f;\n\n        z.avail_in--; z.total_in++;\n        z.istate.need+=(z.next_in[z.next_in_index++]&0xff);\n\n        if(((z.istate.was[0])) != ((z.istate.need))){\n          z.istate.mode = BAD;\n          z.msg = \"incorrect data check\";\n          z.istate.marker = 5;       // can't try inflateSync\n          break;\n        }\n\n        z.istate.mode = DONE;\n      case DONE:\n        return Z_STREAM_END;\n      case BAD:\n        return Z_DATA_ERROR;\n      default:\n        return Z_STREAM_ERROR;\n      }\n    }\n  }\n\n\nInflate.prototype.inflateSetDictionary = function(z,  dictionary, dictLength) {\n    var index=0;\n    var length = dictLength;\n    if(z==null || z.istate == null|| z.istate.mode != DICT0)\n      return Z_STREAM_ERROR;\n\n    if(z._adler.adler32(1, dictionary, 0, dictLength)!=z.adler){\n      return Z_DATA_ERROR;\n    }\n\n    z.adler = z._adler.adler32(0, null, 0, 0);\n\n    if(length >= (1<<z.istate.wbits)){\n      length = (1<<z.istate.wbits)-1;\n      index=dictLength - length;\n    }\n    z.istate.blocks.set_dictionary(dictionary, index, length);\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n  }\n\n//  static private byte[] mark = {(byte)0, (byte)0, (byte)0xff, (byte)0xff};\nvar mark = [0, 0, 255, 255]\n\nInflate.prototype.inflateSync = function(z){\n    var n;       // number of bytes to look at\n    var p;       // pointer to bytes\n    var m;       // number of marker bytes found in a row\n    var r, w;   // temporaries to save total_in and total_out\n\n    // set up\n    if(z == null || z.istate == null)\n      return Z_STREAM_ERROR;\n    if(z.istate.mode != BAD){\n      z.istate.mode = BAD;\n      z.istate.marker = 0;\n    }\n    if((n=z.avail_in)==0)\n      return Z_BUF_ERROR;\n    p=z.next_in_index;\n    m=z.istate.marker;\n\n    // search\n    while (n!=0 && m < 4){\n      if(z.next_in[p] == mark[m]){\n        m++;\n      }\n      else if(z.next_in[p]!=0){\n        m = 0;\n      }\n      else{\n        m = 4 - m;\n      }\n      p++; n--;\n    }\n\n    // restore\n    z.total_in += p-z.next_in_index;\n    z.next_in_index = p;\n    z.avail_in = n;\n    z.istate.marker = m;\n\n    // return no joy or set up to restart on a new block\n    if(m != 4){\n      return Z_DATA_ERROR;\n    }\n    r=z.total_in;  w=z.total_out;\n    this.inflateReset(z);\n    z.total_in=r;  z.total_out = w;\n    z.istate.mode = BLOCKS;\n    return Z_OK;\n}\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n  // implementation to provide an additional safety check. PPP uses Z_SYNC_FLUSH\n  // but removes the length bytes of the resulting empty stored block. When\n  // decompressing, PPP checks that at the end of input packet, inflate is\n  // waiting for these length bytes.\nInflate.prototype.inflateSyncPoint = function(z){\n    if(z == null || z.istate == null || z.istate.blocks == null)\n      return Z_STREAM_ERROR;\n    return z.istate.blocks.sync_point();\n}\n\n\n//\n// InfBlocks.java\n//\n\nvar INFBLOCKS_BORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\nfunction InfBlocks(z, checkfn, w) {\n    this.hufts=new Int32Array(MANY*3);\n    this.window=new Uint8Array(w);\n    this.end=w;\n    this.checkfn = checkfn;\n    this.mode = IB_TYPE;\n    this.reset(z, null);\n\n    this.left = 0;            // if STORED, bytes left to copy \n\n    this.table = 0;           // table lengths (14 bits) \n    this.index = 0;           // index into blens (or border) \n    this.blens = null;         // bit lengths of codes \n    this.bb=new Int32Array(1); // bit length tree depth \n    this.tb=new Int32Array(1); // bit length decoding tree \n\n    this.codes = new InfCodes();\n\n    this.last = 0;            // true if this block is the last block \n\n  // mode independent information \n    this.bitk = 0;            // bits in bit buffer \n    this.bitb = 0;            // bit buffer \n    this.read = 0;            // window read pointer \n    this.write = 0;           // window write pointer \n    this.check = 0;          // check on output \n\n    this.inftree=new InfTree();\n}\n\n\n\n\nInfBlocks.prototype.reset = function(z, c){\n    if(c) c[0]=this.check;\n    if(this.mode==IB_CODES){\n      this.codes.free(z);\n    }\n    this.mode=IB_TYPE;\n    this.bitk=0;\n    this.bitb=0;\n    this.read=this.write=0;\n\n    if(this.checkfn)\n      z.adler=this.check=z._adler.adler32(0, null, 0, 0);\n  }\n\n InfBlocks.prototype.proc = function(z, r){\n    var t;              // temporary storage\n    var b;              // bit buffer\n    var k;              // bits in bit buffer\n    var p;              // input data pointer\n    var n;              // bytes available there\n    var q;              // output window write pointer\n    var m;              // bytes to end of window or read pointer\n\n    // copy input/output information to locals (UPDATE macro restores)\n    {p=z.next_in_index;n=z.avail_in;b=this.bitb;k=this.bitk;}\n    {q=this.write;m=(q<this.read ? this.read-q-1 : this.end-q);}\n\n    // process input based on current state\n    while(true){\n      switch (this.mode){\n      case IB_TYPE:\n\n\twhile(k<(3)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k; \n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\tt = (b & 7);\n\tthis.last = t & 1;\n\n\tswitch (t >>> 1){\n        case 0:                         // stored \n          {b>>>=(3);k-=(3);}\n          t = k & 7;                    // go to byte boundary\n\n          {b>>>=(t);k-=(t);}\n          this.mode = IB_LENS;                  // get length of stored block\n          break;\n        case 1:                         // fixed\n          {\n              var bl=new Int32Array(1);\n\t      var bd=new Int32Array(1);\n              var tl=[];\n\t      var td=[];\n\n\t      inflate_trees_fixed(bl, bd, tl, td, z);\n              this.codes.init(bl[0], bd[0], tl[0], 0, td[0], 0, z);\n          }\n\n          {b>>>=(3);k-=(3);}\n\n          this.mode = IB_CODES;\n          break;\n        case 2:                         // dynamic\n\n          {b>>>=(3);k-=(3);}\n\n          this.mode = IB_TABLE;\n          break;\n        case 3:                         // illegal\n\n          {b>>>=(3);k-=(3);}\n          this.mode = BAD;\n          z.msg = \"invalid block type\";\n          r = Z_DATA_ERROR;\n\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\tbreak;\n      case IB_LENS:\n\twhile(k<(32)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k; \n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tif ((((~b) >>> 16) & 0xffff) != (b & 0xffff)){\n\t  this.mode = BAD;\n\t  z.msg = \"invalid stored block lengths\";\n\t  r = Z_DATA_ERROR;\n\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\tthis.left = (b & 0xffff);\n\tb = k = 0;                       // dump bits\n\tthis.mode = this.left!=0 ? IB_STORED : (this.last!=0 ? IB_DRY : IB_TYPE);\n\tbreak;\n      case IB_STORED:\n\tif (n == 0){\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\n\tif(m==0){\n\t  if(q==end&&read!=0){\n\t    q=0; m=(q<this.read ? this.read-q-1 : this.end-q);\n\t  }\n\t  if(m==0){\n\t    this.write=q; \n\t    r=this.inflate_flush(z,r);\n\t    q=this.write; m = (q < this.read ? this.read-q-1 : this.end-q);\n\t    if(q==this.end && this.read != 0){\n\t      q=0; m = (q < this.read ? this.read-q-1 : this.end-q);\n\t    }\n\t    if(m==0){\n\t      this.bitb=b; this.bitk=k; \n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    }\n\t  }\n\t}\n\tr=Z_OK;\n\n\tt = this.left;\n\tif(t>n) t = n;\n\tif(t>m) t = m;\n\tarrayCopy(z.next_in, p, window, q, t);\n\tp += t;  n -= t;\n\tq += t;  m -= t;\n\tif ((this.left -= t) != 0)\n\t  break;\n\tthis.mode = (this.last != 0 ? IB_DRY : IB_TYPE);\n\tbreak;\n      case IB_TABLE:\n\n\twhile(k<(14)){\n\t  if(n!=0){\n\t    r=Z_OK;\n\t  }\n\t  else{\n\t    this.bitb=b; this.bitk=k; \n\t    z.avail_in=n;\n\t    z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  };\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.table = t = (b & 0x3fff);\n\tif ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29)\n\t  {\n\t    this.mode = IB_BAD;\n\t    z.msg = \"too many length or distance symbols\";\n\t    r = Z_DATA_ERROR;\n\n\t    this.bitb=b; this.bitk=k; \n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    this.write=q;\n\t    return this.inflate_flush(z,r);\n\t  }\n\tt = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n\tif(this.blens==null || this.blens.length<t){\n\t    this.blens=new Int32Array(t);\n\t}\n\telse{\n\t  for(var i=0; i<t; i++){\n              this.blens[i]=0;\n          }\n\t}\n\n\t{b>>>=(14);k-=(14);}\n\n\tthis.index = 0;\n\tthis.mode = IB_BTREE;\n      case IB_BTREE:\n\twhile (this.index < 4 + (this.table >>> 10)){\n\t  while(k<(3)){\n\t    if(n!=0){\n\t      r=Z_OK;\n\t    }\n\t    else{\n\t      this.bitb=b; this.bitk=k; \n\t      z.avail_in=n;\n\t      z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    };\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;\n\t    k+=8;\n\t  }\n\n\t  this.blens[INFBLOCKS_BORDER[this.index++]] = b&7;\n\n\t  {b>>>=(3);k-=(3);}\n\t}\n\n\twhile(this.index < 19){\n\t  this.blens[INFBLOCKS_BORDER[this.index++]] = 0;\n\t}\n\n\tthis.bb[0] = 7;\n\tt = this.inftree.inflate_trees_bits(this.blens, this.bb, this.tb, this.hufts, z);\n\tif (t != Z_OK){\n\t  r = t;\n\t  if (r == Z_DATA_ERROR){\n\t    this.blens=null;\n\t    this.mode = IB_BAD;\n\t  }\n\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  write=q;\n\t  return this.inflate_flush(z,r);\n\t}\n\n\tthis.index = 0;\n\tthis.mode = IB_DTREE;\n      case IB_DTREE:\n\twhile (true){\n\t  t = this.table;\n\t  if(!(this.index < 258 + (t & 0x1f) + ((t >> 5) & 0x1f))){\n\t    break;\n\t  }\n\n\t  var h; //int[]\n\t  var i, j, c;\n\n\t  t = this.bb[0];\n\n\t  while(k<(t)){\n\t    if(n!=0){\n\t      r=Z_OK;\n\t    }\n\t    else{\n\t      this.bitb=b; this.bitk=k; \n\t      z.avail_in=n;\n\t      z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    };\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;\n\t    k+=8;\n\t  }\n\n//\t  if (this.tb[0]==-1){\n//            dlog(\"null...\");\n//\t  }\n\n\t  t=this.hufts[(this.tb[0]+(b & inflate_mask[t]))*3+1];\n\t  c=this.hufts[(this.tb[0]+(b & inflate_mask[t]))*3+2];\n\n\t  if (c < 16){\n\t    b>>>=(t);k-=(t);\n\t    this.blens[this.index++] = c;\n\t  }\n\t  else { // c == 16..18\n\t    i = c == 18 ? 7 : c - 14;\n\t    j = c == 18 ? 11 : 3;\n\n\t    while(k<(t+i)){\n\t      if(n!=0){\n\t\tr=Z_OK;\n\t      }\n\t      else{\n\t\tthis.bitb=b; this.bitk=k; \n\t\tz.avail_in=n;\n\t\tz.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t\tthis.write=q;\n\t\treturn this.inflate_flush(z,r);\n\t      };\n\t      n--;\n\t      b|=(z.next_in[p++]&0xff)<<k;\n\t      k+=8;\n\t    }\n\n\t    b>>>=(t);k-=(t);\n\n\t    j += (b & inflate_mask[i]);\n\n\t    b>>>=(i);k-=(i);\n\n\t    i = this.index;\n\t    t = this.table;\n\t    if (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) ||\n\t\t(c == 16 && i < 1)){\n\t      this.blens=null;\n\t      this.mode = IB_BAD;\n\t      z.msg = \"invalid bit length repeat\";\n\t      r = Z_DATA_ERROR;\n\n\t      this.bitb=b; this.bitk=k; \n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      this.write=q;\n\t      return this.inflate_flush(z,r);\n\t    }\n\n\t    c = c == 16 ? this.blens[i-1] : 0;\n\t    do{\n\t      this.blens[i++] = c;\n\t    }\n\t    while (--j!=0);\n\t    this.index = i;\n\t  }\n\t}\n\n\tthis.tb[0]=-1;\n\t{\n\t    var bl=new Int32Array(1);\n\t    var bd=new Int32Array(1);\n\t    var tl=new Int32Array(1);\n\t    var td=new Int32Array(1);\n\t    bl[0] = 9;         // must be <= 9 for lookahead assumptions\n\t    bd[0] = 6;         // must be <= 9 for lookahead assumptions\n\n\t    t = this.table;\n\t    t = this.inftree.inflate_trees_dynamic(257 + (t & 0x1f), \n\t\t\t\t\t      1 + ((t >> 5) & 0x1f),\n\t\t\t\t\t      this.blens, bl, bd, tl, td, this.hufts, z);\n\n\t    if (t != Z_OK){\n\t        if (t == Z_DATA_ERROR){\n\t            this.blens=null;\n\t            this.mode = BAD;\n\t        }\n\t        r = t;\n\n\t        this.bitb=b; this.bitk=k; \n\t        z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t        this.write=q;\n\t        return this.inflate_flush(z,r);\n\t    }\n\t    this.codes.init(bl[0], bd[0], this.hufts, tl[0], this.hufts, td[0], z);\n\t}\n\tthis.mode = IB_CODES;\n      case IB_CODES:\n\tthis.bitb=b; this.bitk=k;\n\tz.avail_in=n; z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\n\tif ((r = this.codes.proc(this, z, r)) != Z_STREAM_END){\n\t  return this.inflate_flush(z, r);\n\t}\n\tr = Z_OK;\n\tthis.codes.free(z);\n\n\tp=z.next_in_index; n=z.avail_in;b=this.bitb;k=this.bitk;\n\tq=this.write;m = (q < this.read ? this.read-q-1 : this.end-q);\n\n\tif (this.last==0){\n\t  this.mode = IB_TYPE;\n\t  break;\n\t}\n\tthis.mode = IB_DRY;\n      case IB_DRY:\n\tthis.write=q; \n\tr = this.inflate_flush(z, r); \n\tq=this.write; m = (q < this.read ? this.read-q-1 : this.end-q);\n\tif (this.read != this.write){\n\t  this.bitb=b; this.bitk=k; \n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  this.write=q;\n\t  return this.inflate_flush(z, r);\n\t}\n\tthis.mode = DONE;\n      case IB_DONE:\n\tr = Z_STREAM_END;\n\n\tthis.bitb=b; this.bitk=k; \n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n      case IB_BAD:\n\tr = Z_DATA_ERROR;\n\n\tthis.bitb=b; this.bitk=k; \n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n\n      default:\n\tr = Z_STREAM_ERROR;\n\n\tthis.bitb=b; this.bitk=k; \n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\tthis.write=q;\n\treturn this.inflate_flush(z, r);\n      }\n    }\n  }\n\nInfBlocks.prototype.free = function(z){\n    this.reset(z, null);\n    this.window=null;\n    this.hufts=null;\n}\n\nInfBlocks.prototype.set_dictionary = function(d, start, n){\n    arrayCopy(d, start, window, 0, n);\n    this.read = this.write = n;\n}\n\n  // Returns true if inflate is currently at the end of a block generated\n  // by Z_SYNC_FLUSH or Z_FULL_FLUSH. \nInfBlocks.prototype.sync_point = function(){\n    return this.mode == IB_LENS;\n}\n\n  // copy as much as possible from the sliding window to the output area\nInfBlocks.prototype.inflate_flush = function(z, r){\n    var n;\n    var p;\n    var q;\n\n    // local copies of source and destination pointers\n    p = z.next_out_index;\n    q = this.read;\n\n    // compute number of bytes to copy as far as end of window\n    n = ((q <= this.write ? this.write : this.end) - q);\n    if (n > z.avail_out) n = z.avail_out;\n    if (n!=0 && r == Z_BUF_ERROR) r = Z_OK;\n\n    // update counters\n    z.avail_out -= n;\n    z.total_out += n;\n\n    // update check information\n    if(this.checkfn != null)\n      z.adler=this.check=z._adler.adler32(this.check, this.window, q, n);\n\n    // copy as far as end of window\n    arrayCopy(this.window, q, z.next_out, p, n);\n    p += n;\n    q += n;\n\n    // see if more to copy at beginning of window\n    if (q == this.end){\n      // wrap pointers\n      q = 0;\n      if (this.write == this.end)\n        this.write = 0;\n\n      // compute bytes to copy\n      n = this.write - q;\n      if (n > z.avail_out) n = z.avail_out;\n      if (n!=0 && r == Z_BUF_ERROR) r = Z_OK;\n\n      // update counters\n      z.avail_out -= n;\n      z.total_out += n;\n\n      // update check information\n      if(this.checkfn != null)\n\tz.adler=this.check=z._adler.adler32(this.check, this.window, q, n);\n\n      // copy\n      arrayCopy(this.window, q, z.next_out, p, n);\n      p += n;\n      q += n;\n    }\n\n    // update pointers\n    z.next_out_index = p;\n    this.read = q;\n\n    // done\n    return r;\n  }\n\n//\n// InfCodes.java\n//\n\nvar IC_START=0;  // x: set up for LEN\nvar IC_LEN=1;    // i: get length/literal/eob next\nvar IC_LENEXT=2; // i: getting length extra (have base)\nvar IC_DIST=3;   // i: get distance next\nvar IC_DISTEXT=4;// i: getting distance extra\nvar IC_COPY=5;   // o: copying bytes in window, waiting for space\nvar IC_LIT=6;    // o: got literal, waiting for output space\nvar IC_WASH=7;   // o: got eob, possibly still output waiting\nvar IC_END=8;    // x: got eob and all data flushed\nvar IC_BADCODE=9;// x: got error\n\nfunction InfCodes() {\n}\n\nInfCodes.prototype.init = function(bl, bd, tl, tl_index, td, td_index, z) {\n    this.mode=IC_START;\n    this.lbits=bl;\n    this.dbits=bd;\n    this.ltree=tl;\n    this.ltree_index=tl_index;\n    this.dtree = td;\n    this.dtree_index=td_index;\n    this.tree=null;\n}\n\nInfCodes.prototype.proc = function(s, z, r){ \n    var j;              // temporary storage\n    var t;              // temporary pointer (int[])\n    var tindex;         // temporary pointer\n    var e;              // extra bits or operation\n    var b=0;            // bit buffer\n    var k=0;            // bits in bit buffer\n    var p=0;            // input data pointer\n    var n;              // bytes available there\n    var q;              // output window write pointer\n    var m;              // bytes to end of window or read pointer\n    var f;              // pointer to copy strings from\n\n    // copy input/output information to locals (UPDATE macro restores)\n    p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n    // process input and output based on current state\n    while (true){\n      switch (this.mode){\n\t// waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n      case IC_START:         // x: set up for LEN\n\tif (m >= 258 && n >= 10){\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\t  r = this.inflate_fast(this.lbits, this.dbits, \n\t\t\t   this.ltree, this.ltree_index, \n\t\t\t   this.dtree, this.dtree_index,\n\t\t\t   s, z);\n\n\t  p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n\t  q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t  if (r != Z_OK){\n\t    this.mode = r == Z_STREAM_END ? IC_WASH : IC_BADCODE;\n\t    break;\n\t  }\n\t}\n\tthis.need = this.lbits;\n\tthis.tree = this.ltree;\n\tthis.tree_index=this.ltree_index;\n\n\tthis.mode = IC_LEN;\n      case IC_LEN:           // i: get length/literal/eob next\n\tj = this.need;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--;\n\t  b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\ttindex=(this.tree_index+(b&inflate_mask[j]))*3;\n\n\tb>>>=(this.tree[tindex+1]);\n\tk-=(this.tree[tindex+1]);\n\n\te=this.tree[tindex];\n\n\tif(e == 0){               // literal\n\t  this.lit = this.tree[tindex+2];\n\t  this.mode = IC_LIT;\n\t  break;\n\t}\n\tif((e & 16)!=0 ){          // length\n\t  this.get = e & 15;\n\t  this.len = this.tree[tindex+2];\n\t  this.mode = IC_LENEXT;\n\t  break;\n\t}\n\tif ((e & 64) == 0){        // next table\n\t  this.need = e;\n\t  this.tree_index = tindex/3 + this.tree[tindex+2];\n\t  break;\n\t}\n\tif ((e & 32)!=0){               // end of block\n\t  this.mode = IC_WASH;\n\t  break;\n\t}\n\tthis.mode = IC_BADCODE;        // invalid code\n\tz.msg = \"invalid literal/length code\";\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_LENEXT:        // i: getting length extra (have base)\n\tj = this.get;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.len += (b & inflate_mask[j]);\n\n\tb>>=j;\n\tk-=j;\n\n\tthis.need = this.dbits;\n\tthis.tree = this.dtree;\n\tthis.tree_index = this.dtree_index;\n\tthis.mode = IC_DIST;\n      case IC_DIST:          // i: get distance next\n\tj = this.need;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\ttindex=(this.tree_index+(b & inflate_mask[j]))*3;\n\n\tb>>=this.tree[tindex+1];\n\tk-=this.tree[tindex+1];\n\n\te = (this.tree[tindex]);\n\tif((e & 16)!=0){               // distance\n\t  this.get = e & 15;\n\t  this.dist = this.tree[tindex+2];\n\t  this.mode = IC_DISTEXT;\n\t  break;\n\t}\n\tif ((e & 64) == 0){        // next table\n\t  this.need = e;\n\t  this.tree_index = tindex/3 + this.tree[tindex+2];\n\t  break;\n\t}\n\tthis.mode = IC_BADCODE;        // invalid code\n\tz.msg = \"invalid distance code\";\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_DISTEXT:       // i: getting distance extra\n\tj = this.get;\n\n\twhile(k<(j)){\n\t  if(n!=0)r=Z_OK;\n\t  else{\n\n\t    s.bitb=b;s.bitk=k;\n\t    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t    s.write=q;\n\t    return s.inflate_flush(z,r);\n\t  }\n\t  n--; b|=(z.next_in[p++]&0xff)<<k;\n\t  k+=8;\n\t}\n\n\tthis.dist += (b & inflate_mask[j]);\n\n\tb>>=j;\n\tk-=j;\n\n\tthis.mode = IC_COPY;\n      case IC_COPY:          // o: copying bytes in window, waiting for space\n        f = q - this.dist;\n        while(f < 0){     // modulo window size-\"while\" instead\n          f += s.end;     // of \"if\" handles invalid distances\n\t}\n\twhile (this.len!=0){\n\n\t  if(m==0){\n\t    if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t    if(m==0){\n\t      s.write=q; r=s.inflate_flush(z,r);\n\t      q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t      if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\n\t      if(m==0){\n\t\ts.bitb=b;s.bitk=k;\n\t\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t\ts.write=q;\n\t\treturn s.inflate_flush(z,r);\n\t      }  \n\t    }\n\t  }\n\n\t  s.window[q++]=s.window[f++]; m--;\n\n\t  if (f == s.end)\n            f = 0;\n\t  this.len--;\n\t}\n\tthis.mode = IC_START;\n\tbreak;\n      case IC_LIT:           // o: got literal, waiting for output space\n\tif(m==0){\n\t  if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t  if(m==0){\n\t    s.write=q; r=s.inflate_flush(z,r);\n\t    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\t    if(q==s.end&&s.read!=0){q=0;m=q<s.read?s.read-q-1:s.end-q;}\n\t    if(m==0){\n\t      s.bitb=b;s.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      s.write=q;\n\t      return s.inflate_flush(z,r);\n\t    }\n\t  }\n\t}\n\tr=Z_OK;\n\n\ts.window[q++]=this.lit; m--;\n\n\tthis.mode = IC_START;\n\tbreak;\n      case IC_WASH:           // o: got eob, possibly more output\n\tif (k > 7){        // return unused byte, if any\n\t  k -= 8;\n\t  n++;\n\t  p--;             // can always return one\n\t}\n\n\ts.write=q; r=s.inflate_flush(z,r);\n\tq=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n\tif (s.read != s.write){\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\t  return s.inflate_flush(z,r);\n\t}\n\tthis.mode = IC_END;\n      case IC_END:\n\tr = Z_STREAM_END;\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      case IC_BADCODE:       // x: got error\n\n\tr = Z_DATA_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n\n      default:\n\tr = Z_STREAM_ERROR;\n\n\ts.bitb=b;s.bitk=k;\n\tz.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\ts.write=q;\n\treturn s.inflate_flush(z,r);\n      }\n    }\n  }\n\nInfCodes.prototype.free = function(z){\n    //  ZFREE(z, c);\n}\n\n  // Called with number of bytes left to write in window at least 258\n  // (the maximum string length) and number of input bytes available\n  // at least ten.  The ten bytes are six bytes for the longest length/\n  // distance pair plus four bytes for overloading the bit buffer.\n\nInfCodes.prototype.inflate_fast = function(bl, bd, tl, tl_index, td, td_index, s, z) {\n    var t;                // temporary pointer\n    var   tp;             // temporary pointer (int[])\n    var tp_index;         // temporary pointer\n    var e;                // extra bits or operation\n    var b;                // bit buffer\n    var k;                // bits in bit buffer\n    var p;                // input data pointer\n    var n;                // bytes available there\n    var q;                // output window write pointer\n    var m;                // bytes to end of window or read pointer\n    var ml;               // mask for literal/length tree\n    var md;               // mask for distance tree\n    var c;                // bytes to copy\n    var d;                // distance back to copy from\n    var r;                // copy source pointer\n\n    var tp_index_t_3;     // (tp_index+t)*3\n\n    // load input, output, bit values\n    p=z.next_in_index;n=z.avail_in;b=s.bitb;k=s.bitk;\n    q=s.write;m=q<s.read?s.read-q-1:s.end-q;\n\n    // initialize masks\n    ml = inflate_mask[bl];\n    md = inflate_mask[bd];\n\n    // do until not enough input or output space for fast loop\n    do {                          // assume called with m >= 258 && n >= 10\n      // get literal/length code\n      while(k<(20)){              // max bits for literal/length code\n\tn--;\n\tb|=(z.next_in[p++]&0xff)<<k;k+=8;\n      }\n\n      t= b&ml;\n      tp=tl; \n      tp_index=tl_index;\n      tp_index_t_3=(tp_index+t)*3;\n      if ((e = tp[tp_index_t_3]) == 0){\n\tb>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\ts.window[q++] = tp[tp_index_t_3+2];\n\tm--;\n\tcontinue;\n      }\n      do {\n\n\tb>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\tif((e&16)!=0){\n\t  e &= 15;\n\t  c = tp[tp_index_t_3+2] + (b & inflate_mask[e]);\n\n\t  b>>=e; k-=e;\n\n\t  // decode distance base of block to copy\n\t  while(k<(15)){           // max bits for distance code\n\t    n--;\n\t    b|=(z.next_in[p++]&0xff)<<k;k+=8;\n\t  }\n\n\t  t= b&md;\n\t  tp=td;\n\t  tp_index=td_index;\n          tp_index_t_3=(tp_index+t)*3;\n\t  e = tp[tp_index_t_3];\n\n\t  do {\n\n\t    b>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\t    if((e&16)!=0){\n\t      // get extra bits to add to distance base\n\t      e &= 15;\n\t      while(k<(e)){         // get extra bits (up to 13)\n\t\tn--;\n\t\tb|=(z.next_in[p++]&0xff)<<k;k+=8;\n\t      }\n\n\t      d = tp[tp_index_t_3+2] + (b&inflate_mask[e]);\n\n\t      b>>=(e); k-=(e);\n\n\t      // do the copy\n\t      m -= c;\n\t      if (q >= d){                // offset before dest\n\t\t//  just copy\n\t\tr=q-d;\n\t\tif(q-r>0 && 2>(q-r)){           \n\t\t  s.window[q++]=s.window[r++]; // minimum count is three,\n\t\t  s.window[q++]=s.window[r++]; // so unroll loop a little\n\t\t  c-=2;\n\t\t}\n\t\telse{\n\t\t  s.window[q++]=s.window[r++]; // minimum count is three,\n\t\t  s.window[q++]=s.window[r++]; // so unroll loop a little\n\t\t  c-=2;\n\t\t}\n\t      }\n\t      else{                  // else offset after destination\n                r=q-d;\n                do{\n                  r+=s.end;          // force pointer in window\n                }while(r<0);         // covers invalid distances\n\t\te=s.end-r;\n\t\tif(c>e){             // if source crosses,\n\t\t  c-=e;              // wrapped copy\n\t\t  if(q-r>0 && e>(q-r)){           \n\t\t    do{s.window[q++] = s.window[r++];}\n\t\t    while(--e!=0);\n\t\t  }\n\t\t  else{\n\t\t    arrayCopy(s.window, r, s.window, q, e);\n\t\t    q+=e; r+=e; e=0;\n\t\t  }\n\t\t  r = 0;                  // copy rest from start of window\n\t\t}\n\n\t      }\n\n\t      // copy all or what's left\n              do{s.window[q++] = s.window[r++];}\n\t\twhile(--c!=0);\n\t      break;\n\t    }\n\t    else if((e&64)==0){\n\t      t+=tp[tp_index_t_3+2];\n\t      t+=(b&inflate_mask[e]);\n\t      tp_index_t_3=(tp_index+t)*3;\n\t      e=tp[tp_index_t_3];\n\t    }\n\t    else{\n\t      z.msg = \"invalid distance code\";\n\n\t      c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t      s.bitb=b;s.bitk=k;\n\t      z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t      s.write=q;\n\n\t      return Z_DATA_ERROR;\n\t    }\n\t  }\n\t  while(true);\n\t  break;\n\t}\n\n\tif((e&64)==0){\n\t  t+=tp[tp_index_t_3+2];\n\t  t+=(b&inflate_mask[e]);\n\t  tp_index_t_3=(tp_index+t)*3;\n\t  if((e=tp[tp_index_t_3])==0){\n\n\t    b>>=(tp[tp_index_t_3+1]); k-=(tp[tp_index_t_3+1]);\n\n\t    s.window[q++]=tp[tp_index_t_3+2];\n\t    m--;\n\t    break;\n\t  }\n\t}\n\telse if((e&32)!=0){\n\n\t  c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n \n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\n\t  return Z_STREAM_END;\n\t}\n\telse{\n\t  z.msg=\"invalid literal/length code\";\n\n\t  c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n\t  s.bitb=b;s.bitk=k;\n\t  z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n\t  s.write=q;\n\n\t  return Z_DATA_ERROR;\n\t}\n      } \n      while(true);\n    } \n    while(m>=258 && n>= 10);\n\n    // not enough input or output--restore pointers and return\n    c=z.avail_in-n;c=(k>>3)<c?k>>3:c;n+=c;p-=c;k-=c<<3;\n\n    s.bitb=b;s.bitk=k;\n    z.avail_in=n;z.total_in+=p-z.next_in_index;z.next_in_index=p;\n    s.write=q;\n\n    return Z_OK;\n}\n\n//\n// InfTree.java\n//\n\nfunction InfTree() {\n}\n\nInfTree.prototype.huft_build = function(b, bindex, n, s, d, e, t, m, hp, hn, v) {\n\n    // Given a list of code lengths and a maximum table size, make a set of\n    // tables to decode that set of codes.  Return Z_OK on success, Z_BUF_ERROR\n    // if the given code set is incomplete (the tables are still built in this\n    // case), Z_DATA_ERROR if the input is invalid (an over-subscribed set of\n    // lengths), or Z_MEM_ERROR if not enough memory.\n\n    var a;                       // counter for codes of length k\n    var f;                       // i repeats in table every f entries\n    var g;                       // maximum code length\n    var h;                       // table level\n    var i;                       // counter, current code\n    var j;                       // counter\n    var k;                       // number of bits in current code\n    var l;                       // bits per table (returned in m)\n    var mask;                    // (1 << w) - 1, to avoid cc -O bug on HP\n    var p;                       // pointer into c[], b[], or v[]\n    var q;                       // points to current table\n    var w;                       // bits before this table == (l * h)\n    var xp;                      // pointer into x\n    var y;                       // number of dummy codes added\n    var z;                       // number of entries in current table\n\n    // Generate counts for each bit length\n\n    p = 0; i = n;\n    do {\n      this.c[b[bindex+p]]++; p++; i--;   // assume all entries <= BMAX\n    }while(i!=0);\n\n    if(this.c[0] == n){                // null input--all zero length codes\n      t[0] = -1;\n      m[0] = 0;\n      return Z_OK;\n    }\n\n    // Find minimum and maximum length, bound *m by those\n    l = m[0];\n    for (j = 1; j <= BMAX; j++)\n      if(this.c[j]!=0) break;\n    k = j;                        // minimum code length\n    if(l < j){\n      l = j;\n    }\n    for (i = BMAX; i!=0; i--){\n      if(this.c[i]!=0) break;\n    }\n    g = i;                        // maximum code length\n    if(l > i){\n      l = i;\n    }\n    m[0] = l;\n\n    // Adjust last length count to fill out codes, if needed\n    for (y = 1 << j; j < i; j++, y <<= 1){\n      if ((y -= this.c[j]) < 0){\n        return Z_DATA_ERROR;\n      }\n    }\n    if ((y -= this.c[i]) < 0){\n      return Z_DATA_ERROR;\n    }\n    this.c[i] += y;\n\n    // Generate starting offsets into the value table for each length\n    this.x[1] = j = 0;\n    p = 1;  xp = 2;\n    while (--i!=0) {                 // note that i == g from above\n      this.x[xp] = (j += this.c[p]);\n      xp++;\n      p++;\n    }\n\n    // Make a table of values in order of bit lengths\n    i = 0; p = 0;\n    do {\n      if ((j = b[bindex+p]) != 0){\n        this.v[this.x[j]++] = i;\n      }\n      p++;\n    }\n    while (++i < n);\n    n = this.x[g];                     // set n to length of v\n\n    // Generate the Huffman codes and for each, make the table entries\n    this.x[0] = i = 0;                 // first Huffman code is zero\n    p = 0;                        // grab values in bit order\n    h = -1;                       // no tables yet--level -1\n    w = -l;                       // bits decoded == (l * h)\n    this.u[0] = 0;                     // just to keep compilers happy\n    q = 0;                        // ditto\n    z = 0;                        // ditto\n\n    // go through the bit lengths (k already is bits in shortest code)\n    for (; k <= g; k++){\n      a = this.c[k];\n      while (a--!=0){\n\t// here i is the Huffman code of length k bits for value *p\n\t// make tables up to required level\n        while (k > w + l){\n          h++;\n          w += l;                 // previous table always l bits\n\t  // compute minimum size table less than or equal to l bits\n          z = g - w;\n          z = (z > l) ? l : z;        // table size upper limit\n          if((f=1<<(j=k-w))>a+1){     // try a k-w bit table\n                                      // too few codes for k-w bit table\n            f -= a + 1;               // deduct codes from patterns left\n            xp = k;\n            if(j < z){\n              while (++j < z){        // try smaller tables up to z bits\n                if((f <<= 1) <= this.c[++xp])\n                  break;              // enough codes to use up j bits\n                f -= this.c[xp];           // else deduct codes from patterns\n              }\n\t    }\n          }\n          z = 1 << j;                 // table entries for j-bit table\n\n\t  // allocate new table\n          if (this.hn[0] + z > MANY){       // (note: doesn't matter for fixed)\n            return Z_DATA_ERROR;       // overflow of MANY\n          }\n          this.u[h] = q = /*hp+*/ this.hn[0];   // DEBUG\n          this.hn[0] += z;\n \n\t  // connect to last table, if there is one\n\t  if(h!=0){\n            this.x[h]=i;           // save pattern for backing up\n            this.r[0]=j;     // bits in this table\n            this.r[1]=l;     // bits to dump before this table\n            j=i>>>(w - l);\n            this.r[2] = (q - this.u[h-1] - j);               // offset to this table\n            arrayCopy(this.r, 0, hp, (this.u[h-1]+j)*3, 3); // connect to last table\n          }\n          else{\n            t[0] = q;               // first table is returned result\n\t  }\n        }\n\n\t// set up table entry in r\n        this.r[1] = (k - w);\n        if (p >= n){\n          this.r[0] = 128 + 64;      // out of values--invalid code\n\t}\n        else if (v[p] < s){\n          this.r[0] = (this.v[p] < 256 ? 0 : 32 + 64);  // 256 is end-of-block\n          this.r[2] = this.v[p++];          // simple code is just the value\n        }\n        else{\n          this.r[0]=(e[this.v[p]-s]+16+64); // non-simple--look up in lists\n          this.r[2]=d[this.v[p++] - s];\n        }\n\n        // fill code-like entries with r\n        f=1<<(k-w);\n        for (j=i>>>w;j<z;j+=f){\n          arrayCopy(this.r, 0, hp, (q+j)*3, 3);\n\t}\n\n\t// backwards increment the k-bit code i\n        for (j = 1 << (k - 1); (i & j)!=0; j >>>= 1){\n          i ^= j;\n\t}\n        i ^= j;\n\n\t// backup over finished tables\n        mask = (1 << w) - 1;      // needed on HP, cc -O bug\n        while ((i & mask) != this.x[h]){\n          h--;                    // don't need to update q\n          w -= l;\n          mask = (1 << w) - 1;\n        }\n      }\n    }\n    // Return Z_BUF_ERROR if we were given an incomplete table\n    return y != 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n}\n\nInfTree.prototype.inflate_trees_bits = function(c, bb, tb, hp, z) {\n    var result;\n    this.initWorkArea(19);\n    this.hn[0]=0;\n    result = this.huft_build(c, 0, 19, 19, null, null, tb, bb, hp, this.hn, this.v);\n\n    if(result == Z_DATA_ERROR){\n      z.msg = \"oversubscribed dynamic bit lengths tree\";\n    }\n    else if(result == Z_BUF_ERROR || bb[0] == 0){\n      z.msg = \"incomplete dynamic bit lengths tree\";\n      result = Z_DATA_ERROR;\n    }\n    return result;\n}\n\nInfTree.prototype.inflate_trees_dynamic = function(nl, nd, c, bl, bd, tl, td, hp, z) {\n    var result;\n\n    // build literal/length tree\n    this.initWorkArea(288);\n    this.hn[0]=0;\n    result = this.huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, this.hn, this.v);\n    if (result != Z_OK || bl[0] == 0){\n      if(result == Z_DATA_ERROR){\n        z.msg = \"oversubscribed literal/length tree\";\n      }\n      else if (result != Z_MEM_ERROR){\n        z.msg = \"incomplete literal/length tree\";\n        result = Z_DATA_ERROR;\n      }\n      return result;\n    }\n\n    // build distance tree\n    this.initWorkArea(288);\n    result = this.huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, this.hn, this.v);\n\n    if (result != Z_OK || (bd[0] == 0 && nl > 257)){\n      if (result == Z_DATA_ERROR){\n        z.msg = \"oversubscribed distance tree\";\n      }\n      else if (result == Z_BUF_ERROR) {\n        z.msg = \"incomplete distance tree\";\n        result = Z_DATA_ERROR;\n      }\n      else if (result != Z_MEM_ERROR){\n        z.msg = \"empty distance tree with lengths\";\n        result = Z_DATA_ERROR;\n      }\n      return result;\n    }\n\n    return Z_OK;\n}\n/*\n  static int inflate_trees_fixed(int[] bl,  //literal desired/actual bit depth\n                                 int[] bd,  //distance desired/actual bit depth\n                                 int[][] tl,//literal/length tree result\n                                 int[][] td,//distance tree result \n                                 ZStream z  //for memory allocation\n\t\t\t\t ){\n\n*/\n\nfunction inflate_trees_fixed(bl, bd, tl, td, z) {\n    bl[0]=fixed_bl;\n    bd[0]=fixed_bd;\n    tl[0]=fixed_tl;\n    td[0]=fixed_td;\n    return Z_OK;\n}\n\nInfTree.prototype.initWorkArea = function(vsize){\n    if(this.hn==null){\n        this.hn=new Int32Array(1);\n        this.v=new Int32Array(vsize);\n        this.c=new Int32Array(BMAX+1);\n        this.r=new Int32Array(3);\n        this.u=new Int32Array(BMAX);\n        this.x=new Int32Array(BMAX+1);\n    }\n    if(this.v.length<vsize){ \n        this.v=new Int32Array(vsize); \n    }\n    for(var i=0; i<vsize; i++){this.v[i]=0;}\n    for(var i=0; i<BMAX+1; i++){this.c[i]=0;}\n    for(var i=0; i<3; i++){this.r[i]=0;}\n//  for(int i=0; i<BMAX; i++){u[i]=0;}\n    arrayCopy(this.c, 0, this.u, 0, BMAX);\n//  for(int i=0; i<BMAX+1; i++){x[i]=0;}\n    arrayCopy(this.c, 0, this.x, 0, BMAX+1);\n}\n\nvar testArray = new Uint8Array(1);\nvar hasSubarray = (typeof testArray.subarray === 'function');\nvar hasSlice = false; /* (typeof testArray.slice === 'function'); */ // Chrome slice performance is so dire that we're currently not using it...\n\nfunction arrayCopy(src, srcOffset, dest, destOffset, count) {\n    if (count == 0) {\n        return;\n    } \n    if (!src) {\n        throw \"Undef src\";\n    } else if (!dest) {\n        throw \"Undef dest\";\n    }\n\n    if (srcOffset == 0 && count == src.length) {\n        arrayCopy_fast(src, dest, destOffset);\n    } else if (hasSubarray) {\n        arrayCopy_fast(src.subarray(srcOffset, srcOffset + count), dest, destOffset); \n    } else if (src.BYTES_PER_ELEMENT == 1 && count > 100) {\n        arrayCopy_fast(new Uint8Array(src.buffer, src.byteOffset + srcOffset, count), dest, destOffset);\n    } else { \n        arrayCopy_slow(src, srcOffset, dest, destOffset, count);\n    }\n\n}\n\nfunction arrayCopy_slow(src, srcOffset, dest, destOffset, count) {\n\n    // dlog('_slow call: srcOffset=' + srcOffset + '; destOffset=' + destOffset + '; count=' + count);\n\n     for (var i = 0; i < count; ++i) {\n        dest[destOffset + i] = src[srcOffset + i];\n    }\n}\n\nfunction arrayCopy_fast(src, dest, destOffset) {\n    dest.set(src, destOffset);\n}\n\n\n  // largest prime smaller than 65536\nvar ADLER_BASE=65521; \n  // NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1\nvar ADLER_NMAX=5552;\n\nfunction adler32(adler, /* byte[] */ buf,  index, len){\n    if(buf == null){ return 1; }\n\n    var s1=adler&0xffff;\n    var s2=(adler>>16)&0xffff;\n    var k;\n\n    while(len > 0) {\n      k=len<ADLER_NMAX?len:ADLER_NMAX;\n      len-=k;\n      while(k>=16){\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        s1+=buf[index++]&0xff; s2+=s1;\n        k-=16;\n      }\n      if(k!=0){\n        do{\n          s1+=buf[index++]&0xff; s2+=s1;\n        }\n        while(--k!=0);\n      }\n      s1%=ADLER_BASE;\n      s2%=ADLER_BASE;\n    }\n    return (s2<<16)|s1;\n}\n\n\n\nfunction jszlib_inflate_buffer(buffer, start, length, afterUncOffset) {\n    if (!start) {\n        buffer = new Uint8Array(buffer);\n    } else {\n        buffer = new Uint8Array(buffer, start, length);\n    }\n\n    var z = new ZStream();\n    z.inflateInit(DEF_WBITS, true);\n    z.next_in = buffer;\n    z.next_in_index = 0;\n    z.avail_in = buffer.length;\n\n    var oBlockList = [];\n    var totalSize = 0;\n    while (true) {\n        var obuf = new Uint8Array(32000);\n        z.next_out = obuf;\n        z.next_out_index = 0;\n        z.avail_out = obuf.length;\n        var status = z.inflate(Z_NO_FLUSH);\n        if (status == Z_BUF_ERROR) {\n            break;\n        }\n        if (status != Z_OK && status != Z_STREAM_END) {\n            throw z.msg;\n        }\n        if (z.avail_out != 0) {\n            var newob = new Uint8Array(obuf.length - z.avail_out);\n            arrayCopy(obuf, 0, newob, 0, (obuf.length - z.avail_out));\n            obuf = newob;\n        }\n        oBlockList.push(obuf);\n        totalSize += obuf.length;\n        if (status == Z_STREAM_END) {\n            break;\n        }\n    }\n\n    if (afterUncOffset) {\n        afterUncOffset[0] = (start || 0) + z.next_in_index;\n    }\n\n    if (oBlockList.length == 1) {\n        return oBlockList[0].buffer;\n    } else {\n        var out = new Uint8Array(totalSize);\n        var cursor = 0;\n        for (var i = 0; i < oBlockList.length; ++i) {\n            var b = oBlockList[i];\n            arrayCopy(b, 0, out, cursor, b.length);\n            cursor += b.length;\n        }\n        return out.buffer;\n    }\n}\n// Source: https://github.com/vadimg/js_bintrees\n// MIT license\n\n\nfunction TreeBase() {\n}\n\n// removes all nodes from the tree\nTreeBase.prototype.clear = function () {\n    this._root = null;\n    this.size = 0;\n};\n\n// returns node data if found, null otherwise\nTreeBase.prototype.find = function (data) {\n    var res = this._root;\n\n    while (res !== null) {\n        var c = this._comparator(data, res.data);\n        if (c === 0) {\n            return res.data;\n        }\n        else {\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// returns iterator to node if found, null otherwise\nTreeBase.prototype.findIter = function (data) {\n    var res = this._root;\n    var iter = this.iterator();\n\n    while (res !== null) {\n        var c = this._comparator(data, res.data);\n        if (c === 0) {\n            iter._cursor = res;\n            return iter;\n        }\n        else {\n            iter._ancestors.push(res);\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// Returns an iterator to the tree node at or immediately after the item\nTreeBase.prototype.lowerBound = function (item) {\n    var cur = this._root;\n    var iter = this.iterator();\n    var cmp = this._comparator;\n\n    while (cur !== null) {\n        var c = cmp(item, cur.data);\n        if (c === 0) {\n            iter._cursor = cur;\n            return iter;\n        }\n        iter._ancestors.push(cur);\n        cur = cur.get_child(c > 0);\n    }\n\n    for (var i = iter._ancestors.length - 1; i >= 0; --i) {\n        cur = iter._ancestors[i];\n        if (cmp(item, cur.data) < 0) {\n            iter._cursor = cur;\n            iter._ancestors.length = i;\n            return iter;\n        }\n    }\n\n    iter._ancestors.length = 0;\n    return iter;\n};\n\n// Returns an iterator to the tree node immediately after the item\nTreeBase.prototype.upperBound = function (item) {\n    var iter = this.lowerBound(item);\n    var cmp = this._comparator;\n\n    while (iter.data() !== null && cmp(iter.data(), item) === 0) {\n        iter.next();\n    }\n\n    return iter;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.min = function () {\n    var res = this._root;\n    if (res === null) {\n        return null;\n    }\n\n    while (res.left !== null) {\n        res = res.left;\n    }\n\n    return res.data;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.max = function () {\n    var res = this._root;\n    if (res === null) {\n        return null;\n    }\n\n    while (res.right !== null) {\n        res = res.right;\n    }\n\n    return res.data;\n};\n\n// returns a null iterator\n// call next() or prev() to point to an element\nTreeBase.prototype.iterator = function () {\n    return new Iterator(this);\n};\n\n// calls cb on each node's data, in order\nTreeBase.prototype.each = function (cb) {\n    var it = this.iterator(), data;\n    while ((data = it.next()) !== null) {\n        cb(data);\n    }\n};\n\n// calls cb on each node's data, in reverse order\nTreeBase.prototype.reach = function (cb) {\n    var it = this.iterator(), data;\n    while ((data = it.prev()) !== null) {\n        cb(data);\n    }\n};\n\n\nfunction Iterator(tree) {\n    this._tree = tree;\n    this._ancestors = [];\n    this._cursor = null;\n}\n\nIterator.prototype.data = function () {\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns first node\n// otherwise, returns next node\nIterator.prototype.next = function () {\n    if (this._cursor === null) {\n        var root = this._tree._root;\n        if (root !== null) {\n            this._minNode(root);\n        }\n    }\n    else {\n        if (this._cursor.right === null) {\n            // no greater node in subtree, go up to parent\n            // if coming from a right child, continue up the stack\n            var save;\n            do {\n                save = this._cursor;\n                if (this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while (this._cursor.right === save);\n        }\n        else {\n            // get the next node from the subtree\n            this._ancestors.push(this._cursor);\n            this._minNode(this._cursor.right);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns last node\n// otherwise, returns previous node\nIterator.prototype.prev = function () {\n    if (this._cursor === null) {\n        var root = this._tree._root;\n        if (root !== null) {\n            this._maxNode(root);\n        }\n    }\n    else {\n        if (this._cursor.left === null) {\n            var save;\n            do {\n                save = this._cursor;\n                if (this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while (this._cursor.left === save);\n        }\n        else {\n            this._ancestors.push(this._cursor);\n            this._maxNode(this._cursor.left);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\nIterator.prototype._minNode = function (start) {\n    while (start.left !== null) {\n        this._ancestors.push(start);\n        start = start.left;\n    }\n    this._cursor = start;\n};\n\nIterator.prototype._maxNode = function (start) {\n    while (start.right !== null) {\n        this._ancestors.push(start);\n        start = start.right;\n    }\n    this._cursor = start;\n};\n\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n    this.red = true;\n}\n\nNode.prototype.get_child = function (dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function (dir, val) {\n    if (dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction RBTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nRBTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nRBTree.prototype.insert = function (data) {\n    var ret = false;\n\n    if (this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        ret = true;\n        this.size++;\n    }\n    else {\n        var head = new Node(undefined); // fake tree root\n\n        var dir = 0;\n        var last = 0;\n\n        // setup\n        var gp = null; // grandparent\n        var ggp = head; // grand-grand-parent\n        var p = null; // parent\n        var node = this._root;\n        ggp.right = this._root;\n\n        // search down\n        while (true) {\n            if (node === null) {\n                // insert new node at the bottom\n                node = new Node(data);\n                p.set_child(dir, node);\n                ret = true;\n                this.size++;\n            }\n            else if (is_red(node.left) && is_red(node.right)) {\n                // color flip\n                node.red = true;\n                node.left.red = false;\n                node.right.red = false;\n            }\n\n            // fix red violation\n            if (is_red(node) && is_red(p)) {\n                var dir2 = ggp.right === gp;\n\n                if (node === p.get_child(last)) {\n                    ggp.set_child(dir2, single_rotate(gp, !last));\n                }\n                else {\n                    ggp.set_child(dir2, double_rotate(gp, !last));\n                }\n            }\n\n            var cmp = this._comparator(node.data, data);\n\n            // stop if found\n            if (cmp === 0) {\n                break;\n            }\n\n            last = dir;\n            dir = cmp < 0;\n\n            // update helpers\n            if (gp !== null) {\n                ggp = gp;\n            }\n            gp = p;\n            p = node;\n            node = node.get_child(dir);\n        }\n\n        // update root\n        this._root = head.right;\n    }\n\n    // make root black\n    this._root.red = false;\n\n    return ret;\n};\n\n// returns true if removed, false if not found\nRBTree.prototype.remove = function (data) {\n    if (this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var gp = null; // grand parent\n    var found = null; // found item\n    var dir = 1;\n\n    while (node.get_child(dir) !== null) {\n        var last = dir;\n\n        // update helpers\n        gp = p;\n        p = node;\n        node = node.get_child(dir);\n\n        var cmp = this._comparator(data, node.data);\n\n        dir = cmp > 0;\n\n        // save found node\n        if (cmp === 0) {\n            found = node;\n        }\n\n        // push the red node down\n        if (!is_red(node) && !is_red(node.get_child(dir))) {\n            if (is_red(node.get_child(!dir))) {\n                var sr = single_rotate(node, dir);\n                p.set_child(last, sr);\n                p = sr;\n            }\n            else if (!is_red(node.get_child(!dir))) {\n                var sibling = p.get_child(!last);\n                if (sibling !== null) {\n                    if (!is_red(sibling.get_child(!last)) && !is_red(sibling.get_child(last))) {\n                        // color flip\n                        p.red = false;\n                        sibling.red = true;\n                        node.red = true;\n                    }\n                    else {\n                        var dir2 = gp.right === p;\n\n                        if (is_red(sibling.get_child(last))) {\n                            gp.set_child(dir2, double_rotate(p, last));\n                        }\n                        else if (is_red(sibling.get_child(!last))) {\n                            gp.set_child(dir2, single_rotate(p, last));\n                        }\n\n                        // ensure correct coloring\n                        var gpc = gp.get_child(dir2);\n                        gpc.red = true;\n                        node.red = true;\n                        gpc.left.red = false;\n                        gpc.right.red = false;\n                    }\n                }\n            }\n        }\n    }\n\n    // replace and remove if found\n    if (found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n        this.size--;\n    }\n\n    // update root and make it black\n    this._root = head.right;\n    if (this._root !== null) {\n        this._root.red = false;\n    }\n\n    return found !== null;\n};\n\nfunction is_red(node) {\n    return node !== null && node.red;\n}\n\nfunction single_rotate(root, dir) {\n    var save = root.get_child(!dir);\n\n    root.set_child(!dir, save.get_child(dir));\n    save.set_child(dir, root);\n\n    root.red = true;\n    save.red = false;\n\n    return save;\n}\n\nfunction double_rotate(root, dir) {\n    root.set_child(!dir, single_rotate(root.get_child(!dir), !dir));\n    return single_rotate(root, dir);\n}\n\n\n//  Source: https://github.com/welch/tdigest\n//  MIT License\n//\n// TDigest:\n//\n// approximate distribution percentiles from a stream of reals\n//\n\n\nfunction TDigest(delta, K, CX) {\n    // allocate a TDigest structure.\n    //\n    // delta is the compression factor, the max fraction of mass that\n    // can be owned by one centroid (bigger, up to 1.0, means more\n    // compression). delta=false switches off TDigest behavior and treats\n    // the distribution as discrete, with no merging and exact values\n    // reported.\n    //\n    // K is a size threshold that triggers recompression as the TDigest\n    // grows during input.  (Set it to 0 to disable automatic recompression)\n    //\n    // CX specifies how often to update cached cumulative totals used\n    // for quantile estimation during ingest (see cumulate()).  Set to\n    // 0 to use exact quantiles for each new point.\n    //\n    this.discrete = (delta === false);\n    this.delta = delta || 0.01;\n    this.K = (K === undefined) ? 25 : K;\n    this.CX = (CX === undefined) ? 1.1 : CX;\n    this.centroids = new RBTree(compare_centroid_means);\n    this.nreset = 0;\n    this.reset();\n}\n\nTDigest.prototype.reset = function () {\n    // prepare to digest new points.\n    //\n    this.centroids.clear();\n    this.n = 0;\n    this.nreset += 1;\n    this.last_cumulate = 0;\n};\n\nTDigest.prototype.size = function () {\n    return this.centroids.size;\n};\n\nTDigest.prototype.toArray = function (everything) {\n    // return {mean,n} of centroids as an array ordered by mean.\n    //\n    var result = [];\n    if (everything) {\n        this._cumulate(true); // be sure cumns are exact\n        this.centroids.each(function (c) {\n            result.push(c);\n        });\n    } else {\n        this.centroids.each(function (c) {\n            result.push({mean: c.mean, n: c.n});\n        });\n    }\n    return result;\n};\n\nTDigest.prototype.summary = function () {\n    var approx = (this.discrete) ? \"exact \" : \"approximating \";\n    var s = [approx + this.n + \" samples using \" + this.size() + \" centroids\",\n        \"min = \" + this.percentile(0),\n        \"Q1  = \" + this.percentile(0.25),\n        \"Q2  = \" + this.percentile(0.5),\n        \"Q3  = \" + this.percentile(0.75),\n        \"max = \" + this.percentile(1.0)];\n    return s.join('\\n');\n};\n\nfunction compare_centroid_means(a, b) {\n    // order two centroids by mean.\n    //\n    return (a.mean > b.mean) ? 1 : (a.mean < b.mean) ? -1 : 0;\n}\n\nfunction compare_centroid_mean_cumns(a, b) {\n    // order two centroids by mean_cumn.\n    //\n    return (a.mean_cumn - b.mean_cumn);\n}\n\nTDigest.prototype.push = function (x, n) {\n    // incorporate value or array of values x, having count n into the\n    // TDigest. n defaults to 1.\n    //\n    n = n || 1;\n    x = Array.isArray(x) ? x : [x];\n    for (var i = 0; i < x.length; i++) {\n        this._digest(x[i], n);\n    }\n};\n\nTDigest.prototype.push_centroid = function (c) {\n    // incorporate centroid or array of centroids c\n    //\n    c = Array.isArray(c) ? c : [c];\n    for (var i = 0; i < c.length; i++) {\n        this._digest(c[i].mean, c[i].n);\n    }\n};\n\nTDigest.prototype._cumulate = function (exact) {\n    // update cumulative counts for each centroid\n    //\n    // exact: falsey means only cumulate after sufficient\n    // growth. During ingest, these counts are used as quantile\n    // estimates, and they work well even when somewhat out of\n    // date. (this is a departure from the publication, you may set CX\n    // to 0 to disable).\n    //\n    if (this.n === this.last_cumulate ||\n        !exact && this.CX && this.CX > (this.n / this.last_cumulate)) {\n        return;\n    }\n    var cumn = 0;\n    this.centroids.each(function (c) {\n        c.mean_cumn = cumn + c.n / 2; // half of n at the mean\n        cumn = c.cumn = cumn + c.n;\n    });\n    this.n = this.last_cumulate = cumn;\n};\n\nTDigest.prototype.find_nearest = function (x) {\n    // find the centroid closest to x. The assumption of\n    // unique means and a unique nearest centroid departs from the\n    // paper, see _digest() below\n    //\n    if (this.size() === 0) {\n        return null;\n    }\n    var iter = this.centroids.lowerBound({mean: x}); // x <= iter || iter==null\n    var c = (iter.data() === null) ? iter.prev() : iter.data();\n    if (c.mean === x || this.discrete) {\n        return c; // c is either x or a neighbor (discrete: no distance func)\n    }\n    var prev = iter.prev();\n    if (prev && Math.abs(prev.mean - x) < Math.abs(c.mean - x)) {\n        return prev;\n    } else {\n        return c;\n    }\n};\n\nTDigest.prototype._new_centroid = function (x, n, cumn) {\n    // create and insert a new centroid into the digest (don't update\n    // cumulatives).\n    //\n    var c = {mean: x, n: n, cumn: cumn};\n    this.centroids.insert(c);\n    this.n += n;\n    return c;\n};\n\nTDigest.prototype._addweight = function (nearest, x, n) {\n    // add weight at location x to nearest centroid.  adding x to\n    // nearest will not shift its relative position in the tree and\n    // require reinsertion.\n    //\n    if (x !== nearest.mean) {\n        nearest.mean += n * (x - nearest.mean) / (nearest.n + n);\n    }\n    nearest.cumn += n;\n    nearest.mean_cumn += n / 2;\n    nearest.n += n;\n    this.n += n;\n};\n\nTDigest.prototype._digest = function (x, n) {\n    // incorporate value x, having count n into the TDigest.\n    //\n    var min = this.centroids.min();\n    var max = this.centroids.max();\n    var nearest = this.find_nearest(x);\n    if (nearest && nearest.mean === x) {\n        // accumulate exact matches into the centroid without\n        // limit. this is a departure from the paper, made so\n        // centroids remain unique and code can be simple.\n        this._addweight(nearest, x, n);\n    } else if (nearest === min) {\n        this._new_centroid(x, n, 0); // new point around min boundary\n    } else if (nearest === max) {\n        this._new_centroid(x, n, this.n); // new point around max boundary\n    } else if (this.discrete) {\n        this._new_centroid(x, n, nearest.cumn); // never merge\n    } else {\n        // conider a merge based on nearest centroid's capacity. if\n        // there's not room for all of n, don't bother merging any of\n        // it into nearest, as we'll have to make a new centroid\n        // anyway for the remainder (departure from the paper).\n        var p = nearest.mean_cumn / this.n;\n        var max_n = Math.floor(4 * this.n * this.delta * p * (1 - p));\n        if (max_n - nearest.n >= n) {\n            this._addweight(nearest, x, n);\n        } else {\n            this._new_centroid(x, n, nearest.cumn);\n        }\n    }\n    this._cumulate(false);\n    if (!this.discrete && this.K && this.size() > this.K / this.delta) {\n        // re-process the centroids and hope for some compression.\n        this.compress();\n    }\n};\n\nTDigest.prototype.bound_mean = function (x) {\n    // find centroids lower and upper such that lower.mean < x <\n    // upper.mean or lower.mean === x === upper.mean. Don't call\n    // this for x out of bounds.\n    //\n    var iter = this.centroids.upperBound({mean: x}); // x < iter\n    var lower = iter.prev();      // lower <= x\n    var upper = (lower.mean === x) ? lower : iter.next();\n    return [lower, upper];\n};\n\nTDigest.prototype.p_rank = function (x_or_xlist) {\n    // return approximate percentile-ranks (0..1) for data value x.\n    // or list of x.  calculated according to\n    // https://en.wikipedia.org/wiki/Percentile_rank\n    //\n    // (Note that in continuous mode, boundary sample values will\n    // report half their centroid weight inward from 0/1 as the\n    // percentile-rank. X values outside the observed range return\n    // 0/1)\n    //\n    // this triggers cumulate() if cumn's are out of date.\n    //\n    var xs = Array.isArray(x_or_xlist) ? x_or_xlist : [x_or_xlist];\n    var ps = xs.map(this._p_rank, this);\n    return Array.isArray(x_or_xlist) ? ps : ps[0];\n};\n\nTDigest.prototype._p_rank = function (x) {\n    if (this.size() === 0) {\n        return undefined;\n    } else if (x < this.centroids.min().mean) {\n        return 0.0;\n    } else if (x > this.centroids.max().mean) {\n        return 1.0;\n    }\n    // find centroids that bracket x and interpolate x's cumn from\n    // their cumn's.\n    this._cumulate(true); // be sure cumns are exact\n    var bound = this.bound_mean(x);\n    var lower = bound[0], upper = bound[1];\n    if (this.discrete) {\n        return lower.cumn / this.n;\n    } else {\n        var cumn = lower.mean_cumn;\n        if (lower !== upper) {\n            cumn += (x - lower.mean) * (upper.mean_cumn - lower.mean_cumn) / (upper.mean - lower.mean);\n        }\n        return cumn / this.n;\n    }\n};\n\nTDigest.prototype.bound_mean_cumn = function (cumn) {\n    // find centroids lower and upper such that lower.mean_cumn < x <\n    // upper.mean_cumn or lower.mean_cumn === x === upper.mean_cumn. Don't call\n    // this for cumn out of bounds.\n    //\n    // XXX because mean and mean_cumn give rise to the same sort order\n    // (up to identical means), use the mean rbtree for our search.\n    this.centroids._comparator = compare_centroid_mean_cumns;\n    var iter = this.centroids.upperBound({mean_cumn: cumn}); // cumn < iter\n    this.centroids._comparator = compare_centroid_means;\n    var lower = iter.prev();      // lower <= cumn\n    var upper = (lower && lower.mean_cumn === cumn) ? lower : iter.next();\n    return [lower, upper];\n};\n\nTDigest.prototype.percentile = function (p_or_plist) {\n    // for percentage p (0..1), or for each p in a list of ps, return\n    // the smallest data value q at which at least p percent of the\n    // observations <= q.\n    //\n    // for discrete distributions, this selects q using the Nearest\n    // Rank Method\n    // (https://en.wikipedia.org/wiki/Percentile#The_Nearest_Rank_method)\n    // (in scipy, same as percentile(...., interpolation='higher')\n    //\n    // for continuous distributions, interpolates data values between\n    // count-weighted bracketing means.\n    //\n    // this triggers cumulate() if cumn's are out of date.\n    //\n    var ps = Array.isArray(p_or_plist) ? p_or_plist : [p_or_plist];\n    var qs = ps.map(this._percentile, this);\n    return Array.isArray(p_or_plist) ? qs : qs[0];\n};\n\nTDigest.prototype._percentile = function (p) {\n    if (this.size() === 0) {\n        return undefined;\n    }\n    this._cumulate(true); // be sure cumns are exact\n    var h = this.n * p;\n    var bound = this.bound_mean_cumn(h);\n    var lower = bound[0], upper = bound[1];\n\n    if (upper === lower || lower === null || upper === null) {\n        return (lower || upper).mean;\n    } else if (!this.discrete) {\n        return lower.mean + (h - lower.mean_cumn) * (upper.mean - lower.mean) / (upper.mean_cumn - lower.mean_cumn);\n    } else if (h <= lower.cumn) {\n        return lower.mean;\n    } else {\n        return upper.mean;\n    }\n};\n\nfunction pop_random(choices) {\n    // remove and return an item randomly chosen from the array of choices\n    // (mutates choices)\n    //\n    var idx = Math.floor(Math.random() * choices.length);\n    return choices.splice(idx, 1)[0];\n}\n\nTDigest.prototype.compress = function () {\n    // TDigests experience worst case compression (none) when input\n    // increases monotonically.  Improve on any bad luck by\n    // reconsuming digest centroids as if they were weighted points\n    // while shuffling their order (and hope for the best).\n    //\n    if (this.compressing) {\n        return;\n    }\n    var points = this.toArray();\n    this.reset();\n    this.compressing = true;\n    while (points.length > 0) {\n        this.push_centroid(pop_random(points));\n    }\n    this._cumulate(true);\n    this.compressing = false;\n};\n\nfunction Digest(config) {\n    // allocate a distribution digest structure. This is an extension\n    // of a TDigest structure that starts in exact histogram (discrete)\n    // mode, and automatically switches to TDigest mode for large\n    // samples that appear to be from a continuous distribution.\n    //\n    this.config = config || {};\n    this.mode = this.config.mode || 'auto'; // disc, cont, auto\n    TDigest.call(this, this.mode === 'cont' ? config.delta : false);\n    this.digest_ratio = this.config.ratio || 0.9;\n    this.digest_thresh = this.config.thresh || 1000;\n    this.n_unique = 0;\n}\nDigest.prototype = Object.create(TDigest.prototype);\nDigest.prototype.constructor = Digest;\n\nDigest.prototype.push = function (x_or_xlist) {\n    TDigest.prototype.push.call(this, x_or_xlist);\n    this.check_continuous();\n};\n\nDigest.prototype._new_centroid = function (x, n, cumn) {\n    this.n_unique += 1;\n    TDigest.prototype._new_centroid.call(this, x, n, cumn);\n};\n\nDigest.prototype._addweight = function (nearest, x, n) {\n    if (nearest.n === 1) {\n        this.n_unique -= 1;\n    }\n    TDigest.prototype._addweight.call(this, nearest, x, n);\n};\n\nDigest.prototype.check_continuous = function () {\n    // while in 'auto' mode, if there are many unique elements, assume\n    // they are from a continuous distribution and switch to 'cont'\n    // mode (tdigest behavior). Return true on transition from\n    // disctete to continuous.\n    if (this.mode !== 'auto' || this.size() < this.digest_thresh) {\n        return false;\n    }\n    if (this.n_unique / this.size() > this.digest_ratio) {\n        this.mode = 'cont';\n        this.discrete = false;\n        this.delta = this.config.delta || 0.01;\n        this.compress();\n        return true;\n    }\n    return false;\n};\n\nwindow.gmodCRAM=function(t){var e={};function r(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var i in t)r.d(n,i,function(e){return t[e]}.bind(null,i));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=112)}([function(t,e){var r=t.exports={version:\"2.5.7\"};\"number\"==typeof __e&&(__e=r)},function(t,e,r){\"use strict\";e.__esModule=!0,e.default=function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}},function(t,e,r){\"use strict\";var n=s(r(15)),i=s(r(1)),o=s(r(16)),a=s(r(17));function s(t){return t&&t.__esModule?t:{default:t}}var u=function(t){function e(){return(0,i.default)(this,e),(0,o.default)(this,(e.__proto__||(0,n.default)(e)).apply(this,arguments))}return(0,a.default)(e,t),e}(Error),f=function(t){function e(){return(0,i.default)(this,e),(0,o.default)(this,(e.__proto__||(0,n.default)(e)).apply(this,arguments))}return(0,a.default)(e,t),e}(Error),c=function(t){function e(){return(0,i.default)(this,e),(0,o.default)(this,(e.__proto__||(0,n.default)(e)).apply(this,arguments))}return(0,a.default)(e,t),e}(u),h=function(t){function e(){return(0,i.default)(this,e),(0,o.default)(this,(e.__proto__||(0,n.default)(e)).apply(this,arguments))}return(0,a.default)(e,t),e}(c),l=function(t){function e(){return(0,i.default)(this,e),(0,o.default)(this,(e.__proto__||(0,n.default)(e)).apply(this,arguments))}return(0,a.default)(e,t),e}(u),d=function(t){function e(){return(0,i.default)(this,e),(0,o.default)(this,(e.__proto__||(0,n.default)(e)).apply(this,arguments))}return(0,a.default)(e,t),e}(u);t.exports={CramBufferOverrunError:h,CramMalformedError:c,CramUnimplementedError:f,CramSizeLimitError:l,CramArgumentError:d}},function(t,e,r){\"use strict\";e.__esModule=!0;var n,i=r(137),o=(n=i)&&n.__esModule?n:{default:n};e.default=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),(0,o.default)(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}()},function(t,e,r){var n=r(5),i=r(0),o=r(26),a=r(18),s=r(20),u=function(t,e,r){var f,c,h,l=t&u.F,d=t&u.G,p=t&u.S,g=t&u.P,v=t&u.B,m=t&u.W,y=d?i:i[e]||(i[e]={}),_=y.prototype,b=d?n:p?n[e]:(n[e]||{}).prototype;for(f in d&&(r=e),r)(c=!l&&b&&void 0!==b[f])&&s(y,f)||(h=c?b[f]:r[f],y[f]=d&&\"function\"!=typeof b[f]?r[f]:v&&c?o(h,n):m&&b[f]==h?function(t){var e=function(e,r,n){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,r)}return new t(e,r,n)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(h):g&&\"function\"==typeof h?o(Function.call,h):h,g&&((y.virtual||(y.virtual={}))[f]=h,t&u.R&&_&&!_[f]&&a(_,f,h)))};u.F=1,u.G=2,u.S=4,u.P=8,u.B=16,u.W=32,u.U=64,u.R=128,t.exports=u},function(t,e){var r=t.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=r)},function(t,e,r){var n=r(57)(\"wks\"),i=r(41),o=r(5).Symbol,a=\"function\"==typeof o;(t.exports=function(t){return n[t]||(n[t]=a&&o[t]||(a?o:i)(\"Symbol.\"+t))}).store=n},function(t,e,r){\"use strict\";(function(t){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nvar n=r(114),i=r(115),o=r(72);function a(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(t,e){if(a()<e)throw new RangeError(\"Invalid typed array length\");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=u.prototype:(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,r){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(t,e,r);if(\"number\"==typeof t){if(\"string\"==typeof e)throw new Error(\"If encoding is specified then the first argument must be a string\");return h(this,t)}return f(this,t,e,r)}function f(t,e,r,n){if(\"number\"==typeof e)throw new TypeError('\"value\" argument must not be a number');return\"undefined\"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,r,n){if(e.byteLength,r<0||e.byteLength<r)throw new RangeError(\"'offset' is out of bounds\");if(e.byteLength<r+(n||0))throw new RangeError(\"'length' is out of bounds\");e=void 0===r&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,r):new Uint8Array(e,r,n);u.TYPED_ARRAY_SUPPORT?(t=e).__proto__=u.prototype:t=l(t,e);return t}(t,e,r,n):\"string\"==typeof e?function(t,e,r){\"string\"==typeof r&&\"\"!==r||(r=\"utf8\");if(!u.isEncoding(r))throw new TypeError('\"encoding\" must be a valid string encoding');var n=0|p(e,r),i=(t=s(t,n)).write(e,r);i!==n&&(t=t.slice(0,i));return t}(t,e,r):function(t,e){if(u.isBuffer(e)){var r=0|d(e.length);return 0===(t=s(t,r)).length?t:(e.copy(t,0,0,r),t)}if(e){if(\"undefined\"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||\"length\"in e)return\"number\"!=typeof e.length||(n=e.length)!=n?s(t,0):l(t,e);if(\"Buffer\"===e.type&&o(e.data))return l(t,e.data)}var n;throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}(t,e)}function c(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function h(t,e){if(c(e),t=s(t,e<0?0:0|d(e)),!u.TYPED_ARRAY_SUPPORT)for(var r=0;r<e;++r)t[r]=0;return t}function l(t,e){var r=e.length<0?0:0|d(e.length);t=s(t,r);for(var n=0;n<r;n+=1)t[n]=255&e[n];return t}function d(t){if(t>=a())throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+a().toString(16)+\" bytes\");return 0|t}function p(t,e){if(u.isBuffer(t))return t.length;if(\"undefined\"!=typeof ArrayBuffer&&\"function\"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var r=t.length;if(0===r)return 0;for(var n=!1;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":case void 0:return j(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return D(t).length;default:if(n)return j(t).length;e=(\"\"+e).toLowerCase(),n=!0}}function g(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function v(t,e,r,n,i){if(0===t.length)return-1;if(\"string\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if(\"string\"==typeof e&&(e=u.from(e,n)),u.isBuffer(e))return 0===e.length?-1:m(t,e,r,n,i);if(\"number\"==typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):m(t,[e],r,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function m(t,e,r,n,i){var o,a=1,s=t.length,u=e.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||e.length<2)return-1;a=2,s/=2,u/=2,r/=2}function f(t,e){return 1===a?t[e]:t.readUInt16BE(e*a)}if(i){var c=-1;for(o=r;o<s;o++)if(f(t,o)===f(e,-1===c?0:o-c)){if(-1===c&&(c=o),o-c+1===u)return c*a}else-1!==c&&(o-=o-c),c=-1}else for(r+u>s&&(r=s-u),o=r;o>=0;o--){for(var h=!0,l=0;l<u;l++)if(f(t,o+l)!==f(e,l)){h=!1;break}if(h)return o}return-1}function y(t,e,r,n){r=Number(r)||0;var i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;var o=e.length;if(o%2!=0)throw new TypeError(\"Invalid hex string\");n>o/2&&(n=o/2);for(var a=0;a<n;++a){var s=parseInt(e.substr(2*a,2),16);if(isNaN(s))return a;t[r+a]=s}return a}function _(t,e,r,n){return q(j(e,t.length-r),t,r,n)}function b(t,e,r,n){return q(function(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function w(t,e,r,n){return b(t,e,r,n)}function x(t,e,r,n){return q(D(e),t,r,n)}function E(t,e,r,n){return q(function(t,e){for(var r,n,i,o=[],a=0;a<t.length&&!((e-=2)<0);++a)r=t.charCodeAt(a),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(e,t.length-r),t,r,n)}function S(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function k(t,e,r){r=Math.min(t.length,r);for(var n=[],i=e;i<r;){var o,a,s,u,f=t[i],c=null,h=f>239?4:f>223?3:f>191?2:1;if(i+h<=r)switch(h){case 1:f<128&&(c=f);break;case 2:128==(192&(o=t[i+1]))&&(u=(31&f)<<6|63&o)>127&&(c=u);break;case 3:o=t[i+1],a=t[i+2],128==(192&o)&&128==(192&a)&&(u=(15&f)<<12|(63&o)<<6|63&a)>2047&&(u<55296||u>57343)&&(c=u);break;case 4:o=t[i+1],a=t[i+2],s=t[i+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&(u=(15&f)<<18|(63&o)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(c=u)}null===c?(c=65533,h=1):c>65535&&(c-=65536,n.push(c>>>10&1023|55296),c=56320|1023&c),n.push(c),i+=h}return function(t){var e=t.length;if(e<=A)return String.fromCharCode.apply(String,t);var r=\"\",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=A));return r}(n)}e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&\"function\"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=a(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,r){return f(null,t,e,r)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,\"undefined\"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,r){return function(t,e,r,n){return c(e),e<=0?s(t,e):void 0!==r?\"string\"==typeof n?s(t,e).fill(r,n):s(t,e).fill(r):s(t,e)}(null,t,e,r)},u.allocUnsafe=function(t){return h(null,t)},u.allocUnsafeSlow=function(t){return h(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,e){if(!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError(\"Arguments must be Buffers\");if(t===e)return 0;for(var r=t.length,n=e.length,i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},u.concat=function(t,e){if(!o(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;var n=u.allocUnsafe(e),i=0;for(r=0;r<t.length;++r){var a=t[r];if(!u.isBuffer(a))throw new TypeError('\"list\" argument must be an Array of Buffers');a.copy(n,i),i+=a.length}return n},u.byteLength=p,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var e=0;e<t;e+=2)g(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var e=0;e<t;e+=4)g(this,e,e+3),g(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var e=0;e<t;e+=8)g(this,e,e+7),g(this,e+1,e+6),g(this,e+2,e+5),g(this,e+3,e+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?\"\":0===arguments.length?k(this,0,t):function(t,e,r){var n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(e>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return R(this,e,r);case\"utf8\":case\"utf-8\":return k(this,e,r);case\"ascii\":return C(this,e,r);case\"latin1\":case\"binary\":return T(this,e,r);case\"base64\":return S(this,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return I(this,e,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t=\"\",r=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString(\"hex\",0,r).match(/.{2}/g).join(\" \"),this.length>r&&(t+=\" ... \")),\"<Buffer \"+t+\">\"},u.prototype.compare=function(t,e,r,n,i){if(!u.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),e<0||r>t.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;for(var o=(i>>>=0)-(n>>>=0),a=(r>>>=0)-(e>>>=0),s=Math.min(o,a),f=this.slice(n,i),c=t.slice(e,r),h=0;h<s;++h)if(f[h]!==c[h]){o=f[h],a=c[h];break}return o<a?-1:a<o?1:0},u.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},u.prototype.indexOf=function(t,e,r){return v(this,t,e,r,!0)},u.prototype.lastIndexOf=function(t,e,r){return v(this,t,e,r,!1)},u.prototype.write=function(t,e,r,n){if(void 0===e)n=\"utf8\",r=this.length,e=0;else if(void 0===r&&\"string\"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");e|=0,isFinite(r)?(r|=0,void 0===n&&(n=\"utf8\")):(n=r,r=void 0)}var i=this.length-e;if((void 0===r||r>i)&&(r=i),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");for(var o=!1;;)switch(n){case\"hex\":return y(this,t,e,r);case\"utf8\":case\"utf-8\":return _(this,t,e,r);case\"ascii\":return b(this,t,e,r);case\"latin1\":case\"binary\":return w(this,t,e,r);case\"base64\":return x(this,t,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return E(this,t,e,r);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var A=4096;function C(t,e,r){var n=\"\";r=Math.min(t.length,r);for(var i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function T(t,e,r){var n=\"\";r=Math.min(t.length,r);for(var i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function R(t,e,r){var n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);for(var i=\"\",o=e;o<r;++o)i+=z(t[o]);return i}function I(t,e,r){for(var n=t.slice(e,r),i=\"\",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function B(t,e,r){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>r)throw new RangeError(\"Trying to access beyond buffer length\")}function L(t,e,r,n,i,o){if(!u.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('\"value\" argument is out of bounds');if(r+n>t.length)throw new RangeError(\"Index out of range\")}function M(t,e,r,n){e<0&&(e=65535+e+1);for(var i=0,o=Math.min(t.length-r,2);i<o;++i)t[r+i]=(e&255<<8*(n?i:1-i))>>>8*(n?i:1-i)}function O(t,e,r,n){e<0&&(e=4294967295+e+1);for(var i=0,o=Math.min(t.length-r,4);i<o;++i)t[r+i]=e>>>8*(n?i:3-i)&255}function F(t,e,r,n,i,o){if(r+n>t.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function N(t,e,r,n,o){return o||F(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function P(t,e,r,n,o){return o||F(t,0,r,8),i.write(t,e,r,n,52,8),r+8}u.prototype.slice=function(t,e){var r,n=this.length;if((t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(e=void 0===e?n:~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t),u.TYPED_ARRAY_SUPPORT)(r=this.subarray(t,e)).__proto__=u.prototype;else{var i=e-t;r=new u(i,void 0);for(var o=0;o<i;++o)r[o]=this[o+t]}return r},u.prototype.readUIntLE=function(t,e,r){t|=0,e|=0,r||B(t,e,this.length);for(var n=this[t],i=1,o=0;++o<e&&(i*=256);)n+=this[t+o]*i;return n},u.prototype.readUIntBE=function(t,e,r){t|=0,e|=0,r||B(t,e,this.length);for(var n=this[t+--e],i=1;e>0&&(i*=256);)n+=this[t+--e]*i;return n},u.prototype.readUInt8=function(t,e){return e||B(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,e){return e||B(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,e){return e||B(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,e){return e||B(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,e){return e||B(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,r){t|=0,e|=0,r||B(t,e,this.length);for(var n=this[t],i=1,o=0;++o<e&&(i*=256);)n+=this[t+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*e)),n},u.prototype.readIntBE=function(t,e,r){t|=0,e|=0,r||B(t,e,this.length);for(var n=e,i=1,o=this[t+--n];n>0&&(i*=256);)o+=this[t+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*e)),o},u.prototype.readInt8=function(t,e){return e||B(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){e||B(t,2,this.length);var r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(t,e){e||B(t,2,this.length);var r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(t,e){return e||B(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return e||B(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return e||B(t,4,this.length),i.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return e||B(t,4,this.length),i.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return e||B(t,8,this.length),i.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return e||B(t,8,this.length),i.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,e,r,n){(t=+t,e|=0,r|=0,n)||L(this,t,e,r,Math.pow(2,8*r)-1,0);var i=1,o=0;for(this[e]=255&t;++o<r&&(i*=256);)this[e+o]=t/i&255;return e+r},u.prototype.writeUIntBE=function(t,e,r,n){(t=+t,e|=0,r|=0,n)||L(this,t,e,r,Math.pow(2,8*r)-1,0);var i=r-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+r},u.prototype.writeUInt8=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},u.prototype.writeUInt16LE=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):M(this,t,e,!0),e+2},u.prototype.writeUInt16BE=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):M(this,t,e,!1),e+2},u.prototype.writeUInt32LE=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):O(this,t,e,!0),e+4},u.prototype.writeUInt32BE=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):O(this,t,e,!1),e+4},u.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e|=0,!n){var i=Math.pow(2,8*r-1);L(this,t,e,r,i-1,-i)}var o=0,a=1,s=0;for(this[e]=255&t;++o<r&&(a*=256);)t<0&&0===s&&0!==this[e+o-1]&&(s=1),this[e+o]=(t/a>>0)-s&255;return e+r},u.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e|=0,!n){var i=Math.pow(2,8*r-1);L(this,t,e,r,i-1,-i)}var o=r-1,a=1,s=0;for(this[e+o]=255&t;--o>=0&&(a*=256);)t<0&&0===s&&0!==this[e+o+1]&&(s=1),this[e+o]=(t/a>>0)-s&255;return e+r},u.prototype.writeInt8=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):M(this,t,e,!0),e+2},u.prototype.writeInt16BE=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):M(this,t,e,!1),e+2},u.prototype.writeInt32LE=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):O(this,t,e,!0),e+4},u.prototype.writeInt32BE=function(t,e,r){return t=+t,e|=0,r||L(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):O(this,t,e,!1),e+4},u.prototype.writeFloatLE=function(t,e,r){return N(this,t,e,!0,r)},u.prototype.writeFloatBE=function(t,e,r){return N(this,t,e,!1,r)},u.prototype.writeDoubleLE=function(t,e,r){return P(this,t,e,!0,r)},u.prototype.writeDoubleBE=function(t,e,r){return P(this,t,e,!1,r)},u.prototype.copy=function(t,e,r,n){if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);var i,o=n-r;if(this===t&&r<e&&e<n)for(i=o-1;i>=0;--i)t[i+e]=this[i+r];else if(o<1e3||!u.TYPED_ARRAY_SUPPORT)for(i=0;i<o;++i)t[i+e]=this[i+r];else Uint8Array.prototype.set.call(t,this.subarray(r,r+o),e);return o},u.prototype.fill=function(t,e,r,n){if(\"string\"==typeof t){if(\"string\"==typeof e?(n=e,e=0,r=this.length):\"string\"==typeof r&&(n=r,r=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!u.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n)}else\"number\"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<r)throw new RangeError(\"Out of range index\");if(r<=e)return this;var o;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),\"number\"==typeof t)for(o=e;o<r;++o)this[o]=t;else{var a=u.isBuffer(t)?t:j(new u(t,n).toString()),s=a.length;for(o=0;o<r-e;++o)this[o+e]=a[o%s]}return this};var U=/[^+\\/0-9A-Za-z-_]/g;function z(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function j(t,e){var r;e=e||1/0;for(var n=t.length,i=null,o=[],a=0;a<n;++a){if((r=t.charCodeAt(a))>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(a+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function D(t){return n.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}(t).replace(U,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}(t))}function q(t,e,r,n){for(var i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}}).call(this,r(9))},function(t,e,r){var n=r(13);t.exports=function(t){if(!n(t))throw TypeError(t+\" is not an object!\");return t}},function(t,e){var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(t){\"object\"==typeof window&&(r=window)}t.exports=r},function(t,e,r){var n=r(8),i=r(75),o=r(53),a=Object.defineProperty;e.f=r(14)?Object.defineProperty:function(t,e,r){if(n(t),e=o(e,!0),n(r),i)try{return a(t,e,r)}catch(t){}if(\"get\"in r||\"set\"in r)throw TypeError(\"Accessors not supported!\");return\"value\"in r&&(t[e]=r.value),t}},function(t,e,r){t.exports=r(116)},function(t,e,r){\"use strict\";e.__esModule=!0;var n,i=r(38),o=(n=i)&&n.__esModule?n:{default:n};e.default=function(t){return function(){var e=t.apply(this,arguments);return new o.default(function(t,r){return function n(i,a){try{var s=e[i](a),u=s.value}catch(t){return void r(t)}if(!s.done)return o.default.resolve(u).then(function(t){n(\"next\",t)},function(t){n(\"throw\",t)});t(u)}(\"next\")})}}},function(t,e){t.exports=function(t){return\"object\"==typeof t?null!==t:\"function\"==typeof t}},function(t,e,r){t.exports=!r(19)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(t,e,r){t.exports={default:r(163),__esModule:!0}},function(t,e,r){\"use strict\";e.__esModule=!0;var n,i=r(100),o=(n=i)&&n.__esModule?n:{default:n};e.default=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!==(void 0===e?\"undefined\":(0,o.default)(e))&&\"function\"!=typeof e?t:e}},function(t,e,r){\"use strict\";e.__esModule=!0;var n=a(r(176)),i=a(r(180)),o=a(r(100));function a(t){return t&&t.__esModule?t:{default:t}}e.default=function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+(void 0===e?\"undefined\":(0,o.default)(e)));t.prototype=(0,i.default)(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(n.default?(0,n.default)(t,e):t.__proto__=e)}},function(t,e,r){var n=r(10),i=r(32);t.exports=r(14)?function(t,e,r){return n.f(t,e,i(1,r))}:function(t,e,r){return t[e]=r,t}},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e){var r={}.hasOwnProperty;t.exports=function(t,e){return r.call(t,e)}},function(t,e,r){var n=r(78),i=r(39);t.exports=function(t){return n(i(t))}},function(t,e){var r,n,i=t.exports={};function o(){throw new Error(\"setTimeout has not been defined\")}function a(){throw new Error(\"clearTimeout has not been defined\")}function s(t){if(r===setTimeout)return setTimeout(t,0);if((r===o||!r)&&setTimeout)return r=setTimeout,setTimeout(t,0);try{return r(t,0)}catch(e){try{return r.call(null,t,0)}catch(e){return r.call(this,t,0)}}}!function(){try{r=\"function\"==typeof setTimeout?setTimeout:o}catch(t){r=o}try{n=\"function\"==typeof clearTimeout?clearTimeout:a}catch(t){n=a}}();var u,f=[],c=!1,h=-1;function l(){c&&u&&(c=!1,u.length?f=u.concat(f):h=-1,f.length&&d())}function d(){if(!c){var t=s(l);c=!0;for(var e=f.length;e;){for(u=f,f=[];++h<e;)u&&u[h].run();h=-1,e=f.length}u=null,c=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function p(t,e){this.fun=t,this.array=e}function g(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];f.push(new p(t,e)),1!==f.length||c||s(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},i.title=\"browser\",i.browser=!0,i.env={},i.argv=[],i.version=\"\",i.versions={},i.on=g,i.addListener=g,i.once=g,i.off=g,i.removeListener=g,i.removeAllListeners=g,i.emit=g,i.prependListener=g,i.prependOnceListener=g,i.listeners=function(t){return[]},i.binding=function(t){throw new Error(\"process.binding is not supported\")},i.cwd=function(){return\"/\"},i.chdir=function(t){throw new Error(\"process.chdir is not supported\")},i.umask=function(){return 0}},function(t,e){\"function\"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var r=function(){};r.prototype=e.prototype,t.prototype=new r,t.prototype.constructor=t}},function(t,e,r){\"use strict\";var n=r(44),i=Object.keys||function(t){var e=[];for(var r in t)e.push(r);return e};t.exports=h;var o=r(35);o.inherits=r(23);var a=r(89),s=r(64);o.inherits(h,a);for(var u=i(s.prototype),f=0;f<u.length;f++){var c=u[f];h.prototype[c]||(h.prototype[c]=s.prototype[c])}function h(t){if(!(this instanceof h))return new h(t);a.call(this,t),s.call(this,t),t&&!1===t.readable&&(this.readable=!1),t&&!1===t.writable&&(this.writable=!1),this.allowHalfOpen=!0,t&&!1===t.allowHalfOpen&&(this.allowHalfOpen=!1),this.once(\"end\",l)}function l(){this.allowHalfOpen||this._writableState.ended||n.nextTick(d,this)}function d(t){t.end()}Object.defineProperty(h.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(h.prototype,\"destroyed\",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(t){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=t,this._writableState.destroyed=t)}}),h.prototype._destroy=function(t,e){this.push(null),this.end(),n.nextTick(e,t)}},function(t,e,r){\"use strict\";var n=o(r(1)),i=o(r(3));function o(t){return t&&t.__esModule?t:{default:t}}var a=r(2).CramBufferOverrunError,s={int:!0,byte:!0,long:!0,byteArray:!0,byteArrayBlock:!0},u=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments[1];if((0,n.default)(this,t),this.parameters=e,this.dataType=r,!r)throw new TypeError(\"must provide a data type to codec constructor\");if(!s[r])throw new TypeError(\"invalid data type \"+r)}return(0,i.default)(t,[{key:\"_getBits\",value:function(t,e,r){var n=0;if(e.bytePosition+(7-e.bitPosition+r)/8>t.length)throw new a(\"read error during decoding. the file seems to be truncated.\");for(var i=r;i;i-=1)n<<=1,n|=t[e.bytePosition]>>e.bitPosition&1,e.bitPosition-=1,e.bitPosition<0&&(e.bytePosition+=1),e.bitPosition&=7;return n}}]),t}();t.exports=u},function(t,e,r){var n=r(40);t.exports=function(t,e,r){if(n(t),void 0===e)return t;switch(r){case 1:return function(r){return t.call(e,r)};case 2:return function(r,n){return t.call(e,r,n)};case 3:return function(r,n,i){return t.call(e,r,n,i)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports={}},function(t,e,r){var n=r(77),i=r(58);t.exports=Object.keys||function(t){return n(t,i)}},function(t,e,r){\"use strict\";e.__esModule=!0;var n=o(r(221)),i=o(r(224));function o(t){return t&&t.__esModule?t:{default:t}}e.default=function(){return function(t,e){if(Array.isArray(t))return t;if((0,n.default)(Object(t)))return function(t,e){var r=[],n=!0,o=!1,a=void 0;try{for(var s,u=(0,i.default)(t);!(n=(s=u.next()).done)&&(r.push(s.value),!e||r.length!==e);n=!0);}catch(t){o=!0,a=t}finally{try{!n&&u.return&&u.return()}finally{if(o)throw a}}return r}(t,e);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}()},function(t,e,r){\"use strict\";var n=r(119)(!0);r(74)(String,\"String\",function(t){this._t=String(t),this._i=0},function(){var t,e=this._t,r=this._i;return r>=e.length?{value:void 0,done:!0}:(t=n(e,r),this._i+=t.length,{value:t,done:!1})})},function(t,e){t.exports=!0},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e){var r={}.toString;t.exports=function(t){return r.call(t).slice(8,-1)}},function(t,e,r){var n=r(39);t.exports=function(t){return Object(n(t))}},function(t,e,r){(function(t){function r(t){return Object.prototype.toString.call(t)}e.isArray=function(t){return Array.isArray?Array.isArray(t):\"[object Array]\"===r(t)},e.isBoolean=function(t){return\"boolean\"==typeof t},e.isNull=function(t){return null===t},e.isNullOrUndefined=function(t){return null==t},e.isNumber=function(t){return\"number\"==typeof t},e.isString=function(t){return\"string\"==typeof t},e.isSymbol=function(t){return\"symbol\"==typeof t},e.isUndefined=function(t){return void 0===t},e.isRegExp=function(t){return\"[object RegExp]\"===r(t)},e.isObject=function(t){return\"object\"==typeof t&&null!==t},e.isDate=function(t){return\"[object Date]\"===r(t)},e.isError=function(t){return\"[object Error]\"===r(t)||t instanceof Error},e.isFunction=function(t){return\"function\"==typeof t},e.isPrimitive=function(t){return null===t||\"boolean\"==typeof t||\"number\"==typeof t||\"string\"==typeof t||\"symbol\"==typeof t||void 0===t},e.isBuffer=t.isBuffer}).call(this,r(7).Buffer)},function(t,e){e.f={}.propertyIsEnumerable},function(t,e,r){\"use strict\";var n=r(198),i=r(2).CramBufferOverrunError;t.exports={itf8Size:function(t){return-128&t?-16384&t?-2097152&t?-268435456&t?5:4:3:2:1},parseItf8:function(t,e){var r=e,n=t[r],o=void 0;if(n<128?(o=n,r+=1):n<192?(o=16383&(n<<8|t[r+1]),r+=2):n<224?(o=2097151&(n<<16|t[r+1]<<8|t[r+2]),r+=3):n<240?(o=268435455&(n<<24|t[r+1]<<16|t[r+2]<<8|t[r+3]),r+=4):(o=(15&n)<<28|t[r+1]<<20|t[r+2]<<12|t[r+3]<<4|15&t[r+4],r+=5),r>t.length)throw new i(\"Attempted to read beyond end of buffer; this file seems truncated.\");return[o,r-e]},parseItem:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=e.parse(t),o=i.offset,a=i.result;return a._endPosition=o+n,a._size=o-r,a},tinyMemoize:function(t,e){var r=t.prototype[e],n=\"_memo_\"+e;t.prototype[e]=function(){return n in this||(this[n]=r.call(this)),this[n]}},sequenceMD5:function(t){return n(t.toUpperCase().replace(/[^\\x21-\\x7e]/g,\"\"))}}},function(t,e,r){t.exports={default:r(118),__esModule:!0}},function(t,e){t.exports=function(t){if(null==t)throw TypeError(\"Can't call method on  \"+t);return t}},function(t,e){t.exports=function(t){if(\"function\"!=typeof t)throw TypeError(t+\" is not a function!\");return t}},function(t,e){var r=0,n=Math.random();t.exports=function(t){return\"Symbol(\".concat(void 0===t?\"\":t,\")_\",(++r+n).toString(36))}},function(t,e,r){var n=r(10).f,i=r(20),o=r(6)(\"toStringTag\");t.exports=function(t,e,r){t&&!i(t=r?t:t.prototype,o)&&n(t,o,{configurable:!0,value:e})}},function(t,e,r){r(124);for(var n=r(5),i=r(18),o=r(27),a=r(6)(\"toStringTag\"),s=\"CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList\".split(\",\"),u=0;u<s.length;u++){var f=s[u],c=n[f],h=c&&c.prototype;h&&!h[a]&&i(h,a,f),o[f]=o.Array}},function(t,e,r){\"use strict\";(function(e){!e.version||0===e.version.indexOf(\"v0.\")||0===e.version.indexOf(\"v1.\")&&0!==e.version.indexOf(\"v1.8.\")?t.exports={nextTick:function(t,r,n,i){if(\"function\"!=typeof t)throw new TypeError('\"callback\" argument must be a function');var o,a,s=arguments.length;switch(s){case 0:case 1:return e.nextTick(t);case 2:return e.nextTick(function(){t.call(null,r)});case 3:return e.nextTick(function(){t.call(null,r,n)});case 4:return e.nextTick(function(){t.call(null,r,n,i)});default:for(o=new Array(s-1),a=0;a<o.length;)o[a++]=arguments[a];return e.nextTick(function(){t.apply(null,o)})}}}:t.exports=e}).call(this,r(22))},function(t,e,r){var n=r(7),i=n.Buffer;function o(t,e){for(var r in t)e[r]=t[r]}function a(t,e,r){return i(t,e,r)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?t.exports=n:(o(n,e),e.Buffer=a),o(i,a),a.from=function(t,e,r){if(\"number\"==typeof t)throw new TypeError(\"Argument must not be a number\");return i(t,e,r)},a.alloc=function(t,e,r){if(\"number\"!=typeof t)throw new TypeError(\"Argument must be a number\");var n=i(t);return void 0!==e?\"string\"==typeof r?n.fill(e,r):n.fill(e):n.fill(0),n},a.allocUnsafe=function(t){if(\"number\"!=typeof t)throw new TypeError(\"Argument must be a number\");return i(t)},a.allocUnsafeSlow=function(t){if(\"number\"!=typeof t)throw new TypeError(\"Argument must be a number\");return n.SlowBuffer(t)}},function(t,e,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;function i(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var r=e.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var n in r)i(r,n)&&(t[n]=r[n])}}return t},e.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var o={arraySet:function(t,e,r,n,i){if(e.subarray&&t.subarray)t.set(e.subarray(r,r+n),i);else for(var o=0;o<n;o++)t[i+o]=e[r+o]},flattenChunks:function(t){var e,r,n,i,o,a;for(n=0,e=0,r=t.length;e<r;e++)n+=t[e].length;for(a=new Uint8Array(n),i=0,e=0,r=t.length;e<r;e++)o=t[e],a.set(o,i),i+=o.length;return a}},a={arraySet:function(t,e,r,n,i){for(var o=0;o<n;o++)t[i+o]=e[r+o]},flattenChunks:function(t){return[].concat.apply([],t)}};e.setTyped=function(t){t?(e.Buf8=Uint8Array,e.Buf16=Uint16Array,e.Buf32=Int32Array,e.assign(e,o)):(e.Buf8=Array,e.Buf16=Array,e.Buf32=Array,e.assign(e,a))},e.setTyped(n)},function(t,e,r){\"use strict\";var n,i=r(1),o=(n=i)&&n.__esModule?n:{default:n};var a=r(2).CramMalformedError,s=r(48),u=function t(){(0,o.default)(this,t),this.F=void 0,this.C=void 0};function f(t,e,r,n){return r*(t>>n)+(t&(1<<n)-1)-e}var c={FC:u,AriDecoder:function t(){(0,o.default)(this,t),this.fc=new Array(256);for(var e=0;e<this.fc.length;e+=1)this.fc[e]=new u;this.R=null},Symbol:function t(){(0,o.default)(this,t),this.start=void 0,this.freq=void 0},symbolInit:function(t,e,r){if(!(e<=65536))throw new a(\"assertion failed: start <= 1<<16\");if(!(r<=65536-e))throw new a(\"assertion failed: freq <= 1<<16\");t.start=e,t.freq=r},advanceStep:f,advanceSymbolStep:function(t,e,r){return f(t,e.start,e.freq,r)},get:function(t,e){return t&(1<<e)-1},advanceSymbol:function(t,e,r,n){return function(t,e,r,n,i){if((t=n*(t>>i)+(t&(1<<i)-1)-r)<s.RANS_BYTE_L)do{t=t<<8|255&e.get()}while(t<s.RANS_BYTE_L);return t}(t,e,r.start,r.freq,n)},renormalize:function(t,e){if(t<s.RANS_BYTE_L)do{t=t<<8|255&e.get()}while(t<s.RANS_BYTE_L);return t}};t.exports=c},function(t,e,r){\"use strict\";t.exports={TF_SHIFT:12,TOTFREQ:4096,RANS_BYTE_L:1<<23}},function(t,e,r){t.exports={default:r(190),__esModule:!0}},function(t,e,r){\"use strict\";e.__esModule=!0;var n,i=r(107),o=(n=i)&&n.__esModule?n:{default:n};e.default=function(t){if(Array.isArray(t)){for(var e=0,r=Array(t.length);e<t.length;e++)r[e]=t[e];return r}return(0,o.default)(t)}},function(t,e){var r=Math.ceil,n=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?n:r)(t)}},function(t,e,r){var n=r(13),i=r(5).document,o=n(i)&&n(i.createElement);t.exports=function(t){return o?i.createElement(t):{}}},function(t,e,r){var n=r(13);t.exports=function(t,e){if(!n(t))return t;var r,i;if(e&&\"function\"==typeof(r=t.toString)&&!n(i=r.call(t)))return i;if(\"function\"==typeof(r=t.valueOf)&&!n(i=r.call(t)))return i;if(!e&&\"function\"==typeof(r=t.toString)&&!n(i=r.call(t)))return i;throw TypeError(\"Can't convert object to primitive value\")}},function(t,e,r){var n=r(8),i=r(121),o=r(58),a=r(56)(\"IE_PROTO\"),s=function(){},u=function(){var t,e=r(52)(\"iframe\"),n=o.length;for(e.style.display=\"none\",r(79).appendChild(e),e.src=\"javascript:\",(t=e.contentWindow.document).open(),t.write(\"<script>document.F=Object<\\/script>\"),t.close(),u=t.F;n--;)delete u.prototype[o[n]];return u()};t.exports=Object.create||function(t,e){var r;return null!==t?(s.prototype=n(t),r=new s,s.prototype=null,r[a]=t):r=u(),void 0===e?r:i(r,e)}},function(t,e,r){var n=r(51),i=Math.min;t.exports=function(t){return t>0?i(n(t),9007199254740991):0}},function(t,e,r){var n=r(57)(\"keys\"),i=r(41);t.exports=function(t){return n[t]||(n[t]=i(t))}},function(t,e,r){var n=r(0),i=r(5),o=i[\"__core-js_shared__\"]||(i[\"__core-js_shared__\"]={});(t.exports=function(t,e){return o[t]||(o[t]=void 0!==e?e:{})})(\"versions\",[]).push({version:n.version,mode:r(31)?\"pure\":\"global\",copyright:\"© 2018 Denis Pushkarev (zloirock.ru)\"})},function(t,e){t.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(t,e,r){var n=r(33),i=r(6)(\"toStringTag\"),o=\"Arguments\"==n(function(){return arguments}());t.exports=function(t){var e,r,a;return void 0===t?\"Undefined\":null===t?\"Null\":\"string\"==typeof(r=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),i))?r:o?n(e):\"Object\"==(a=n(e))&&\"function\"==typeof e.callee?\"Arguments\":a}},function(t,e,r){var n=r(59),i=r(6)(\"iterator\"),o=r(27);t.exports=r(0).getIteratorMethod=function(t){if(null!=t)return t[i]||t[\"@@iterator\"]||o[n(t)]}},function(t,e,r){\"use strict\";var n=r(40);function i(t){var e,r;this.promise=new t(function(t,n){if(void 0!==e||void 0!==r)throw TypeError(\"Bad Promise constructor\");e=t,r=n}),this.resolve=n(e),this.reject=n(r)}t.exports.f=function(t){return new i(t)}},function(t,e){function r(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function n(t){return\"function\"==typeof t}function i(t){return\"object\"==typeof t&&null!==t}function o(t){return void 0===t}t.exports=r,r.EventEmitter=r,r.prototype._events=void 0,r.prototype._maxListeners=void 0,r.defaultMaxListeners=10,r.prototype.setMaxListeners=function(t){if(\"number\"!=typeof t||t<0||isNaN(t))throw TypeError(\"n must be a positive number\");return this._maxListeners=t,this},r.prototype.emit=function(t){var e,r,a,s,u,f;if(this._events||(this._events={}),\"error\"===t&&(!this._events.error||i(this._events.error)&&!this._events.error.length)){if((e=arguments[1])instanceof Error)throw e;var c=new Error('Uncaught, unspecified \"error\" event. ('+e+\")\");throw c.context=e,c}if(o(r=this._events[t]))return!1;if(n(r))switch(arguments.length){case 1:r.call(this);break;case 2:r.call(this,arguments[1]);break;case 3:r.call(this,arguments[1],arguments[2]);break;default:s=Array.prototype.slice.call(arguments,1),r.apply(this,s)}else if(i(r))for(s=Array.prototype.slice.call(arguments,1),a=(f=r.slice()).length,u=0;u<a;u++)f[u].apply(this,s);return!0},r.prototype.addListener=function(t,e){var a;if(!n(e))throw TypeError(\"listener must be a function\");return this._events||(this._events={}),this._events.newListener&&this.emit(\"newListener\",t,n(e.listener)?e.listener:e),this._events[t]?i(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,i(this._events[t])&&!this._events[t].warned&&(a=o(this._maxListeners)?r.defaultMaxListeners:this._maxListeners)&&a>0&&this._events[t].length>a&&(this._events[t].warned=!0,console.error(\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\",this._events[t].length),\"function\"==typeof console.trace&&console.trace()),this},r.prototype.on=r.prototype.addListener,r.prototype.once=function(t,e){if(!n(e))throw TypeError(\"listener must be a function\");var r=!1;function i(){this.removeListener(t,i),r||(r=!0,e.apply(this,arguments))}return i.listener=e,this.on(t,i),this},r.prototype.removeListener=function(t,e){var r,o,a,s;if(!n(e))throw TypeError(\"listener must be a function\");if(!this._events||!this._events[t])return this;if(a=(r=this._events[t]).length,o=-1,r===e||n(r.listener)&&r.listener===e)delete this._events[t],this._events.removeListener&&this.emit(\"removeListener\",t,e);else if(i(r)){for(s=a;s-- >0;)if(r[s]===e||r[s].listener&&r[s].listener===e){o=s;break}if(o<0)return this;1===r.length?(r.length=0,delete this._events[t]):r.splice(o,1),this._events.removeListener&&this.emit(\"removeListener\",t,e)}return this},r.prototype.removeAllListeners=function(t){var e,r;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)\"removeListener\"!==e&&this.removeAllListeners(e);return this.removeAllListeners(\"removeListener\"),this._events={},this}if(n(r=this._events[t]))this.removeListener(t,r);else if(r)for(;r.length;)this.removeListener(t,r[r.length-1]);return delete this._events[t],this},r.prototype.listeners=function(t){return this._events&&this._events[t]?n(this._events[t])?[this._events[t]]:this._events[t].slice():[]},r.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(n(e))return 1;if(e)return e.length}return 0},r.listenerCount=function(t,e){return t.listenerCount(e)}},function(t,e,r){(e=t.exports=r(89)).Stream=e,e.Readable=e,e.Writable=r(64),e.Duplex=r(24),e.Transform=r(93),e.PassThrough=r(147)},function(t,e,r){\"use strict\";(function(e,n,i){var o=r(44);function a(t){var e=this;this.next=null,this.entry=null,this.finish=function(){!function(t,e,r){var n=t.entry;t.entry=null;for(;n;){var i=n.callback;e.pendingcb--,i(r),n=n.next}e.corkedRequestsFree?e.corkedRequestsFree.next=t:e.corkedRequestsFree=t}(e,t)}}t.exports=y;var s,u=!e.browser&&[\"v0.10\",\"v0.9.\"].indexOf(e.version.slice(0,5))>-1?n:o.nextTick;y.WritableState=m;var f=r(35);f.inherits=r(23);var c={deprecate:r(146)},h=r(90),l=r(45).Buffer,d=i.Uint8Array||function(){};var p,g=r(91);function v(){}function m(t,e){s=s||r(24),t=t||{};var n=e instanceof s;this.objectMode=!!t.objectMode,n&&(this.objectMode=this.objectMode||!!t.writableObjectMode);var i=t.highWaterMark,f=t.writableHighWaterMark,c=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:n&&(f||0===f)?f:c,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var h=!1===t.decodeStrings;this.decodeStrings=!h,this.defaultEncoding=t.defaultEncoding||\"utf8\",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){!function(t,e){var r=t._writableState,n=r.sync,i=r.writecb;if(function(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}(r),e)!function(t,e,r,n,i){--e.pendingcb,r?(o.nextTick(i,n),o.nextTick(S,t,e),t._writableState.errorEmitted=!0,t.emit(\"error\",n)):(i(n),t._writableState.errorEmitted=!0,t.emit(\"error\",n),S(t,e))}(t,r,n,e,i);else{var a=x(r);a||r.corked||r.bufferProcessing||!r.bufferedRequest||w(t,r),n?u(b,t,r,a,i):b(t,r,a,i)}}(e,t)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new a(this)}function y(t){if(s=s||r(24),!(p.call(y,this)||this instanceof s))return new y(t);this._writableState=new m(t,this),this.writable=!0,t&&(\"function\"==typeof t.write&&(this._write=t.write),\"function\"==typeof t.writev&&(this._writev=t.writev),\"function\"==typeof t.destroy&&(this._destroy=t.destroy),\"function\"==typeof t.final&&(this._final=t.final)),h.call(this)}function _(t,e,r,n,i,o,a){e.writelen=n,e.writecb=a,e.writing=!0,e.sync=!0,r?t._writev(i,e.onwrite):t._write(i,o,e.onwrite),e.sync=!1}function b(t,e,r,n){r||function(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit(\"drain\"))}(t,e),e.pendingcb--,n(),S(t,e)}function w(t,e){e.bufferProcessing=!0;var r=e.bufferedRequest;if(t._writev&&r&&r.next){var n=e.bufferedRequestCount,i=new Array(n),o=e.corkedRequestsFree;o.entry=r;for(var s=0,u=!0;r;)i[s]=r,r.isBuf||(u=!1),r=r.next,s+=1;i.allBuffers=u,_(t,e,!0,e.length,i,\"\",o.finish),e.pendingcb++,e.lastBufferedRequest=null,o.next?(e.corkedRequestsFree=o.next,o.next=null):e.corkedRequestsFree=new a(e),e.bufferedRequestCount=0}else{for(;r;){var f=r.chunk,c=r.encoding,h=r.callback;if(_(t,e,!1,e.objectMode?1:f.length,f,c,h),r=r.next,e.bufferedRequestCount--,e.writing)break}null===r&&(e.lastBufferedRequest=null)}e.bufferedRequest=r,e.bufferProcessing=!1}function x(t){return t.ending&&0===t.length&&null===t.bufferedRequest&&!t.finished&&!t.writing}function E(t,e){t._final(function(r){e.pendingcb--,r&&t.emit(\"error\",r),e.prefinished=!0,t.emit(\"prefinish\"),S(t,e)})}function S(t,e){var r=x(e);return r&&(!function(t,e){e.prefinished||e.finalCalled||(\"function\"==typeof t._final?(e.pendingcb++,e.finalCalled=!0,o.nextTick(E,t,e)):(e.prefinished=!0,t.emit(\"prefinish\")))}(t,e),0===e.pendingcb&&(e.finished=!0,t.emit(\"finish\"))),r}f.inherits(y,h),m.prototype.getBuffer=function(){for(var t=this.bufferedRequest,e=[];t;)e.push(t),t=t.next;return e},function(){try{Object.defineProperty(m.prototype,\"buffer\",{get:c.deprecate(function(){return this.getBuffer()},\"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\",\"DEP0003\")})}catch(t){}}(),\"function\"==typeof Symbol&&Symbol.hasInstance&&\"function\"==typeof Function.prototype[Symbol.hasInstance]?(p=Function.prototype[Symbol.hasInstance],Object.defineProperty(y,Symbol.hasInstance,{value:function(t){return!!p.call(this,t)||this===y&&(t&&t._writableState instanceof m)}})):p=function(t){return t instanceof this},y.prototype.pipe=function(){this.emit(\"error\",new Error(\"Cannot pipe, not readable\"))},y.prototype.write=function(t,e,r){var n,i=this._writableState,a=!1,s=!i.objectMode&&(n=t,l.isBuffer(n)||n instanceof d);return s&&!l.isBuffer(t)&&(t=function(t){return l.from(t)}(t)),\"function\"==typeof e&&(r=e,e=null),s?e=\"buffer\":e||(e=i.defaultEncoding),\"function\"!=typeof r&&(r=v),i.ended?function(t,e){var r=new Error(\"write after end\");t.emit(\"error\",r),o.nextTick(e,r)}(this,r):(s||function(t,e,r,n){var i=!0,a=!1;return null===r?a=new TypeError(\"May not write null values to stream\"):\"string\"==typeof r||void 0===r||e.objectMode||(a=new TypeError(\"Invalid non-string/buffer chunk\")),a&&(t.emit(\"error\",a),o.nextTick(n,a),i=!1),i}(this,i,t,r))&&(i.pendingcb++,a=function(t,e,r,n,i,o){if(!r){var a=function(t,e,r){t.objectMode||!1===t.decodeStrings||\"string\"!=typeof e||(e=l.from(e,r));return e}(e,n,i);n!==a&&(r=!0,i=\"buffer\",n=a)}var s=e.objectMode?1:n.length;e.length+=s;var u=e.length<e.highWaterMark;u||(e.needDrain=!0);if(e.writing||e.corked){var f=e.lastBufferedRequest;e.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:o,next:null},f?f.next=e.lastBufferedRequest:e.bufferedRequest=e.lastBufferedRequest,e.bufferedRequestCount+=1}else _(t,e,!1,s,n,i,o);return u}(this,i,s,t,e,r)),a},y.prototype.cork=function(){this._writableState.corked++},y.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.bufferedRequest||w(this,t))},y.prototype.setDefaultEncoding=function(t){if(\"string\"==typeof t&&(t=t.toLowerCase()),!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((t+\"\").toLowerCase())>-1))throw new TypeError(\"Unknown encoding: \"+t);return this._writableState.defaultEncoding=t,this},Object.defineProperty(y.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),y.prototype._write=function(t,e,r){r(new Error(\"_write() is not implemented\"))},y.prototype._writev=null,y.prototype.end=function(t,e,r){var n=this._writableState;\"function\"==typeof t?(r=t,t=null,e=null):\"function\"==typeof e&&(r=e,e=null),null!=t&&this.write(t,e),n.corked&&(n.corked=1,this.uncork()),n.ending||n.finished||function(t,e,r){e.ending=!0,S(t,e),r&&(e.finished?o.nextTick(r):t.once(\"finish\",r));e.ended=!0,t.writable=!1}(this,n,r)},Object.defineProperty(y.prototype,\"destroyed\",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(t){this._writableState&&(this._writableState.destroyed=t)}}),y.prototype.destroy=g.destroy,y.prototype._undestroy=g.undestroy,y.prototype._destroy=function(t,e){this.end(),e(t)}}).call(this,r(22),r(144).setImmediate,r(9))},function(t,e,r){e.f=r(6)},function(t,e,r){var n=r(5),i=r(0),o=r(31),a=r(65),s=r(10).f;t.exports=function(t){var e=i.Symbol||(i.Symbol=o?{}:n.Symbol||{});\"_\"==t.charAt(0)||t in e||s(e,t,{value:a.f(t)})}},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,r){t.exports={default:r(188),__esModule:!0}},function(t,e,r){\"use strict\";t.exports={CRAM_FLAG_PRESERVE_QUAL_SCORES:1,CRAM_FLAG_DETACHED:2,CRAM_FLAG_MATE_DOWNSTREAM:4,CRAM_FLAG_NO_SEQ:8,CRAM_FLAG_MASK:15,CRAM_M_REVERSE:1,CRAM_M_UNMAP:2,BAM_FPAIRED:1,BAM_FPROPER_PAIR:2,BAM_FUNMAP:4,BAM_FMUNMAP:8,BAM_FREVERSE:16,BAM_FMREVERSE:32,BAM_FREAD1:64,BAM_FREAD2:128,BAM_FSECONDARY:256,BAM_FQCFAIL:512,BAM_FDUP:1024,BAM_FSUPPLEMENTARY:2048,BAM_CMATCH:0,BAM_CINS:1,BAM_CDEL:2,BAM_CREF_SKIP:3,BAM_CSOFT_CLIP:4,BAM_CHARD_CLIP:5,BAM_CPAD:6,BAM_CEQUAL:7,BAM_CDIFF:8,BAM_CBACK:9,BAM_CIGAR_STR:\"MIDNSHP:XB\",BAM_CIGAR_SHIFT:4,BAM_CIGAR_MASK:15,BAM_CIGAR_TYPE:246183}},function(t,e,r){t.exports={default:r(231),__esModule:!0}},function(t,e,r){\"use strict\";var n=r(113);t.exports=n},function(t,e){var r={}.toString;t.exports=Array.isArray||function(t){return\"[object Array]\"==r.call(t)}},function(t,e){},function(t,e,r){\"use strict\";var n=r(31),i=r(4),o=r(76),a=r(18),s=r(27),u=r(120),f=r(42),c=r(80),h=r(6)(\"iterator\"),l=!([].keys&&\"next\"in[].keys()),d=function(){return this};t.exports=function(t,e,r,p,g,v,m){u(r,e,p);var y,_,b,w=function(t){if(!l&&t in k)return k[t];switch(t){case\"keys\":case\"values\":return function(){return new r(this,t)}}return function(){return new r(this,t)}},x=e+\" Iterator\",E=\"values\"==g,S=!1,k=t.prototype,A=k[h]||k[\"@@iterator\"]||g&&k[g],C=A||w(g),T=g?E?w(\"entries\"):C:void 0,R=\"Array\"==e&&k.entries||A;if(R&&(b=c(R.call(new t)))!==Object.prototype&&b.next&&(f(b,x,!0),n||\"function\"==typeof b[h]||a(b,h,d)),E&&A&&\"values\"!==A.name&&(S=!0,C=function(){return A.call(this)}),n&&!m||!l&&!S&&k[h]||a(k,h,C),s[e]=C,s[x]=d,g)if(y={values:E?C:w(\"values\"),keys:v?C:w(\"keys\"),entries:T},m)for(_ in y)_ in k||o(k,_,y[_]);else i(i.P+i.F*(l||S),e,y);return y}},function(t,e,r){t.exports=!r(14)&&!r(19)(function(){return 7!=Object.defineProperty(r(52)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(t,e,r){t.exports=r(18)},function(t,e,r){var n=r(20),i=r(21),o=r(122)(!1),a=r(56)(\"IE_PROTO\");t.exports=function(t,e){var r,s=i(t),u=0,f=[];for(r in s)r!=a&&n(s,r)&&f.push(r);for(;e.length>u;)n(s,r=e[u++])&&(~o(f,r)||f.push(r));return f}},function(t,e,r){var n=r(33);t.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(t){return\"String\"==n(t)?t.split(\"\"):Object(t)}},function(t,e,r){var n=r(5).document;t.exports=n&&n.documentElement},function(t,e,r){var n=r(20),i=r(34),o=r(56)(\"IE_PROTO\"),a=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=i(t),n(t,o)?t[o]:\"function\"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?a:null}},function(t,e,r){var n=r(8);t.exports=function(t,e,r,i){try{return i?e(n(r)[0],r[1]):e(r)}catch(e){var o=t.return;throw void 0!==o&&n(o.call(t)),e}}},function(t,e,r){var n=r(27),i=r(6)(\"iterator\"),o=Array.prototype;t.exports=function(t){return void 0!==t&&(n.Array===t||o[i]===t)}},function(t,e,r){var n=r(8),i=r(40),o=r(6)(\"species\");t.exports=function(t,e){var r,a=n(t).constructor;return void 0===a||null==(r=n(a)[o])?e:i(r)}},function(t,e,r){var n,i,o,a=r(26),s=r(130),u=r(79),f=r(52),c=r(5),h=c.process,l=c.setImmediate,d=c.clearImmediate,p=c.MessageChannel,g=c.Dispatch,v=0,m={},y=function(){var t=+this;if(m.hasOwnProperty(t)){var e=m[t];delete m[t],e()}},_=function(t){y.call(t.data)};l&&d||(l=function(t){for(var e=[],r=1;arguments.length>r;)e.push(arguments[r++]);return m[++v]=function(){s(\"function\"==typeof t?t:Function(t),e)},n(v),v},d=function(t){delete m[t]},\"process\"==r(33)(h)?n=function(t){h.nextTick(a(y,t,1))}:g&&g.now?n=function(t){g.now(a(y,t,1))}:p?(o=(i=new p).port2,i.port1.onmessage=_,n=a(o.postMessage,o,1)):c.addEventListener&&\"function\"==typeof postMessage&&!c.importScripts?(n=function(t){c.postMessage(t+\"\",\"*\")},c.addEventListener(\"message\",_,!1)):n=\"onreadystatechange\"in f(\"script\")?function(t){u.appendChild(f(\"script\")).onreadystatechange=function(){u.removeChild(this),y.call(t)}}:function(t){setTimeout(a(y,t,1),0)}),t.exports={set:l,clear:d}},function(t,e){t.exports=function(t){try{return{e:!1,v:t()}}catch(t){return{e:!0,v:t}}}},function(t,e,r){var n=r(8),i=r(13),o=r(61);t.exports=function(t,e){if(n(t),i(e)&&e.constructor===t)return e;var r=o.f(t);return(0,r.resolve)(e),r.promise}},function(t,e,r){var n=r(6)(\"iterator\"),i=!1;try{var o=[7][n]();o.return=function(){i=!0},Array.from(o,function(){throw 2})}catch(t){}t.exports=function(t,e){if(!e&&!i)return!1;var r=!1;try{var o=[7],a=o[n]();a.next=function(){return{done:r=!0}},o[n]=function(){return a},t(o)}catch(t){}return r}},function(t,e,r){\"use strict\";(function(t){var n=r(7).Buffer,i=r(140).Transform,o=r(152),a=r(95),s=r(94).ok,u=r(7).kMaxLength,f=\"Cannot create final Buffer. It would be larger than 0x\"+u.toString(16)+\" bytes\";o.Z_MIN_WINDOWBITS=8,o.Z_MAX_WINDOWBITS=15,o.Z_DEFAULT_WINDOWBITS=15,o.Z_MIN_CHUNK=64,o.Z_MAX_CHUNK=1/0,o.Z_DEFAULT_CHUNK=16384,o.Z_MIN_MEMLEVEL=1,o.Z_MAX_MEMLEVEL=9,o.Z_DEFAULT_MEMLEVEL=8,o.Z_MIN_LEVEL=-1,o.Z_MAX_LEVEL=9,o.Z_DEFAULT_LEVEL=o.Z_DEFAULT_COMPRESSION;for(var c=Object.keys(o),h=0;h<c.length;h++){var l=c[h];l.match(/^Z/)&&Object.defineProperty(e,l,{enumerable:!0,value:o[l],writable:!1})}for(var d={Z_OK:o.Z_OK,Z_STREAM_END:o.Z_STREAM_END,Z_NEED_DICT:o.Z_NEED_DICT,Z_ERRNO:o.Z_ERRNO,Z_STREAM_ERROR:o.Z_STREAM_ERROR,Z_DATA_ERROR:o.Z_DATA_ERROR,Z_MEM_ERROR:o.Z_MEM_ERROR,Z_BUF_ERROR:o.Z_BUF_ERROR,Z_VERSION_ERROR:o.Z_VERSION_ERROR},p=Object.keys(d),g=0;g<p.length;g++){var v=p[g];d[d[v]]=v}function m(t,e,r){var i=[],o=0;function a(){for(var e;null!==(e=t.read());)i.push(e),o+=e.length;t.once(\"readable\",a)}function s(){var e,a=null;o>=u?a=new RangeError(f):e=n.concat(i,o),i=[],t.close(),r(a,e)}t.on(\"error\",function(e){t.removeListener(\"end\",s),t.removeListener(\"readable\",a),r(e)}),t.on(\"end\",s),t.end(e),a()}function y(t,e){if(\"string\"==typeof e&&(e=n.from(e)),!n.isBuffer(e))throw new TypeError(\"Not a string or buffer\");var r=t._finishFlushFlag;return t._processChunk(e,r)}function _(t){if(!(this instanceof _))return new _(t);C.call(this,t,o.DEFLATE)}function b(t){if(!(this instanceof b))return new b(t);C.call(this,t,o.INFLATE)}function w(t){if(!(this instanceof w))return new w(t);C.call(this,t,o.GZIP)}function x(t){if(!(this instanceof x))return new x(t);C.call(this,t,o.GUNZIP)}function E(t){if(!(this instanceof E))return new E(t);C.call(this,t,o.DEFLATERAW)}function S(t){if(!(this instanceof S))return new S(t);C.call(this,t,o.INFLATERAW)}function k(t){if(!(this instanceof k))return new k(t);C.call(this,t,o.UNZIP)}function A(t){return t===o.Z_NO_FLUSH||t===o.Z_PARTIAL_FLUSH||t===o.Z_SYNC_FLUSH||t===o.Z_FULL_FLUSH||t===o.Z_FINISH||t===o.Z_BLOCK}function C(t,r){var a=this;if(this._opts=t=t||{},this._chunkSize=t.chunkSize||e.Z_DEFAULT_CHUNK,i.call(this,t),t.flush&&!A(t.flush))throw new Error(\"Invalid flush flag: \"+t.flush);if(t.finishFlush&&!A(t.finishFlush))throw new Error(\"Invalid flush flag: \"+t.finishFlush);if(this._flushFlag=t.flush||o.Z_NO_FLUSH,this._finishFlushFlag=void 0!==t.finishFlush?t.finishFlush:o.Z_FINISH,t.chunkSize&&(t.chunkSize<e.Z_MIN_CHUNK||t.chunkSize>e.Z_MAX_CHUNK))throw new Error(\"Invalid chunk size: \"+t.chunkSize);if(t.windowBits&&(t.windowBits<e.Z_MIN_WINDOWBITS||t.windowBits>e.Z_MAX_WINDOWBITS))throw new Error(\"Invalid windowBits: \"+t.windowBits);if(t.level&&(t.level<e.Z_MIN_LEVEL||t.level>e.Z_MAX_LEVEL))throw new Error(\"Invalid compression level: \"+t.level);if(t.memLevel&&(t.memLevel<e.Z_MIN_MEMLEVEL||t.memLevel>e.Z_MAX_MEMLEVEL))throw new Error(\"Invalid memLevel: \"+t.memLevel);if(t.strategy&&t.strategy!=e.Z_FILTERED&&t.strategy!=e.Z_HUFFMAN_ONLY&&t.strategy!=e.Z_RLE&&t.strategy!=e.Z_FIXED&&t.strategy!=e.Z_DEFAULT_STRATEGY)throw new Error(\"Invalid strategy: \"+t.strategy);if(t.dictionary&&!n.isBuffer(t.dictionary))throw new Error(\"Invalid dictionary: it should be a Buffer instance\");this._handle=new o.Zlib(r);var s=this;this._hadError=!1,this._handle.onerror=function(t,r){T(s),s._hadError=!0;var n=new Error(t);n.errno=r,n.code=e.codes[r],s.emit(\"error\",n)};var u=e.Z_DEFAULT_COMPRESSION;\"number\"==typeof t.level&&(u=t.level);var f=e.Z_DEFAULT_STRATEGY;\"number\"==typeof t.strategy&&(f=t.strategy),this._handle.init(t.windowBits||e.Z_DEFAULT_WINDOWBITS,u,t.memLevel||e.Z_DEFAULT_MEMLEVEL,f,t.dictionary),this._buffer=n.allocUnsafe(this._chunkSize),this._offset=0,this._level=u,this._strategy=f,this.once(\"end\",this.close),Object.defineProperty(this,\"_closed\",{get:function(){return!a._handle},configurable:!0,enumerable:!0})}function T(e,r){r&&t.nextTick(r),e._handle&&(e._handle.close(),e._handle=null)}function R(t){t.emit(\"close\")}Object.defineProperty(e,\"codes\",{enumerable:!0,value:Object.freeze(d),writable:!1}),e.Deflate=_,e.Inflate=b,e.Gzip=w,e.Gunzip=x,e.DeflateRaw=E,e.InflateRaw=S,e.Unzip=k,e.createDeflate=function(t){return new _(t)},e.createInflate=function(t){return new b(t)},e.createDeflateRaw=function(t){return new E(t)},e.createInflateRaw=function(t){return new S(t)},e.createGzip=function(t){return new w(t)},e.createGunzip=function(t){return new x(t)},e.createUnzip=function(t){return new k(t)},e.deflate=function(t,e,r){return\"function\"==typeof e&&(r=e,e={}),m(new _(e),t,r)},e.deflateSync=function(t,e){return y(new _(e),t)},e.gzip=function(t,e,r){return\"function\"==typeof e&&(r=e,e={}),m(new w(e),t,r)},e.gzipSync=function(t,e){return y(new w(e),t)},e.deflateRaw=function(t,e,r){return\"function\"==typeof e&&(r=e,e={}),m(new E(e),t,r)},e.deflateRawSync=function(t,e){return y(new E(e),t)},e.unzip=function(t,e,r){return\"function\"==typeof e&&(r=e,e={}),m(new k(e),t,r)},e.unzipSync=function(t,e){return y(new k(e),t)},e.inflate=function(t,e,r){return\"function\"==typeof e&&(r=e,e={}),m(new b(e),t,r)},e.inflateSync=function(t,e){return y(new b(e),t)},e.gunzip=function(t,e,r){return\"function\"==typeof e&&(r=e,e={}),m(new x(e),t,r)},e.gunzipSync=function(t,e){return y(new x(e),t)},e.inflateRaw=function(t,e,r){return\"function\"==typeof e&&(r=e,e={}),m(new S(e),t,r)},e.inflateRawSync=function(t,e){return y(new S(e),t)},a.inherits(C,i),C.prototype.params=function(r,n,i){if(r<e.Z_MIN_LEVEL||r>e.Z_MAX_LEVEL)throw new RangeError(\"Invalid compression level: \"+r);if(n!=e.Z_FILTERED&&n!=e.Z_HUFFMAN_ONLY&&n!=e.Z_RLE&&n!=e.Z_FIXED&&n!=e.Z_DEFAULT_STRATEGY)throw new TypeError(\"Invalid strategy: \"+n);if(this._level!==r||this._strategy!==n){var a=this;this.flush(o.Z_SYNC_FLUSH,function(){s(a._handle,\"zlib binding closed\"),a._handle.params(r,n),a._hadError||(a._level=r,a._strategy=n,i&&i())})}else t.nextTick(i)},C.prototype.reset=function(){return s(this._handle,\"zlib binding closed\"),this._handle.reset()},C.prototype._flush=function(t){this._transform(n.alloc(0),\"\",t)},C.prototype.flush=function(e,r){var i=this,a=this._writableState;(\"function\"==typeof e||void 0===e&&!r)&&(r=e,e=o.Z_FULL_FLUSH),a.ended?r&&t.nextTick(r):a.ending?r&&this.once(\"end\",r):a.needDrain?r&&this.once(\"drain\",function(){return i.flush(e,r)}):(this._flushFlag=e,this.write(n.alloc(0),\"\",r))},C.prototype.close=function(e){T(this,e),t.nextTick(R,this)},C.prototype._transform=function(t,e,r){var i,a=this._writableState,s=(a.ending||a.ended)&&(!t||a.length===t.length);return null===t||n.isBuffer(t)?this._handle?(s?i=this._finishFlushFlag:(i=this._flushFlag,t.length>=a.length&&(this._flushFlag=this._opts.flush||o.Z_NO_FLUSH)),void this._processChunk(t,i,r)):r(new Error(\"zlib binding closed\")):r(new Error(\"invalid input\"))},C.prototype._processChunk=function(t,e,r){var i=t&&t.length,o=this._chunkSize-this._offset,a=0,c=this,h=\"function\"==typeof r;if(!h){var l,d=[],p=0;this.on(\"error\",function(t){l=t}),s(this._handle,\"zlib binding closed\");do{var g=this._handle.writeSync(e,t,a,i,this._buffer,this._offset,o)}while(!this._hadError&&y(g[0],g[1]));if(this._hadError)throw l;if(p>=u)throw T(this),new RangeError(f);var v=n.concat(d,p);return T(this),v}s(this._handle,\"zlib binding closed\");var m=this._handle.write(e,t,a,i,this._buffer,this._offset,o);function y(u,f){if(this&&(this.buffer=null,this.callback=null),!c._hadError){var l=o-f;if(s(l>=0,\"have should not go down\"),l>0){var g=c._buffer.slice(c._offset,c._offset+l);c._offset+=l,h?c.push(g):(d.push(g),p+=g.length)}if((0===f||c._offset>=c._chunkSize)&&(o=c._chunkSize,c._offset=0,c._buffer=n.allocUnsafe(c._chunkSize)),0===f){if(a+=i-u,i=u,!h)return!0;var v=c._handle.write(e,t,a,i,c._buffer,c._offset,c._chunkSize);return v.callback=y,void(v.buffer=t)}if(!h)return!1;r()}}m.buffer=t,m.callback=y},a.inherits(_,C),a.inherits(b,C),a.inherits(w,C),a.inherits(x,C),a.inherits(E,C),a.inherits(S,C),a.inherits(k,C)}).call(this,r(22))},function(t,e,r){\"use strict\";(function(e,n){var i=r(44);t.exports=_;var o,a=r(72);_.ReadableState=y;r(62).EventEmitter;var s=function(t,e){return t.listeners(e).length},u=r(90),f=r(45).Buffer,c=e.Uint8Array||function(){};var h=r(35);h.inherits=r(23);var l=r(141),d=void 0;d=l&&l.debuglog?l.debuglog(\"stream\"):function(){};var p,g=r(142),v=r(91);h.inherits(_,u);var m=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function y(t,e){t=t||{};var n=e instanceof(o=o||r(24));this.objectMode=!!t.objectMode,n&&(this.objectMode=this.objectMode||!!t.readableObjectMode);var i=t.highWaterMark,a=t.readableHighWaterMark,s=this.objectMode?16:16384;this.highWaterMark=i||0===i?i:n&&(a||0===a)?a:s,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new g,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||\"utf8\",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(p||(p=r(92).StringDecoder),this.decoder=new p(t.encoding),this.encoding=t.encoding)}function _(t){if(o=o||r(24),!(this instanceof _))return new _(t);this._readableState=new y(t,this),this.readable=!0,t&&(\"function\"==typeof t.read&&(this._read=t.read),\"function\"==typeof t.destroy&&(this._destroy=t.destroy)),u.call(this)}function b(t,e,r,n,i){var o,a=t._readableState;null===e?(a.reading=!1,function(t,e){if(e.ended)return;if(e.decoder){var r=e.decoder.end();r&&r.length&&(e.buffer.push(r),e.length+=e.objectMode?1:r.length)}e.ended=!0,S(t)}(t,a)):(i||(o=function(t,e){var r;n=e,f.isBuffer(n)||n instanceof c||\"string\"==typeof e||void 0===e||t.objectMode||(r=new TypeError(\"Invalid non-string/buffer chunk\"));var n;return r}(a,e)),o?t.emit(\"error\",o):a.objectMode||e&&e.length>0?(\"string\"==typeof e||a.objectMode||Object.getPrototypeOf(e)===f.prototype||(e=function(t){return f.from(t)}(e)),n?a.endEmitted?t.emit(\"error\",new Error(\"stream.unshift() after end event\")):w(t,a,e,!0):a.ended?t.emit(\"error\",new Error(\"stream.push() after EOF\")):(a.reading=!1,a.decoder&&!r?(e=a.decoder.write(e),a.objectMode||0!==e.length?w(t,a,e,!1):A(t,a)):w(t,a,e,!1))):n||(a.reading=!1));return function(t){return!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length)}(a)}function w(t,e,r,n){e.flowing&&0===e.length&&!e.sync?(t.emit(\"data\",r),t.read(0)):(e.length+=e.objectMode?1:r.length,n?e.buffer.unshift(r):e.buffer.push(r),e.needReadable&&S(t)),A(t,e)}Object.defineProperty(_.prototype,\"destroyed\",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(t){this._readableState&&(this._readableState.destroyed=t)}}),_.prototype.destroy=v.destroy,_.prototype._undestroy=v.undestroy,_.prototype._destroy=function(t,e){this.push(null),e(t)},_.prototype.push=function(t,e){var r,n=this._readableState;return n.objectMode?r=!0:\"string\"==typeof t&&((e=e||n.defaultEncoding)!==n.encoding&&(t=f.from(t,e),e=\"\"),r=!0),b(this,t,e,!1,r)},_.prototype.unshift=function(t){return b(this,t,null,!0,!1)},_.prototype.isPaused=function(){return!1===this._readableState.flowing},_.prototype.setEncoding=function(t){return p||(p=r(92).StringDecoder),this._readableState.decoder=new p(t),this._readableState.encoding=t,this};var x=8388608;function E(t,e){return t<=0||0===e.length&&e.ended?0:e.objectMode?1:t!=t?e.flowing&&e.length?e.buffer.head.data.length:e.length:(t>e.highWaterMark&&(e.highWaterMark=function(t){return t>=x?t=x:(t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,t++),t}(t)),t<=e.length?t:e.ended?e.length:(e.needReadable=!0,0))}function S(t){var e=t._readableState;e.needReadable=!1,e.emittedReadable||(d(\"emitReadable\",e.flowing),e.emittedReadable=!0,e.sync?i.nextTick(k,t):k(t))}function k(t){d(\"emit readable\"),t.emit(\"readable\"),I(t)}function A(t,e){e.readingMore||(e.readingMore=!0,i.nextTick(C,t,e))}function C(t,e){for(var r=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(d(\"maybeReadMore read 0\"),t.read(0),r!==e.length);)r=e.length;e.readingMore=!1}function T(t){d(\"readable nexttick read 0\"),t.read(0)}function R(t,e){e.reading||(d(\"resume read 0\"),t.read(0)),e.resumeScheduled=!1,e.awaitDrain=0,t.emit(\"resume\"),I(t),e.flowing&&!e.reading&&t.read(0)}function I(t){var e=t._readableState;for(d(\"flow\",e.flowing);e.flowing&&null!==t.read(););}function B(t,e){return 0===e.length?null:(e.objectMode?r=e.buffer.shift():!t||t>=e.length?(r=e.decoder?e.buffer.join(\"\"):1===e.buffer.length?e.buffer.head.data:e.buffer.concat(e.length),e.buffer.clear()):r=function(t,e,r){var n;t<e.head.data.length?(n=e.head.data.slice(0,t),e.head.data=e.head.data.slice(t)):n=t===e.head.data.length?e.shift():r?function(t,e){var r=e.head,n=1,i=r.data;t-=i.length;for(;r=r.next;){var o=r.data,a=t>o.length?o.length:t;if(a===o.length?i+=o:i+=o.slice(0,t),0===(t-=a)){a===o.length?(++n,r.next?e.head=r.next:e.head=e.tail=null):(e.head=r,r.data=o.slice(a));break}++n}return e.length-=n,i}(t,e):function(t,e){var r=f.allocUnsafe(t),n=e.head,i=1;n.data.copy(r),t-=n.data.length;for(;n=n.next;){var o=n.data,a=t>o.length?o.length:t;if(o.copy(r,r.length-t,0,a),0===(t-=a)){a===o.length?(++i,n.next?e.head=n.next:e.head=e.tail=null):(e.head=n,n.data=o.slice(a));break}++i}return e.length-=i,r}(t,e);return n}(t,e.buffer,e.decoder),r);var r}function L(t){var e=t._readableState;if(e.length>0)throw new Error('\"endReadable()\" called on non-empty stream');e.endEmitted||(e.ended=!0,i.nextTick(M,e,t))}function M(t,e){t.endEmitted||0!==t.length||(t.endEmitted=!0,e.readable=!1,e.emit(\"end\"))}function O(t,e){for(var r=0,n=t.length;r<n;r++)if(t[r]===e)return r;return-1}_.prototype.read=function(t){d(\"read\",t),t=parseInt(t,10);var e=this._readableState,r=t;if(0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return d(\"read: emitReadable\",e.length,e.ended),0===e.length&&e.ended?L(this):S(this),null;if(0===(t=E(t,e))&&e.ended)return 0===e.length&&L(this),null;var n,i=e.needReadable;return d(\"need readable\",i),(0===e.length||e.length-t<e.highWaterMark)&&d(\"length less than watermark\",i=!0),e.ended||e.reading?d(\"reading or ended\",i=!1):i&&(d(\"do read\"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1,e.reading||(t=E(r,e))),null===(n=t>0?B(t,e):null)?(e.needReadable=!0,t=0):e.length-=t,0===e.length&&(e.ended||(e.needReadable=!0),r!==t&&e.ended&&L(this)),null!==n&&this.emit(\"data\",n),n},_.prototype._read=function(t){this.emit(\"error\",new Error(\"_read() is not implemented\"))},_.prototype.pipe=function(t,e){var r=this,o=this._readableState;switch(o.pipesCount){case 0:o.pipes=t;break;case 1:o.pipes=[o.pipes,t];break;default:o.pipes.push(t)}o.pipesCount+=1,d(\"pipe count=%d opts=%j\",o.pipesCount,e);var u=(!e||!1!==e.end)&&t!==n.stdout&&t!==n.stderr?c:_;function f(e,n){d(\"onunpipe\"),e===r&&n&&!1===n.hasUnpiped&&(n.hasUnpiped=!0,d(\"cleanup\"),t.removeListener(\"close\",m),t.removeListener(\"finish\",y),t.removeListener(\"drain\",h),t.removeListener(\"error\",v),t.removeListener(\"unpipe\",f),r.removeListener(\"end\",c),r.removeListener(\"end\",_),r.removeListener(\"data\",g),l=!0,!o.awaitDrain||t._writableState&&!t._writableState.needDrain||h())}function c(){d(\"onend\"),t.end()}o.endEmitted?i.nextTick(u):r.once(\"end\",u),t.on(\"unpipe\",f);var h=function(t){return function(){var e=t._readableState;d(\"pipeOnDrain\",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&s(t,\"data\")&&(e.flowing=!0,I(t))}}(r);t.on(\"drain\",h);var l=!1;var p=!1;function g(e){d(\"ondata\"),p=!1,!1!==t.write(e)||p||((1===o.pipesCount&&o.pipes===t||o.pipesCount>1&&-1!==O(o.pipes,t))&&!l&&(d(\"false write response, pause\",r._readableState.awaitDrain),r._readableState.awaitDrain++,p=!0),r.pause())}function v(e){d(\"onerror\",e),_(),t.removeListener(\"error\",v),0===s(t,\"error\")&&t.emit(\"error\",e)}function m(){t.removeListener(\"finish\",y),_()}function y(){d(\"onfinish\"),t.removeListener(\"close\",m),_()}function _(){d(\"unpipe\"),r.unpipe(t)}return r.on(\"data\",g),function(t,e,r){if(\"function\"==typeof t.prependListener)return t.prependListener(e,r);t._events&&t._events[e]?a(t._events[e])?t._events[e].unshift(r):t._events[e]=[r,t._events[e]]:t.on(e,r)}(t,\"error\",v),t.once(\"close\",m),t.once(\"finish\",y),t.emit(\"pipe\",r),o.flowing||(d(\"pipe resume\"),r.resume()),t},_.prototype.unpipe=function(t){var e=this._readableState,r={hasUnpiped:!1};if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes?this:(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit(\"unpipe\",this,r),this);if(!t){var n=e.pipes,i=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var o=0;o<i;o++)n[o].emit(\"unpipe\",this,r);return this}var a=O(e.pipes,t);return-1===a?this:(e.pipes.splice(a,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit(\"unpipe\",this,r),this)},_.prototype.on=function(t,e){var r=u.prototype.on.call(this,t,e);if(\"data\"===t)!1!==this._readableState.flowing&&this.resume();else if(\"readable\"===t){var n=this._readableState;n.endEmitted||n.readableListening||(n.readableListening=n.needReadable=!0,n.emittedReadable=!1,n.reading?n.length&&S(this):i.nextTick(T,this))}return r},_.prototype.addListener=_.prototype.on,_.prototype.resume=function(){var t=this._readableState;return t.flowing||(d(\"resume\"),t.flowing=!0,function(t,e){e.resumeScheduled||(e.resumeScheduled=!0,i.nextTick(R,t,e))}(this,t)),this},_.prototype.pause=function(){return d(\"call pause flowing=%j\",this._readableState.flowing),!1!==this._readableState.flowing&&(d(\"pause\"),this._readableState.flowing=!1,this.emit(\"pause\")),this},_.prototype.wrap=function(t){var e=this,r=this._readableState,n=!1;for(var i in t.on(\"end\",function(){if(d(\"wrapped end\"),r.decoder&&!r.ended){var t=r.decoder.end();t&&t.length&&e.push(t)}e.push(null)}),t.on(\"data\",function(i){(d(\"wrapped data\"),r.decoder&&(i=r.decoder.write(i)),r.objectMode&&null==i)||(r.objectMode||i&&i.length)&&(e.push(i)||(n=!0,t.pause()))}),t)void 0===this[i]&&\"function\"==typeof t[i]&&(this[i]=function(e){return function(){return t[e].apply(t,arguments)}}(i));for(var o=0;o<m.length;o++)t.on(m[o],this.emit.bind(this,m[o]));return this._read=function(e){d(\"wrapped _read\",e),n&&(n=!1,t.resume())},this},Object.defineProperty(_.prototype,\"readableHighWaterMark\",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),_._fromList=B}).call(this,r(9),r(22))},function(t,e,r){t.exports=r(62).EventEmitter},function(t,e,r){\"use strict\";var n=r(44);function i(t,e){t.emit(\"error\",e)}t.exports={destroy:function(t,e){var r=this,o=this._readableState&&this._readableState.destroyed,a=this._writableState&&this._writableState.destroyed;return o||a?(e?e(t):!t||this._writableState&&this._writableState.errorEmitted||n.nextTick(i,this,t),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(t||null,function(t){!e&&t?(n.nextTick(i,r,t),r._writableState&&(r._writableState.errorEmitted=!0)):e&&e(t)}),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},function(t,e,r){\"use strict\";var n=r(45).Buffer,i=n.isEncoding||function(t){switch((t=\"\"+t)&&t.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return!0;default:return!1}};function o(t){var e;switch(this.encoding=function(t){var e=function(t){if(!t)return\"utf8\";for(var e;;)switch(t){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return t;default:if(e)return;t=(\"\"+t).toLowerCase(),e=!0}}(t);if(\"string\"!=typeof e&&(n.isEncoding===i||!i(t)))throw new Error(\"Unknown encoding: \"+t);return e||t}(t),this.encoding){case\"utf16le\":this.text=u,this.end=f,e=4;break;case\"utf8\":this.fillLast=s,e=4;break;case\"base64\":this.text=c,this.end=h,e=3;break;default:return this.write=l,void(this.end=d)}this.lastNeed=0,this.lastTotal=0,this.lastChar=n.allocUnsafe(e)}function a(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function s(t){var e=this.lastTotal-this.lastNeed,r=function(t,e,r){if(128!=(192&e[0]))return t.lastNeed=0,\"�\";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,\"�\";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,\"�\"}}(this,t);return void 0!==r?r:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function u(t,e){if((t.length-e)%2==0){var r=t.toString(\"utf16le\",e);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],r.slice(0,-1)}return r}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString(\"utf16le\",e,t.length-1)}function f(t){var e=t&&t.length?this.write(t):\"\";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return e+this.lastChar.toString(\"utf16le\",0,r)}return e}function c(t,e){var r=(t.length-e)%3;return 0===r?t.toString(\"base64\",e):(this.lastNeed=3-r,this.lastTotal=3,1===r?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString(\"base64\",e,t.length-r))}function h(t){var e=t&&t.length?this.write(t):\"\";return this.lastNeed?e+this.lastChar.toString(\"base64\",0,3-this.lastNeed):e}function l(t){return t.toString(this.encoding)}function d(t){return t&&t.length?this.write(t):\"\"}e.StringDecoder=o,o.prototype.write=function(t){if(0===t.length)return\"\";var e,r;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return\"\";r=this.lastNeed,this.lastNeed=0}else r=0;return r<t.length?e?e+this.text(t,r):this.text(t,r):e||\"\"},o.prototype.end=function(t){var e=t&&t.length?this.write(t):\"\";return this.lastNeed?e+\"�\":e},o.prototype.text=function(t,e){var r=function(t,e,r){var n=e.length-1;if(n<r)return 0;var i=a(e[n]);if(i>=0)return i>0&&(t.lastNeed=i-1),i;if(--n<r||-2===i)return 0;if((i=a(e[n]))>=0)return i>0&&(t.lastNeed=i-2),i;if(--n<r||-2===i)return 0;if((i=a(e[n]))>=0)return i>0&&(2===i?i=0:t.lastNeed=i-3),i;return 0}(this,t,e);if(!this.lastNeed)return t.toString(\"utf8\",e);this.lastTotal=r;var n=t.length-(r-this.lastNeed);return t.copy(this.lastChar,0,n),t.toString(\"utf8\",e,n)},o.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},function(t,e,r){\"use strict\";t.exports=a;var n=r(24),i=r(35);function o(t,e){var r=this._transformState;r.transforming=!1;var n=r.writecb;if(!n)return this.emit(\"error\",new Error(\"write callback called multiple times\"));r.writechunk=null,r.writecb=null,null!=e&&this.push(e),n(t);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function a(t){if(!(this instanceof a))return new a(t);n.call(this,t),this._transformState={afterTransform:o.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,t&&(\"function\"==typeof t.transform&&(this._transform=t.transform),\"function\"==typeof t.flush&&(this._flush=t.flush)),this.on(\"prefinish\",s)}function s(){var t=this;\"function\"==typeof this._flush?this._flush(function(e,r){u(t,e,r)}):u(this,null,null)}function u(t,e,r){if(e)return t.emit(\"error\",e);if(null!=r&&t.push(r),t._writableState.length)throw new Error(\"Calling transform done when ws.length != 0\");if(t._transformState.transforming)throw new Error(\"Calling transform done when still transforming\");return t.push(null)}i.inherits=r(23),i.inherits(a,n),a.prototype.push=function(t,e){return this._transformState.needTransform=!1,n.prototype.push.call(this,t,e)},a.prototype._transform=function(t,e,r){throw new Error(\"_transform() is not implemented\")},a.prototype._write=function(t,e,r){var n=this._transformState;if(n.writecb=r,n.writechunk=t,n.writeencoding=e,!n.transforming){var i=this._readableState;(n.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},a.prototype._read=function(t){var e=this._transformState;null!==e.writechunk&&e.writecb&&!e.transforming?(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform)):e.needTransform=!0},a.prototype._destroy=function(t,e){var r=this;n.prototype._destroy.call(this,t,function(t){e(t),r.emit(\"close\")})}},function(t,e,r){\"use strict\";(function(e){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction n(t,e){if(t===e)return 0;for(var r=t.length,n=e.length,i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0}function i(t){return e.Buffer&&\"function\"==typeof e.Buffer.isBuffer?e.Buffer.isBuffer(t):!(null==t||!t._isBuffer)}var o=r(95),a=Object.prototype.hasOwnProperty,s=Array.prototype.slice,u=\"foo\"===function(){}.name;function f(t){return Object.prototype.toString.call(t)}function c(t){return!i(t)&&(\"function\"==typeof e.ArrayBuffer&&(\"function\"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):!!t&&(t instanceof DataView||!!(t.buffer&&t.buffer instanceof ArrayBuffer))))}var h=t.exports=m,l=/\\s*function\\s+([^\\(\\s]*)\\s*/;function d(t){if(o.isFunction(t)){if(u)return t.name;var e=t.toString().match(l);return e&&e[1]}}function p(t,e){return\"string\"==typeof t?t.length<e?t:t.slice(0,e):t}function g(t){if(u||!o.isFunction(t))return o.inspect(t);var e=d(t);return\"[Function\"+(e?\": \"+e:\"\")+\"]\"}function v(t,e,r,n,i){throw new h.AssertionError({message:r,actual:t,expected:e,operator:n,stackStartFunction:i})}function m(t,e){t||v(t,!0,e,\"==\",h.ok)}function y(t,e,r,a){if(t===e)return!0;if(i(t)&&i(e))return 0===n(t,e);if(o.isDate(t)&&o.isDate(e))return t.getTime()===e.getTime();if(o.isRegExp(t)&&o.isRegExp(e))return t.source===e.source&&t.global===e.global&&t.multiline===e.multiline&&t.lastIndex===e.lastIndex&&t.ignoreCase===e.ignoreCase;if(null!==t&&\"object\"==typeof t||null!==e&&\"object\"==typeof e){if(c(t)&&c(e)&&f(t)===f(e)&&!(t instanceof Float32Array||t instanceof Float64Array))return 0===n(new Uint8Array(t.buffer),new Uint8Array(e.buffer));if(i(t)!==i(e))return!1;var u=(a=a||{actual:[],expected:[]}).actual.indexOf(t);return-1!==u&&u===a.expected.indexOf(e)||(a.actual.push(t),a.expected.push(e),function(t,e,r,n){if(null==t||null==e)return!1;if(o.isPrimitive(t)||o.isPrimitive(e))return t===e;if(r&&Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1;var i=_(t),a=_(e);if(i&&!a||!i&&a)return!1;if(i)return t=s.call(t),e=s.call(e),y(t,e,r);var u,f,c=x(t),h=x(e);if(c.length!==h.length)return!1;for(c.sort(),h.sort(),f=c.length-1;f>=0;f--)if(c[f]!==h[f])return!1;for(f=c.length-1;f>=0;f--)if(u=c[f],!y(t[u],e[u],r,n))return!1;return!0}(t,e,r,a))}return r?t===e:t==e}function _(t){return\"[object Arguments]\"==Object.prototype.toString.call(t)}function b(t,e){if(!t||!e)return!1;if(\"[object RegExp]\"==Object.prototype.toString.call(e))return e.test(t);try{if(t instanceof e)return!0}catch(t){}return!Error.isPrototypeOf(e)&&!0===e.call({},t)}function w(t,e,r,n){var i;if(\"function\"!=typeof e)throw new TypeError('\"block\" argument must be a function');\"string\"==typeof r&&(n=r,r=null),i=function(t){var e;try{t()}catch(t){e=t}return e}(e),n=(r&&r.name?\" (\"+r.name+\").\":\".\")+(n?\" \"+n:\".\"),t&&!i&&v(i,r,\"Missing expected exception\"+n);var a=\"string\"==typeof n,s=!t&&i&&!r;if((!t&&o.isError(i)&&a&&b(i,r)||s)&&v(i,r,\"Got unwanted exception\"+n),t&&i&&r&&!b(i,r)||!t&&i)throw i}h.AssertionError=function(t){var e;this.name=\"AssertionError\",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,t.message?(this.message=t.message,this.generatedMessage=!1):(this.message=p(g((e=this).actual),128)+\" \"+e.operator+\" \"+p(g(e.expected),128),this.generatedMessage=!0);var r=t.stackStartFunction||v;if(Error.captureStackTrace)Error.captureStackTrace(this,r);else{var n=new Error;if(n.stack){var i=n.stack,o=d(r),a=i.indexOf(\"\\n\"+o);if(a>=0){var s=i.indexOf(\"\\n\",a+1);i=i.substring(s+1)}this.stack=i}}},o.inherits(h.AssertionError,Error),h.fail=v,h.ok=m,h.equal=function(t,e,r){t!=e&&v(t,e,r,\"==\",h.equal)},h.notEqual=function(t,e,r){t==e&&v(t,e,r,\"!=\",h.notEqual)},h.deepEqual=function(t,e,r){y(t,e,!1)||v(t,e,r,\"deepEqual\",h.deepEqual)},h.deepStrictEqual=function(t,e,r){y(t,e,!0)||v(t,e,r,\"deepStrictEqual\",h.deepStrictEqual)},h.notDeepEqual=function(t,e,r){y(t,e,!1)&&v(t,e,r,\"notDeepEqual\",h.notDeepEqual)},h.notDeepStrictEqual=function t(e,r,n){y(e,r,!0)&&v(e,r,n,\"notDeepStrictEqual\",t)},h.strictEqual=function(t,e,r){t!==e&&v(t,e,r,\"===\",h.strictEqual)},h.notStrictEqual=function(t,e,r){t===e&&v(t,e,r,\"!==\",h.notStrictEqual)},h.throws=function(t,e,r){w(!0,t,e,r)},h.doesNotThrow=function(t,e,r){w(!1,t,e,r)},h.ifError=function(t){if(t)throw t};var x=Object.keys||function(t){var e=[];for(var r in t)a.call(t,r)&&e.push(r);return e}}).call(this,r(9))},function(t,e,r){(function(t,n){var i=/%[sdj%]/g;e.format=function(t){if(!m(t)){for(var e=[],r=0;r<arguments.length;r++)e.push(s(arguments[r]));return e.join(\" \")}r=1;for(var n=arguments,o=n.length,a=String(t).replace(i,function(t){if(\"%%\"===t)return\"%\";if(r>=o)return t;switch(t){case\"%s\":return String(n[r++]);case\"%d\":return Number(n[r++]);case\"%j\":try{return JSON.stringify(n[r++])}catch(t){return\"[Circular]\"}default:return t}}),u=n[r];r<o;u=n[++r])g(u)||!b(u)?a+=\" \"+u:a+=\" \"+s(u);return a},e.deprecate=function(r,i){if(y(t.process))return function(){return e.deprecate(r,i).apply(this,arguments)};if(!0===n.noDeprecation)return r;var o=!1;return function(){if(!o){if(n.throwDeprecation)throw new Error(i);n.traceDeprecation?console.trace(i):console.error(i),o=!0}return r.apply(this,arguments)}};var o,a={};function s(t,r){var n={seen:[],stylize:f};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),p(r)?n.showHidden=r:r&&e._extend(n,r),y(n.showHidden)&&(n.showHidden=!1),y(n.depth)&&(n.depth=2),y(n.colors)&&(n.colors=!1),y(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=u),c(n,t,n.depth)}function u(t,e){var r=s.styles[e];return r?\"\u001b[\"+s.colors[r][0]+\"m\"+t+\"\u001b[\"+s.colors[r][1]+\"m\":t}function f(t,e){return t}function c(t,r,n){if(t.customInspect&&r&&E(r.inspect)&&r.inspect!==e.inspect&&(!r.constructor||r.constructor.prototype!==r)){var i=r.inspect(n,t);return m(i)||(i=c(t,i,n)),i}var o=function(t,e){if(y(e))return t.stylize(\"undefined\",\"undefined\");if(m(e)){var r=\"'\"+JSON.stringify(e).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return t.stylize(r,\"string\")}if(v(e))return t.stylize(\"\"+e,\"number\");if(p(e))return t.stylize(\"\"+e,\"boolean\");if(g(e))return t.stylize(\"null\",\"null\")}(t,r);if(o)return o;var a=Object.keys(r),s=function(t){var e={};return t.forEach(function(t,r){e[t]=!0}),e}(a);if(t.showHidden&&(a=Object.getOwnPropertyNames(r)),x(r)&&(a.indexOf(\"message\")>=0||a.indexOf(\"description\")>=0))return h(r);if(0===a.length){if(E(r)){var u=r.name?\": \"+r.name:\"\";return t.stylize(\"[Function\"+u+\"]\",\"special\")}if(_(r))return t.stylize(RegExp.prototype.toString.call(r),\"regexp\");if(w(r))return t.stylize(Date.prototype.toString.call(r),\"date\");if(x(r))return h(r)}var f,b=\"\",S=!1,k=[\"{\",\"}\"];(d(r)&&(S=!0,k=[\"[\",\"]\"]),E(r))&&(b=\" [Function\"+(r.name?\": \"+r.name:\"\")+\"]\");return _(r)&&(b=\" \"+RegExp.prototype.toString.call(r)),w(r)&&(b=\" \"+Date.prototype.toUTCString.call(r)),x(r)&&(b=\" \"+h(r)),0!==a.length||S&&0!=r.length?n<0?_(r)?t.stylize(RegExp.prototype.toString.call(r),\"regexp\"):t.stylize(\"[Object]\",\"special\"):(t.seen.push(r),f=S?function(t,e,r,n,i){for(var o=[],a=0,s=e.length;a<s;++a)C(e,String(a))?o.push(l(t,e,r,n,String(a),!0)):o.push(\"\");return i.forEach(function(i){i.match(/^\\d+$/)||o.push(l(t,e,r,n,i,!0))}),o}(t,r,n,s,a):a.map(function(e){return l(t,r,n,s,e,S)}),t.seen.pop(),function(t,e,r){if(t.reduce(function(t,e){return 0,e.indexOf(\"\\n\")>=0&&0,t+e.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1},0)>60)return r[0]+(\"\"===e?\"\":e+\"\\n \")+\" \"+t.join(\",\\n  \")+\" \"+r[1];return r[0]+e+\" \"+t.join(\", \")+\" \"+r[1]}(f,b,k)):k[0]+b+k[1]}function h(t){return\"[\"+Error.prototype.toString.call(t)+\"]\"}function l(t,e,r,n,i,o){var a,s,u;if((u=Object.getOwnPropertyDescriptor(e,i)||{value:e[i]}).get?s=u.set?t.stylize(\"[Getter/Setter]\",\"special\"):t.stylize(\"[Getter]\",\"special\"):u.set&&(s=t.stylize(\"[Setter]\",\"special\")),C(n,i)||(a=\"[\"+i+\"]\"),s||(t.seen.indexOf(u.value)<0?(s=g(r)?c(t,u.value,null):c(t,u.value,r-1)).indexOf(\"\\n\")>-1&&(s=o?s.split(\"\\n\").map(function(t){return\"  \"+t}).join(\"\\n\").substr(2):\"\\n\"+s.split(\"\\n\").map(function(t){return\"   \"+t}).join(\"\\n\")):s=t.stylize(\"[Circular]\",\"special\")),y(a)){if(o&&i.match(/^\\d+$/))return s;(a=JSON.stringify(\"\"+i)).match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?(a=a.substr(1,a.length-2),a=t.stylize(a,\"name\")):(a=a.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\"),a=t.stylize(a,\"string\"))}return a+\": \"+s}function d(t){return Array.isArray(t)}function p(t){return\"boolean\"==typeof t}function g(t){return null===t}function v(t){return\"number\"==typeof t}function m(t){return\"string\"==typeof t}function y(t){return void 0===t}function _(t){return b(t)&&\"[object RegExp]\"===S(t)}function b(t){return\"object\"==typeof t&&null!==t}function w(t){return b(t)&&\"[object Date]\"===S(t)}function x(t){return b(t)&&(\"[object Error]\"===S(t)||t instanceof Error)}function E(t){return\"function\"==typeof t}function S(t){return Object.prototype.toString.call(t)}function k(t){return t<10?\"0\"+t.toString(10):t.toString(10)}e.debuglog=function(t){if(y(o)&&(o=n.env.NODE_DEBUG||\"\"),t=t.toUpperCase(),!a[t])if(new RegExp(\"\\\\b\"+t+\"\\\\b\",\"i\").test(o)){var r=n.pid;a[t]=function(){var n=e.format.apply(e,arguments);console.error(\"%s %d: %s\",t,r,n)}}else a[t]=function(){};return a[t]},e.inspect=s,s.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},s.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"},e.isArray=d,e.isBoolean=p,e.isNull=g,e.isNullOrUndefined=function(t){return null==t},e.isNumber=v,e.isString=m,e.isSymbol=function(t){return\"symbol\"==typeof t},e.isUndefined=y,e.isRegExp=_,e.isObject=b,e.isDate=w,e.isError=x,e.isFunction=E,e.isPrimitive=function(t){return null===t||\"boolean\"==typeof t||\"number\"==typeof t||\"string\"==typeof t||\"symbol\"==typeof t||void 0===t},e.isBuffer=r(153);var A=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function C(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){var t,r;console.log(\"%s - %s\",(t=new Date,r=[k(t.getHours()),k(t.getMinutes()),k(t.getSeconds())].join(\":\"),[t.getDate(),A[t.getMonth()],r].join(\" \")),e.format.apply(e,arguments))},e.inherits=r(23),e._extend=function(t,e){if(!e||!b(e))return t;for(var r=Object.keys(e),n=r.length;n--;)t[r[n]]=e[r[n]];return t}}).call(this,r(9),r(22))},function(t,e,r){\"use strict\";t.exports=function(t,e,r,n){for(var i=65535&t|0,o=t>>>16&65535|0,a=0;0!==r;){r-=a=r>2e3?2e3:r;do{o=o+(i=i+e[n++]|0)|0}while(--a);i%=65521,o%=65521}return i|o<<16|0}},function(t,e,r){\"use strict\";var n=function(){for(var t,e=[],r=0;r<256;r++){t=r;for(var n=0;n<8;n++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e}();t.exports=function(t,e,r,i){var o=n,a=i+r;t^=-1;for(var s=i;s<a;s++)t=t>>>8^o[255&(t^e[s])];return-1^t}},function(t,e,r){\"use strict\";t.exports=class{constructor(t={}){if(!(t.maxSize&&t.maxSize>0))throw new TypeError(\"`maxSize` must be a number greater than 0\");this.maxSize=t.maxSize,this.cache=new Map,this.oldCache=new Map,this._size=0}_set(t,e){this.cache.set(t,e),this._size++,this._size>=this.maxSize&&(this._size=0,this.oldCache=this.cache,this.cache=new Map)}get(t){if(this.cache.has(t))return this.cache.get(t);if(this.oldCache.has(t)){const e=this.oldCache.get(t);return this._set(t,e),e}}set(t,e){return this.cache.has(t)?this.cache.set(t,e):this._set(t,e),this}has(t){return this.cache.has(t)||this.oldCache.has(t)}peek(t){return this.cache.has(t)?this.cache.get(t):this.oldCache.has(t)?this.oldCache.get(t):void 0}delete(t){const e=this.cache.delete(t);return e&&this._size--,this.oldCache.delete(t)||e}clear(){this.cache.clear(),this.oldCache.clear(),this._size=0}*keys(){for(const[t]of this)yield t}*values(){for(const[,t]of this)yield t}*[Symbol.iterator](){for(const t of this.cache)yield t;for(const t of this.oldCache){const[e]=t;this.cache.has(e)||(yield t)}}get size(){let t=0;for(const e of this.oldCache.keys())this.cache.has(e)||t++;return this._size+t}}},function(t,e,r){var n=r(4),i=r(0),o=r(19);t.exports=function(t,e){var r=(i.Object||{})[t]||Object[t],a={};a[t]=e(r),n(n.S+n.F*o(function(){r(1)}),\"Object\",a)}},function(t,e,r){\"use strict\";e.__esModule=!0;var n=a(r(165)),i=a(r(167)),o=\"function\"==typeof i.default&&\"symbol\"==typeof n.default?function(t){return typeof t}:function(t){return t&&\"function\"==typeof i.default&&t.constructor===i.default&&t!==i.default.prototype?\"symbol\":typeof t};function a(t){return t&&t.__esModule?t:{default:t}}e.default=\"function\"==typeof i.default&&\"symbol\"===o(n.default)?function(t){return void 0===t?\"undefined\":o(t)}:function(t){return t&&\"function\"==typeof i.default&&t.constructor===i.default&&t!==i.default.prototype?\"symbol\":void 0===t?\"undefined\":o(t)}},function(t,e,r){var n=r(77),i=r(58).concat(\"length\",\"prototype\");e.f=Object.getOwnPropertyNames||function(t){return n(t,i)}},function(t,e,r){var n=r(36),i=r(32),o=r(21),a=r(53),s=r(20),u=r(75),f=Object.getOwnPropertyDescriptor;e.f=r(14)?f:function(t,e){if(t=o(t),e=a(e,!0),u)try{return f(t,e)}catch(t){}if(s(t,e))return i(!n.f.call(t,e),t[e])}},function(t,e){t.exports=n;var r=null;try{r=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function n(t,e,r){this.low=0|t,this.high=0|e,this.unsigned=!!r}function i(t){return!0===(t&&t.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,\"__isLong__\",{value:!0}),n.isLong=i;var o={},a={};function s(t,e){var r,n,i;return e?(i=0<=(t>>>=0)&&t<256)&&(n=a[t])?n:(r=f(t,(0|t)<0?-1:0,!0),i&&(a[t]=r),r):(i=-128<=(t|=0)&&t<128)&&(n=o[t])?n:(r=f(t,t<0?-1:0,!1),i&&(o[t]=r),r)}function u(t,e){if(isNaN(t))return e?y:m;if(e){if(t<0)return y;if(t>=p)return E}else{if(t<=-g)return S;if(t+1>=g)return x}return t<0?u(-t,e).neg():f(t%d|0,t/d|0,e)}function f(t,e,r){return new n(t,e,r)}n.fromInt=s,n.fromNumber=u,n.fromBits=f;var c=Math.pow;function h(t,e,r){if(0===t.length)throw Error(\"empty string\");if(\"NaN\"===t||\"Infinity\"===t||\"+Infinity\"===t||\"-Infinity\"===t)return m;if(\"number\"==typeof e?(r=e,e=!1):e=!!e,(r=r||10)<2||36<r)throw RangeError(\"radix\");var n;if((n=t.indexOf(\"-\"))>0)throw Error(\"interior hyphen\");if(0===n)return h(t.substring(1),e,r).neg();for(var i=u(c(r,8)),o=m,a=0;a<t.length;a+=8){var s=Math.min(8,t.length-a),f=parseInt(t.substring(a,a+s),r);if(s<8){var l=u(c(r,s));o=o.mul(l).add(u(f))}else o=(o=o.mul(i)).add(u(f))}return o.unsigned=e,o}function l(t,e){return\"number\"==typeof t?u(t,e):\"string\"==typeof t?h(t,e):f(t.low,t.high,\"boolean\"==typeof e?e:t.unsigned)}n.fromString=h,n.fromValue=l;var d=4294967296,p=d*d,g=p/2,v=s(1<<24),m=s(0);n.ZERO=m;var y=s(0,!0);n.UZERO=y;var _=s(1);n.ONE=_;var b=s(1,!0);n.UONE=b;var w=s(-1);n.NEG_ONE=w;var x=f(-1,2147483647,!1);n.MAX_VALUE=x;var E=f(-1,-1,!0);n.MAX_UNSIGNED_VALUE=E;var S=f(0,-2147483648,!1);n.MIN_VALUE=S;var k=n.prototype;k.toInt=function(){return this.unsigned?this.low>>>0:this.low},k.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},k.toString=function(t){if((t=t||10)<2||36<t)throw RangeError(\"radix\");if(this.isZero())return\"0\";if(this.isNegative()){if(this.eq(S)){var e=u(t),r=this.div(e),n=r.mul(e).sub(this);return r.toString(t)+n.toInt().toString(t)}return\"-\"+this.neg().toString(t)}for(var i=u(c(t,6),this.unsigned),o=this,a=\"\";;){var s=o.div(i),f=(o.sub(s.mul(i)).toInt()>>>0).toString(t);if((o=s).isZero())return f+a;for(;f.length<6;)f=\"0\"+f;a=\"\"+f+a}},k.getHighBits=function(){return this.high},k.getHighBitsUnsigned=function(){return this.high>>>0},k.getLowBits=function(){return this.low},k.getLowBitsUnsigned=function(){return this.low>>>0},k.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},k.isZero=function(){return 0===this.high&&0===this.low},k.eqz=k.isZero,k.isNegative=function(){return!this.unsigned&&this.high<0},k.isPositive=function(){return this.unsigned||this.high>=0},k.isOdd=function(){return 1==(1&this.low)},k.isEven=function(){return 0==(1&this.low)},k.equals=function(t){return i(t)||(t=l(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},k.eq=k.equals,k.notEquals=function(t){return!this.eq(t)},k.neq=k.notEquals,k.ne=k.notEquals,k.lessThan=function(t){return this.comp(t)<0},k.lt=k.lessThan,k.lessThanOrEqual=function(t){return this.comp(t)<=0},k.lte=k.lessThanOrEqual,k.le=k.lessThanOrEqual,k.greaterThan=function(t){return this.comp(t)>0},k.gt=k.greaterThan,k.greaterThanOrEqual=function(t){return this.comp(t)>=0},k.gte=k.greaterThanOrEqual,k.ge=k.greaterThanOrEqual,k.compare=function(t){if(i(t)||(t=l(t)),this.eq(t))return 0;var e=this.isNegative(),r=t.isNegative();return e&&!r?-1:!e&&r?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},k.comp=k.compare,k.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(_)},k.neg=k.negate,k.add=function(t){i(t)||(t=l(t));var e=this.high>>>16,r=65535&this.high,n=this.low>>>16,o=65535&this.low,a=t.high>>>16,s=65535&t.high,u=t.low>>>16,c=0,h=0,d=0,p=0;return d+=(p+=o+(65535&t.low))>>>16,h+=(d+=n+u)>>>16,c+=(h+=r+s)>>>16,c+=e+a,f((d&=65535)<<16|(p&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},k.subtract=function(t){return i(t)||(t=l(t)),this.add(t.neg())},k.sub=k.subtract,k.multiply=function(t){if(this.isZero())return m;if(i(t)||(t=l(t)),r)return f(r.mul(this.low,this.high,t.low,t.high),r.get_high(),this.unsigned);if(t.isZero())return m;if(this.eq(S))return t.isOdd()?S:m;if(t.eq(S))return this.isOdd()?S:m;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(v)&&t.lt(v))return u(this.toNumber()*t.toNumber(),this.unsigned);var e=this.high>>>16,n=65535&this.high,o=this.low>>>16,a=65535&this.low,s=t.high>>>16,c=65535&t.high,h=t.low>>>16,d=65535&t.low,p=0,g=0,y=0,_=0;return y+=(_+=a*d)>>>16,g+=(y+=o*d)>>>16,y&=65535,g+=(y+=a*h)>>>16,p+=(g+=n*d)>>>16,g&=65535,p+=(g+=o*h)>>>16,g&=65535,p+=(g+=a*c)>>>16,p+=e*d+n*h+o*c+a*s,f((y&=65535)<<16|(_&=65535),(p&=65535)<<16|(g&=65535),this.unsigned)},k.mul=k.multiply,k.divide=function(t){if(i(t)||(t=l(t)),t.isZero())throw Error(\"division by zero\");var e,n,o;if(r)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?f((this.unsigned?r.div_u:r.div_s)(this.low,this.high,t.low,t.high),r.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:m;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return y;if(t.gt(this.shru(1)))return b;o=y}else{if(this.eq(S))return t.eq(_)||t.eq(w)?S:t.eq(S)?_:(e=this.shr(1).div(t).shl(1)).eq(m)?t.isNegative()?_:w:(n=this.sub(t.mul(e)),o=e.add(n.div(t)));if(t.eq(S))return this.unsigned?y:m;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();o=m}for(n=this;n.gte(t);){e=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(e)/Math.LN2),s=a<=48?1:c(2,a-48),h=u(e),d=h.mul(t);d.isNegative()||d.gt(n);)d=(h=u(e-=s,this.unsigned)).mul(t);h.isZero()&&(h=_),o=o.add(h),n=n.sub(d)}return o},k.div=k.divide,k.modulo=function(t){return i(t)||(t=l(t)),r?f((this.unsigned?r.rem_u:r.rem_s)(this.low,this.high,t.low,t.high),r.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},k.mod=k.modulo,k.rem=k.modulo,k.not=function(){return f(~this.low,~this.high,this.unsigned)},k.and=function(t){return i(t)||(t=l(t)),f(this.low&t.low,this.high&t.high,this.unsigned)},k.or=function(t){return i(t)||(t=l(t)),f(this.low|t.low,this.high|t.high,this.unsigned)},k.xor=function(t){return i(t)||(t=l(t)),f(this.low^t.low,this.high^t.high,this.unsigned)},k.shiftLeft=function(t){return i(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?f(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):f(0,this.low<<t-32,this.unsigned)},k.shl=k.shiftLeft,k.shiftRight=function(t){return i(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?f(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):f(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},k.shr=k.shiftRight,k.shiftRightUnsigned=function(t){if(i(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?f(this.low>>>t|e<<32-t,e>>>t,this.unsigned):f(32===t?e:e>>>t-32,0,this.unsigned)},k.shru=k.shiftRightUnsigned,k.shr_u=k.shiftRightUnsigned,k.toSigned=function(){return this.unsigned?f(this.low,this.high,!1):this},k.toUnsigned=function(){return this.unsigned?this:f(this.low,this.high,!0)},k.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},k.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},k.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},n.fromBytes=function(t,e,r){return r?n.fromBytesLE(t,e):n.fromBytesBE(t,e)},n.fromBytesLE=function(t,e){return new n(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},n.fromBytesBE=function(t,e){return new n(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}},function(t,e){var r={utf8:{stringToBytes:function(t){return r.bin.stringToBytes(unescape(encodeURIComponent(t)))},bytesToString:function(t){return decodeURIComponent(escape(r.bin.bytesToString(t)))}},bin:{stringToBytes:function(t){for(var e=[],r=0;r<t.length;r++)e.push(255&t.charCodeAt(r));return e},bytesToString:function(t){for(var e=[],r=0;r<t.length;r++)e.push(String.fromCharCode(t[r]));return e.join(\"\")}}};t.exports=r},function(t,e,r){t.exports={default:r(202),__esModule:!0}},function(t,e,r){var n=r(28),i=r(21),o=r(36).f;t.exports=function(t){return function(e){for(var r,a=i(e),s=n(a),u=s.length,f=0,c=[];u>f;)o.call(a,r=s[f++])&&c.push(t?[r,a[r]]:a[r]);return c}}},function(t,e,r){t.exports={default:r(204),__esModule:!0}},function(t,e,r){t.exports={default:r(211),__esModule:!0}},function(t,e){t.exports=\"\\t\\n\\v\\f\\r   ᠎             　\\u2028\\u2029\\ufeff\"},function(t,e,r){\"use strict\";var n=r(239),i=r(246),o=r(249);function a(t){var e=n.parse(t),r=e.protocol,a=e.pathname;return\"file:\"===r?new o(unescape(a)):new i(t)}t.exports={LocalFile:o,RemoteFile:i,fromUrl:a,open:function(t,e,r){if(r)return r;if(t)return a(t);if(e)return new o(e);throw new Error(\"no url, path, or filehandle provided, cannot open\")}}},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n=\"__ES6-PROMISIFY--CUSTOM-ARGUMENTS__\";function i(t){if(\"function\"!=typeof t)throw new TypeError(\"Argument to promisify must be a function\");var e=t[n],r=i.Promise||Promise;if(\"function\"!=typeof r)throw new Error(\"No Promise implementation found; do you need a polyfill?\");return function(){for(var n=this,i=arguments.length,o=Array(i),a=0;a<i;a++)o[a]=arguments[a];return new r(function(r,i){o.push(function(t){if(t)return i(t);for(var n=arguments.length,o=Array(n>1?n-1:0),a=1;a<n;a++)o[a-1]=arguments[a];if(1===o.length||!e)return r(o[0]);var s={};o.forEach(function(t,r){var n=e[r];n&&(s[n]=t)}),r(s)}),t.call.apply(t,[n].concat(o))})}}i.argumentNames=n,i.Promise=void 0,e.promisify=i},function(t,e,r){\"use strict\";var n=r(71),i=r(252),o=r(253);t.exports={CramFile:n,IndexedCramFile:i,CraiIndex:o}},function(t,e,r){\"use strict\";(function(e){var n=s(r(11)),i=s(r(12)),o=s(r(1)),a=s(r(3));function s(t){return t&&t.__esModule?t:{default:t}}var u=r(88),f=r(162),c=r(98),h=r(2),l=h.CramUnimplementedError,d=h.CramMalformedError,p=r(183),g=r(187),v=g.cramFileDefinition,m=g.getSectionParsers,y=r(197),_=r(110).open,b=r(37),w=b.parseItem,x=b.tinyMemoize,E=r(250).parseHeaderText,S=function(){function t(e){(0,o.default)(this,t),this.file=_(e.url,e.path,e.filehandle),this.validateChecksums=!0,this.fetchReferenceSequenceCallback=e.seqFetch,this.options={checkSequenceMD5:!1!==e.checkSequenceMD5,cacheSize:void 0!==e.cacheSize?e.cacheSize:2e4},this.featureCache=new c({maxSize:this.options.cacheSize})}return(0,a.default)(t,[{key:\"toString\",value:function(){return this.file.filename?this.file.filename:this.file.url?this.file.url:\"(cram file)\"}},{key:\"read\",value:function(t,e,r,n){return this.file.read(t,e,r,n)}},{key:\"stat\",value:function(){return this.file.stat()}},{key:\"getDefinition\",value:function(){var t=(0,i.default)(n.default.mark(function t(){var r,i;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.allocUnsafe(v.maxLength),t.next=3,this.file.read(r,0,v.maxLength,0);case 3:if(2===(i=v.parser.parse(r).result).majorVersion||3===i.majorVersion){t.next=6;break}throw new l(\"CRAM version \"+i.majorVersion+\" not supported\");case 6:return t.abrupt(\"return\",i);case 7:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getSamHeader\",value:function(){var t=(0,i.default)(n.default.mark(function t(){var e,r,i,o,a;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getContainerById(0);case 2:if(e=t.sent){t.next=5;break}throw new d(\"file contains no containers\");case 5:return t.next=7,e.getFirstBlock();case 7:return r=t.sent,i=r.content,o=i.readInt32LE(0),4,a=i.toString(\"utf8\",4,4+o),t.abrupt(\"return\",E(a));case 13:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getSectionParsers\",value:function(){var t=(0,i.default)(n.default.mark(function t(){var e,r;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getDefinition();case 2:return e=t.sent,r=e.majorVersion,t.abrupt(\"return\",m(r));case 5:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getContainerById\",value:function(){var t=(0,i.default)(n.default.mark(function t(e){var r,i,o,a,s,u,f,c,h,l;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getSectionParsers();case 2:return r=t.sent,i=r.cramFileDefinition.maxLength,t.next=6,this.file.stat();case 6:o=t.sent,a=o.size,s=r.cramContainerHeader1,u=void 0,f=0;case 11:if(!(f<=e)){t.next=37;break}if(!(i+s.maxLength+8>=a)){t.next=14;break}return t.abrupt(\"return\",void 0);case 14:return u=this.getContainerAtPosition(i),t.next=17,u.getHeader();case 17:if(c=t.sent){t.next=20;break}throw new d(\"container \"+e+\" not found in file\");case 20:if(0!==f){t.next=33;break}i=c._endPosition,h=0;case 23:if(!(h<c.numBlocks)){t.next=31;break}return t.next=26,this.readBlock(i);case 26:l=t.sent,i=l._endPosition;case 28:h+=1,t.next=23;break;case 31:t.next=34;break;case 33:i+=c._size+c.length;case 34:f+=1,t.next=11;break;case 37:return t.abrupt(\"return\",u);case 38:case\"end\":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:\"checkCrc32\",value:function(){var t=(0,i.default)(n.default.mark(function t(r,i,o,a){var s,u;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return s=e.allocUnsafe(i),t.next=3,this.file.read(s,0,i,r);case 3:if((u=f.unsigned(s))===o){t.next=6;break}throw new d(\"crc mismatch in \"+a+\": recorded CRC32 = \"+o+\", but calculated CRC32 = \"+u);case 6:case\"end\":return t.stop()}},t,this)}));return function(e,r,n,i){return t.apply(this,arguments)}}()},{key:\"containerCount\",value:function(){var t=(0,i.default)(n.default.mark(function t(){var e,r,i,o,a,s,u,f,c;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getSectionParsers();case 2:return e=t.sent,t.next=5,this.file.stat();case 5:r=t.sent,i=r.size,o=e.cramContainerHeader1,a=0,s=e.cramFileDefinition.maxLength;case 10:if(!(s+o.maxLength+8<i)){t.next=33;break}return t.next=13,this.getContainerAtPosition(s).getHeader();case 13:if(u=t.sent){t.next=16;break}return t.abrupt(\"break\",33);case 16:if(0!==a){t.next=29;break}s=u._endPosition,f=0;case 19:if(!(f<u.numBlocks)){t.next=27;break}return t.next=22,this.readBlock(s);case 22:c=t.sent,s=c._endPosition;case 24:f+=1,t.next=19;break;case 27:t.next=30;break;case 29:s+=u._size+u.length;case 30:a+=1,t.next=10;break;case 33:return t.abrupt(\"return\",a);case 34:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getContainerAtPosition\",value:function(t){return new y(this,t)}},{key:\"readBlockHeader\",value:function(){var t=(0,i.default)(n.default.mark(function t(r){var i,o,a,s,u;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getSectionParsers();case 2:return i=t.sent,o=i.cramBlockHeader,t.next=6,this.file.stat();case 6:if(a=t.sent,s=a.size,!(r+o.maxLength>=s)){t.next=10;break}return t.abrupt(\"return\",void 0);case 10:return u=e.allocUnsafe(o.maxLength),t.next=13,this.file.read(u,0,o.maxLength,r);case 13:return t.abrupt(\"return\",w(u,o.parser,0,r));case 14:case\"end\":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:\"_parseSection\",value:function(){var t=(0,i.default)(n.default.mark(function t(r,i){var o,a,s,u,f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r.maxLength,c=arguments[3];return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(o=void 0,!c){t.next=5;break}o=c,t.next=14;break;case 5:return t.next=7,this.file.stat();case 7:if(a=t.sent,s=a.size,!(i+f>=s)){t.next=11;break}return t.abrupt(\"return\",void 0);case 11:return o=e.allocUnsafe(f),t.next=14,this.file.read(o,0,f,i);case 14:if((u=w(o,r.parser,0,i))._size===f){t.next=17;break}throw new d(\"section read error: requested size \"+f+\" does not equal parsed size \"+u._size);case 17:return t.abrupt(\"return\",u);case 18:case\"end\":return t.stop()}},t,this)}));return function(e,r){return t.apply(this,arguments)}}()},{key:\"_uncompress\",value:function(t,e,r){if(\"gzip\"===t){u.gunzipSync(e).copy(r)}else{if(\"rans\"!==t)throw new l(t+\" decompression not yet implemented\");p.uncompress(e,r)}}},{key:\"readBlock\",value:function(){var t=(0,i.default)(n.default.mark(function t(r){var i,o,a,s,u,f,c,h;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getDefinition();case 2:return i=t.sent,o=i.majorVersion,t.next=6,this.getSectionParsers();case 6:return a=t.sent,t.next=9,this.readBlockHeader(r);case 9:if(s=t.sent,u=s._endPosition,s.contentPosition=s._endPosition,f=e.allocUnsafe(s.uncompressedSize),\"raw\"===s.compressionMethod){t.next=20;break}return c=e.allocUnsafe(s.compressedSize),t.next=17,this.read(c,0,s.compressedSize,u);case 17:this._uncompress(s.compressionMethod,c,f),t.next=22;break;case 20:return t.next=22,this.read(f,0,s.uncompressedSize,u);case 22:if(s.content=f,!(o>=3)){t.next=35;break}return t.next=26,this._parseSection(a.cramBlockCrc32,u+s.compressedSize);case 26:if(h=t.sent,s.crc32=h.crc32,!this.validateChecksums){t.next=31;break}return t.next=31,this.checkCrc32(r,s._size+s.compressedSize,s.crc32,\"block data\");case 31:s._endPosition=h._endPosition,s._size=s.compressedSize+a.cramBlockCrc32.maxLength,t.next=37;break;case 35:s._endPosition=u+s.compressedSize,s._size=s.compressedSize;case 37:return t.abrupt(\"return\",s);case 38:case\"end\":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()}]),t}();\"getDefinition getSectionParsers getSamHeader\".split(\" \").forEach(function(t){return x(S,t)}),t.exports=S}).call(this,r(7).Buffer)},function(t,e,r){\"use strict\";e.byteLength=function(t){var e=f(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function(t){for(var e,r=f(t),n=r[0],a=r[1],s=new o(function(t,e,r){return 3*(e+r)/4-r}(0,n,a)),u=0,c=a>0?n-4:n,h=0;h<c;h+=4)e=i[t.charCodeAt(h)]<<18|i[t.charCodeAt(h+1)]<<12|i[t.charCodeAt(h+2)]<<6|i[t.charCodeAt(h+3)],s[u++]=e>>16&255,s[u++]=e>>8&255,s[u++]=255&e;2===a&&(e=i[t.charCodeAt(h)]<<2|i[t.charCodeAt(h+1)]>>4,s[u++]=255&e);1===a&&(e=i[t.charCodeAt(h)]<<10|i[t.charCodeAt(h+1)]<<4|i[t.charCodeAt(h+2)]>>2,s[u++]=e>>8&255,s[u++]=255&e);return s},e.fromByteArray=function(t){for(var e,r=t.length,i=r%3,o=[],a=0,s=r-i;a<s;a+=16383)o.push(c(t,a,a+16383>s?s:a+16383));1===i?(e=t[r-1],o.push(n[e>>2]+n[e<<4&63]+\"==\")):2===i&&(e=(t[r-2]<<8)+t[r-1],o.push(n[e>>10]+n[e>>4&63]+n[e<<2&63]+\"=\"));return o.join(\"\")};for(var n=[],i=[],o=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,a=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=0,u=a.length;s<u;++s)n[s]=a[s],i[a.charCodeAt(s)]=s;function f(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=t.indexOf(\"=\");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function c(t,e,r){for(var i,o,a=[],s=e;s<r;s+=3)i=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),a.push(n[(o=i)>>18&63]+n[o>>12&63]+n[o>>6&63]+n[63&o]);return a.join(\"\")}i[\"-\".charCodeAt(0)]=62,i[\"_\".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,r,n,i){var o,a,s=8*i-n-1,u=(1<<s)-1,f=u>>1,c=-7,h=r?i-1:0,l=r?-1:1,d=t[e+h];for(h+=l,o=d&(1<<-c)-1,d>>=-c,c+=s;c>0;o=256*o+t[e+h],h+=l,c-=8);for(a=o&(1<<-c)-1,o>>=-c,c+=n;c>0;a=256*a+t[e+h],h+=l,c-=8);if(0===o)o=1-f;else{if(o===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,n),o-=f}return(d?-1:1)*a*Math.pow(2,o-n)},e.write=function(t,e,r,n,i,o){var a,s,u,f=8*o-i-1,c=(1<<f)-1,h=c>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,p=n?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,a=c):(a=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-a))<1&&(a--,u*=2),(e+=a+h>=1?l/u:l*Math.pow(2,1-h))*u>=2&&(a++,u/=2),a+h>=c?(s=0,a=c):a+h>=1?(s=(e*u-1)*Math.pow(2,i),a+=h):(s=e*Math.pow(2,h-1)*Math.pow(2,i),a=0));i>=8;t[r+d]=255&s,d+=p,s/=256,i-=8);for(a=a<<i|s,f+=i;f>0;t[r+d]=255&a,d+=p,a/=256,f-=8);t[r+d-p]|=128*g}},function(t,e,r){var n=function(){return this}()||Function(\"return this\")(),i=n.regeneratorRuntime&&Object.getOwnPropertyNames(n).indexOf(\"regeneratorRuntime\")>=0,o=i&&n.regeneratorRuntime;if(n.regeneratorRuntime=void 0,t.exports=r(117),i)n.regeneratorRuntime=o;else try{delete n.regeneratorRuntime}catch(t){n.regeneratorRuntime=void 0}},function(t,e){!function(e){\"use strict\";var r,n=Object.prototype,i=n.hasOwnProperty,o=\"function\"==typeof Symbol?Symbol:{},a=o.iterator||\"@@iterator\",s=o.asyncIterator||\"@@asyncIterator\",u=o.toStringTag||\"@@toStringTag\",f=\"object\"==typeof t,c=e.regeneratorRuntime;if(c)f&&(t.exports=c);else{(c=e.regeneratorRuntime=f?t.exports:{}).wrap=b;var h=\"suspendedStart\",l=\"suspendedYield\",d=\"executing\",p=\"completed\",g={},v={};v[a]=function(){return this};var m=Object.getPrototypeOf,y=m&&m(m(B([])));y&&y!==n&&i.call(y,a)&&(v=y);var _=S.prototype=x.prototype=Object.create(v);E.prototype=_.constructor=S,S.constructor=E,S[u]=E.displayName=\"GeneratorFunction\",c.isGeneratorFunction=function(t){var e=\"function\"==typeof t&&t.constructor;return!!e&&(e===E||\"GeneratorFunction\"===(e.displayName||e.name))},c.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,S):(t.__proto__=S,u in t||(t[u]=\"GeneratorFunction\")),t.prototype=Object.create(_),t},c.awrap=function(t){return{__await:t}},k(A.prototype),A.prototype[s]=function(){return this},c.AsyncIterator=A,c.async=function(t,e,r,n){var i=new A(b(t,e,r,n));return c.isGeneratorFunction(e)?i:i.next().then(function(t){return t.done?t.value:i.next()})},k(_),_[u]=\"Generator\",_[a]=function(){return this},_.toString=function(){return\"[object Generator]\"},c.keys=function(t){var e=[];for(var r in t)e.push(r);return e.reverse(),function r(){for(;e.length;){var n=e.pop();if(n in t)return r.value=n,r.done=!1,r}return r.done=!0,r}},c.values=B,I.prototype={constructor:I,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=r,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=r,this.tryEntries.forEach(R),!t)for(var e in this)\"t\"===e.charAt(0)&&i.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=r)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if(\"throw\"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(n,i){return s.type=\"throw\",s.arg=t,e.next=n,i&&(e.method=\"next\",e.arg=r),!!i}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],s=a.completion;if(\"root\"===a.tryLoc)return n(\"end\");if(a.tryLoc<=this.prev){var u=i.call(a,\"catchLoc\"),f=i.call(a,\"finallyLoc\");if(u&&f){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!f)throw new Error(\"try statement without catch or finally\");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&i.call(n,\"finallyLoc\")&&this.prev<n.finallyLoc){var o=n;break}}o&&(\"break\"===t||\"continue\"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=t,a.arg=e,o?(this.method=\"next\",this.next=o.finallyLoc,g):this.complete(a)},complete:function(t,e){if(\"throw\"===t.type)throw t.arg;return\"break\"===t.type||\"continue\"===t.type?this.next=t.arg:\"return\"===t.type?(this.rval=this.arg=t.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),R(r),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if(\"throw\"===n.type){var i=n.arg;R(r)}return i}}throw new Error(\"illegal catch attempt\")},delegateYield:function(t,e,n){return this.delegate={iterator:B(t),resultName:e,nextLoc:n},\"next\"===this.method&&(this.arg=r),g}}}function b(t,e,r,n){var i=e&&e.prototype instanceof x?e:x,o=Object.create(i.prototype),a=new I(n||[]);return o._invoke=function(t,e,r){var n=h;return function(i,o){if(n===d)throw new Error(\"Generator is already running\");if(n===p){if(\"throw\"===i)throw o;return L()}for(r.method=i,r.arg=o;;){var a=r.delegate;if(a){var s=C(a,r);if(s){if(s===g)continue;return s}}if(\"next\"===r.method)r.sent=r._sent=r.arg;else if(\"throw\"===r.method){if(n===h)throw n=p,r.arg;r.dispatchException(r.arg)}else\"return\"===r.method&&r.abrupt(\"return\",r.arg);n=d;var u=w(t,e,r);if(\"normal\"===u.type){if(n=r.done?p:l,u.arg===g)continue;return{value:u.arg,done:r.done}}\"throw\"===u.type&&(n=p,r.method=\"throw\",r.arg=u.arg)}}}(t,r,a),o}function w(t,e,r){try{return{type:\"normal\",arg:t.call(e,r)}}catch(t){return{type:\"throw\",arg:t}}}function x(){}function E(){}function S(){}function k(t){[\"next\",\"throw\",\"return\"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function A(t){var e;this._invoke=function(r,n){function o(){return new Promise(function(e,o){!function e(r,n,o,a){var s=w(t[r],t,n);if(\"throw\"!==s.type){var u=s.arg,f=u.value;return f&&\"object\"==typeof f&&i.call(f,\"__await\")?Promise.resolve(f.__await).then(function(t){e(\"next\",t,o,a)},function(t){e(\"throw\",t,o,a)}):Promise.resolve(f).then(function(t){u.value=t,o(u)},a)}a(s.arg)}(r,n,e,o)})}return e=e?e.then(o,o):o()}}function C(t,e){var n=t.iterator[e.method];if(n===r){if(e.delegate=null,\"throw\"===e.method){if(t.iterator.return&&(e.method=\"return\",e.arg=r,C(t,e),\"throw\"===e.method))return g;e.method=\"throw\",e.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return g}var i=w(n,t.iterator,e.arg);if(\"throw\"===i.type)return e.method=\"throw\",e.arg=i.arg,e.delegate=null,g;var o=i.arg;return o?o.done?(e[t.resultName]=o.value,e.next=t.nextLoc,\"return\"!==e.method&&(e.method=\"next\",e.arg=r),e.delegate=null,g):o:(e.method=\"throw\",e.arg=new TypeError(\"iterator result is not an object\"),e.delegate=null,g)}function T(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function R(t){var e=t.completion||{};e.type=\"normal\",delete e.arg,t.completion=e}function I(t){this.tryEntries=[{tryLoc:\"root\"}],t.forEach(T,this),this.reset(!0)}function B(t){if(t){var e=t[a];if(e)return e.call(t);if(\"function\"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,o=function e(){for(;++n<t.length;)if(i.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=r,e.done=!0,e};return o.next=o}}return{next:L}}function L(){return{value:r,done:!0}}}(function(){return this}()||Function(\"return this\")())},function(t,e,r){r(73),r(30),r(43),r(127),r(135),r(136),t.exports=r(0).Promise},function(t,e,r){var n=r(51),i=r(39);t.exports=function(t){return function(e,r){var o,a,s=String(i(e)),u=n(r),f=s.length;return u<0||u>=f?t?\"\":void 0:(o=s.charCodeAt(u))<55296||o>56319||u+1===f||(a=s.charCodeAt(u+1))<56320||a>57343?t?s.charAt(u):o:t?s.slice(u,u+2):a-56320+(o-55296<<10)+65536}}},function(t,e,r){\"use strict\";var n=r(54),i=r(32),o=r(42),a={};r(18)(a,r(6)(\"iterator\"),function(){return this}),t.exports=function(t,e,r){t.prototype=n(a,{next:i(1,r)}),o(t,e+\" Iterator\")}},function(t,e,r){var n=r(10),i=r(8),o=r(28);t.exports=r(14)?Object.defineProperties:function(t,e){i(t);for(var r,a=o(e),s=a.length,u=0;s>u;)n.f(t,r=a[u++],e[r]);return t}},function(t,e,r){var n=r(21),i=r(55),o=r(123);t.exports=function(t){return function(e,r,a){var s,u=n(e),f=i(u.length),c=o(a,f);if(t&&r!=r){for(;f>c;)if((s=u[c++])!=s)return!0}else for(;f>c;c++)if((t||c in u)&&u[c]===r)return t||c||0;return!t&&-1}}},function(t,e,r){var n=r(51),i=Math.max,o=Math.min;t.exports=function(t,e){return(t=n(t))<0?i(t+e,0):o(t,e)}},function(t,e,r){\"use strict\";var n=r(125),i=r(126),o=r(27),a=r(21);t.exports=r(74)(Array,\"Array\",function(t,e){this._t=a(t),this._i=0,this._k=e},function(){var t=this._t,e=this._k,r=this._i++;return!t||r>=t.length?(this._t=void 0,i(1)):i(0,\"keys\"==e?r:\"values\"==e?t[r]:[r,t[r]])},\"values\"),o.Arguments=o.Array,n(\"keys\"),n(\"values\"),n(\"entries\")},function(t,e){t.exports=function(){}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,r){\"use strict\";var n,i,o,a,s=r(31),u=r(5),f=r(26),c=r(59),h=r(4),l=r(13),d=r(40),p=r(128),g=r(129),v=r(83),m=r(84).set,y=r(131)(),_=r(61),b=r(85),w=r(132),x=r(86),E=u.TypeError,S=u.process,k=S&&S.versions,A=k&&k.v8||\"\",C=u.Promise,T=\"process\"==c(S),R=function(){},I=i=_.f,B=!!function(){try{var t=C.resolve(1),e=(t.constructor={})[r(6)(\"species\")]=function(t){t(R,R)};return(T||\"function\"==typeof PromiseRejectionEvent)&&t.then(R)instanceof e&&0!==A.indexOf(\"6.6\")&&-1===w.indexOf(\"Chrome/66\")}catch(t){}}(),L=function(t){var e;return!(!l(t)||\"function\"!=typeof(e=t.then))&&e},M=function(t,e){if(!t._n){t._n=!0;var r=t._c;y(function(){for(var n=t._v,i=1==t._s,o=0,a=function(e){var r,o,a,s=i?e.ok:e.fail,u=e.resolve,f=e.reject,c=e.domain;try{s?(i||(2==t._h&&N(t),t._h=1),!0===s?r=n:(c&&c.enter(),r=s(n),c&&(c.exit(),a=!0)),r===e.promise?f(E(\"Promise-chain cycle\")):(o=L(r))?o.call(r,u,f):u(r)):f(n)}catch(t){c&&!a&&c.exit(),f(t)}};r.length>o;)a(r[o++]);t._c=[],t._n=!1,e&&!t._h&&O(t)})}},O=function(t){m.call(u,function(){var e,r,n,i=t._v,o=F(t);if(o&&(e=b(function(){T?S.emit(\"unhandledRejection\",i,t):(r=u.onunhandledrejection)?r({promise:t,reason:i}):(n=u.console)&&n.error&&n.error(\"Unhandled promise rejection\",i)}),t._h=T||F(t)?2:1),t._a=void 0,o&&e.e)throw e.v})},F=function(t){return 1!==t._h&&0===(t._a||t._c).length},N=function(t){m.call(u,function(){var e;T?S.emit(\"rejectionHandled\",t):(e=u.onrejectionhandled)&&e({promise:t,reason:t._v})})},P=function(t){var e=this;e._d||(e._d=!0,(e=e._w||e)._v=t,e._s=2,e._a||(e._a=e._c.slice()),M(e,!0))},U=function(t){var e,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===t)throw E(\"Promise can't be resolved itself\");(e=L(t))?y(function(){var n={_w:r,_d:!1};try{e.call(t,f(U,n,1),f(P,n,1))}catch(t){P.call(n,t)}}):(r._v=t,r._s=1,M(r,!1))}catch(t){P.call({_w:r,_d:!1},t)}}};B||(C=function(t){p(this,C,\"Promise\",\"_h\"),d(t),n.call(this);try{t(f(U,this,1),f(P,this,1))}catch(t){P.call(this,t)}},(n=function(t){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(133)(C.prototype,{then:function(t,e){var r=I(v(this,C));return r.ok=\"function\"!=typeof t||t,r.fail=\"function\"==typeof e&&e,r.domain=T?S.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&M(this,!1),r.promise},catch:function(t){return this.then(void 0,t)}}),o=function(){var t=new n;this.promise=t,this.resolve=f(U,t,1),this.reject=f(P,t,1)},_.f=I=function(t){return t===C||t===a?new o(t):i(t)}),h(h.G+h.W+h.F*!B,{Promise:C}),r(42)(C,\"Promise\"),r(134)(\"Promise\"),a=r(0).Promise,h(h.S+h.F*!B,\"Promise\",{reject:function(t){var e=I(this);return(0,e.reject)(t),e.promise}}),h(h.S+h.F*(s||!B),\"Promise\",{resolve:function(t){return x(s&&this===a?C:this,t)}}),h(h.S+h.F*!(B&&r(87)(function(t){C.all(t).catch(R)})),\"Promise\",{all:function(t){var e=this,r=I(e),n=r.resolve,i=r.reject,o=b(function(){var r=[],o=0,a=1;g(t,!1,function(t){var s=o++,u=!1;r.push(void 0),a++,e.resolve(t).then(function(t){u||(u=!0,r[s]=t,--a||n(r))},i)}),--a||n(r)});return o.e&&i(o.v),r.promise},race:function(t){var e=this,r=I(e),n=r.reject,i=b(function(){g(t,!1,function(t){e.resolve(t).then(r.resolve,n)})});return i.e&&n(i.v),r.promise}})},function(t,e){t.exports=function(t,e,r,n){if(!(t instanceof e)||void 0!==n&&n in t)throw TypeError(r+\": incorrect invocation!\");return t}},function(t,e,r){var n=r(26),i=r(81),o=r(82),a=r(8),s=r(55),u=r(60),f={},c={};(e=t.exports=function(t,e,r,h,l){var d,p,g,v,m=l?function(){return t}:u(t),y=n(r,h,e?2:1),_=0;if(\"function\"!=typeof m)throw TypeError(t+\" is not iterable!\");if(o(m)){for(d=s(t.length);d>_;_++)if((v=e?y(a(p=t[_])[0],p[1]):y(t[_]))===f||v===c)return v}else for(g=m.call(t);!(p=g.next()).done;)if((v=i(g,y,p.value,e))===f||v===c)return v}).BREAK=f,e.RETURN=c},function(t,e){t.exports=function(t,e,r){var n=void 0===r;switch(e.length){case 0:return n?t():t.call(r);case 1:return n?t(e[0]):t.call(r,e[0]);case 2:return n?t(e[0],e[1]):t.call(r,e[0],e[1]);case 3:return n?t(e[0],e[1],e[2]):t.call(r,e[0],e[1],e[2]);case 4:return n?t(e[0],e[1],e[2],e[3]):t.call(r,e[0],e[1],e[2],e[3])}return t.apply(r,e)}},function(t,e,r){var n=r(5),i=r(84).set,o=n.MutationObserver||n.WebKitMutationObserver,a=n.process,s=n.Promise,u=\"process\"==r(33)(a);t.exports=function(){var t,e,r,f=function(){var n,i;for(u&&(n=a.domain)&&n.exit();t;){i=t.fn,t=t.next;try{i()}catch(n){throw t?r():e=void 0,n}}e=void 0,n&&n.enter()};if(u)r=function(){a.nextTick(f)};else if(!o||n.navigator&&n.navigator.standalone)if(s&&s.resolve){var c=s.resolve(void 0);r=function(){c.then(f)}}else r=function(){i.call(n,f)};else{var h=!0,l=document.createTextNode(\"\");new o(f).observe(l,{characterData:!0}),r=function(){l.data=h=!h}}return function(n){var i={fn:n,next:void 0};e&&(e.next=i),t||(t=i,r()),e=i}}},function(t,e,r){var n=r(5).navigator;t.exports=n&&n.userAgent||\"\"},function(t,e,r){var n=r(18);t.exports=function(t,e,r){for(var i in e)r&&t[i]?t[i]=e[i]:n(t,i,e[i]);return t}},function(t,e,r){\"use strict\";var n=r(5),i=r(0),o=r(10),a=r(14),s=r(6)(\"species\");t.exports=function(t){var e=\"function\"==typeof i[t]?i[t]:n[t];a&&e&&!e[s]&&o.f(e,s,{configurable:!0,get:function(){return this}})}},function(t,e,r){\"use strict\";var n=r(4),i=r(0),o=r(5),a=r(83),s=r(86);n(n.P+n.R,\"Promise\",{finally:function(t){var e=a(this,i.Promise||o.Promise),r=\"function\"==typeof t;return this.then(r?function(r){return s(e,t()).then(function(){return r})}:t,r?function(r){return s(e,t()).then(function(){throw r})}:t)}})},function(t,e,r){\"use strict\";var n=r(4),i=r(61),o=r(85);n(n.S,\"Promise\",{try:function(t){var e=i.f(this),r=o(t);return(r.e?e.reject:e.resolve)(r.v),e.promise}})},function(t,e,r){t.exports={default:r(138),__esModule:!0}},function(t,e,r){r(139);var n=r(0).Object;t.exports=function(t,e,r){return n.defineProperty(t,e,r)}},function(t,e,r){var n=r(4);n(n.S+n.F*!r(14),\"Object\",{defineProperty:r(10).f})},function(t,e,r){t.exports=i;var n=r(62).EventEmitter;function i(){n.call(this)}r(23)(i,n),i.Readable=r(63),i.Writable=r(148),i.Duplex=r(149),i.Transform=r(150),i.PassThrough=r(151),i.Stream=i,i.prototype.pipe=function(t,e){var r=this;function i(e){t.writable&&!1===t.write(e)&&r.pause&&r.pause()}function o(){r.readable&&r.resume&&r.resume()}r.on(\"data\",i),t.on(\"drain\",o),t._isStdio||e&&!1===e.end||(r.on(\"end\",s),r.on(\"close\",u));var a=!1;function s(){a||(a=!0,t.end())}function u(){a||(a=!0,\"function\"==typeof t.destroy&&t.destroy())}function f(t){if(c(),0===n.listenerCount(this,\"error\"))throw t}function c(){r.removeListener(\"data\",i),t.removeListener(\"drain\",o),r.removeListener(\"end\",s),r.removeListener(\"close\",u),r.removeListener(\"error\",f),t.removeListener(\"error\",f),r.removeListener(\"end\",c),r.removeListener(\"close\",c),t.removeListener(\"close\",c)}return r.on(\"error\",f),t.on(\"error\",f),r.on(\"end\",c),r.on(\"close\",c),t.on(\"close\",c),t.emit(\"pipe\",r),t}},function(t,e){},function(t,e,r){\"use strict\";var n=r(45).Buffer,i=r(143);t.exports=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.head=null,this.tail=null,this.length=0}return t.prototype.push=function(t){var e={data:t,next:null};this.length>0?this.tail.next=e:this.head=e,this.tail=e,++this.length},t.prototype.unshift=function(t){var e={data:t,next:this.head};0===this.length&&(this.tail=e),this.head=e,++this.length},t.prototype.shift=function(){if(0!==this.length){var t=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,t}},t.prototype.clear=function(){this.head=this.tail=null,this.length=0},t.prototype.join=function(t){if(0===this.length)return\"\";for(var e=this.head,r=\"\"+e.data;e=e.next;)r+=t+e.data;return r},t.prototype.concat=function(t){if(0===this.length)return n.alloc(0);if(1===this.length)return this.head.data;for(var e,r,i,o=n.allocUnsafe(t>>>0),a=this.head,s=0;a;)e=a.data,r=o,i=s,e.copy(r,i),s+=a.data.length,a=a.next;return o},t}(),i&&i.inspect&&i.inspect.custom&&(t.exports.prototype[i.inspect.custom]=function(){var t=i.inspect({length:this.length});return this.constructor.name+\" \"+t})},function(t,e){},function(t,e,r){(function(t){var n=void 0!==t&&t||\"undefined\"!=typeof self&&self||window,i=Function.prototype.apply;function o(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new o(i.call(setTimeout,n,arguments),clearTimeout)},e.setInterval=function(){return new o(i.call(setInterval,n,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(n,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},r(145),e.setImmediate=\"undefined\"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate=\"undefined\"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,r(9))},function(t,e,r){(function(t,e){!function(t,r){\"use strict\";if(!t.setImmediate){var n,i,o,a,s,u=1,f={},c=!1,h=t.document,l=Object.getPrototypeOf&&Object.getPrototypeOf(t);l=l&&l.setTimeout?l:t,\"[object process]\"==={}.toString.call(t.process)?n=function(t){e.nextTick(function(){p(t)})}:!function(){if(t.postMessage&&!t.importScripts){var e=!0,r=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage(\"\",\"*\"),t.onmessage=r,e}}()?t.MessageChannel?((o=new MessageChannel).port1.onmessage=function(t){p(t.data)},n=function(t){o.port2.postMessage(t)}):h&&\"onreadystatechange\"in h.createElement(\"script\")?(i=h.documentElement,n=function(t){var e=h.createElement(\"script\");e.onreadystatechange=function(){p(t),e.onreadystatechange=null,i.removeChild(e),e=null},i.appendChild(e)}):n=function(t){setTimeout(p,0,t)}:(a=\"setImmediate$\"+Math.random()+\"$\",s=function(e){e.source===t&&\"string\"==typeof e.data&&0===e.data.indexOf(a)&&p(+e.data.slice(a.length))},t.addEventListener?t.addEventListener(\"message\",s,!1):t.attachEvent(\"onmessage\",s),n=function(e){t.postMessage(a+e,\"*\")}),l.setImmediate=function(t){\"function\"!=typeof t&&(t=new Function(\"\"+t));for(var e=new Array(arguments.length-1),r=0;r<e.length;r++)e[r]=arguments[r+1];var i={callback:t,args:e};return f[u]=i,n(u),u++},l.clearImmediate=d}function d(t){delete f[t]}function p(t){if(c)setTimeout(p,0,t);else{var e=f[t];if(e){c=!0;try{!function(t){var e=t.callback,n=t.args;switch(n.length){case 0:e();break;case 1:e(n[0]);break;case 2:e(n[0],n[1]);break;case 3:e(n[0],n[1],n[2]);break;default:e.apply(r,n)}}(e)}finally{d(t),c=!1}}}}}(\"undefined\"==typeof self?void 0===t?this:t:self)}).call(this,r(9),r(22))},function(t,e,r){(function(e){function r(t){try{if(!e.localStorage)return!1}catch(t){return!1}var r=e.localStorage[t];return null!=r&&\"true\"===String(r).toLowerCase()}t.exports=function(t,e){if(r(\"noDeprecation\"))return t;var n=!1;return function(){if(!n){if(r(\"throwDeprecation\"))throw new Error(e);r(\"traceDeprecation\")?console.trace(e):console.warn(e),n=!0}return t.apply(this,arguments)}}}).call(this,r(9))},function(t,e,r){\"use strict\";t.exports=o;var n=r(93),i=r(35);function o(t){if(!(this instanceof o))return new o(t);n.call(this,t)}i.inherits=r(23),i.inherits(o,n),o.prototype._transform=function(t,e,r){r(null,t)}},function(t,e,r){t.exports=r(64)},function(t,e,r){t.exports=r(24)},function(t,e,r){t.exports=r(63).Transform},function(t,e,r){t.exports=r(63).PassThrough},function(t,e,r){\"use strict\";(function(t,n){var i=r(94),o=r(154),a=r(155),s=r(158),u=r(161);for(var f in u)e[f]=u[f];e.NONE=0,e.DEFLATE=1,e.INFLATE=2,e.GZIP=3,e.GUNZIP=4,e.DEFLATERAW=5,e.INFLATERAW=6,e.UNZIP=7;function c(t){if(\"number\"!=typeof t||t<e.DEFLATE||t>e.UNZIP)throw new TypeError(\"Bad argument\");this.dictionary=null,this.err=0,this.flush=0,this.init_done=!1,this.level=0,this.memLevel=0,this.mode=t,this.strategy=0,this.windowBits=0,this.write_in_progress=!1,this.pending_close=!1,this.gzip_id_bytes_read=0}c.prototype.close=function(){this.write_in_progress?this.pending_close=!0:(this.pending_close=!1,i(this.init_done,\"close before init\"),i(this.mode<=e.UNZIP),this.mode===e.DEFLATE||this.mode===e.GZIP||this.mode===e.DEFLATERAW?a.deflateEnd(this.strm):this.mode!==e.INFLATE&&this.mode!==e.GUNZIP&&this.mode!==e.INFLATERAW&&this.mode!==e.UNZIP||s.inflateEnd(this.strm),this.mode=e.NONE,this.dictionary=null)},c.prototype.write=function(t,e,r,n,i,o,a){return this._write(!0,t,e,r,n,i,o,a)},c.prototype.writeSync=function(t,e,r,n,i,o,a){return this._write(!1,t,e,r,n,i,o,a)},c.prototype._write=function(r,o,a,s,u,f,c,h){if(i.equal(arguments.length,8),i(this.init_done,\"write before init\"),i(this.mode!==e.NONE,\"already finalized\"),i.equal(!1,this.write_in_progress,\"write already in progress\"),i.equal(!1,this.pending_close,\"close is pending\"),this.write_in_progress=!0,i.equal(!1,void 0===o,\"must provide flush value\"),this.write_in_progress=!0,o!==e.Z_NO_FLUSH&&o!==e.Z_PARTIAL_FLUSH&&o!==e.Z_SYNC_FLUSH&&o!==e.Z_FULL_FLUSH&&o!==e.Z_FINISH&&o!==e.Z_BLOCK)throw new Error(\"Invalid flush value\");if(null==a&&(a=t.alloc(0),u=0,s=0),this.strm.avail_in=u,this.strm.input=a,this.strm.next_in=s,this.strm.avail_out=h,this.strm.output=f,this.strm.next_out=c,this.flush=o,!r)return this._process(),this._checkError()?this._afterSync():void 0;var l=this;return n.nextTick(function(){l._process(),l._after()}),this},c.prototype._afterSync=function(){var t=this.strm.avail_out,e=this.strm.avail_in;return this.write_in_progress=!1,[e,t]},c.prototype._process=function(){var t=null;switch(this.mode){case e.DEFLATE:case e.GZIP:case e.DEFLATERAW:this.err=a.deflate(this.strm,this.flush);break;case e.UNZIP:switch(this.strm.avail_in>0&&(t=this.strm.next_in),this.gzip_id_bytes_read){case 0:if(null===t)break;if(31!==this.strm.input[t]){this.mode=e.INFLATE;break}if(this.gzip_id_bytes_read=1,t++,1===this.strm.avail_in)break;case 1:if(null===t)break;139===this.strm.input[t]?(this.gzip_id_bytes_read=2,this.mode=e.GUNZIP):this.mode=e.INFLATE;break;default:throw new Error(\"invalid number of gzip magic number bytes read\")}case e.INFLATE:case e.GUNZIP:case e.INFLATERAW:for(this.err=s.inflate(this.strm,this.flush),this.err===e.Z_NEED_DICT&&this.dictionary&&(this.err=s.inflateSetDictionary(this.strm,this.dictionary),this.err===e.Z_OK?this.err=s.inflate(this.strm,this.flush):this.err===e.Z_DATA_ERROR&&(this.err=e.Z_NEED_DICT));this.strm.avail_in>0&&this.mode===e.GUNZIP&&this.err===e.Z_STREAM_END&&0!==this.strm.next_in[0];)this.reset(),this.err=s.inflate(this.strm,this.flush);break;default:throw new Error(\"Unknown mode \"+this.mode)}},c.prototype._checkError=function(){switch(this.err){case e.Z_OK:case e.Z_BUF_ERROR:if(0!==this.strm.avail_out&&this.flush===e.Z_FINISH)return this._error(\"unexpected end of file\"),!1;break;case e.Z_STREAM_END:break;case e.Z_NEED_DICT:return null==this.dictionary?this._error(\"Missing dictionary\"):this._error(\"Bad dictionary\"),!1;default:return this._error(\"Zlib error\"),!1}return!0},c.prototype._after=function(){if(this._checkError()){var t=this.strm.avail_out,e=this.strm.avail_in;this.write_in_progress=!1,this.callback(e,t),this.pending_close&&this.close()}},c.prototype._error=function(t){this.strm.msg&&(t=this.strm.msg),this.onerror(t,this.err),this.write_in_progress=!1,this.pending_close&&this.close()},c.prototype.init=function(t,r,n,o,a){i(4===arguments.length||5===arguments.length,\"init(windowBits, level, memLevel, strategy, [dictionary])\"),i(t>=8&&t<=15,\"invalid windowBits\"),i(r>=-1&&r<=9,\"invalid compression level\"),i(n>=1&&n<=9,\"invalid memlevel\"),i(o===e.Z_FILTERED||o===e.Z_HUFFMAN_ONLY||o===e.Z_RLE||o===e.Z_FIXED||o===e.Z_DEFAULT_STRATEGY,\"invalid strategy\"),this._init(r,t,n,o,a),this._setDictionary()},c.prototype.params=function(){throw new Error(\"deflateParams Not supported\")},c.prototype.reset=function(){this._reset(),this._setDictionary()},c.prototype._init=function(t,r,n,i,u){switch(this.level=t,this.windowBits=r,this.memLevel=n,this.strategy=i,this.flush=e.Z_NO_FLUSH,this.err=e.Z_OK,this.mode!==e.GZIP&&this.mode!==e.GUNZIP||(this.windowBits+=16),this.mode===e.UNZIP&&(this.windowBits+=32),this.mode!==e.DEFLATERAW&&this.mode!==e.INFLATERAW||(this.windowBits=-1*this.windowBits),this.strm=new o,this.mode){case e.DEFLATE:case e.GZIP:case e.DEFLATERAW:this.err=a.deflateInit2(this.strm,this.level,e.Z_DEFLATED,this.windowBits,this.memLevel,this.strategy);break;case e.INFLATE:case e.GUNZIP:case e.INFLATERAW:case e.UNZIP:this.err=s.inflateInit2(this.strm,this.windowBits);break;default:throw new Error(\"Unknown mode \"+this.mode)}this.err!==e.Z_OK&&this._error(\"Init error\"),this.dictionary=u,this.write_in_progress=!1,this.init_done=!0},c.prototype._setDictionary=function(){if(null!=this.dictionary){switch(this.err=e.Z_OK,this.mode){case e.DEFLATE:case e.DEFLATERAW:this.err=a.deflateSetDictionary(this.strm,this.dictionary)}this.err!==e.Z_OK&&this._error(\"Failed to set dictionary\")}},c.prototype._reset=function(){switch(this.err=e.Z_OK,this.mode){case e.DEFLATE:case e.DEFLATERAW:case e.GZIP:this.err=a.deflateReset(this.strm);break;case e.INFLATE:case e.INFLATERAW:case e.GUNZIP:this.err=s.inflateReset(this.strm)}this.err!==e.Z_OK&&this._error(\"Failed to reset stream\")},e.Zlib=c}).call(this,r(7).Buffer,r(22))},function(t,e){t.exports=function(t){return t&&\"object\"==typeof t&&\"function\"==typeof t.copy&&\"function\"==typeof t.fill&&\"function\"==typeof t.readUInt8}},function(t,e,r){\"use strict\";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},function(t,e,r){\"use strict\";var n,i=r(46),o=r(156),a=r(96),s=r(97),u=r(157),f=0,c=1,h=3,l=4,d=5,p=0,g=1,v=-2,m=-3,y=-5,_=-1,b=1,w=2,x=3,E=4,S=0,k=2,A=8,C=9,T=15,R=8,I=286,B=30,L=19,M=2*I+1,O=15,F=3,N=258,P=N+F+1,U=32,z=42,j=69,D=73,q=91,Z=103,H=113,V=666,G=1,W=2,Y=3,$=4,K=3;function X(t,e){return t.msg=u[e],e}function Q(t){return(t<<1)-(t>4?9:0)}function J(t){for(var e=t.length;--e>=0;)t[e]=0}function tt(t){var e=t.state,r=e.pending;r>t.avail_out&&(r=t.avail_out),0!==r&&(i.arraySet(t.output,e.pending_buf,e.pending_out,r,t.next_out),t.next_out+=r,e.pending_out+=r,t.total_out+=r,t.avail_out-=r,e.pending-=r,0===e.pending&&(e.pending_out=0))}function et(t,e){o._tr_flush_block(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,tt(t.strm)}function rt(t,e){t.pending_buf[t.pending++]=e}function nt(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function it(t,e){var r,n,i=t.max_chain_length,o=t.strstart,a=t.prev_length,s=t.nice_match,u=t.strstart>t.w_size-P?t.strstart-(t.w_size-P):0,f=t.window,c=t.w_mask,h=t.prev,l=t.strstart+N,d=f[o+a-1],p=f[o+a];t.prev_length>=t.good_match&&(i>>=2),s>t.lookahead&&(s=t.lookahead);do{if(f[(r=e)+a]===p&&f[r+a-1]===d&&f[r]===f[o]&&f[++r]===f[o+1]){o+=2,r++;do{}while(f[++o]===f[++r]&&f[++o]===f[++r]&&f[++o]===f[++r]&&f[++o]===f[++r]&&f[++o]===f[++r]&&f[++o]===f[++r]&&f[++o]===f[++r]&&f[++o]===f[++r]&&o<l);if(n=N-(l-o),o=l-N,n>a){if(t.match_start=e,a=n,n>=s)break;d=f[o+a-1],p=f[o+a]}}}while((e=h[e&c])>u&&0!=--i);return a<=t.lookahead?a:t.lookahead}function ot(t){var e,r,n,o,u,f,c,h,l,d,p=t.w_size;do{if(o=t.window_size-t.lookahead-t.strstart,t.strstart>=p+(p-P)){i.arraySet(t.window,t.window,p,p,0),t.match_start-=p,t.strstart-=p,t.block_start-=p,e=r=t.hash_size;do{n=t.head[--e],t.head[e]=n>=p?n-p:0}while(--r);e=r=p;do{n=t.prev[--e],t.prev[e]=n>=p?n-p:0}while(--r);o+=p}if(0===t.strm.avail_in)break;if(f=t.strm,c=t.window,h=t.strstart+t.lookahead,l=o,d=void 0,(d=f.avail_in)>l&&(d=l),r=0===d?0:(f.avail_in-=d,i.arraySet(c,f.input,f.next_in,d,h),1===f.state.wrap?f.adler=a(f.adler,c,d,h):2===f.state.wrap&&(f.adler=s(f.adler,c,d,h)),f.next_in+=d,f.total_in+=d,d),t.lookahead+=r,t.lookahead+t.insert>=F)for(u=t.strstart-t.insert,t.ins_h=t.window[u],t.ins_h=(t.ins_h<<t.hash_shift^t.window[u+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[u+F-1])&t.hash_mask,t.prev[u&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=u,u++,t.insert--,!(t.lookahead+t.insert<F)););}while(t.lookahead<P&&0!==t.strm.avail_in)}function at(t,e){for(var r,n;;){if(t.lookahead<P){if(ot(t),t.lookahead<P&&e===f)return G;if(0===t.lookahead)break}if(r=0,t.lookahead>=F&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+F-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==r&&t.strstart-r<=t.w_size-P&&(t.match_length=it(t,r)),t.match_length>=F)if(n=o._tr_tally(t,t.strstart-t.match_start,t.match_length-F),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=F){t.match_length--;do{t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+F-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else n=o._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(n&&(et(t,!1),0===t.strm.avail_out))return G}return t.insert=t.strstart<F-1?t.strstart:F-1,e===l?(et(t,!0),0===t.strm.avail_out?Y:$):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?G:W}function st(t,e){for(var r,n,i;;){if(t.lookahead<P){if(ot(t),t.lookahead<P&&e===f)return G;if(0===t.lookahead)break}if(r=0,t.lookahead>=F&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+F-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=F-1,0!==r&&t.prev_length<t.max_lazy_match&&t.strstart-r<=t.w_size-P&&(t.match_length=it(t,r),t.match_length<=5&&(t.strategy===b||t.match_length===F&&t.strstart-t.match_start>4096)&&(t.match_length=F-1)),t.prev_length>=F&&t.match_length<=t.prev_length){i=t.strstart+t.lookahead-F,n=o._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-F),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=i&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+F-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=F-1,t.strstart++,n&&(et(t,!1),0===t.strm.avail_out))return G}else if(t.match_available){if((n=o._tr_tally(t,0,t.window[t.strstart-1]))&&et(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return G}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(n=o._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<F-1?t.strstart:F-1,e===l?(et(t,!0),0===t.strm.avail_out?Y:$):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?G:W}function ut(t,e,r,n,i){this.good_length=t,this.max_lazy=e,this.nice_length=r,this.max_chain=n,this.func=i}function ft(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=A,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new i.Buf16(2*M),this.dyn_dtree=new i.Buf16(2*(2*B+1)),this.bl_tree=new i.Buf16(2*(2*L+1)),J(this.dyn_ltree),J(this.dyn_dtree),J(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new i.Buf16(O+1),this.heap=new i.Buf16(2*I+1),J(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new i.Buf16(2*I+1),J(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function ct(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=k,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?z:H,t.adler=2===e.wrap?0:1,e.last_flush=f,o._tr_init(e),p):X(t,v)}function ht(t){var e,r=ct(t);return r===p&&((e=t.state).window_size=2*e.w_size,J(e.head),e.max_lazy_match=n[e.level].max_lazy,e.good_match=n[e.level].good_length,e.nice_match=n[e.level].nice_length,e.max_chain_length=n[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=F-1,e.match_available=0,e.ins_h=0),r}function lt(t,e,r,n,o,a){if(!t)return v;var s=1;if(e===_&&(e=6),n<0?(s=0,n=-n):n>15&&(s=2,n-=16),o<1||o>C||r!==A||n<8||n>15||e<0||e>9||a<0||a>E)return X(t,v);8===n&&(n=9);var u=new ft;return t.state=u,u.strm=t,u.wrap=s,u.gzhead=null,u.w_bits=n,u.w_size=1<<u.w_bits,u.w_mask=u.w_size-1,u.hash_bits=o+7,u.hash_size=1<<u.hash_bits,u.hash_mask=u.hash_size-1,u.hash_shift=~~((u.hash_bits+F-1)/F),u.window=new i.Buf8(2*u.w_size),u.head=new i.Buf16(u.hash_size),u.prev=new i.Buf16(u.w_size),u.lit_bufsize=1<<o+6,u.pending_buf_size=4*u.lit_bufsize,u.pending_buf=new i.Buf8(u.pending_buf_size),u.d_buf=1*u.lit_bufsize,u.l_buf=3*u.lit_bufsize,u.level=e,u.strategy=a,u.method=r,ht(t)}n=[new ut(0,0,0,0,function(t,e){var r=65535;for(r>t.pending_buf_size-5&&(r=t.pending_buf_size-5);;){if(t.lookahead<=1){if(ot(t),0===t.lookahead&&e===f)return G;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var n=t.block_start+r;if((0===t.strstart||t.strstart>=n)&&(t.lookahead=t.strstart-n,t.strstart=n,et(t,!1),0===t.strm.avail_out))return G;if(t.strstart-t.block_start>=t.w_size-P&&(et(t,!1),0===t.strm.avail_out))return G}return t.insert=0,e===l?(et(t,!0),0===t.strm.avail_out?Y:$):(t.strstart>t.block_start&&(et(t,!1),t.strm.avail_out),G)}),new ut(4,4,8,4,at),new ut(4,5,16,8,at),new ut(4,6,32,32,at),new ut(4,4,16,16,st),new ut(8,16,32,32,st),new ut(8,16,128,128,st),new ut(8,32,128,256,st),new ut(32,128,258,1024,st),new ut(32,258,258,4096,st)],e.deflateInit=function(t,e){return lt(t,e,A,T,R,S)},e.deflateInit2=lt,e.deflateReset=ht,e.deflateResetKeep=ct,e.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?v:(t.state.gzhead=e,p):v},e.deflate=function(t,e){var r,i,a,u;if(!t||!t.state||e>d||e<0)return t?X(t,v):v;if(i=t.state,!t.output||!t.input&&0!==t.avail_in||i.status===V&&e!==l)return X(t,0===t.avail_out?y:v);if(i.strm=t,r=i.last_flush,i.last_flush=e,i.status===z)if(2===i.wrap)t.adler=0,rt(i,31),rt(i,139),rt(i,8),i.gzhead?(rt(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),rt(i,255&i.gzhead.time),rt(i,i.gzhead.time>>8&255),rt(i,i.gzhead.time>>16&255),rt(i,i.gzhead.time>>24&255),rt(i,9===i.level?2:i.strategy>=w||i.level<2?4:0),rt(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(rt(i,255&i.gzhead.extra.length),rt(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(t.adler=s(t.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=j):(rt(i,0),rt(i,0),rt(i,0),rt(i,0),rt(i,0),rt(i,9===i.level?2:i.strategy>=w||i.level<2?4:0),rt(i,K),i.status=H);else{var m=A+(i.w_bits-8<<4)<<8;m|=(i.strategy>=w||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(m|=U),m+=31-m%31,i.status=H,nt(i,m),0!==i.strstart&&(nt(i,t.adler>>>16),nt(i,65535&t.adler)),t.adler=1}if(i.status===j)if(i.gzhead.extra){for(a=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>a&&(t.adler=s(t.adler,i.pending_buf,i.pending-a,a)),tt(t),a=i.pending,i.pending!==i.pending_buf_size));)rt(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>a&&(t.adler=s(t.adler,i.pending_buf,i.pending-a,a)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=D)}else i.status=D;if(i.status===D)if(i.gzhead.name){a=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>a&&(t.adler=s(t.adler,i.pending_buf,i.pending-a,a)),tt(t),a=i.pending,i.pending===i.pending_buf_size)){u=1;break}u=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,rt(i,u)}while(0!==u);i.gzhead.hcrc&&i.pending>a&&(t.adler=s(t.adler,i.pending_buf,i.pending-a,a)),0===u&&(i.gzindex=0,i.status=q)}else i.status=q;if(i.status===q)if(i.gzhead.comment){a=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>a&&(t.adler=s(t.adler,i.pending_buf,i.pending-a,a)),tt(t),a=i.pending,i.pending===i.pending_buf_size)){u=1;break}u=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,rt(i,u)}while(0!==u);i.gzhead.hcrc&&i.pending>a&&(t.adler=s(t.adler,i.pending_buf,i.pending-a,a)),0===u&&(i.status=Z)}else i.status=Z;if(i.status===Z&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&tt(t),i.pending+2<=i.pending_buf_size&&(rt(i,255&t.adler),rt(i,t.adler>>8&255),t.adler=0,i.status=H)):i.status=H),0!==i.pending){if(tt(t),0===t.avail_out)return i.last_flush=-1,p}else if(0===t.avail_in&&Q(e)<=Q(r)&&e!==l)return X(t,y);if(i.status===V&&0!==t.avail_in)return X(t,y);if(0!==t.avail_in||0!==i.lookahead||e!==f&&i.status!==V){var _=i.strategy===w?function(t,e){for(var r;;){if(0===t.lookahead&&(ot(t),0===t.lookahead)){if(e===f)return G;break}if(t.match_length=0,r=o._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,r&&(et(t,!1),0===t.strm.avail_out))return G}return t.insert=0,e===l?(et(t,!0),0===t.strm.avail_out?Y:$):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?G:W}(i,e):i.strategy===x?function(t,e){for(var r,n,i,a,s=t.window;;){if(t.lookahead<=N){if(ot(t),t.lookahead<=N&&e===f)return G;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=F&&t.strstart>0&&(n=s[i=t.strstart-1])===s[++i]&&n===s[++i]&&n===s[++i]){a=t.strstart+N;do{}while(n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&n===s[++i]&&i<a);t.match_length=N-(a-i),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=F?(r=o._tr_tally(t,1,t.match_length-F),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(r=o._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),r&&(et(t,!1),0===t.strm.avail_out))return G}return t.insert=0,e===l?(et(t,!0),0===t.strm.avail_out?Y:$):t.last_lit&&(et(t,!1),0===t.strm.avail_out)?G:W}(i,e):n[i.level].func(i,e);if(_!==Y&&_!==$||(i.status=V),_===G||_===Y)return 0===t.avail_out&&(i.last_flush=-1),p;if(_===W&&(e===c?o._tr_align(i):e!==d&&(o._tr_stored_block(i,0,0,!1),e===h&&(J(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),tt(t),0===t.avail_out))return i.last_flush=-1,p}return e!==l?p:i.wrap<=0?g:(2===i.wrap?(rt(i,255&t.adler),rt(i,t.adler>>8&255),rt(i,t.adler>>16&255),rt(i,t.adler>>24&255),rt(i,255&t.total_in),rt(i,t.total_in>>8&255),rt(i,t.total_in>>16&255),rt(i,t.total_in>>24&255)):(nt(i,t.adler>>>16),nt(i,65535&t.adler)),tt(t),i.wrap>0&&(i.wrap=-i.wrap),0!==i.pending?p:g)},e.deflateEnd=function(t){var e;return t&&t.state?(e=t.state.status)!==z&&e!==j&&e!==D&&e!==q&&e!==Z&&e!==H&&e!==V?X(t,v):(t.state=null,e===H?X(t,m):p):v},e.deflateSetDictionary=function(t,e){var r,n,o,s,u,f,c,h,l=e.length;if(!t||!t.state)return v;if(2===(s=(r=t.state).wrap)||1===s&&r.status!==z||r.lookahead)return v;for(1===s&&(t.adler=a(t.adler,e,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(J(r.head),r.strstart=0,r.block_start=0,r.insert=0),h=new i.Buf8(r.w_size),i.arraySet(h,e,l-r.w_size,r.w_size,0),e=h,l=r.w_size),u=t.avail_in,f=t.next_in,c=t.input,t.avail_in=l,t.next_in=0,t.input=e,ot(r);r.lookahead>=F;){n=r.strstart,o=r.lookahead-(F-1);do{r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+F-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++}while(--o);r.strstart=n,r.lookahead=F-1,ot(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=F-1,r.match_available=0,t.next_in=f,t.input=c,t.avail_in=u,r.wrap=s,p},e.deflateInfo=\"pako deflate (from Nodeca project)\"},function(t,e,r){\"use strict\";var n=r(46),i=4,o=0,a=1,s=2;function u(t){for(var e=t.length;--e>=0;)t[e]=0}var f=0,c=1,h=2,l=29,d=256,p=d+1+l,g=30,v=19,m=2*p+1,y=15,_=16,b=7,w=256,x=16,E=17,S=18,k=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],A=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],C=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],T=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],R=new Array(2*(p+2));u(R);var I=new Array(2*g);u(I);var B=new Array(512);u(B);var L=new Array(256);u(L);var M=new Array(l);u(M);var O,F,N,P=new Array(g);function U(t,e,r,n,i){this.static_tree=t,this.extra_bits=e,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=t&&t.length}function z(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function j(t){return t<256?B[t]:B[256+(t>>>7)]}function D(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function q(t,e,r){t.bi_valid>_-r?(t.bi_buf|=e<<t.bi_valid&65535,D(t,t.bi_buf),t.bi_buf=e>>_-t.bi_valid,t.bi_valid+=r-_):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=r)}function Z(t,e,r){q(t,r[2*e],r[2*e+1])}function H(t,e){var r=0;do{r|=1&t,t>>>=1,r<<=1}while(--e>0);return r>>>1}function V(t,e,r){var n,i,o=new Array(y+1),a=0;for(n=1;n<=y;n++)o[n]=a=a+r[n-1]<<1;for(i=0;i<=e;i++){var s=t[2*i+1];0!==s&&(t[2*i]=H(o[s]++,s))}}function G(t){var e;for(e=0;e<p;e++)t.dyn_ltree[2*e]=0;for(e=0;e<g;e++)t.dyn_dtree[2*e]=0;for(e=0;e<v;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*w]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function W(t){t.bi_valid>8?D(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function Y(t,e,r,n){var i=2*e,o=2*r;return t[i]<t[o]||t[i]===t[o]&&n[e]<=n[r]}function $(t,e,r){for(var n=t.heap[r],i=r<<1;i<=t.heap_len&&(i<t.heap_len&&Y(e,t.heap[i+1],t.heap[i],t.depth)&&i++,!Y(e,n,t.heap[i],t.depth));)t.heap[r]=t.heap[i],r=i,i<<=1;t.heap[r]=n}function K(t,e,r){var n,i,o,a,s=0;if(0!==t.last_lit)do{n=t.pending_buf[t.d_buf+2*s]<<8|t.pending_buf[t.d_buf+2*s+1],i=t.pending_buf[t.l_buf+s],s++,0===n?Z(t,i,e):(Z(t,(o=L[i])+d+1,e),0!==(a=k[o])&&q(t,i-=M[o],a),Z(t,o=j(--n),r),0!==(a=A[o])&&q(t,n-=P[o],a))}while(s<t.last_lit);Z(t,w,e)}function X(t,e){var r,n,i,o=e.dyn_tree,a=e.stat_desc.static_tree,s=e.stat_desc.has_stree,u=e.stat_desc.elems,f=-1;for(t.heap_len=0,t.heap_max=m,r=0;r<u;r++)0!==o[2*r]?(t.heap[++t.heap_len]=f=r,t.depth[r]=0):o[2*r+1]=0;for(;t.heap_len<2;)o[2*(i=t.heap[++t.heap_len]=f<2?++f:0)]=1,t.depth[i]=0,t.opt_len--,s&&(t.static_len-=a[2*i+1]);for(e.max_code=f,r=t.heap_len>>1;r>=1;r--)$(t,o,r);i=u;do{r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],$(t,o,1),n=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=n,o[2*i]=o[2*r]+o[2*n],t.depth[i]=(t.depth[r]>=t.depth[n]?t.depth[r]:t.depth[n])+1,o[2*r+1]=o[2*n+1]=i,t.heap[1]=i++,$(t,o,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],function(t,e){var r,n,i,o,a,s,u=e.dyn_tree,f=e.max_code,c=e.stat_desc.static_tree,h=e.stat_desc.has_stree,l=e.stat_desc.extra_bits,d=e.stat_desc.extra_base,p=e.stat_desc.max_length,g=0;for(o=0;o<=y;o++)t.bl_count[o]=0;for(u[2*t.heap[t.heap_max]+1]=0,r=t.heap_max+1;r<m;r++)(o=u[2*u[2*(n=t.heap[r])+1]+1]+1)>p&&(o=p,g++),u[2*n+1]=o,n>f||(t.bl_count[o]++,a=0,n>=d&&(a=l[n-d]),s=u[2*n],t.opt_len+=s*(o+a),h&&(t.static_len+=s*(c[2*n+1]+a)));if(0!==g){do{for(o=p-1;0===t.bl_count[o];)o--;t.bl_count[o]--,t.bl_count[o+1]+=2,t.bl_count[p]--,g-=2}while(g>0);for(o=p;0!==o;o--)for(n=t.bl_count[o];0!==n;)(i=t.heap[--r])>f||(u[2*i+1]!==o&&(t.opt_len+=(o-u[2*i+1])*u[2*i],u[2*i+1]=o),n--)}}(t,e),V(o,f,t.bl_count)}function Q(t,e,r){var n,i,o=-1,a=e[1],s=0,u=7,f=4;for(0===a&&(u=138,f=3),e[2*(r+1)+1]=65535,n=0;n<=r;n++)i=a,a=e[2*(n+1)+1],++s<u&&i===a||(s<f?t.bl_tree[2*i]+=s:0!==i?(i!==o&&t.bl_tree[2*i]++,t.bl_tree[2*x]++):s<=10?t.bl_tree[2*E]++:t.bl_tree[2*S]++,s=0,o=i,0===a?(u=138,f=3):i===a?(u=6,f=3):(u=7,f=4))}function J(t,e,r){var n,i,o=-1,a=e[1],s=0,u=7,f=4;for(0===a&&(u=138,f=3),n=0;n<=r;n++)if(i=a,a=e[2*(n+1)+1],!(++s<u&&i===a)){if(s<f)do{Z(t,i,t.bl_tree)}while(0!=--s);else 0!==i?(i!==o&&(Z(t,i,t.bl_tree),s--),Z(t,x,t.bl_tree),q(t,s-3,2)):s<=10?(Z(t,E,t.bl_tree),q(t,s-3,3)):(Z(t,S,t.bl_tree),q(t,s-11,7));s=0,o=i,0===a?(u=138,f=3):i===a?(u=6,f=3):(u=7,f=4)}}u(P);var tt=!1;function et(t,e,r,i){q(t,(f<<1)+(i?1:0),3),function(t,e,r,i){W(t),i&&(D(t,r),D(t,~r)),n.arraySet(t.pending_buf,t.window,e,r,t.pending),t.pending+=r}(t,e,r,!0)}e._tr_init=function(t){tt||(function(){var t,e,r,n,i,o=new Array(y+1);for(r=0,n=0;n<l-1;n++)for(M[n]=r,t=0;t<1<<k[n];t++)L[r++]=n;for(L[r-1]=n,i=0,n=0;n<16;n++)for(P[n]=i,t=0;t<1<<A[n];t++)B[i++]=n;for(i>>=7;n<g;n++)for(P[n]=i<<7,t=0;t<1<<A[n]-7;t++)B[256+i++]=n;for(e=0;e<=y;e++)o[e]=0;for(t=0;t<=143;)R[2*t+1]=8,t++,o[8]++;for(;t<=255;)R[2*t+1]=9,t++,o[9]++;for(;t<=279;)R[2*t+1]=7,t++,o[7]++;for(;t<=287;)R[2*t+1]=8,t++,o[8]++;for(V(R,p+1,o),t=0;t<g;t++)I[2*t+1]=5,I[2*t]=H(t,5);O=new U(R,k,d+1,p,y),F=new U(I,A,0,g,y),N=new U(new Array(0),C,0,v,b)}(),tt=!0),t.l_desc=new z(t.dyn_ltree,O),t.d_desc=new z(t.dyn_dtree,F),t.bl_desc=new z(t.bl_tree,N),t.bi_buf=0,t.bi_valid=0,G(t)},e._tr_stored_block=et,e._tr_flush_block=function(t,e,r,n){var u,f,l=0;t.level>0?(t.strm.data_type===s&&(t.strm.data_type=function(t){var e,r=4093624447;for(e=0;e<=31;e++,r>>>=1)if(1&r&&0!==t.dyn_ltree[2*e])return o;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return a;for(e=32;e<d;e++)if(0!==t.dyn_ltree[2*e])return a;return o}(t)),X(t,t.l_desc),X(t,t.d_desc),l=function(t){var e;for(Q(t,t.dyn_ltree,t.l_desc.max_code),Q(t,t.dyn_dtree,t.d_desc.max_code),X(t,t.bl_desc),e=v-1;e>=3&&0===t.bl_tree[2*T[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),u=t.opt_len+3+7>>>3,(f=t.static_len+3+7>>>3)<=u&&(u=f)):u=f=r+5,r+4<=u&&-1!==e?et(t,e,r,n):t.strategy===i||f===u?(q(t,(c<<1)+(n?1:0),3),K(t,R,I)):(q(t,(h<<1)+(n?1:0),3),function(t,e,r,n){var i;for(q(t,e-257,5),q(t,r-1,5),q(t,n-4,4),i=0;i<n;i++)q(t,t.bl_tree[2*T[i]+1],3);J(t,t.dyn_ltree,e-1),J(t,t.dyn_dtree,r-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,l+1),K(t,t.dyn_ltree,t.dyn_dtree)),G(t),n&&W(t)},e._tr_tally=function(t,e,r){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&r,t.last_lit++,0===e?t.dyn_ltree[2*r]++:(t.matches++,e--,t.dyn_ltree[2*(L[r]+d+1)]++,t.dyn_dtree[2*j(e)]++),t.last_lit===t.lit_bufsize-1},e._tr_align=function(t){q(t,c<<1,3),Z(t,w,R),function(t){16===t.bi_valid?(D(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},function(t,e,r){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},function(t,e,r){\"use strict\";var n=r(46),i=r(96),o=r(97),a=r(159),s=r(160),u=0,f=1,c=2,h=4,l=5,d=6,p=0,g=1,v=2,m=-2,y=-3,_=-4,b=-5,w=8,x=1,E=2,S=3,k=4,A=5,C=6,T=7,R=8,I=9,B=10,L=11,M=12,O=13,F=14,N=15,P=16,U=17,z=18,j=19,D=20,q=21,Z=22,H=23,V=24,G=25,W=26,Y=27,$=28,K=29,X=30,Q=31,J=32,tt=852,et=592,rt=15;function nt(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function it(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new n.Buf16(320),this.work=new n.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function ot(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg=\"\",e.wrap&&(t.adler=1&e.wrap),e.mode=x,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new n.Buf32(tt),e.distcode=e.distdyn=new n.Buf32(et),e.sane=1,e.back=-1,p):m}function at(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,ot(t)):m}function st(t,e){var r,n;return t&&t.state?(n=t.state,e<0?(r=0,e=-e):(r=1+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?m:(null!==n.window&&n.wbits!==e&&(n.window=null),n.wrap=r,n.wbits=e,at(t))):m}function ut(t,e){var r,n;return t?(n=new it,t.state=n,n.window=null,(r=st(t,e))!==p&&(t.state=null),r):m}var ft,ct,ht=!0;function lt(t){if(ht){var e;for(ft=new n.Buf32(512),ct=new n.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(s(f,t.lens,0,288,ft,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;s(c,t.lens,0,32,ct,0,t.work,{bits:5}),ht=!1}t.lencode=ft,t.lenbits=9,t.distcode=ct,t.distbits=5}function dt(t,e,r,i){var o,a=t.state;return null===a.window&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new n.Buf8(a.wsize)),i>=a.wsize?(n.arraySet(a.window,e,r-a.wsize,a.wsize,0),a.wnext=0,a.whave=a.wsize):((o=a.wsize-a.wnext)>i&&(o=i),n.arraySet(a.window,e,r-i,o,a.wnext),(i-=o)?(n.arraySet(a.window,e,r-i,i,0),a.wnext=i,a.whave=a.wsize):(a.wnext+=o,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=o))),0}e.inflateReset=at,e.inflateReset2=st,e.inflateResetKeep=ot,e.inflateInit=function(t){return ut(t,rt)},e.inflateInit2=ut,e.inflate=function(t,e){var r,tt,et,rt,it,ot,at,st,ut,ft,ct,ht,pt,gt,vt,mt,yt,_t,bt,wt,xt,Et,St,kt,At=0,Ct=new n.Buf8(4),Tt=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return m;(r=t.state).mode===M&&(r.mode=O),it=t.next_out,et=t.output,at=t.avail_out,rt=t.next_in,tt=t.input,ot=t.avail_in,st=r.hold,ut=r.bits,ft=ot,ct=at,Et=p;t:for(;;)switch(r.mode){case x:if(0===r.wrap){r.mode=O;break}for(;ut<16;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if(2&r.wrap&&35615===st){r.check=0,Ct[0]=255&st,Ct[1]=st>>>8&255,r.check=o(r.check,Ct,2,0),st=0,ut=0,r.mode=E;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&st)<<8)+(st>>8))%31){t.msg=\"incorrect header check\",r.mode=X;break}if((15&st)!==w){t.msg=\"unknown compression method\",r.mode=X;break}if(ut-=4,xt=8+(15&(st>>>=4)),0===r.wbits)r.wbits=xt;else if(xt>r.wbits){t.msg=\"invalid window size\",r.mode=X;break}r.dmax=1<<xt,t.adler=r.check=1,r.mode=512&st?B:M,st=0,ut=0;break;case E:for(;ut<16;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if(r.flags=st,(255&r.flags)!==w){t.msg=\"unknown compression method\",r.mode=X;break}if(57344&r.flags){t.msg=\"unknown header flags set\",r.mode=X;break}r.head&&(r.head.text=st>>8&1),512&r.flags&&(Ct[0]=255&st,Ct[1]=st>>>8&255,r.check=o(r.check,Ct,2,0)),st=0,ut=0,r.mode=S;case S:for(;ut<32;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}r.head&&(r.head.time=st),512&r.flags&&(Ct[0]=255&st,Ct[1]=st>>>8&255,Ct[2]=st>>>16&255,Ct[3]=st>>>24&255,r.check=o(r.check,Ct,4,0)),st=0,ut=0,r.mode=k;case k:for(;ut<16;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}r.head&&(r.head.xflags=255&st,r.head.os=st>>8),512&r.flags&&(Ct[0]=255&st,Ct[1]=st>>>8&255,r.check=o(r.check,Ct,2,0)),st=0,ut=0,r.mode=A;case A:if(1024&r.flags){for(;ut<16;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}r.length=st,r.head&&(r.head.extra_len=st),512&r.flags&&(Ct[0]=255&st,Ct[1]=st>>>8&255,r.check=o(r.check,Ct,2,0)),st=0,ut=0}else r.head&&(r.head.extra=null);r.mode=C;case C:if(1024&r.flags&&((ht=r.length)>ot&&(ht=ot),ht&&(r.head&&(xt=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),n.arraySet(r.head.extra,tt,rt,ht,xt)),512&r.flags&&(r.check=o(r.check,tt,ht,rt)),ot-=ht,rt+=ht,r.length-=ht),r.length))break t;r.length=0,r.mode=T;case T:if(2048&r.flags){if(0===ot)break t;ht=0;do{xt=tt[rt+ht++],r.head&&xt&&r.length<65536&&(r.head.name+=String.fromCharCode(xt))}while(xt&&ht<ot);if(512&r.flags&&(r.check=o(r.check,tt,ht,rt)),ot-=ht,rt+=ht,xt)break t}else r.head&&(r.head.name=null);r.length=0,r.mode=R;case R:if(4096&r.flags){if(0===ot)break t;ht=0;do{xt=tt[rt+ht++],r.head&&xt&&r.length<65536&&(r.head.comment+=String.fromCharCode(xt))}while(xt&&ht<ot);if(512&r.flags&&(r.check=o(r.check,tt,ht,rt)),ot-=ht,rt+=ht,xt)break t}else r.head&&(r.head.comment=null);r.mode=I;case I:if(512&r.flags){for(;ut<16;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if(st!==(65535&r.check)){t.msg=\"header crc mismatch\",r.mode=X;break}st=0,ut=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),t.adler=r.check=0,r.mode=M;break;case B:for(;ut<32;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}t.adler=r.check=nt(st),st=0,ut=0,r.mode=L;case L:if(0===r.havedict)return t.next_out=it,t.avail_out=at,t.next_in=rt,t.avail_in=ot,r.hold=st,r.bits=ut,v;t.adler=r.check=1,r.mode=M;case M:if(e===l||e===d)break t;case O:if(r.last){st>>>=7&ut,ut-=7&ut,r.mode=Y;break}for(;ut<3;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}switch(r.last=1&st,ut-=1,3&(st>>>=1)){case 0:r.mode=F;break;case 1:if(lt(r),r.mode=D,e===d){st>>>=2,ut-=2;break t}break;case 2:r.mode=U;break;case 3:t.msg=\"invalid block type\",r.mode=X}st>>>=2,ut-=2;break;case F:for(st>>>=7&ut,ut-=7&ut;ut<32;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if((65535&st)!=(st>>>16^65535)){t.msg=\"invalid stored block lengths\",r.mode=X;break}if(r.length=65535&st,st=0,ut=0,r.mode=N,e===d)break t;case N:r.mode=P;case P:if(ht=r.length){if(ht>ot&&(ht=ot),ht>at&&(ht=at),0===ht)break t;n.arraySet(et,tt,rt,ht,it),ot-=ht,rt+=ht,at-=ht,it+=ht,r.length-=ht;break}r.mode=M;break;case U:for(;ut<14;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if(r.nlen=257+(31&st),st>>>=5,ut-=5,r.ndist=1+(31&st),st>>>=5,ut-=5,r.ncode=4+(15&st),st>>>=4,ut-=4,r.nlen>286||r.ndist>30){t.msg=\"too many length or distance symbols\",r.mode=X;break}r.have=0,r.mode=z;case z:for(;r.have<r.ncode;){for(;ut<3;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}r.lens[Tt[r.have++]]=7&st,st>>>=3,ut-=3}for(;r.have<19;)r.lens[Tt[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,St={bits:r.lenbits},Et=s(u,r.lens,0,19,r.lencode,0,r.work,St),r.lenbits=St.bits,Et){t.msg=\"invalid code lengths set\",r.mode=X;break}r.have=0,r.mode=j;case j:for(;r.have<r.nlen+r.ndist;){for(;mt=(At=r.lencode[st&(1<<r.lenbits)-1])>>>16&255,yt=65535&At,!((vt=At>>>24)<=ut);){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if(yt<16)st>>>=vt,ut-=vt,r.lens[r.have++]=yt;else{if(16===yt){for(kt=vt+2;ut<kt;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if(st>>>=vt,ut-=vt,0===r.have){t.msg=\"invalid bit length repeat\",r.mode=X;break}xt=r.lens[r.have-1],ht=3+(3&st),st>>>=2,ut-=2}else if(17===yt){for(kt=vt+3;ut<kt;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}ut-=vt,xt=0,ht=3+(7&(st>>>=vt)),st>>>=3,ut-=3}else{for(kt=vt+7;ut<kt;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}ut-=vt,xt=0,ht=11+(127&(st>>>=vt)),st>>>=7,ut-=7}if(r.have+ht>r.nlen+r.ndist){t.msg=\"invalid bit length repeat\",r.mode=X;break}for(;ht--;)r.lens[r.have++]=xt}}if(r.mode===X)break;if(0===r.lens[256]){t.msg=\"invalid code -- missing end-of-block\",r.mode=X;break}if(r.lenbits=9,St={bits:r.lenbits},Et=s(f,r.lens,0,r.nlen,r.lencode,0,r.work,St),r.lenbits=St.bits,Et){t.msg=\"invalid literal/lengths set\",r.mode=X;break}if(r.distbits=6,r.distcode=r.distdyn,St={bits:r.distbits},Et=s(c,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,St),r.distbits=St.bits,Et){t.msg=\"invalid distances set\",r.mode=X;break}if(r.mode=D,e===d)break t;case D:r.mode=q;case q:if(ot>=6&&at>=258){t.next_out=it,t.avail_out=at,t.next_in=rt,t.avail_in=ot,r.hold=st,r.bits=ut,a(t,ct),it=t.next_out,et=t.output,at=t.avail_out,rt=t.next_in,tt=t.input,ot=t.avail_in,st=r.hold,ut=r.bits,r.mode===M&&(r.back=-1);break}for(r.back=0;mt=(At=r.lencode[st&(1<<r.lenbits)-1])>>>16&255,yt=65535&At,!((vt=At>>>24)<=ut);){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if(mt&&0==(240&mt)){for(_t=vt,bt=mt,wt=yt;mt=(At=r.lencode[wt+((st&(1<<_t+bt)-1)>>_t)])>>>16&255,yt=65535&At,!(_t+(vt=At>>>24)<=ut);){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}st>>>=_t,ut-=_t,r.back+=_t}if(st>>>=vt,ut-=vt,r.back+=vt,r.length=yt,0===mt){r.mode=W;break}if(32&mt){r.back=-1,r.mode=M;break}if(64&mt){t.msg=\"invalid literal/length code\",r.mode=X;break}r.extra=15&mt,r.mode=Z;case Z:if(r.extra){for(kt=r.extra;ut<kt;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}r.length+=st&(1<<r.extra)-1,st>>>=r.extra,ut-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=H;case H:for(;mt=(At=r.distcode[st&(1<<r.distbits)-1])>>>16&255,yt=65535&At,!((vt=At>>>24)<=ut);){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if(0==(240&mt)){for(_t=vt,bt=mt,wt=yt;mt=(At=r.distcode[wt+((st&(1<<_t+bt)-1)>>_t)])>>>16&255,yt=65535&At,!(_t+(vt=At>>>24)<=ut);){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}st>>>=_t,ut-=_t,r.back+=_t}if(st>>>=vt,ut-=vt,r.back+=vt,64&mt){t.msg=\"invalid distance code\",r.mode=X;break}r.offset=yt,r.extra=15&mt,r.mode=V;case V:if(r.extra){for(kt=r.extra;ut<kt;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}r.offset+=st&(1<<r.extra)-1,st>>>=r.extra,ut-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){t.msg=\"invalid distance too far back\",r.mode=X;break}r.mode=G;case G:if(0===at)break t;if(ht=ct-at,r.offset>ht){if((ht=r.offset-ht)>r.whave&&r.sane){t.msg=\"invalid distance too far back\",r.mode=X;break}ht>r.wnext?(ht-=r.wnext,pt=r.wsize-ht):pt=r.wnext-ht,ht>r.length&&(ht=r.length),gt=r.window}else gt=et,pt=it-r.offset,ht=r.length;ht>at&&(ht=at),at-=ht,r.length-=ht;do{et[it++]=gt[pt++]}while(--ht);0===r.length&&(r.mode=q);break;case W:if(0===at)break t;et[it++]=r.length,at--,r.mode=q;break;case Y:if(r.wrap){for(;ut<32;){if(0===ot)break t;ot--,st|=tt[rt++]<<ut,ut+=8}if(ct-=at,t.total_out+=ct,r.total+=ct,ct&&(t.adler=r.check=r.flags?o(r.check,et,ct,it-ct):i(r.check,et,ct,it-ct)),ct=at,(r.flags?st:nt(st))!==r.check){t.msg=\"incorrect data check\",r.mode=X;break}st=0,ut=0}r.mode=$;case $:if(r.wrap&&r.flags){for(;ut<32;){if(0===ot)break t;ot--,st+=tt[rt++]<<ut,ut+=8}if(st!==(4294967295&r.total)){t.msg=\"incorrect length check\",r.mode=X;break}st=0,ut=0}r.mode=K;case K:Et=g;break t;case X:Et=y;break t;case Q:return _;case J:default:return m}return t.next_out=it,t.avail_out=at,t.next_in=rt,t.avail_in=ot,r.hold=st,r.bits=ut,(r.wsize||ct!==t.avail_out&&r.mode<X&&(r.mode<Y||e!==h))&&dt(t,t.output,t.next_out,ct-t.avail_out)?(r.mode=Q,_):(ft-=t.avail_in,ct-=t.avail_out,t.total_in+=ft,t.total_out+=ct,r.total+=ct,r.wrap&&ct&&(t.adler=r.check=r.flags?o(r.check,et,ct,t.next_out-ct):i(r.check,et,ct,t.next_out-ct)),t.data_type=r.bits+(r.last?64:0)+(r.mode===M?128:0)+(r.mode===D||r.mode===N?256:0),(0===ft&&0===ct||e===h)&&Et===p&&(Et=b),Et)},e.inflateEnd=function(t){if(!t||!t.state)return m;var e=t.state;return e.window&&(e.window=null),t.state=null,p},e.inflateGetHeader=function(t,e){var r;return t&&t.state?0==(2&(r=t.state).wrap)?m:(r.head=e,e.done=!1,p):m},e.inflateSetDictionary=function(t,e){var r,n=e.length;return t&&t.state?0!==(r=t.state).wrap&&r.mode!==L?m:r.mode===L&&i(1,e,n,0)!==r.check?y:dt(t,e,n,n)?(r.mode=Q,_):(r.havedict=1,p):m},e.inflateInfo=\"pako inflate (from Nodeca project)\"},function(t,e,r){\"use strict\";t.exports=function(t,e){var r,n,i,o,a,s,u,f,c,h,l,d,p,g,v,m,y,_,b,w,x,E,S,k,A;r=t.state,n=t.next_in,k=t.input,i=n+(t.avail_in-5),o=t.next_out,A=t.output,a=o-(e-t.avail_out),s=o+(t.avail_out-257),u=r.dmax,f=r.wsize,c=r.whave,h=r.wnext,l=r.window,d=r.hold,p=r.bits,g=r.lencode,v=r.distcode,m=(1<<r.lenbits)-1,y=(1<<r.distbits)-1;t:do{p<15&&(d+=k[n++]<<p,p+=8,d+=k[n++]<<p,p+=8),_=g[d&m];e:for(;;){if(d>>>=b=_>>>24,p-=b,0===(b=_>>>16&255))A[o++]=65535&_;else{if(!(16&b)){if(0==(64&b)){_=g[(65535&_)+(d&(1<<b)-1)];continue e}if(32&b){r.mode=12;break t}t.msg=\"invalid literal/length code\",r.mode=30;break t}w=65535&_,(b&=15)&&(p<b&&(d+=k[n++]<<p,p+=8),w+=d&(1<<b)-1,d>>>=b,p-=b),p<15&&(d+=k[n++]<<p,p+=8,d+=k[n++]<<p,p+=8),_=v[d&y];r:for(;;){if(d>>>=b=_>>>24,p-=b,!(16&(b=_>>>16&255))){if(0==(64&b)){_=v[(65535&_)+(d&(1<<b)-1)];continue r}t.msg=\"invalid distance code\",r.mode=30;break t}if(x=65535&_,p<(b&=15)&&(d+=k[n++]<<p,(p+=8)<b&&(d+=k[n++]<<p,p+=8)),(x+=d&(1<<b)-1)>u){t.msg=\"invalid distance too far back\",r.mode=30;break t}if(d>>>=b,p-=b,x>(b=o-a)){if((b=x-b)>c&&r.sane){t.msg=\"invalid distance too far back\",r.mode=30;break t}if(E=0,S=l,0===h){if(E+=f-b,b<w){w-=b;do{A[o++]=l[E++]}while(--b);E=o-x,S=A}}else if(h<b){if(E+=f+h-b,(b-=h)<w){w-=b;do{A[o++]=l[E++]}while(--b);if(E=0,h<w){w-=b=h;do{A[o++]=l[E++]}while(--b);E=o-x,S=A}}}else if(E+=h-b,b<w){w-=b;do{A[o++]=l[E++]}while(--b);E=o-x,S=A}for(;w>2;)A[o++]=S[E++],A[o++]=S[E++],A[o++]=S[E++],w-=3;w&&(A[o++]=S[E++],w>1&&(A[o++]=S[E++]))}else{E=o-x;do{A[o++]=A[E++],A[o++]=A[E++],A[o++]=A[E++],w-=3}while(w>2);w&&(A[o++]=A[E++],w>1&&(A[o++]=A[E++]))}break}}break}}while(n<i&&o<s);n-=w=p>>3,d&=(1<<(p-=w<<3))-1,t.next_in=n,t.next_out=o,t.avail_in=n<i?i-n+5:5-(n-i),t.avail_out=o<s?s-o+257:257-(o-s),r.hold=d,r.bits=p}},function(t,e,r){\"use strict\";var n=r(46),i=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],o=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],a=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],s=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(t,e,r,u,f,c,h,l){var d,p,g,v,m,y,_,b,w,x=l.bits,E=0,S=0,k=0,A=0,C=0,T=0,R=0,I=0,B=0,L=0,M=null,O=0,F=new n.Buf16(16),N=new n.Buf16(16),P=null,U=0;for(E=0;E<=15;E++)F[E]=0;for(S=0;S<u;S++)F[e[r+S]]++;for(C=x,A=15;A>=1&&0===F[A];A--);if(C>A&&(C=A),0===A)return f[c++]=20971520,f[c++]=20971520,l.bits=1,0;for(k=1;k<A&&0===F[k];k++);for(C<k&&(C=k),I=1,E=1;E<=15;E++)if(I<<=1,(I-=F[E])<0)return-1;if(I>0&&(0===t||1!==A))return-1;for(N[1]=0,E=1;E<15;E++)N[E+1]=N[E]+F[E];for(S=0;S<u;S++)0!==e[r+S]&&(h[N[e[r+S]]++]=S);if(0===t?(M=P=h,y=19):1===t?(M=i,O-=257,P=o,U-=257,y=256):(M=a,P=s,y=-1),L=0,S=0,E=k,m=c,T=C,R=0,g=-1,v=(B=1<<C)-1,1===t&&B>852||2===t&&B>592)return 1;for(;;){_=E-R,h[S]<y?(b=0,w=h[S]):h[S]>y?(b=P[U+h[S]],w=M[O+h[S]]):(b=96,w=0),d=1<<E-R,k=p=1<<T;do{f[m+(L>>R)+(p-=d)]=_<<24|b<<16|w|0}while(0!==p);for(d=1<<E-1;L&d;)d>>=1;if(0!==d?(L&=d-1,L+=d):L=0,S++,0==--F[E]){if(E===A)break;E=e[r+h[S]]}if(E>C&&(L&v)!==g){for(0===R&&(R=C),m+=k,I=1<<(T=E-R);T+R<A&&!((I-=F[T+R])<=0);)T++,I<<=1;if(B+=1<<T,1===t&&B>852||2===t&&B>592)return 1;f[g=L&v]=C<<24|T<<16|m-c|0}}return 0!==L&&(f[m+L]=E-R<<24|64<<16|0),l.bits=C,0}},function(t,e,r){\"use strict\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},function(t,e,r){var n=r(7).Buffer,i=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];function o(t){if(n.isBuffer(t))return t;var e=\"function\"==typeof n.alloc&&\"function\"==typeof n.from;if(\"number\"==typeof t)return e?n.alloc(t):new n(t);if(\"string\"==typeof t)return e?n.from(t):new n(t);throw new Error(\"input must be buffer, number, or string, received \"+typeof t)}function a(t,e){t=o(t),n.isBuffer(e)&&(e=e.readUInt32BE(0));for(var r=-1^~~e,a=0;a<t.length;a++)r=i[255&(r^t[a])]^r>>>8;return-1^r}function s(){return t=a.apply(null,arguments),(e=o(4)).writeInt32BE(t,0),e;var t,e}\"undefined\"!=typeof Int32Array&&(i=new Int32Array(i)),s.signed=function(){return a.apply(null,arguments)},s.unsigned=function(){return a.apply(null,arguments)>>>0},t.exports=s},function(t,e,r){r(164),t.exports=r(0).Object.getPrototypeOf},function(t,e,r){var n=r(34),i=r(80);r(99)(\"getPrototypeOf\",function(){return function(t){return i(n(t))}})},function(t,e,r){t.exports={default:r(166),__esModule:!0}},function(t,e,r){r(30),r(43),t.exports=r(65).f(\"iterator\")},function(t,e,r){t.exports={default:r(168),__esModule:!0}},function(t,e,r){r(169),r(73),r(174),r(175),t.exports=r(0).Symbol},function(t,e,r){\"use strict\";var n=r(5),i=r(20),o=r(14),a=r(4),s=r(76),u=r(170).KEY,f=r(19),c=r(57),h=r(42),l=r(41),d=r(6),p=r(65),g=r(66),v=r(171),m=r(172),y=r(8),_=r(13),b=r(21),w=r(53),x=r(32),E=r(54),S=r(173),k=r(102),A=r(10),C=r(28),T=k.f,R=A.f,I=S.f,B=n.Symbol,L=n.JSON,M=L&&L.stringify,O=d(\"_hidden\"),F=d(\"toPrimitive\"),N={}.propertyIsEnumerable,P=c(\"symbol-registry\"),U=c(\"symbols\"),z=c(\"op-symbols\"),j=Object.prototype,D=\"function\"==typeof B,q=n.QObject,Z=!q||!q.prototype||!q.prototype.findChild,H=o&&f(function(){return 7!=E(R({},\"a\",{get:function(){return R(this,\"a\",{value:7}).a}})).a})?function(t,e,r){var n=T(j,e);n&&delete j[e],R(t,e,r),n&&t!==j&&R(j,e,n)}:R,V=function(t){var e=U[t]=E(B.prototype);return e._k=t,e},G=D&&\"symbol\"==typeof B.iterator?function(t){return\"symbol\"==typeof t}:function(t){return t instanceof B},W=function(t,e,r){return t===j&&W(z,e,r),y(t),e=w(e,!0),y(r),i(U,e)?(r.enumerable?(i(t,O)&&t[O][e]&&(t[O][e]=!1),r=E(r,{enumerable:x(0,!1)})):(i(t,O)||R(t,O,x(1,{})),t[O][e]=!0),H(t,e,r)):R(t,e,r)},Y=function(t,e){y(t);for(var r,n=v(e=b(e)),i=0,o=n.length;o>i;)W(t,r=n[i++],e[r]);return t},$=function(t){var e=N.call(this,t=w(t,!0));return!(this===j&&i(U,t)&&!i(z,t))&&(!(e||!i(this,t)||!i(U,t)||i(this,O)&&this[O][t])||e)},K=function(t,e){if(t=b(t),e=w(e,!0),t!==j||!i(U,e)||i(z,e)){var r=T(t,e);return!r||!i(U,e)||i(t,O)&&t[O][e]||(r.enumerable=!0),r}},X=function(t){for(var e,r=I(b(t)),n=[],o=0;r.length>o;)i(U,e=r[o++])||e==O||e==u||n.push(e);return n},Q=function(t){for(var e,r=t===j,n=I(r?z:b(t)),o=[],a=0;n.length>a;)!i(U,e=n[a++])||r&&!i(j,e)||o.push(U[e]);return o};D||(s((B=function(){if(this instanceof B)throw TypeError(\"Symbol is not a constructor!\");var t=l(arguments.length>0?arguments[0]:void 0),e=function(r){this===j&&e.call(z,r),i(this,O)&&i(this[O],t)&&(this[O][t]=!1),H(this,t,x(1,r))};return o&&Z&&H(j,t,{configurable:!0,set:e}),V(t)}).prototype,\"toString\",function(){return this._k}),k.f=K,A.f=W,r(101).f=S.f=X,r(36).f=$,r(67).f=Q,o&&!r(31)&&s(j,\"propertyIsEnumerable\",$,!0),p.f=function(t){return V(d(t))}),a(a.G+a.W+a.F*!D,{Symbol:B});for(var J=\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),tt=0;J.length>tt;)d(J[tt++]);for(var et=C(d.store),rt=0;et.length>rt;)g(et[rt++]);a(a.S+a.F*!D,\"Symbol\",{for:function(t){return i(P,t+=\"\")?P[t]:P[t]=B(t)},keyFor:function(t){if(!G(t))throw TypeError(t+\" is not a symbol!\");for(var e in P)if(P[e]===t)return e},useSetter:function(){Z=!0},useSimple:function(){Z=!1}}),a(a.S+a.F*!D,\"Object\",{create:function(t,e){return void 0===e?E(t):Y(E(t),e)},defineProperty:W,defineProperties:Y,getOwnPropertyDescriptor:K,getOwnPropertyNames:X,getOwnPropertySymbols:Q}),L&&a(a.S+a.F*(!D||f(function(){var t=B();return\"[null]\"!=M([t])||\"{}\"!=M({a:t})||\"{}\"!=M(Object(t))})),\"JSON\",{stringify:function(t){for(var e,r,n=[t],i=1;arguments.length>i;)n.push(arguments[i++]);if(r=e=n[1],(_(e)||void 0!==t)&&!G(t))return m(e)||(e=function(t,e){if(\"function\"==typeof r&&(e=r.call(this,t,e)),!G(e))return e}),n[1]=e,M.apply(L,n)}}),B.prototype[F]||r(18)(B.prototype,F,B.prototype.valueOf),h(B,\"Symbol\"),h(Math,\"Math\",!0),h(n.JSON,\"JSON\",!0)},function(t,e,r){var n=r(41)(\"meta\"),i=r(13),o=r(20),a=r(10).f,s=0,u=Object.isExtensible||function(){return!0},f=!r(19)(function(){return u(Object.preventExtensions({}))}),c=function(t){a(t,n,{value:{i:\"O\"+ ++s,w:{}}})},h=t.exports={KEY:n,NEED:!1,fastKey:function(t,e){if(!i(t))return\"symbol\"==typeof t?t:(\"string\"==typeof t?\"S\":\"P\")+t;if(!o(t,n)){if(!u(t))return\"F\";if(!e)return\"E\";c(t)}return t[n].i},getWeak:function(t,e){if(!o(t,n)){if(!u(t))return!0;if(!e)return!1;c(t)}return t[n].w},onFreeze:function(t){return f&&h.NEED&&u(t)&&!o(t,n)&&c(t),t}}},function(t,e,r){var n=r(28),i=r(67),o=r(36);t.exports=function(t){var e=n(t),r=i.f;if(r)for(var a,s=r(t),u=o.f,f=0;s.length>f;)u.call(t,a=s[f++])&&e.push(a);return e}},function(t,e,r){var n=r(33);t.exports=Array.isArray||function(t){return\"Array\"==n(t)}},function(t,e,r){var n=r(21),i=r(101).f,o={}.toString,a=\"object\"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return a&&\"[object Window]\"==o.call(t)?function(t){try{return i(t)}catch(t){return a.slice()}}(t):i(n(t))}},function(t,e,r){r(66)(\"asyncIterator\")},function(t,e,r){r(66)(\"observable\")},function(t,e,r){t.exports={default:r(177),__esModule:!0}},function(t,e,r){r(178),t.exports=r(0).Object.setPrototypeOf},function(t,e,r){var n=r(4);n(n.S,\"Object\",{setPrototypeOf:r(179).set})},function(t,e,r){var n=r(13),i=r(8),o=function(t,e){if(i(t),!n(e)&&null!==e)throw TypeError(e+\": can't set as prototype!\")};t.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(t,e,n){try{(n=r(26)(Function.call,r(102).f(Object.prototype,\"__proto__\").set,2))(t,[]),e=!(t instanceof Array)}catch(t){e=!0}return function(t,r){return o(t,r),e?t.__proto__=r:n(t,r),t}}({},!1):void 0),check:o}},function(t,e,r){t.exports={default:r(181),__esModule:!0}},function(t,e,r){r(182);var n=r(0).Object;t.exports=function(t,e){return n.create(t,e)}},function(t,e,r){var n=r(4);n(n.S,\"Object\",{create:r(54)})},function(t,e,r){\"use strict\";(function(e){var n=o(r(1)),i=o(r(3));function o(t){return t&&t.__esModule?t:{default:t}}var a=r(2).CramMalformedError,s=r(47),u=r(184),f=r(185),c=r(186),h=4;var l=function(){function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,n.default)(this,t),this._buffer=e,this._position=r,this.length=e.length}return(0,i.default)(t,[{key:\"get\",value:function(){var t=this._buffer[this._position];return this._position+=1,t}},{key:\"getByte\",value:function(){return this.get()}},{key:\"getByteAt\",value:function(t){return this._buffer[t]}},{key:\"position\",value:function(){return this._position}},{key:\"put\",value:function(t){return this._buffer[this._position]=t,this._position+=1,t}},{key:\"putAt\",value:function(t,e){return this._buffer[t]=e,e}},{key:\"setPosition\",value:function(t){return this._position=t,t}},{key:\"getInt\",value:function(){var t=this._buffer.readInt32LE(this._position);return this._position+=4,t}},{key:\"remaining\",value:function(){return this._buffer.length-this._position}}]),t}();t.exports={uncompress:function(t,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(0===t.length)return r.fill(0),r;var i=new l(t,n),o=i.get();if(0!==o&&1!==o)throw new a(\"Invalid rANS order \"+o);if(i.getInt()!==i.remaining()-h)throw new a(\"Incorrect input length.\");var d=i.getInt(),p=new l(r||e.allocUnsafe(d));if(p.length<d)throw new a(\"Output buffer too small to fit \"+d+\" bytes.\");switch(o){case 0:return function(t,e){for(var r=new s.AriDecoder,n=new Array(256),i=0;i<n.length;i+=1)n[i]=new s.Symbol;return u.readStatsO0(t,r,n),f.uncompress(t,r,n,e),e}(i,p);case 1:return function(t,e){for(var r=new Array(256),n=0;n<r.length;n+=1)r[n]=new s.AriDecoder;for(var i=new Array(256),o=0;o<i.length;o+=1){i[o]=new Array(256);for(var a=0;a<i[o].length;a+=1)i[o][a]=new s.Symbol}return u.readStatsO1(t,r,i),c.uncompress(t,e,r,i),e}(i,p);default:throw new a(\"Invalid rANS order: \"+o)}}}}).call(this,r(7).Buffer)},function(t,e,r){\"use strict\";var n=r(2).CramMalformedError,i=r(48),o=r(47);function a(t){if(!t)throw new n(\"assertion failed\")}t.exports={readStatsO0:function(t,e,r){var n=0,s=0,u=255&t.get();do{null==e.fc[u]&&(e.fc[u]=new o.FC),e.fc[u].F=255&t.get(),e.fc[u].F>=128&&(e.fc[u].F&=-129,e.fc[u].F=(127&e.fc[u].F)<<8|255&t.get()),e.fc[u].C=s,o.symbolInit(r[u],e.fc[u].C,e.fc[u].F),e.R||(e.R=new Array(i.TOTFREQ)),e.R.fill(u,s,s+e.fc[u].F),s+=e.fc[u].F,0===n&&u+1===(255&t.getByteAt(t.position()))?(u=255&t.get(),n=255&t.get()):0!==n?(n-=1,u+=1):u=255&t.get()}while(0!==u);a(s<i.TOTFREQ)},readStatsO1:function(t,e,r){var n=0,s=255&t.get();do{var u=0,f=0,c=255&t.get();null==e[s]&&(e[s]=new o.AriDecoder);do{null==e[s].fc[c]&&(e[s].fc[c]=new o.FC),e[s].fc[c].F=255&t.get(),e[s].fc[c].F>=128&&(e[s].fc[c].F&=-129,e[s].fc[c].F=(127&e[s].fc[c].F)<<8|255&t.get()),e[s].fc[c].C=f,0===e[s].fc[c].F&&(e[s].fc[c].F=i.TOTFREQ),null==r[s][c]&&(r[s][c]=new o.RansDecSymbol),o.symbolInit(r[s][c],e[s].fc[c].C,e[s].fc[c].F),null==e[s].R&&(e[s].R=new Array(i.TOTFREQ)),e[s].R.fill(c,f,f+e[s].fc[c].F),a((f+=e[s].fc[c].F)<=i.TOTFREQ),0===u&&c+1===(255&t.getByteAt(t.position()))?(c=255&t.get(),u=255&t.get()):0!==u?(u-=1,c+=1):c=255&t.get()}while(0!==c);0===n&&s+1===(255&t.getByteAt(t.position()))?(s=255&t.get(),n=255&t.get()):0!==n?(n-=1,s+=1):s=255&t.get()}while(0!==s)}}},function(t,e,r){\"use strict\";var n=r(2).CramMalformedError,i=r(48),o=r(47);t.exports={uncompress:function(t,e,r,a){for(var s=t.getInt(),u=t.getInt(),f=t.getInt(),c=t.getInt(),h=a.remaining(),l=-4&h,d=0;d<l;d+=4){var p=e.R[o.get(s,i.TF_SHIFT)],g=e.R[o.get(u,i.TF_SHIFT)],v=e.R[o.get(f,i.TF_SHIFT)],m=e.R[o.get(c,i.TF_SHIFT)];a.putAt(d,p),a.putAt(d+1,g),a.putAt(d+2,v),a.putAt(d+3,m),s=o.advanceSymbolStep(s,r[255&p],i.TF_SHIFT),u=o.advanceSymbolStep(u,r[255&g],i.TF_SHIFT),f=o.advanceSymbolStep(f,r[255&v],i.TF_SHIFT),c=o.advanceSymbolStep(c,r[255&m],i.TF_SHIFT),s=o.renormalize(s,t),u=o.renormalize(u,t),f=o.renormalize(f,t),c=o.renormalize(c,t)}a.setPosition(l);var y=void 0;switch(3&h){case 0:break;case 1:y=e.R[o.get(s,i.TF_SHIFT)],o.advanceSymbol(s,t,r[255&y],i.TF_SHIFT),a.put(y);break;case 2:y=e.R[o.get(s,i.TF_SHIFT)],o.advanceSymbol(s,t,r[255&y],i.TF_SHIFT),a.put(y),y=e.R[o.get(u,i.TF_SHIFT)],o.advanceSymbol(u,t,r[255&y],i.TF_SHIFT),a.put(y);break;case 3:y=e.R[o.get(s,i.TF_SHIFT)],o.advanceSymbol(s,t,r[255&y],i.TF_SHIFT),a.put(y),y=e.R[o.get(u,i.TF_SHIFT)],o.advanceSymbol(u,t,r[255&y],i.TF_SHIFT),a.put(y),y=e.R[o.get(f,i.TF_SHIFT)],o.advanceSymbol(f,t,r[255&y],i.TF_SHIFT),a.put(y);break;default:throw new n(\"invalid output size encountered during rANS decoding\")}a.setPosition(0)}}},function(t,e,r){\"use strict\";var n=r(48),i=r(47);t.exports={uncompress:function(t,e,r,o){for(var a=e.remaining(),s=t.getInt(),u=t.getInt(),f=t.getInt(),c=t.getInt(),h=a>>2,l=0,d=h,p=2*h,g=3*h,v=0,m=0,y=0,_=0;l<h;l+=1,d+=1,p+=1,g+=1){var b=255&r[v].R[i.get(s,n.TF_SHIFT)],w=255&r[m].R[i.get(u,n.TF_SHIFT)],x=255&r[y].R[i.get(f,n.TF_SHIFT)],E=255&r[_].R[i.get(c,n.TF_SHIFT)];e.putAt(l,b),e.putAt(d,w),e.putAt(p,x),e.putAt(g,E),s=i.advanceSymbolStep(s,o[v][b],n.TF_SHIFT),u=i.advanceSymbolStep(u,o[m][w],n.TF_SHIFT),f=i.advanceSymbolStep(f,o[y][x],n.TF_SHIFT),c=i.advanceSymbolStep(c,o[_][E],n.TF_SHIFT),s=i.renormalize(s,t),u=i.renormalize(u,t),f=i.renormalize(f,t),c=i.renormalize(c,t),v=b,m=w,y=x,_=E}for(;g<a;g+=1){var S=255&r[_].R[i.get(c,n.TF_SHIFT)];e.putAt(g,S),c=i.advanceSymbol(c,t,o[_][S],n.TF_SHIFT),_=S}}}},function(t,e,r){\"use strict\";var n=o(r(68)),i=o(r(49));function o(t){return t&&t.__esModule?t:{default:t}}var a=r(193).Parser,s=(new a).itf8(),u={parser:(new a).string(\"magic\",{length:4}).uint8(\"majorVersion\").uint8(\"minorVersion\").string(\"fileId\",{length:20,stripNull:!0}),maxLength:26},f={parser:(new a).uint8(\"compressionMethod\",{formatter:function(t){var e=[\"raw\",\"gzip\",\"bzip2\",\"lzma\",\"rans\"][t];if(!e)throw new Error(\"compression method number \"+t+\" not implemented\");return e}}).uint8(\"contentType\",{formatter:function(t){var e=[\"FILE_HEADER\",\"COMPRESSION_HEADER\",\"MAPPED_SLICE_HEADER\",\"UNMAPPED_SLICE_HEADER\",\"EXTERNAL_DATA\",\"CORE_DATA\"][t];if(!e)throw new Error(\"invalid block content type id \"+t);return e}}).itf8(\"contentId\").itf8(\"compressedSize\").itf8(\"uncompressedSize\"),maxLength:17},c={parser:(new a).uint32(\"crc32\"),maxLength:4},h=(new a).itf8(\"size\").buffer(\"entries\",{length:\"size\",formatter:function(t){function e(e,r){for(var n=t.toString(\"utf8\",e,r),i=[],o=0;o<n.length;o+=3)i.push(n.substr(o,3));return i}var r,n=[],i=0;for(r=0;r<t.length;r+=1)t[r]||(n.push(e(i,r)),i=r+1);return r>i&&n.push(e(i,r)),n}}),l=(new a).uint8(null,{formatter:function(t){return!!t}}),d=(new a).itf8(\"mapSize\").itf8(\"mapCount\").array(\"entries\",{length:\"mapCount\",type:(new a).string(\"key\",{length:2,stripNull:!1}).choice(\"value\",{tag:\"key\",choices:{MI:l,UI:l,PI:l,RN:l,AP:l,RR:l,SM:(new a).array(null,{type:\"uint8\",length:5}),TD:(new a).nest(null,{type:h,formatter:function(t){return t.entries}})}})});function p(t){var e={};return t.entries.forEach(function(t){var r=t.key,n=t.value;e[r]&&console.warn(\"duplicate key \"+r+\" in map\"),e[r]=n}),e}var g={cramFileDefinition:u,cramBlockHeader:f,cramBlockCrc32:c},v={cramUnmappedSliceHeader:function(t){var e=0,r=(new a).itf8(\"numRecords\");e+=5,t>=3?(r=r.ltf8(\"recordCounter\"),e+=9):2===t&&(r=r.itf8(\"recordCounter\"),e+=5),r=r.itf8(\"numBlocks\").itf8(\"numContentIds\").array(\"contentIds\",{type:s,length:\"numContentIds\"}),e+=10,t>=2&&(r=r.array(\"md5\",{type:\"uint8\",length:16}),e+=16);return{parser:r,maxLength:function(t){return e+5*t}}},cramMappedSliceHeader:function(t){var e=(new a).itf8(\"refSeqId\").itf8(\"refSeqStart\").itf8(\"refSeqSpan\").itf8(\"numRecords\"),r=20;t>=3?(e=e.ltf8(\"recordCounter\"),r+=9):2===t&&(e=e.itf8(\"recordCounter\"),r+=5),e=e.itf8(\"numBlocks\").itf8(\"numContentIds\").array(\"contentIds\",{type:s,length:\"numContentIds\"}).itf8(\"refBaseBlockId\"),r+=15,t>=2&&(e=e.array(\"md5\",{type:\"uint8\",length:16}),r+=16);return{parser:e,maxLength:function(t){return r+5*t}}},cramEncoding:function(t){return{parser:(new a).namely(\"cramEncoding\").itf8(\"codecId\").itf8(\"parametersBytes\").choice(\"parameters\",{tag:\"codecId\",choices:{0:new a,1:(new a).itf8(\"blockContentId\"),2:(new a).itf8(\"offset\").itf8(\"M\"),3:a.start().itf8(\"numCodes\").array(\"symbols\",{length:\"numCodes\",type:s}).itf8(\"numLengths\").array(\"bitLengths\",{length:\"numLengths\",type:s}),4:a.start().nest(\"lengthsEncoding\",{type:\"cramEncoding\"}).nest(\"valuesEncoding\",{type:\"cramEncoding\"}),5:(new a).uint8(\"stopByte\")[t>1?\"itf8\":\"int\"](\"blockContentId\"),6:(new a).itf8(\"offset\").itf8(\"length\"),7:(new a).itf8(\"offset\").itf8(\"K\"),8:(new a).itf8(\"offset\").itf8(\"log2m\"),9:(new a).itf8(\"offset\")}})}},cramDataSeriesEncodingMap:function(t){return(new a).itf8(\"mapSize\").itf8(\"mapCount\").array(\"entries\",{length:\"mapCount\",type:(new a).string(\"key\",{length:2,stripNull:!1}).nest(\"value\",{type:this.cramEncoding(t).parser})})},cramTagEncodingMap:function(t){return(new a).itf8(\"mapSize\").itf8(\"mapCount\").array(\"entries\",{length:\"mapCount\",type:(new a).itf8(\"key\",{formatter:function(t){return String.fromCharCode(t>>16&255)+String.fromCharCode(t>>8&255)+String.fromCharCode(255&t)}}).nest(\"value\",{type:this.cramEncoding(t).parser})})},cramCompressionHeader:function(t){var e=new a;return{parser:e=e.nest(\"preservation\",{type:d,formatter:p}).nest(\"dataSeriesEncoding\",{type:this.cramDataSeriesEncodingMap(t),formatter:p}).nest(\"tagEncoding\",{type:this.cramTagEncodingMap(t),formatter:p})}},cramContainerHeader1:function(t){var e=(new a).int32(\"length\").itf8(\"refSeqId\").itf8(\"refSeqStart\").itf8(\"alignmentSpan\").itf8(\"numRecords\"),r=24;return t>=3?(e=e.ltf8(\"recordCounter\"),r+=9):2===t&&(e=e.itf8(\"recordCounter\"),r+=5),t>1&&(e=e.ltf8(\"numBases\"),r+=9),{parser:e=e.itf8(\"numBlocks\").itf8(\"numLandmarks\"),maxLength:r+=10}},cramContainerHeader2:function(t){var e=(new a).itf8(\"numLandmarks\").array(\"landmarks\",{type:(new a).itf8(),length:\"numLandmarks\"}),r=0;return t>=3&&(e=e.uint32(\"crc32\"),r=4),{parser:e,maxLength:function(t){return 5+5*t+r}}}};t.exports={cramFileDefinition:u,getSectionParsers:function(t){var e=(0,i.default)({},g);return(0,n.default)(v).forEach(function(r){e[r]=v[r](t)}),e}}},function(t,e,r){r(189),t.exports=r(0).Object.keys},function(t,e,r){var n=r(34),i=r(28);r(99)(\"keys\",function(){return function(t){return i(n(t))}})},function(t,e,r){r(191),t.exports=r(0).Object.assign},function(t,e,r){var n=r(4);n(n.S+n.F,\"Object\",{assign:r(192)})},function(t,e,r){\"use strict\";var n=r(28),i=r(67),o=r(36),a=r(34),s=r(78),u=Object.assign;t.exports=!u||r(19)(function(){var t={},e={},r=Symbol(),n=\"abcdefghijklmnopqrst\";return t[r]=7,n.split(\"\").forEach(function(t){e[t]=t}),7!=u({},t)[r]||Object.keys(u({},e)).join(\"\")!=n})?function(t,e){for(var r=a(t),u=arguments.length,f=1,c=i.f,h=o.f;u>f;)for(var l,d=s(arguments[f++]),p=c?n(d).concat(c(d)):n(d),g=p.length,v=0;g>v;)h.call(d,l=p[v++])&&(r[l]=d[l]);return r}:u},function(t,e,r){(function(t){var n=r(194),i=r(196).Context,o=r(103);\"undefined\"!=typeof window&&(window.Buffer=t);var a={UInt8:1,UInt16LE:2,UInt16BE:2,UInt32LE:4,UInt32BE:4,Int8:1,Int16LE:2,Int16BE:2,Int32LE:4,Int32BE:4,FloatLE:4,FloatBE:4,DoubleLE:8,DoubleBE:8},s={},u=[];!function(){var t;for(t=1;t<=32;t++)u.push(t)}();var f={};Object.keys(a).concat(Object.keys({String:null,Buffer:null,Array:null,Skip:null,Choice:null,Nest:null,Bit:null,Itf8:null,Ltf8:null})).forEach(function(t){f[t.toLowerCase()]=t});var c=function(){this.varName=\"\",this.type=\"\",this.options={},this.next=null,this.head=null,this.compiled=null,this.endian=\"le\",this.constructorFn=null,this.alias=null};c.start=function(){return new c},Object.keys(a).forEach(function(t){c.prototype[t.toLowerCase()]=function(e,r){return this.setNextParser(t.toLowerCase(),e,r)};var e=t.replace(/BE|LE/,\"\").toLowerCase();e in c.prototype||(c.prototype[e]=function(t,r){return this[e+this.endian](t,r)})}),u.forEach(function(t){c.prototype[\"bit\"+t.toString()]=function(e,r){return r||(r={}),r.length=t,this.setNextParser(\"bit\",e,r)}}),c.prototype.namely=function(t){return s[t]=this,this.alias=t,this},c.prototype.skip=function(t,e){if(e&&e.assert)throw new Error(\"assert option on skip is not allowed.\");return this.setNextParser(\"skip\",\"\",{length:t})},c.prototype.string=function(t,e){if(!e.zeroTerminated&&!e.length&&!e.greedy)throw new Error(\"Neither length, zeroTerminated, nor greedy is defined for string.\");if((e.zeroTerminated||e.length)&&e.greedy)throw new Error(\"greedy is mutually exclusive with length and zeroTerminated for string.\");if(e.stripNull&&!e.length&&!e.greedy)throw new Error(\"Length or greedy must be defined if stripNull is defined.\");return e.encoding=e.encoding||\"utf8\",this.setNextParser(\"string\",t,e)},c.prototype.buffer=function(t,e){if(!e.length&&!e.readUntil)throw new Error(\"Length nor readUntil is defined in buffer parser\");return this.setNextParser(\"buffer\",t,e)},c.prototype.array=function(t,e){if(!e.readUntil&&!e.length&&!e.lengthInBytes)throw new Error(\"Length option of array is not defined.\");if(!e.type)throw new Error(\"Type option of array is not defined.\");if(\"string\"==typeof e.type&&!s[e.type]&&Object.keys(a).indexOf(f[e.type])<0)throw new Error('Specified primitive type \"'+e.type+'\" is not supported.');return this.setNextParser(\"array\",t,e)},c.prototype.choice=function(t,e){if(1==arguments.length&&\"object\"==typeof t&&(e=t,t=null),!e.tag)throw new Error(\"Tag option of array is not defined.\");if(!e.choices)throw new Error(\"Choices option of array is not defined.\");return Object.keys(e.choices).forEach(function(r){if(!e.choices[r])throw new Error(\"Choice Case \"+r+\" of \"+t+\" is not valid.\");if(\"string\"==typeof e.choices[r]&&!s[e.choices[r]]&&Object.keys(a).indexOf(f[e.choices[r]])<0)throw new Error('Specified primitive type \"'+e.choices[r]+'\" is not supported.')},this),this.setNextParser(\"choice\",t,e)},c.prototype.nest=function(t,e){if(1==arguments.length&&\"object\"==typeof t&&(e=t,t=null),!e.type)throw new Error(\"Type option of nest is not defined.\");if(!(e.type instanceof c||s[e.type]))throw new Error(\"Type option of nest must be a Parser object.\");if(!(e.type instanceof c||t))throw new Error(\"options.type must be a object if variable name is omitted.\");return this.setNextParser(\"nest\",t,e)},c.prototype.endianess=function(t){switch(t.toLowerCase()){case\"little\":this.endian=\"le\";break;case\"big\":this.endian=\"be\";break;default:throw new Error(\"Invalid endianess: \"+t)}return this},c.prototype.create=function(t){if(!(t instanceof Function))throw new Error(\"Constructor must be a Function object.\");return this.constructorFn=t,this},c.prototype.getCode=function(){var t=new i;return t.pushCode(\"if (!Buffer.isBuffer(buffer)) {\"),t.generateError('\"argument buffer is not a Buffer object\"'),t.pushCode(\"}\"),this.alias?this.addAliasedCode(t):this.addRawCode(t),this.alias?t.pushCode(\"return {0}(0)\",\"___parser_\"+this.alias):t.pushCode(\"return { offset: offset, result: vars };\"),t.code},c.prototype.addRawCode=function(t){t.pushCode(\"var offset = 0;\"),this.constructorFn?t.pushCode(\"var vars = new constructorFn();\"):t.pushCode(\"var vars = {};\"),this.generate(t),this.resolveReferences(t),t.pushCode(\"return { offset: offset, result: vars };\")},c.prototype.addAliasedCode=function(t){return t.pushCode(\"function {0}(offset) {\",\"___parser_\"+this.alias),this.constructorFn?t.pushCode(\"var vars = new constructorFn();\"):t.pushCode(\"var vars = {};\"),this.generate(t),t.markResolved(this.alias),this.resolveReferences(t),t.pushCode(\"return { offset: offset, result: vars };\"),t.pushCode(\"}\"),t},c.prototype.resolveReferences=function(t){var e=t.getUnresolvedReferences();t.markRequested(e),e.forEach(function(e){s[e].addAliasedCode(t)})},c.prototype.compile=function(){var t=\"(function(buffer, constructorFn, Long) { \"+this.getCode()+\" })\";this.compiled=n.runInThisContext(t)},c.prototype.sizeOf=function(){var t=NaN;if(Object.keys(a).indexOf(this.type)>=0)t=a[this.type];else if(\"String\"===this.type&&\"number\"==typeof this.options.length)t=this.options.length;else if(\"Buffer\"===this.type&&\"number\"==typeof this.options.length)t=this.options.length;else if(\"Array\"===this.type&&\"number\"==typeof this.options.length){var e=NaN;\"string\"==typeof this.options.type?e=a[f[this.options.type]]:this.options.type instanceof c&&(e=this.options.type.sizeOf()),t=this.options.length*e}else\"Skip\"===this.type?t=this.options.length:\"Nest\"===this.type?t=this.options.type.sizeOf():this.type||(t=0);return this.next&&(t+=this.next.sizeOf()),t},c.prototype.parse=function(t){return this.compiled||this.compile(),this.compiled(t,this.constructorFn,o)},c.prototype.setNextParser=function(t,e,r){var n=new c;return n.type=f[t],n.varName=e,n.options=r||n.options,n.endian=this.endian,this.head?this.head.next=n:this.next=n,this.head=n,this},c.prototype.generate=function(t){this.type&&(this[\"generate\"+this.type](t),this.generateAssert(t));var e=t.generateVariable(this.varName);return this.options.formatter&&this.generateFormatter(t,e,this.options.formatter),this.generateNext(t)},c.prototype.generateAssert=function(t){if(this.options.assert){var e=t.generateVariable(this.varName);switch(typeof this.options.assert){case\"function\":t.pushCode(\"if (!({0}).call(vars, {1})) {\",this.options.assert,e);break;case\"number\":t.pushCode(\"if ({0} !== {1}) {\",this.options.assert,e);break;case\"string\":t.pushCode('if (\"{0}\" !== {1}) {',this.options.assert,e);break;default:throw new Error(\"Assert option supports only strings, numbers and assert functions.\")}t.generateError('\"Assert error: {0} is \" + {0}',e),t.pushCode(\"}\")}},c.prototype.generateNext=function(t){return this.next&&(t=this.next.generate(t)),t},Object.keys(a).forEach(function(t){c.prototype[\"generate\"+t]=function(e){e.pushCode(\"{0} = buffer.read{1}(offset);\",e.generateVariable(this.varName),t),e.pushCode(\"offset += {0};\",a[t])}}),c.prototype.generateBit=function(t){var e=JSON.parse(JSON.stringify(this));if(e.varName=t.generateVariable(e.varName),t.bitFields.push(e),!this.next||this.next&&[\"Bit\",\"Nest\"].indexOf(this.next.type)<0){var r=0;t.bitFields.forEach(function(t){r+=t.options.length});var n=t.generateTmpVariable();if(r<=8)t.pushCode(\"var {0} = buffer.readUInt8(offset);\",n),r=8;else if(r<=16)t.pushCode(\"var {0} = buffer.readUInt16BE(offset);\",n),r=16;else if(r<=24){var i=t.generateTmpVariable(),o=t.generateTmpVariable();t.pushCode(\"var {0} = buffer.readUInt16BE(offset);\",i),t.pushCode(\"var {0} = buffer.readUInt8(offset + 2);\",o),t.pushCode(\"var {2} = ({0} << 8) | {1};\",i,o,n),r=24}else{if(!(r<=32))throw new Error(\"Currently, bit field sequence longer than 4-bytes is not supported.\");t.pushCode(\"var {0} = buffer.readUInt32BE(offset);\",n),r=32}t.pushCode(\"offset += {0};\",r/8);var a=0,s=\"be\"===this.endian;t.bitFields.forEach(function(e){t.pushCode(\"{0} = {1} >> {2} & {3};\",e.varName,n,s?r-a-e.options.length:a,(1<<e.options.length)-1),a+=e.options.length}),t.bitFields=[]}},c.prototype.generateSkip=function(t){var e=t.generateOption(this.options.length);t.pushCode(\"offset += {0};\",e)},c.prototype.generateString=function(t){var e=t.generateVariable(this.varName),r=t.generateTmpVariable();this.options.length&&this.options.zeroTerminated?(t.pushCode(\"var {0} = offset;\",r),t.pushCode(\"while(buffer.readUInt8(offset++) !== 0 && offset - {0}  < {1});\",r,this.options.length),t.pushCode(\"{0} = buffer.toString('{1}', {2}, offset - {2} < {3} ? offset - 1 : offset);\",e,this.options.encoding,r,this.options.length)):this.options.length?(t.pushCode(\"{0} = buffer.toString('{1}', offset, offset + {2});\",e,this.options.encoding,t.generateOption(this.options.length)),t.pushCode(\"offset += {0};\",t.generateOption(this.options.length))):this.options.zeroTerminated?(t.pushCode(\"var {0} = offset;\",r),t.pushCode(\"while(buffer.readUInt8(offset++) !== 0);\"),t.pushCode(\"{0} = buffer.toString('{1}', {2}, offset - 1);\",e,this.options.encoding,r)):this.options.greedy&&(t.pushCode(\"var {0} = offset;\",r),t.pushCode(\"while(buffer.length > offset++);\"),t.pushCode(\"{0} = buffer.toString('{1}', {2}, offset);\",e,this.options.encoding,r)),this.options.stripNull&&t.pushCode(\"{0} = {0}.replace(/\\\\x00+$/g, '')\",e)},c.prototype.generateBuffer=function(t){\"eof\"===this.options.readUntil?t.pushCode(\"{0} = buffer.slice(offset);\",t.generateVariable(this.varName)):(t.pushCode(\"{0} = buffer.slice(offset, offset + {1});\",t.generateVariable(this.varName),t.generateOption(this.options.length)),t.pushCode(\"offset += {0};\",t.generateOption(this.options.length))),this.options.clone&&t.pushCode(\"{0} = Buffer.from({0});\",t.generateVariable(this.varName))},c.prototype.generateArray=function(t){var e=t.generateOption(this.options.length),r=t.generateOption(this.options.lengthInBytes),n=this.options.type,i=t.generateTmpVariable(),o=t.generateVariable(this.varName),u=t.generateTmpVariable(),h=this.options.key,l=\"string\"==typeof h;if(l?t.pushCode(\"{0} = {};\",o):t.pushCode(\"{0} = [];\",o),\"function\"==typeof this.options.readUntil?t.pushCode(\"do {\"):\"eof\"===this.options.readUntil?t.pushCode(\"for (var {0} = 0; offset < buffer.length; {0}++) {\",i):void 0!==r?t.pushCode(\"for (var {0} = offset; offset - {0} < {1}; ) {\",i,r):t.pushCode(\"for (var {0} = 0; {0} < {1}; {0}++) {\",i,e),\"string\"==typeof n)if(s[n]){var d=t.generateTmpVariable();t.pushCode(\"var {0} = {1}(offset);\",d,\"___parser_\"+n),t.pushCode(\"var {0} = {1}.result; offset = {1}.offset;\",u,d),n!==this.alias&&t.addReference(n)}else t.pushCode(\"var {0} = buffer.read{1}(offset);\",u,f[n]),t.pushCode(\"offset += {0};\",a[f[n]]);else n instanceof c&&(t.pushCode(\"var {0} = {};\",u),t.pushScope(u),n.generate(t),t.popScope());l?t.pushCode(\"{0}[{2}.{1}] = {2};\",o,h,u):t.pushCode(\"{0}.push({1});\",o,u),t.pushCode(\"}\"),\"function\"==typeof this.options.readUntil&&t.pushCode(\" while (!({0}).call(this, {1}, buffer.slice(offset)));\",this.options.readUntil,u)},c.prototype.generateChoiceCase=function(t,e,r){if(\"string\"==typeof r)if(s[r]){var n=t.generateTmpVariable();t.pushCode(\"var {0} = {1}(offset);\",n,\"___parser_\"+r),t.pushCode(\"{0} = {1}.result; offset = {1}.offset;\",t.generateVariable(this.varName),n),r!==this.alias&&t.addReference(r)}else t.pushCode(\"{0} = buffer.read{1}(offset);\",t.generateVariable(this.varName),f[r]),t.pushCode(\"offset += {0};\",a[f[r]]);else r instanceof c&&(t.pushPath(e),r.generate(t),t.popPath(e))},c.prototype.generateChoice=function(t){var e=t.generateOption(this.options.tag);this.varName&&t.pushCode(\"{0} = {};\",t.generateVariable(this.varName)),t.pushCode(\"switch({0}) {\",e),Object.keys(this.options.choices).forEach(function(e){var r=this.options.choices[e];isNaN(parseInt(e,10))?t.pushCode(\"case '{0}':\",e):t.pushCode(\"case {0}:\",e),this.generateChoiceCase(t,this.varName,r),t.pushCode(\"break;\")},this),t.pushCode(\"default:\"),this.options.defaultChoice?this.generateChoiceCase(t,this.varName,this.options.defaultChoice):t.generateError('\"Met undefined tag value \" + {0} + \" at choice\"',e),t.pushCode(\"}\")},c.prototype.generateNest=function(t){var e=t.generateVariable(this.varName);if(this.options.type instanceof c)this.varName&&t.pushCode(\"{0} = {};\",e),t.pushPath(this.varName),this.options.type.generate(t),t.popPath(this.varName);else if(s[this.options.type]){var r=t.generateTmpVariable();t.pushCode(\"var {0} = {1}(offset);\",r,\"___parser_\"+this.options.type),t.pushCode(\"{0} = {1}.result; offset = {1}.offset;\",e,r),this.options.type!==this.alias&&t.addReference(this.options.type)}},c.prototype.generateFormatter=function(t,e,r){\"function\"==typeof r&&t.pushCode(\"{0} = ({1}).call(this, {0});\",e,r)},c.prototype.isInteger=function(){return!!this.type.match(/U?Int[8|16|32][BE|LE]?|Bit\\d+/)},c.prototype.itf8=function(t,e){return this.setNextParser(\"itf8\",t,e)},c.prototype.generateItf8=function(t){const e=t.generateVariable(this.varName),r=t.generateTmpVariable();t.pushCode(`\\n    var ${r} = buffer[offset];\\n    if (${r} < 0x80) {\\n      ${e} = ${r};\\n      offset += 1;\\n    } else if (${r} < 0xc0) {\\n      ${e} = ((${r}<<8) | buffer[offset+1]) & 0x3fff;\\n      offset += 2;\\n    } else if (${r} < 0xe0) {\\n      ${e} = ((${r}<<16) | (buffer[offset+1]<< 8) |  buffer[offset+2]) & 0x1fffff;\\n      offset += 3;\\n    } else if (${r} < 0xf0) {\\n      ${e} = ((${r}<<24) | (buffer[offset+1]<<16) | (buffer[offset+2]<<8) | buffer[offset+3]) & 0x0fffffff;\\n      offset += 4\\n    } else {\\n      ${e} = ((${r} & 0x0f)<<28) | (buffer[offset+1]<<20) | (buffer[offset+2]<<12) | (buffer[offset+3]<<4) | (buffer[offset+4] & 0x0f);\\n      // x=((0xff & 0x0f)<<28) | (0xff<<20) | (0xff<<12) | (0xff<<4) | (0x0f & 0x0f);\\n      // TODO *val_p = uv < 0x80000000UL ? uv : -((int32_t) (0xffffffffUL - uv)) - 1;\\n      offset += 5\\n    }\\n  `)},c.prototype.ltf8=function(t,e){return this.setNextParser(\"ltf8\",t,e)},c.prototype.generateLtf8=function(t){const e=t.generateVariable(this.varName),r=t.generateTmpVariable();t.pushCode(`\\n  var ${r} = buffer[offset];\\n  if (${r} < 0x80) {\\n    ${e} = ${r};\\n    offset += 1;\\n  } else if (${r} < 0xc0) {\\n    ${e} = ((buffer[offset]<<8) | buffer[offset+1]) & 0x3fff;\\n    offset += 2;\\n  } else if (${r} < 0xe0) {\\n    ${e} = ((buffer[offset]<<16) | (buffer[offset+1]<<8) | buffer[offset+2]) & 0x1fffff;\\n    ${e} = (((${r} & 63) << 16) | buffer.readUInt16LE(offset + 1));\\n    offset += 3;\\n  } else if (${r} < 0xf0) {\\n    ${e} = ((buffer[offset]<<24) | (buffer[offset+1]<<16) | (buffer[offset+2]<<8) | buffer[offset+3]) & 0x0fffffff;\\n    offset += 4;\\n  } else if (${r} < 0xf8) {\\n    ${e} = (((buffer[offset] & 15) * Math.pow(2,32))) +\\n      (buffer[offset+1]<<24) | (buffer[offset+2]<<16 | buffer[offset+3]<<8 | buffer[offset+4])\\n    // TODO *val_p = uv < 0x80000000UL ? uv : -((int32_t) (0xffffffffUL - uv)) - 1;\\n    offset += 5;\\n  } else if (${r} < 0xfc) {\\n    ${e} = ((((buffer[offset] & 7) << 8) | buffer[offset+1] )) * Math.pow(2,32) +\\n      (buffer[offset+2]<<24) | (buffer[offset+3]<<16 | buffer[offset+4]<<8 | buffer[offset+5])\\n    offset += 6;\\n  } else if (${r} < 0xfe) {\\n    ${e} = ((((buffer[offset] & 3) << 16) | buffer[offset+1]<<8 | buffer[offset+2])) * Math.pow(2,32) +\\n      (buffer[offset+3]<<24) | (buffer[offset+4]<<16 | buffer[offset+5]<<8 | buffer[offset+6])\\n    offset += 7;\\n  } else if (${r} < 0xff) {\\n    ${e} = Long.fromBytesBE(buffer.slice(offset+1,offset+8));\\n    if (${e}.greaterThan(Number.MAX_SAFE_INTEGER) || ${e}.lessThan(Number.MIN_SAFE_INTEGER))\\n      throw new Error('integer overflow')\\n    ${e} = ${e}.toNumber()\\n    offset += 8;\\n  } else {\\n    ${e} = Long.fromBytesBE(buffer.slice(offset+1,offset+9));\\n    if (${e}.greaterThan(Number.MAX_SAFE_INTEGER) || ${e}.lessThan(Number.MIN_SAFE_INTEGER))\\n      throw new Error('integer overflow')\\n    ${e} = ${e}.toNumber()\\n    offset += 9;\\n  }\\n  `)},e.Parser=c}).call(this,r(7).Buffer)},function(module,exports,__webpack_require__){var indexOf=__webpack_require__(195),Object_keys=function(t){if(Object.keys)return Object.keys(t);var e=[];for(var r in t)e.push(r);return e},forEach=function(t,e){if(t.forEach)return t.forEach(e);for(var r=0;r<t.length;r++)e(t[r],r,t)},defineProp=function(){try{return Object.defineProperty({},\"_\",{}),function(t,e,r){Object.defineProperty(t,e,{writable:!0,enumerable:!1,configurable:!0,value:r})}}catch(t){return function(t,e,r){t[e]=r}}}(),globals=[\"Array\",\"Boolean\",\"Date\",\"Error\",\"EvalError\",\"Function\",\"Infinity\",\"JSON\",\"Math\",\"NaN\",\"Number\",\"Object\",\"RangeError\",\"ReferenceError\",\"RegExp\",\"String\",\"SyntaxError\",\"TypeError\",\"URIError\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",\"escape\",\"eval\",\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"undefined\",\"unescape\"];function Context(){}Context.prototype={};var Script=exports.Script=function(t){if(!(this instanceof Script))return new Script(t);this.code=t};Script.prototype.runInContext=function(t){if(!(t instanceof Context))throw new TypeError(\"needs a 'context' argument.\");var e=document.createElement(\"iframe\");e.style||(e.style={}),e.style.display=\"none\",document.body.appendChild(e);var r=e.contentWindow,n=r.eval,i=r.execScript;!n&&i&&(i.call(r,\"null\"),n=r.eval),forEach(Object_keys(t),function(e){r[e]=t[e]}),forEach(globals,function(e){t[e]&&(r[e]=t[e])});var o=Object_keys(r),a=n.call(r,this.code);return forEach(Object_keys(r),function(e){(e in t||-1===indexOf(o,e))&&(t[e]=r[e])}),forEach(globals,function(e){e in t||defineProp(t,e,r[e])}),document.body.removeChild(e),a},Script.prototype.runInThisContext=function(){return eval(this.code)},Script.prototype.runInNewContext=function(t){var e=Script.createContext(t),r=this.runInContext(e);return forEach(Object_keys(e),function(r){t[r]=e[r]}),r},forEach(Object_keys(Script.prototype),function(t){exports[t]=Script[t]=function(e){var r=Script(e);return r[t].apply(r,[].slice.call(arguments,1))}}),exports.createScript=function(t){return exports.Script(t)},exports.createContext=Script.createContext=function(t){var e=new Context;return\"object\"==typeof t&&forEach(Object_keys(t),function(r){e[r]=t[r]}),e}},function(t,e){var r=[].indexOf;t.exports=function(t,e){if(r)return t.indexOf(e);for(var n=0;n<t.length;++n)if(t[n]===e)return n;return-1}},function(t,e){var r=function(){this.code=\"\",this.scopes=[[\"vars\"]],this.isAsync=!1,this.bitFields=[],this.tmpVariableCount=0,this.references={}};r.prototype.generateVariable=function(t){var e=[];for(Array.prototype.push.apply(e,this.scopes[this.scopes.length-1]);/^\\$parent\\./.test(t);)e.pop(),t=t.replace(/^\\$parent\\./,\"\");return t&&e.push(t),e.join(\".\")},r.prototype.generateOption=function(t){switch(typeof t){case\"number\":return t.toString();case\"string\":return this.generateVariable(t);case\"function\":return\"(\"+t+\").call(\"+this.generateVariable()+\", vars)\"}},r.prototype.generateError=function(){var t=Array.prototype.slice.call(arguments),e=r.interpolate.apply(this,t);this.isAsync?this.pushCode(\"return process.nextTick(function() { callback(new Error(\"+e+\"), vars); });\"):this.pushCode(\"throw new Error(\"+e+\");\")},r.prototype.generateTmpVariable=function(){return\"$tmp\"+this.tmpVariableCount++},r.prototype.pushCode=function(){var t=Array.prototype.slice.call(arguments);this.code+=r.interpolate.apply(this,t)+\"\\n\"},r.prototype.pushPath=function(t){t&&this.scopes[this.scopes.length-1].push(t)},r.prototype.popPath=function(t){t&&this.scopes[this.scopes.length-1].pop()},r.prototype.pushScope=function(t){this.scopes.push([t])},r.prototype.popScope=function(){this.scopes.pop()},r.prototype.addReference=function(t){this.references[t]||(this.references[t]={resolved:!1,requested:!1})},r.prototype.markResolved=function(t){this.references[t].resolved=!0},r.prototype.markRequested=function(t){t.forEach(function(t){this.references[t].requested=!0}.bind(this))},r.prototype.getUnresolvedReferences=function(){var t=this.references;return Object.keys(this.references).filter(function(e){return!t[e].resolved&&!t[e].requested})},r.interpolate=function(t){var e=t.match(/{\\d+}/g),r=Array.prototype.slice.call(arguments,1);return e&&e.forEach(function(e){var n=parseInt(e.substr(1,e.length-2),10);t=t.replace(e,r[n].toString())}),t},e.Context=r},function(t,e,r){\"use strict\";(function(e){var n=u(r(49)),i=u(r(11)),o=u(r(12)),a=u(r(1)),s=u(r(3));function u(t){return t&&t.__esModule?t:{default:t}}var f=r(2).CramMalformedError,c=r(37),h=c.itf8Size,l=c.parseItem,d=c.tinyMemoize,p=r(201),g=r(228),v=function(){function t(e,r){(0,a.default)(this,t),this.file=e,this.filePosition=r}return(0,s.default)(t,[{key:\"getHeader\",value:function(){return this._readContainerHeader(this.filePosition)}},{key:\"getCompressionHeaderBlock\",value:function(){var t=(0,o.default)(i.default.mark(function t(){var e,r,n;return i.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getHeader();case 2:if(t.sent.numRecords){t.next=5;break}return t.abrupt(\"return\",null);case 5:return t.next=7,this.file.getSectionParsers();case 7:return e=t.sent,t.next=10,this.getFirstBlock();case 10:if(\"COMPRESSION_HEADER\"===(r=t.sent).contentType){t.next=13;break}throw new f(\"invalid content type \"+r.contentType+\" in what is supposed to be the compression header block\");case 13:return n=l(r.content,e.cramCompressionHeader.parser,0,r.contentPosition),r.content=n,t.abrupt(\"return\",r);case 16:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getFirstBlock\",value:function(){var t=(0,o.default)(i.default.mark(function t(){var e;return i.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getHeader();case 2:return e=t.sent,t.abrupt(\"return\",this.file.readBlock(e._endPosition));case 4:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getCompressionScheme\",value:function(){var t=(0,o.default)(i.default.mark(function t(){var e;return i.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getCompressionHeaderBlock();case 2:if(e=t.sent){t.next=5;break}return t.abrupt(\"return\",void 0);case 5:return t.abrupt(\"return\",new g(e.content));case 6:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getSlice\",value:function(t,e){return new p(this,t,e)}},{key:\"_readContainerHeader\",value:function(){var t=(0,o.default)(i.default.mark(function t(r){var o,a,s,u,f,c,d,p,g,v,m;return i.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.file.getSectionParsers();case 2:return o=t.sent,a=o.cramContainerHeader1,s=o.cramContainerHeader2,t.next=6,this.file.stat();case 6:if(u=t.sent,f=u.size,!(r>=f)){t.next=10;break}return t.abrupt(\"return\",void 0);case 10:return c=e.allocUnsafe(a.maxLength),t.next=13,this.file.read(c,0,a.maxLength,r);case 13:if(d=l(c,a.parser),p=h(d.numLandmarks),!(r+d.length>=f)){t.next=18;break}return console.warn(this.file+\": container header at \"+r+\" indicates that the container has length \"+d.length+\", which extends beyond the length of the file. Skipping this container.\"),t.abrupt(\"return\",void 0);case 18:return g=e.allocUnsafe(s.maxLength(d.numLandmarks)),t.next=21,this.file.read(g,0,s.maxLength(d.numLandmarks),r+d._size-p);case 21:if(v=l(g,s.parser),!this.file.validateChecksums||void 0===v.crc32){t.next=25;break}return t.next=25,this.file.checkCrc32(r,d._size+v._size-p-4,v.crc32,\"container header beginning at position \"+r);case 25:return m=(0,n.default)(d,v,{_size:d._size+v._size-p,_endPosition:d._size+v._size-p+r}),t.abrupt(\"return\",m);case 27:case\"end\":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()}]),t}();\"getHeader getCompressionHeaderBlock getCompressionScheme\".split(\" \").forEach(function(t){return d(v,t)}),t.exports=v}).call(this,r(7).Buffer)},function(t,e,r){var n,i,o,a,s;n=r(199),i=r(104).utf8,o=r(200),a=r(104).bin,(s=function(t,e){t.constructor==String?t=e&&\"binary\"===e.encoding?a.stringToBytes(t):i.stringToBytes(t):o(t)?t=Array.prototype.slice.call(t,0):Array.isArray(t)||(t=t.toString());for(var r=n.bytesToWords(t),u=8*t.length,f=1732584193,c=-271733879,h=-1732584194,l=271733878,d=0;d<r.length;d++)r[d]=16711935&(r[d]<<8|r[d]>>>24)|4278255360&(r[d]<<24|r[d]>>>8);r[u>>>5]|=128<<u%32,r[14+(u+64>>>9<<4)]=u;var p=s._ff,g=s._gg,v=s._hh,m=s._ii;for(d=0;d<r.length;d+=16){var y=f,_=c,b=h,w=l;f=p(f,c,h,l,r[d+0],7,-680876936),l=p(l,f,c,h,r[d+1],12,-389564586),h=p(h,l,f,c,r[d+2],17,606105819),c=p(c,h,l,f,r[d+3],22,-1044525330),f=p(f,c,h,l,r[d+4],7,-176418897),l=p(l,f,c,h,r[d+5],12,1200080426),h=p(h,l,f,c,r[d+6],17,-1473231341),c=p(c,h,l,f,r[d+7],22,-45705983),f=p(f,c,h,l,r[d+8],7,1770035416),l=p(l,f,c,h,r[d+9],12,-1958414417),h=p(h,l,f,c,r[d+10],17,-42063),c=p(c,h,l,f,r[d+11],22,-1990404162),f=p(f,c,h,l,r[d+12],7,1804603682),l=p(l,f,c,h,r[d+13],12,-40341101),h=p(h,l,f,c,r[d+14],17,-1502002290),f=g(f,c=p(c,h,l,f,r[d+15],22,1236535329),h,l,r[d+1],5,-165796510),l=g(l,f,c,h,r[d+6],9,-1069501632),h=g(h,l,f,c,r[d+11],14,643717713),c=g(c,h,l,f,r[d+0],20,-373897302),f=g(f,c,h,l,r[d+5],5,-701558691),l=g(l,f,c,h,r[d+10],9,38016083),h=g(h,l,f,c,r[d+15],14,-660478335),c=g(c,h,l,f,r[d+4],20,-405537848),f=g(f,c,h,l,r[d+9],5,568446438),l=g(l,f,c,h,r[d+14],9,-1019803690),h=g(h,l,f,c,r[d+3],14,-187363961),c=g(c,h,l,f,r[d+8],20,1163531501),f=g(f,c,h,l,r[d+13],5,-1444681467),l=g(l,f,c,h,r[d+2],9,-51403784),h=g(h,l,f,c,r[d+7],14,1735328473),f=v(f,c=g(c,h,l,f,r[d+12],20,-1926607734),h,l,r[d+5],4,-378558),l=v(l,f,c,h,r[d+8],11,-2022574463),h=v(h,l,f,c,r[d+11],16,1839030562),c=v(c,h,l,f,r[d+14],23,-35309556),f=v(f,c,h,l,r[d+1],4,-1530992060),l=v(l,f,c,h,r[d+4],11,1272893353),h=v(h,l,f,c,r[d+7],16,-155497632),c=v(c,h,l,f,r[d+10],23,-1094730640),f=v(f,c,h,l,r[d+13],4,681279174),l=v(l,f,c,h,r[d+0],11,-358537222),h=v(h,l,f,c,r[d+3],16,-722521979),c=v(c,h,l,f,r[d+6],23,76029189),f=v(f,c,h,l,r[d+9],4,-640364487),l=v(l,f,c,h,r[d+12],11,-421815835),h=v(h,l,f,c,r[d+15],16,530742520),f=m(f,c=v(c,h,l,f,r[d+2],23,-995338651),h,l,r[d+0],6,-198630844),l=m(l,f,c,h,r[d+7],10,1126891415),h=m(h,l,f,c,r[d+14],15,-1416354905),c=m(c,h,l,f,r[d+5],21,-57434055),f=m(f,c,h,l,r[d+12],6,1700485571),l=m(l,f,c,h,r[d+3],10,-1894986606),h=m(h,l,f,c,r[d+10],15,-1051523),c=m(c,h,l,f,r[d+1],21,-2054922799),f=m(f,c,h,l,r[d+8],6,1873313359),l=m(l,f,c,h,r[d+15],10,-30611744),h=m(h,l,f,c,r[d+6],15,-1560198380),c=m(c,h,l,f,r[d+13],21,1309151649),f=m(f,c,h,l,r[d+4],6,-145523070),l=m(l,f,c,h,r[d+11],10,-1120210379),h=m(h,l,f,c,r[d+2],15,718787259),c=m(c,h,l,f,r[d+9],21,-343485551),f=f+y>>>0,c=c+_>>>0,h=h+b>>>0,l=l+w>>>0}return n.endian([f,c,h,l])})._ff=function(t,e,r,n,i,o,a){var s=t+(e&r|~e&n)+(i>>>0)+a;return(s<<o|s>>>32-o)+e},s._gg=function(t,e,r,n,i,o,a){var s=t+(e&n|r&~n)+(i>>>0)+a;return(s<<o|s>>>32-o)+e},s._hh=function(t,e,r,n,i,o,a){var s=t+(e^r^n)+(i>>>0)+a;return(s<<o|s>>>32-o)+e},s._ii=function(t,e,r,n,i,o,a){var s=t+(r^(e|~n))+(i>>>0)+a;return(s<<o|s>>>32-o)+e},s._blocksize=16,s._digestsize=16,t.exports=function(t,e){if(null==t)throw new Error(\"Illegal argument \"+t);var r=n.wordsToBytes(s(t,e));return e&&e.asBytes?r:e&&e.asString?a.bytesToString(r):n.bytesToHex(r)}},function(t,e){var r,n;r=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",n={rotl:function(t,e){return t<<e|t>>>32-e},rotr:function(t,e){return t<<32-e|t>>>e},endian:function(t){if(t.constructor==Number)return 16711935&n.rotl(t,8)|4278255360&n.rotl(t,24);for(var e=0;e<t.length;e++)t[e]=n.endian(t[e]);return t},randomBytes:function(t){for(var e=[];t>0;t--)e.push(Math.floor(256*Math.random()));return e},bytesToWords:function(t){for(var e=[],r=0,n=0;r<t.length;r++,n+=8)e[n>>>5]|=t[r]<<24-n%32;return e},wordsToBytes:function(t){for(var e=[],r=0;r<32*t.length;r+=8)e.push(t[r>>>5]>>>24-r%32&255);return e},bytesToHex:function(t){for(var e=[],r=0;r<t.length;r++)e.push((t[r]>>>4).toString(16)),e.push((15&t[r]).toString(16));return e.join(\"\")},hexToBytes:function(t){for(var e=[],r=0;r<t.length;r+=2)e.push(parseInt(t.substr(r,2),16));return e},bytesToBase64:function(t){for(var e=[],n=0;n<t.length;n+=3)for(var i=t[n]<<16|t[n+1]<<8|t[n+2],o=0;o<4;o++)8*n+6*o<=8*t.length?e.push(r.charAt(i>>>6*(3-o)&63)):e.push(\"=\");return e.join(\"\")},base64ToBytes:function(t){t=t.replace(/[^A-Z0-9+\\/]/gi,\"\");for(var e=[],n=0,i=0;n<t.length;i=++n%4)0!=i&&e.push((r.indexOf(t.charAt(n-1))&Math.pow(2,-2*i+8)-1)<<2*i|r.indexOf(t.charAt(n))>>>6-2*i);return e}},t.exports=n},function(t,e){function r(t){return!!t.constructor&&\"function\"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\nt.exports=function(t){return null!=t&&(r(t)||function(t){return\"function\"==typeof t.readFloatLE&&\"function\"==typeof t.slice&&r(t.slice(0,0))}(t)||!!t._isBuffer)}},function(t,e,r){\"use strict\";var n=c(r(105)),i=c(r(38)),o=c(r(11)),a=c(r(12)),s=c(r(1)),u=c(r(3)),f=c(r(50));function c(t){return t&&t.__esModule?t:{default:t}}var h=r(2),l=h.CramMalformedError,d=h.CramBufferOverrunError,p=h.CramArgumentError,g=r(37),v=g.parseItem,m=g.tinyMemoize,y=g.sequenceMD5,_=r(69),b=r(207);function w(t,e,r,n){if(!n)throw new l(\"could not resolve intra-slice mate pairs, file seems truncated or malformed\");var i=!!(n.mate||void 0!==n.mateRecordNumber&&n.mateRecordNumber!==e);r.readName||(r.readName=String(r.uniqueId),n.readName=r.readName),r.mate={sequenceId:n.sequenceId,alignmentStart:n.alignmentStart,uniqueId:n.uniqueId},n.readName&&(r.mate.readName=n.readName),n.mate||void 0!==n.mateRecordNumber||(n.mate={sequenceId:r.sequenceId,alignmentStart:r.alignmentStart,uniqueId:r.uniqueId},r.readName&&(n.mate.readName=r.readName)),r.flags|=_.BAM_FPAIRED,n.flags&_.BAM_FUNMAP&&(r.flags|=_.BAM_FMUNMAP),r.flags&_.BAM_FUNMAP&&(n.flags|=_.BAM_FMUNMAP),n.flags&_.BAM_FREVERSE&&(r.flags|=_.BAM_FMREVERSE),r.flags&_.BAM_FREVERSE&&(n.flags|=_.BAM_FMREVERSE),void 0===r.templateLength&&(i?function(t,e,r){var n=function e(r){var n=[r];if(r.mateRecordNumber>=0){var i=t[r.mateRecordNumber];if(!i)throw new l(\"intra-slice mate record not found, this file seems malformed\");n.push.apply(n,(0,f.default)(e(i)))}return n}(r),i=n.map(function(t){return t.alignmentStart}),o=n.map(function(t){return t.alignmentStart+t.readLength-1}),a=Math.max.apply(Math,(0,f.default)(o))-Math.min.apply(Math,(0,f.default)(i))+1;a>=0&&n.forEach(function(t){if(void 0!==t.templateLength)throw new l(\"mate pair group has some members that have template lengths already, this file seems malformed\");t.templateLength=a})}(t,0,r):function(t,e){var r=Math.min(t.alignmentStart,e.alignmentStart),n=Math.max(t.alignmentStart+t.readLength-1,e.alignmentStart+e.readLength-1)-r+1;t.templateLength=n,e.templateLength=n}(r,n)),delete r.mateRecordNumber}var x=function(){function t(e,r){(0,s.default)(this,t),this.container=e,this.file=e.file,this.containerPosition=r}return(0,u.default)(t,[{key:\"getHeader\",value:function(){var t=(0,a.default)(o.default.mark(function t(){var e,r,n;return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.file.getSectionParsers();case 2:return e=t.sent,t.next=5,this.container.getHeader();case 5:return r=t.sent,t.next=8,this.file.readBlock(r._endPosition+this.containerPosition);case 8:if(\"MAPPED_SLICE_HEADER\"!==(n=t.sent).contentType){t.next=13;break}n.content=v(n.content,e.cramMappedSliceHeader.parser,0,r._endPosition),t.next=18;break;case 13:if(\"UNMAPPED_SLICE_HEADER\"!==n.contentType){t.next=17;break}n.content=v(n.content,e.cramUnmappedSliceHeader.parser,0,r._endPosition),t.next=18;break;case 17:throw new l(\"error reading slice header block, invalid content type \"+n._contentType);case 18:return t.abrupt(\"return\",n);case 19:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getBlocks\",value:function(){var t=(0,a.default)(o.default.mark(function t(){var e,r,n,i;return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getHeader();case 2:e=t.sent,r=e._endPosition,n=new Array(e.content.numBlocks),i=0;case 6:if(!(i<n.length)){t.next=14;break}return t.next=9,this.file.readBlock(r);case 9:n[i]=t.sent,r=n[i]._endPosition;case 11:i+=1,t.next=6;break;case 14:return t.abrupt(\"return\",n);case 15:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getCoreDataBlock\",value:function(){var t=(0,a.default)(o.default.mark(function t(){var e;return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getBlocks();case 2:return e=t.sent,t.abrupt(\"return\",e[0]);case 4:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"_getBlocksContentIdIndex\",value:function(){var t=(0,a.default)(o.default.mark(function t(){var e,r;return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getBlocks();case 2:return e=t.sent,r={},e.forEach(function(t){\"EXTERNAL_DATA\"===t.contentType&&(r[t.contentId]=t)}),t.abrupt(\"return\",r);case 6:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getBlockByContentId\",value:function(){var t=(0,a.default)(o.default.mark(function t(e){var r;return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this._getBlocksContentIdIndex();case 2:return r=t.sent,t.abrupt(\"return\",r[e]);case 4:case\"end\":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:\"getReferenceRegion\",value:function(){var t=(0,a.default)(o.default.mark(function t(){var e,r,n,i;return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.getHeader();case 2:if(!((e=t.sent.content).refSeqId<0)){t.next=5;break}return t.abrupt(\"return\",void 0);case 5:return t.next=7,this.container.getCompressionScheme();case 7:if(r=t.sent,!(e.refBaseBlockId>=0)){t.next=17;break}if(n=this.getBlockByContentId(e.refBaseBlockId)){t.next=12;break}throw new l(\"embedded reference specified, but reference block does not exist\");case 12:if(!(e.span>n.uncompressedSize)){t.next=14;break}throw new l(\"Embedded reference is too small\");case 14:return t.abrupt(\"return\",{seq:n.data.toString(\"utf8\"),start:e.refSeqStart,end:e.refSeqStart+e.refSeqSpan-1,span:e.refSeqSpan});case 17:if(!r.referenceRequired&&!this.file.fetchReferenceSequenceCallback){t.next=26;break}if(this.file.fetchReferenceSequenceCallback){t.next=20;break}throw new Error(\"reference sequence not embedded, and seqFetch callback not provided, cannot fetch reference sequence\");case 20:return t.next=22,this.file.fetchReferenceSequenceCallback(e.refSeqId,e.refSeqStart,e.refSeqStart+e.refSeqSpan-1);case 22:if((i=t.sent).length===e.refSeqSpan){t.next=25;break}throw new p(\"seqFetch callback returned a reference sequence of the wrong length\");case 25:return t.abrupt(\"return\",{seq:i,start:e.refSeqStart,end:e.refSeqStart+e.refSeqSpan-1,span:e.refSeqSpan});case 26:return t.abrupt(\"return\",void 0);case 27:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"getAllRecords\",value:function(){return this.getRecords(function(){return!0})}},{key:\"_fetchRecords\",value:function(){var t=(0,a.default)(o.default.mark(function t(){var e,r,n,i,a,s,u,f,c,h,p,g,v,m,_,x,E,S,k=this;return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.file.getDefinition();case 2:return e=t.sent,r=e.majorVersion,t.next=6,this.container.getCompressionScheme();case 6:return n=t.sent,t.next=9,this.getHeader();case 9:return i=t.sent,t.next=12,this._getBlocksContentIdIndex();case 12:if(a=t.sent,!(r>1&&this.file.options.checkSequenceMD5&&i.content.refSeqId>=0&&\"0000000000000000\"!==i.content.md5.join(\"\"))){t.next=23;break}return t.next=16,this.getReferenceRegion();case 16:if(!(s=t.sent)){t.next=23;break}if(u=s.seq,f=s.start,c=s.end,h=y(u),p=i.content.md5.map(function(t){return(t<16?\"0\":\"\")+t.toString(16)}).join(\"\"),h===p){t.next=23;break}throw new l(\"MD5 checksum reference mismatch for ref \"+i.content.refSeqId+\" pos \"+f+\"..\"+c+\". recorded MD5: \"+p+\", calculated MD5: \"+h);case 23:return t.next=25,this.getCoreDataBlock();case 25:g=t.sent,v={lastAlignmentStart:i.content.refSeqStart||0,coreBlock:{bitPosition:7,bytePosition:0},externalBlocks:{getCursor:function(t){return this[t]||(this[t]={bitPosition:7,bytePosition:0}),this[t]}}},m=function(t){var e=n.getCodecForDataSeries(t);if(!e)throw new l(\"no codec defined for \"+t+\" data series\");return e.decode(k,g,a,v)},_=new Array(i.content.numRecords),x=0;case 30:if(!(x<_.length)){t.next=48;break}t.prev=31,_[x]=b(this,m,n,i,g,a,v,r,x),_[x].uniqueId=i.contentPosition+i.content.recordCounter+x+1,t.next=45;break;case 36:if(t.prev=36,t.t0=t.catch(31),!(t.t0 instanceof d)){t.next=44;break}return console.warn(\"read attempted beyond end of buffer, file seems truncated.\"),_=_.filter(function(t){return!!t}),t.abrupt(\"break\",48);case 44:throw t.t0;case 45:x+=1,t.next=30;break;case 48:for(E=0;E<_.length;E+=1)(S=_[E].mateRecordNumber)>=0&&w(_,E,_[E],_[S]);return t.abrupt(\"return\",_);case 50:case\"end\":return t.stop()}},t,this,[[31,36]])}));return function(){return t.apply(this,arguments)}}()},{key:\"getRecords\",value:function(){var t=(0,a.default)(o.default.mark(function t(e){var r,s,u,f,c,h,l,d,p,g,v,m,y,_,b=this;return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return r=this.container.filePosition+this.containerPosition,(s=this.file.featureCache.get(r))||(s=this._fetchRecords(),this.file.featureCache.set(r,s)),t.next=5,s;case 5:if(t.t0=e,!(u=t.sent.filter(t.t0)).length||!this.file.fetchReferenceSequenceCallback){t.next=21;break}return t.next=10,this.getHeader();case 10:if(!((f=t.sent).content.refSeqId>=0||-2===f.content.refSeqId)){t.next=21;break}return c=f.content.refSeqId>=0?f.content.refSeqId:void 0,t.next=15,this.container.getCompressionScheme();case 15:for(h=t.sent,l={},d=0;d<u.length;d+=1)p=void 0!==c?c:u[d].sequenceId,(g=l[p])||(g={id:p,start:u[d].alignmentStart,end:-1/0},l[p]=g),(v=u[d].alignmentStart+(u[d].lengthOnRef||u[d].readLength)-1)>g.end&&(g.end=v),u[d].alignmentStart<g.start&&(g.start=u[d].alignmentStart);return t.next=20,i.default.all((0,n.default)(l).map(function(){var t=(0,a.default)(o.default.mark(function t(e){return o.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(!(-1!==e.id&&e.start<=e.end)){t.next=4;break}return t.next=3,b.file.fetchReferenceSequenceCallback(e.id,e.start,e.end);case 3:e.seq=t.sent;case 4:case\"end\":return t.stop()}},t,b)}));return function(e){return t.apply(this,arguments)}}()));case 20:for(m=0;m<u.length;m+=1)y=void 0!==c?c:u[m].sequenceId,(_=l[y])&&_.seq&&u[m].addReferenceSequence(_,h);case 21:return t.abrupt(\"return\",u);case 22:case\"end\":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()}]),t}();\"getHeader getBlocks _getBlocksContentIdIndex\".split(\" \").forEach(function(t){return m(x,t)}),t.exports=x},function(t,e,r){r(203),t.exports=r(0).Object.values},function(t,e,r){var n=r(4),i=r(106)(!1);n(n.S,\"Object\",{values:function(t){return i(t)}})},function(t,e,r){r(30),r(205),t.exports=r(0).Array.from},function(t,e,r){\"use strict\";var n=r(26),i=r(4),o=r(34),a=r(81),s=r(82),u=r(55),f=r(206),c=r(60);i(i.S+i.F*!r(87)(function(t){Array.from(t)}),\"Array\",{from:function(t){var e,r,i,h,l=o(t),d=\"function\"==typeof this?this:Array,p=arguments.length,g=p>1?arguments[1]:void 0,v=void 0!==g,m=0,y=c(l);if(v&&(g=n(g,p>2?arguments[2]:void 0,2)),null==y||d==Array&&s(y))for(r=new d(e=u(l.length));e>m;m++)f(r,m,v?g(l[m],m):l[m]);else for(h=y.call(l),r=new d;!(i=h.next()).done;m++)f(r,m,v?a(h,g,[i.value,m],!0):i.value);return r.length=m,r}})},function(t,e,r){\"use strict\";var n=r(10),i=r(32);t.exports=function(t,e,r){e in t?n.f(t,e,i(0,r)):t[e]=r}},function(t,e,r){\"use strict\";(function(e){var n=f(r(208)),i=f(r(50)),o=f(r(108)),a=f(r(215)),s=f(r(218)),u=f(r(29));function f(t){return t&&t.__esModule?t:{default:t}}var c=r(2),h=c.CramMalformedError,l=c.CramUnimplementedError,d=r(103),p=r(227),g=r(69);function v(t){var e=t.indexOf(0);return-1===e?t.toString(\"utf8\"):t.toString(\"utf8\",0,e)}function m(t,r){if(r.readInt32LE||(r=e.from(r)),\"Z\"===t)return v(r);if(\"A\"===t)return String.fromCharCode(r[0]);if(\"I\"===t){var n=d.fromBytesLE(r);if(n.greaterThan(s.default)||n.lessThan(a.default))throw new l(\"integer overflow\");return n.toNumber()}if(\"i\"===t)return r.readInt32LE(0);if(\"s\"===t)return r.readInt16LE(0);if(\"S\"===t)return r.readUInt16LE(0);if(\"c\"===t)return r.readInt8(0);if(\"C\"===t)return r.readUInt8(0);if(\"f\"===t)return r.readFloatLE(0);if(\"H\"===t){var i=v(r);return(0,o.default)(i.replace(/^0x/,\"\"),16)}if(\"B\"===t)return function(t){var e=String.fromCharCode(t[0]),r=t.readInt32LE(1),n={c:[\"readInt8\",1],C:[\"readUInt8\",1],s:[\"readInt16LE\",2],S:[\"readUInt16LE\",2],i:[\"readInt32LE\",4],I:[\"readUInt32LE\",4],f:[\"readFloatLE\",4]}[e];if(!n)throw new h(\"invalid tag value array type '\"+e+\"'\");for(var i=(0,u.default)(n,2),o=i[0],a=i[1],s=new Array(r),f=5,c=0;c<r;c+=1)s[c]=t[o](f),f+=a;return s}(r);throw new h(\"Unrecognized tag type \"+t)}function y(t){if(t instanceof e)return v(t);if(t.length&&t.indexOf){if(!t[t.length-1]){var r=t.indexOf(0);return String.fromCharCode.apply(String,(0,i.default)(t.slice(0,r)))}return String.fromCharCode.apply(String,(0,i.default)(t))}return String(t)}t.exports=function(t,e,r,i,o,a,s,f,c){var l=new p;if(l.flags=e(\"BF\"),l.cramFlags=e(\"CF\"),f>1&&-2===i.content.refSeqId?l.sequenceId=e(\"RI\"):l.sequenceId=i.content.refSeqId,l.readLength=e(\"RL\"),l.alignmentStart=e(\"AP\"),r.APdelta&&(l.alignmentStart+=s.lastAlignmentStart),s.lastAlignmentStart=l.alignmentStart,l.readGroupId=e(\"RG\"),r.readNamesIncluded&&(l.readName=y(e(\"RN\"))),l.isDetached()){var d={};d.flags=e(\"MF\"),r.readNamesIncluded||(d.readName=y(e(\"RN\")),l.readName=d.readName),d.sequenceId=e(\"NS\"),d.alignmentStart=e(\"NP\"),(d.flags||d.sequenceId>-1)&&(l.mate=d),l.templateSize=e(\"TS\"),d.flags&g.CRAM_M_UNMAP&&(l.flags|=g.BAM_FMUNMAP),d.flags&g.CRAM_M_REVERSE&&(l.flags|=g.BAM_FMREVERSE)}else l.hasMateDownStream()&&(l.mateRecordNumber=e(\"NF\")+c+1);var v=e(\"TL\");if(v<0)throw new h(\"invalid TL index\");for(var _=r.getTagNames(v),b=_.length,w=0;w<b;w+=1){var x=_[w],E=x.substr(0,2),S=x.substr(2,1),k=r.getCodecForTag(x);if(!k)throw new h(\"no codec defined for auxiliary tag \"+x);var A=k.decode(t,o,a,s);l.tags[E]=m(S,A)}if(l.isSegmentUnmapped())if(l.isUnknownBases())l.readBases=null,l.qualityScores=null;else{for(var C=new Array(l.readLength),T=0;T<C.length;T+=1)C[T]=e(\"BA\");if(l.readBases=String.fromCharCode.apply(String,C),l.isPreservingQualityScores()){for(var R=0;R<C.length;R+=1)C[R]=e(\"QS\");l.qualityScores=C}}else{var I=e(\"FN\");I&&(l.readFeatures=function(t,e,r,n,i){var o=0,a=t.alignmentStart-1,s=new Array(e);function f(t){var e=(0,u.default)(t,2),n=e[0],i=e[1],o=r(i);return\"character\"===n?String.fromCharCode(o):\"string\"===n?o.toString(\"utf8\"):\"numArray\"===n?o.toArray():o}for(var c=0;c<e;c+=1){var l=String.fromCharCode(r(\"FC\")),d=r(\"FP\"),p={code:l},g={B:[\"character\",\"BA\"],S:[\"string\",i>1?\"SC\":\"IN\"],X:[\"number\",\"BS\"],D:[\"number\",\"DL\"],I:[\"string\",\"IN\"],i:[\"character\",\"BA\"],b:[\"string\",\"BB\"],q:[\"numArray\",\"QQ\"],Q:[\"number\",\"QS\"],H:[\"number\",\"HC\"],P:[\"number\",\"PD\"],N:[\"number\",\"RS\"]}[l];if(!g)throw new h('invalid read feature code \"'+l+'\"');p.data=f(g);var v={B:[\"number\",\"QS\"]}[l];v&&(p.data=[p.data,f(v)]),o+=d,p.pos=o,a+=d,p.refPos=a,\"D\"===l||\"N\"===l?a+=p.data:\"H\"===l?a-=p.data:\"I\"===l||\"S\"===l?a-=p.data.length:\"i\"===l&&(a-=1),s[c]=p}return s}(l,I,e,0,f));var B=l.readLength;if(l.readFeatures&&l.readFeatures.forEach(function(t){var e=t.code,r=t.data;\"D\"===e||\"N\"===e?B+=r:\"I\"===e||\"S\"===e?B-=r.length:\"i\"===e&&(B-=1)}),(0,n.default)(B)&&(console.warn((l.readName||l.sequenceId+\":\"+l.alignmentStart)+\" record has invalid read features\"),B=l.readLength),l.lengthOnRef=B,l.mappingQuality=e(\"MQ\"),l.isPreservingQualityScores()){for(var L=new Array(l.readLength),M=0;M<L.length;M+=1)L[M]=e(\"QS\");l.qualityScores=L}}return l}}).call(this,r(7).Buffer)},function(t,e,r){t.exports={default:r(209),__esModule:!0}},function(t,e,r){r(210),t.exports=r(0).Number.isNaN},function(t,e,r){var n=r(4);n(n.S,\"Number\",{isNaN:function(t){return t!=t}})},function(t,e,r){r(212),t.exports=r(0).Number.parseInt},function(t,e,r){var n=r(4),i=r(213);n(n.S+n.F*(Number.parseInt!=i),\"Number\",{parseInt:i})},function(t,e,r){var n=r(5).parseInt,i=r(214).trim,o=r(109),a=/^[-+]?0[xX]/;t.exports=8!==n(o+\"08\")||22!==n(o+\"0x16\")?function(t,e){var r=i(String(t),3);return n(r,e>>>0||(a.test(r)?16:10))}:n},function(t,e,r){var n=r(4),i=r(39),o=r(19),a=r(109),s=\"[\"+a+\"]\",u=RegExp(\"^\"+s+s+\"*\"),f=RegExp(s+s+\"*$\"),c=function(t,e,r){var i={},s=o(function(){return!!a[t]()||\"​\"!=\"​\"[t]()}),u=i[t]=s?e(h):a[t];r&&(i[r]=u),n(n.P+n.F*s,\"String\",i)},h=c.trim=function(t,e){return t=String(i(t)),1&e&&(t=t.replace(u,\"\")),2&e&&(t=t.replace(f,\"\")),t};t.exports=c},function(t,e,r){t.exports={default:r(216),__esModule:!0}},function(t,e,r){r(217),t.exports=-9007199254740991},function(t,e,r){var n=r(4);n(n.S,\"Number\",{MIN_SAFE_INTEGER:-9007199254740991})},function(t,e,r){t.exports={default:r(219),__esModule:!0}},function(t,e,r){r(220),t.exports=9007199254740991},function(t,e,r){var n=r(4);n(n.S,\"Number\",{MAX_SAFE_INTEGER:9007199254740991})},function(t,e,r){t.exports={default:r(222),__esModule:!0}},function(t,e,r){r(43),r(30),t.exports=r(223)},function(t,e,r){var n=r(59),i=r(6)(\"iterator\"),o=r(27);t.exports=r(0).isIterable=function(t){var e=Object(t);return void 0!==e[i]||\"@@iterator\"in e||o.hasOwnProperty(n(e))}},function(t,e,r){t.exports={default:r(225),__esModule:!0}},function(t,e,r){r(43),r(30),t.exports=r(226)},function(t,e,r){var n=r(8),i=r(60);t.exports=r(0).getIterator=function(t){var e=i(t);if(\"function\"!=typeof e)throw TypeError(t+\" is not iterable!\");return n(e.call(t))}},function(t,e,r){\"use strict\";var n=a(r(68)),i=a(r(1)),o=a(r(3));function a(t){return t&&t.__esModule?t:{default:t}}var s=r(69);var u={a:0,A:0,c:1,C:1,g:2,G:2,t:3,T:3,n:4,N:4};var f=function(){function t(){(0,i.default)(this,t),this.tags={}}return(0,o.default)(t,[{key:\"isPaired\",value:function(){return!!(this.flags&s.BAM_FPAIRED)}},{key:\"isProperlyPaired\",value:function(){return!!(this.flags&s.BAM_FPROPER_PAIR)}},{key:\"isSegmentUnmapped\",value:function(){return!!(this.flags&s.BAM_FUNMAP)}},{key:\"isMateUnmapped\",value:function(){return!!(this.flags&s.BAM_FMUNMAP)}},{key:\"isReverseComplemented\",value:function(){return!!(this.flags&s.BAM_FREVERSE)}},{key:\"isMateReverseComplemented\",value:function(){return!!(this.flags&s.BAM_FMREVERSE)}},{key:\"isRead1\",value:function(){return!!(this.flags&s.BAM_FREAD1)}},{key:\"isRead2\",value:function(){return!!(this.flags&s.BAM_FREAD2)}},{key:\"isSecondary\",value:function(){return!!(this.flags&s.BAM_FSECONDARY)}},{key:\"isFailedQc\",value:function(){return!!(this.flags&s.BAM_FQCFAIL)}},{key:\"isDuplicate\",value:function(){return!!(this.flags&s.BAM_FDUP)}},{key:\"isSupplementary\",value:function(){return!!(this.flags&s.BAM_FSUPPLEMENTARY)}},{key:\"isDetached\",value:function(){return!!(this.cramFlags&s.CRAM_FLAG_DETACHED)}},{key:\"hasMateDownStream\",value:function(){return!!(this.cramFlags&s.CRAM_FLAG_MATE_DOWNSTREAM)}},{key:\"isPreservingQualityScores\",value:function(){return!!(this.cramFlags&s.CRAM_FLAG_PRESERVE_QUAL_SCORES)}},{key:\"isUnknownBases\",value:function(){return!!(this.cramFlags&s.CRAM_FLAG_NO_SEQ)}},{key:\"getReadBases\",value:function(){return!this.readBases&&this._refRegion&&(this.readBases=function(t,e){if((t.lengthOnRef||t.readLength)&&!t.isUnknownBases()){var r=t.alignmentStart-e.start;if(!t.readFeatures)return e.seq.substr(r,t.lengthOnRef).toUpperCase();for(var n=\"\",i=r,o=0;n.length<t.readLength;)if(o<t.readFeatures.length&&t.readFeatures[o].pos===n.length+1){var a=t.readFeatures[o];o+=1,\"b\"===a.code?(n+=a.data,i+=1):\"B\"===a.code?(n+=a.data[0],i+=1):\"X\"===a.code?(n+=a.sub,i+=1):\"I\"===a.code?n+=a.data:\"D\"===a.code?i+=a.data:\"i\"===a.code?n+=a.data:\"N\"===a.code?i+=a.data:\"S\"===a.code?n+=a.data:\"P\"===a.code||a.code}else if(o<t.readFeatures.length){var s=e.seq.substr(i,t.readFeatures[o].pos-n.length-1);n+=s,i+=s.length}else{var u=e.seq.substr(i,t.readLength-n.length);n+=u,i+=u.length}return n.toUpperCase()}}(this,this._refRegion)),this.readBases}},{key:\"getPairOrientation\",value:function(){if(!this.isSegmentUnmapped()&&this.isPaired()&&!this.isMateUnmapped()&&this.sequenceId===this.mate.sequenceId){var t=this.isReverseComplemented()?\"R\":\"F\",e=this.isMateReverseComplemented()?\"R\":\"F\",r=\" \",n=\" \";this.isRead1()?(r=\"1\",n=\"2\"):this.isRead2()&&(r=\"2\",n=\"1\");var i=[],o=this.templateLength||this.templateSize;return this.alignmentStart>this.mate.alignmentStart&&o>0&&(o=-o),o>0?(i[0]=t,i[1]=r,i[2]=e,i[3]=n):(i[2]=t,i[3]=r,i[0]=e,i[1]=n),i.join(\"\")}return null}},{key:\"addReferenceSequence\",value:function(t,e){this.readFeatures&&this.readFeatures.forEach(function(r){\"X\"===r.code&&function(t,e,r,n){if(e){var i=n.refPos-e.start,o=e.seq.charAt(i);o&&(n.ref=o);var a=u[o];void 0===a&&(a=4);var s=r.substitutionMatrix[a][n.data];s&&(n.sub=s)}}(0,t,e,r)}),!this.readBases&&t.start<=this.alignmentStart&&t.end>=this.alignmentStart+(this.lengthOnRef||this.readLength)-1&&(this._refRegion=t)}},{key:\"toJSON\",value:function(){var t=this,e={};return(0,n.default)(this).forEach(function(r){\"_\"!==r.charAt(0)&&(e[r]=t[r])}),e.readBases=this.getReadBases(),e}}]),t}();t.exports=f},function(t,e,r){\"use strict\";var n=s(r(68)),i=s(r(49)),o=s(r(1)),a=s(r(3));function s(t){return t&&t.__esModule?t:{default:t}}var u=r(2).CramMalformedError,f=r(229).instantiateCodec,c={BF:\"int\",CF:\"int\",RI:\"int\",RL:\"int\",AP:\"int\",RG:\"int\",MF:\"int\",NS:\"int\",NP:\"int\",TS:\"int\",NF:\"int\",TC:\"byte\",TN:\"int\",FN:\"int\",FC:\"byte\",FP:\"int\",BS:\"byte\",IN:\"byteArray\",SC:\"byteArray\",DL:\"int\",BA:\"byte\",BB:\"byteArray\",RS:\"int\",PD:\"int\",HC:\"int\",MQ:\"int\",RN:\"byteArray\",QS:\"byte\",QQ:\"byteArray\",TL:\"int\",TM:\"ignore\",TV:\"ignore\"};var h=function(){function t(e){(0,o.default)(this,t),(0,i.default)(this,e),this.readNamesIncluded=e.preservation.RN,this.APdelta=e.preservation.AP,this.referenceRequired=!!e.preservation.RR,this.tagIdsDictionary=e.preservation.TD,this.substitutionMatrix=function(t){for(var e=new Array(5),r=0;r<5;r+=1)e[r]=new Array(4);return e[0][t[0]>>6&3]=\"C\",e[0][t[0]>>4&3]=\"G\",e[0][t[0]>>2&3]=\"T\",e[0][t[0]>>0&3]=\"N\",e[1][t[1]>>6&3]=\"A\",e[1][t[1]>>4&3]=\"G\",e[1][t[1]>>2&3]=\"T\",e[1][t[1]>>0&3]=\"N\",e[2][t[2]>>6&3]=\"A\",e[2][t[2]>>4&3]=\"C\",e[2][t[2]>>2&3]=\"T\",e[2][t[2]>>0&3]=\"N\",e[3][t[3]>>6&3]=\"A\",e[3][t[3]>>4&3]=\"C\",e[3][t[3]>>2&3]=\"G\",e[3][t[3]>>0&3]=\"N\",e[4][t[4]>>6&3]=\"A\",e[4][t[4]>>4&3]=\"C\",e[4][t[4]>>2&3]=\"G\",e[4][t[4]>>0&3]=\"T\",e}(e.preservation.SM),this.dataSeriesCodecCache={},this.tagCodecCache={}}return(0,a.default)(t,[{key:\"getCodecForTag\",value:function(t){if(!this.tagCodecCache[t]){var e=this.tagEncoding[t];e&&(this.tagCodecCache[t]=f(e,\"byteArray\"))}return this.tagCodecCache[t]}},{key:\"getTagNames\",value:function(t){return this.tagIdsDictionary[t]}},{key:\"getCodecForDataSeries\",value:function(t){if(!this.dataSeriesCodecCache[t]){var e=this.dataSeriesEncoding[t];if(e){var r=c[t];if(!r)throw new u(\"data series name \"+t+\" not defined in file compression header\");this.dataSeriesCodecCache[t]=f(e,r)}}return this.dataSeriesCodecCache[t]}},{key:\"toJSON\",value:function(){var t=this,e={};return(0,n.default)(this).forEach(function(r){/Cache$/.test(r)||(e[r]=t[r])}),e}}]),t}();t.exports=h},function(t,e,r){\"use strict\";var n=r(2).CramUnimplementedError,i=r(230),o=r(233),a=r(234),s=r(235),u=r(236),f=r(237),c={1:o,3:i,4:s,5:a,6:u,7:r(238),9:f};function h(t){return c[t]}t.exports={getCodecClassWithId:h,instantiateCodec:function t(e,r){var i=h(\"ignore\"===r?0:e.codecId);if(!i)throw new n(\"no codec implemented for codec ID \"+e.codecId);return new i(e.parameters,r,t)}}},function(t,e,r){\"use strict\";var n=l(r(50)),i=l(r(105)),o=l(r(29)),a=l(r(70)),s=l(r(15)),u=l(r(1)),f=l(r(3)),c=l(r(16)),h=l(r(17));function l(t){return t&&t.__esModule?t:{default:t}}var d=r(2).CramMalformedError;var p=function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments[1];(0,u.default)(this,e);var n=(0,c.default)(this,(e.__proto__||(0,s.default)(e)).call(this,t,r));if(![\"byte\",\"int\"].includes(n.dataType))throw new TypeError(n.dataType+\" decoding not yet implemented by HUFFMAN_INT codec\");return n.buildCodeBook(),n.buildCodes(),n.buildCaches(),0===n.sortedCodes[0].bitLength&&(n._decode=n._decodeZeroLengthCode),n}return(0,h.default)(e,t),(0,f.default)(e,[{key:\"buildCodeBook\",value:function(){for(var t=this,e=new Array(this.parameters.numCodes),r=0;r<this.parameters.numCodes;r+=1)e[r]={symbol:this.parameters.symbols[r],bitLength:this.parameters.bitLengths[r]};e=e.sort(function(t,e){return t.bitLength-e.bitLength||t.symbol-e.symbol}),this.codeBook={},e.forEach(function(e){t.codeBook[e.bitLength]||(t.codeBook[e.bitLength]=[]),t.codeBook[e.bitLength].push(e.symbol)})}},{key:\"buildCodes\",value:function(){var t=this;this.codes={};var e=0,r=-1;(0,a.default)(this.codeBook).forEach(function(n){var i=(0,o.default)(n,2),a=i[0],s=i[1];a=parseInt(a,10),s.forEach(function(n){var i={bitLength:a,value:n};r+=1;var o,s,u=a-e;if(r<<=u,i.bitCode=r,e+=u,16843009*((s=(858993459&(s=(o=r)-(o>>1)&1431655765))+(s>>2&858993459))+(s>>4)&252645135)>>24>a)throw new d(\"Symbol out of range\");t.codes[n]=i})})}},{key:\"buildCaches\",value:function(){this.sortedCodes=(0,i.default)(this.codes).sort(function(t,e){return t.bitLength-e.bitLength||t.bitCode-e.bitCode}),this.sortedByValue=(0,i.default)(this.codes).sort(function(t,e){return t.value-e.value}),this.sortedValuesByBitCode=this.sortedCodes.map(function(t){return t.value}),this.sortedBitCodes=this.sortedCodes.map(function(t){return t.bitCode}),this.sortedBitLengthsByBitCode=this.sortedCodes.map(function(t){return t.bitLength});var t=Math.max.apply(Math,(0,n.default)(this.sortedBitCodes));this.bitCodeToValue=new Array(t+1).fill(-1);for(var e=0;e<this.sortedBitCodes.length;e+=1)this.bitCodeToValue[this.sortedCodes[e].bitCode]=e}},{key:\"decode\",value:function(t,e,r,n){return this._decode(t,e,n.coreBlock)}},{key:\"_decodeZeroLengthCode\",value:function(){return this.sortedCodes[0].value}},{key:\"_decode\",value:function(t,e,r){for(var n=e.content,i=0,o=0,a=0;a<this.sortedCodes.length;a+=1){var s=this.sortedCodes[a].bitLength;o<<=s-i,o|=this._getBits(n,r,s-i),i=s;var u=this.bitCodeToValue[o];if(u>-1&&this.sortedBitLengthsByBitCode[u]===s)return this.sortedValuesByBitCode[u];for(var f=a;this.sortedCodes[f+1].bitLength===s&&f<this.sortedCodes.length;f+=1)a+=1}throw new d(\"Huffman symbol not found.\")}}]),e}(r(25));t.exports=p},function(t,e,r){r(232),t.exports=r(0).Object.entries},function(t,e,r){var n=r(4),i=r(106)(!0);n(n.S,\"Object\",{entries:function(t){return i(t)}})},function(t,e,r){\"use strict\";var n=f(r(29)),i=f(r(15)),o=f(r(1)),a=f(r(3)),s=f(r(16)),u=f(r(17));function f(t){return t&&t.__esModule?t:{default:t}}var c=r(2),h=c.CramUnimplementedError,l=c.CramMalformedError,d=c.CramBufferOverrunError,p=r(25),g=r(37).parseItf8,v=function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments[1];(0,o.default)(this,e);var n=(0,s.default)(this,(e.__proto__||(0,i.default)(e)).call(this,t,r));if(\"int\"===n.dataType)n._decodeData=n._decodeInt;else{if(\"byte\"!==n.dataType)throw new h(n.dataType+\" decoding not yet implemented by EXTERNAL codec\");n._decodeData=n._decodeByte}return n}return(0,u.default)(e,t),(0,a.default)(e,[{key:\"decode\",value:function(t,e,r,n){var i=this.parameters.blockContentId,o=r[i];if(!o)throw new l(\"no block found with content ID \"+i);var a=n.externalBlocks.getCursor(i);return this._decodeData(o,a)}},{key:\"_decodeInt\",value:function(t,e){var r=g(t.content,e.bytePosition),i=(0,n.default)(r,2),o=i[0],a=i[1];return e.bytePosition+=a,o}},{key:\"_decodeByte\",value:function(t,e){if(e.bytePosition>=t.content.length)throw new d(\"attempted to read beyond end of block. this file seems truncated.\");var r=t.content[e.bytePosition];return e.bytePosition+=1,r}}]),e}(p);t.exports=v},function(t,e,r){\"use strict\";var n=u(r(15)),i=u(r(1)),o=u(r(3)),a=u(r(16)),s=u(r(17));function u(t){return t&&t.__esModule?t:{default:t}}var f=r(2),c=f.CramBufferOverrunError,h=f.CramMalformedError,l=function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments[1];(0,i.default)(this,e);var o=(0,a.default)(this,(e.__proto__||(0,n.default)(e)).call(this,t,r));if(\"byteArray\"!==r)throw new TypeError(\"byteArrayStop codec does not support data type \"+r);return o._decode=o._decodeByteArray,o}return(0,s.default)(e,t),(0,o.default)(e,[{key:\"decode\",value:function(t,e,r,n){var i=this.parameters.blockContentId,o=r[i];if(!o)throw new h(\"no block found with content ID \"+i);var a=n.externalBlocks.getCursor(i);return this._decode(o,a)}},{key:\"_decodeByteArray\",value:function(t,e){for(var r=t.content,n=this.parameters.stopByte,i=e.bytePosition,o=e.bytePosition;r[o]!==n&&o<r.length;){if(o===r.length)throw new c(\"byteArrayStop reading beyond length of data buffer?\");o+=1}return e.bytePosition=o+1,r.slice(i,o)}}]),e}(r(25));t.exports=l},function(t,e,r){\"use strict\";var n=u(r(15)),i=u(r(1)),o=u(r(3)),a=u(r(16)),s=u(r(17));function u(t){return t&&t.__esModule?t:{default:t}}var f=r(37).tinyMemoize,c=function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments[1],o=arguments[2];(0,i.default)(this,e);var s=(0,a.default)(this,(e.__proto__||(0,n.default)(e)).call(this,t,r));if(s.instantiateCodec=o,\"byteArray\"!==r)throw new TypeError(\"byteArrayLength does not support data type \"+r);return s}return(0,s.default)(e,t),(0,o.default)(e,[{key:\"decode\",value:function(t,e,r,n){for(var i=this._getLengthCodec().decode(t,e,r,n),o=this._getDataCodec(),a=new Array(i),s=0;s<i;s+=1)a[s]=o.decode(t,e,r,n);return a}},{key:\"_getLengthCodec\",value:function(){var t=this.parameters.lengthsEncoding;return this.instantiateCodec(t,\"int\")}},{key:\"_getDataCodec\",value:function(){var t=this.parameters.valuesEncoding;return this.instantiateCodec(t,\"byte\")}}]),e}(r(25));\"_getLengthCodec _getDataCodec\".split(\" \").forEach(function(t){return f(c,t)}),t.exports=c},function(t,e,r){\"use strict\";var n=u(r(15)),i=u(r(1)),o=u(r(3)),a=u(r(16)),s=u(r(17));function u(t){return t&&t.__esModule?t:{default:t}}var f=r(2).CramUnimplementedError,c=function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments[1];(0,i.default)(this,e);var o=(0,a.default)(this,(e.__proto__||(0,n.default)(e)).call(this,t,r));if(\"int\"!==o.dataType)throw new f(o.dataType+\" decoding not yet implemented by BETA codec\");return o}return(0,s.default)(e,t),(0,o.default)(e,[{key:\"decode\",value:function(t,e,r,n){return this._getBits(e.content,n.coreBlock,this.parameters.length)-this.parameters.offset}}]),e}(r(25));t.exports=c},function(t,e,r){\"use strict\";var n=u(r(15)),i=u(r(1)),o=u(r(3)),a=u(r(16)),s=u(r(17));function u(t){return t&&t.__esModule?t:{default:t}}var f=r(2).CramUnimplementedError,c=function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments[1];(0,i.default)(this,e);var o=(0,a.default)(this,(e.__proto__||(0,n.default)(e)).call(this,t,r));if(\"int\"!==o.dataType)throw new f(o.dataType+\" decoding not yet implemented by GAMMA codec\");return o}return(0,s.default)(e,t),(0,o.default)(e,[{key:\"decode\",value:function(t,e,r,n){for(var i=1;0===this._getBits(e.content,n.coreBlock,1);)i+=1;return(this._getBits(e.content,n.coreBlock,i-1)|1<<i-1)-this.parameters.offset}}]),e}(r(25));t.exports=c},function(t,e,r){\"use strict\";var n=u(r(15)),i=u(r(1)),o=u(r(3)),a=u(r(16)),s=u(r(17));function u(t){return t&&t.__esModule?t:{default:t}}var f=r(2).CramUnimplementedError,c=function(t){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments[1];(0,i.default)(this,e);var o=(0,a.default)(this,(e.__proto__||(0,n.default)(e)).call(this,t,r));if(\"int\"!==o.dataType)throw new f(o.dataType+\" decoding not yet implemented by SUBEXP codec\");return o}return(0,s.default)(e,t),(0,o.default)(e,[{key:\"decode\",value:function(t,e,r,n){for(var i=0;this._getBits(e.content,n.coreBlock,1);)i+=1;var o=void 0,a=void 0;return 0===i?(o=this.parameters.K,a=this._getBits(e.content,n.coreBlock,o)):a=1<<(o=i+this.parameters.K-1)|this._getBits(e.content,n.coreBlock,o),a-this.parameters.offset}}]),e}(r(25));t.exports=c},function(t,e,r){\"use strict\";var n=r(240),i=r(242);function o(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}e.parse=_,e.resolve=function(t,e){return _(t,!1,!0).resolve(e)},e.resolveObject=function(t,e){return t?_(t,!1,!0).resolveObject(e):e},e.format=function(t){i.isString(t)&&(t=_(t));return t instanceof o?t.format():o.prototype.format.call(t)},e.Url=o;var a=/^([a-z0-9.+-]+:)/i,s=/:[0-9]*$/,u=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,f=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat([\"<\",\">\",'\"',\"`\",\" \",\"\\r\",\"\\n\",\"\\t\"]),c=[\"'\"].concat(f),h=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(c),l=[\"/\",\"?\",\"#\"],d=/^[+a-z0-9A-Z_-]{0,63}$/,p=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,g={javascript:!0,\"javascript:\":!0},v={javascript:!0,\"javascript:\":!0},m={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,\"http:\":!0,\"https:\":!0,\"ftp:\":!0,\"gopher:\":!0,\"file:\":!0},y=r(243);function _(t,e,r){if(t&&i.isObject(t)&&t instanceof o)return t;var n=new o;return n.parse(t,e,r),n}o.prototype.parse=function(t,e,r){if(!i.isString(t))throw new TypeError(\"Parameter 'url' must be a string, not \"+typeof t);var o=t.indexOf(\"?\"),s=-1!==o&&o<t.indexOf(\"#\")?\"?\":\"#\",f=t.split(s);f[0]=f[0].replace(/\\\\/g,\"/\");var _=t=f.join(s);if(_=_.trim(),!r&&1===t.split(\"#\").length){var b=u.exec(_);if(b)return this.path=_,this.href=_,this.pathname=b[1],b[2]?(this.search=b[2],this.query=e?y.parse(this.search.substr(1)):this.search.substr(1)):e&&(this.search=\"\",this.query={}),this}var w=a.exec(_);if(w){var x=(w=w[0]).toLowerCase();this.protocol=x,_=_.substr(w.length)}if(r||w||_.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){var E=\"//\"===_.substr(0,2);!E||w&&v[w]||(_=_.substr(2),this.slashes=!0)}if(!v[w]&&(E||w&&!m[w])){for(var S,k,A=-1,C=0;C<l.length;C++){-1!==(T=_.indexOf(l[C]))&&(-1===A||T<A)&&(A=T)}-1!==(k=-1===A?_.lastIndexOf(\"@\"):_.lastIndexOf(\"@\",A))&&(S=_.slice(0,k),_=_.slice(k+1),this.auth=decodeURIComponent(S)),A=-1;for(C=0;C<h.length;C++){var T;-1!==(T=_.indexOf(h[C]))&&(-1===A||T<A)&&(A=T)}-1===A&&(A=_.length),this.host=_.slice(0,A),_=_.slice(A),this.parseHost(),this.hostname=this.hostname||\"\";var R=\"[\"===this.hostname[0]&&\"]\"===this.hostname[this.hostname.length-1];if(!R)for(var I=this.hostname.split(/\\./),B=(C=0,I.length);C<B;C++){var L=I[C];if(L&&!L.match(d)){for(var M=\"\",O=0,F=L.length;O<F;O++)L.charCodeAt(O)>127?M+=\"x\":M+=L[O];if(!M.match(d)){var N=I.slice(0,C),P=I.slice(C+1),U=L.match(p);U&&(N.push(U[1]),P.unshift(U[2])),P.length&&(_=\"/\"+P.join(\".\")+_),this.hostname=N.join(\".\");break}}}this.hostname.length>255?this.hostname=\"\":this.hostname=this.hostname.toLowerCase(),R||(this.hostname=n.toASCII(this.hostname));var z=this.port?\":\"+this.port:\"\",j=this.hostname||\"\";this.host=j+z,this.href+=this.host,R&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),\"/\"!==_[0]&&(_=\"/\"+_))}if(!g[x])for(C=0,B=c.length;C<B;C++){var D=c[C];if(-1!==_.indexOf(D)){var q=encodeURIComponent(D);q===D&&(q=escape(D)),_=_.split(D).join(q)}}var Z=_.indexOf(\"#\");-1!==Z&&(this.hash=_.substr(Z),_=_.slice(0,Z));var H=_.indexOf(\"?\");if(-1!==H?(this.search=_.substr(H),this.query=_.substr(H+1),e&&(this.query=y.parse(this.query)),_=_.slice(0,H)):e&&(this.search=\"\",this.query={}),_&&(this.pathname=_),m[x]&&this.hostname&&!this.pathname&&(this.pathname=\"/\"),this.pathname||this.search){z=this.pathname||\"\";var V=this.search||\"\";this.path=z+V}return this.href=this.format(),this},o.prototype.format=function(){var t=this.auth||\"\";t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,\":\"),t+=\"@\");var e=this.protocol||\"\",r=this.pathname||\"\",n=this.hash||\"\",o=!1,a=\"\";this.host?o=t+this.host:this.hostname&&(o=t+(-1===this.hostname.indexOf(\":\")?this.hostname:\"[\"+this.hostname+\"]\"),this.port&&(o+=\":\"+this.port)),this.query&&i.isObject(this.query)&&Object.keys(this.query).length&&(a=y.stringify(this.query));var s=this.search||a&&\"?\"+a||\"\";return e&&\":\"!==e.substr(-1)&&(e+=\":\"),this.slashes||(!e||m[e])&&!1!==o?(o=\"//\"+(o||\"\"),r&&\"/\"!==r.charAt(0)&&(r=\"/\"+r)):o||(o=\"\"),n&&\"#\"!==n.charAt(0)&&(n=\"#\"+n),s&&\"?\"!==s.charAt(0)&&(s=\"?\"+s),e+o+(r=r.replace(/[?#]/g,function(t){return encodeURIComponent(t)}))+(s=s.replace(\"#\",\"%23\"))+n},o.prototype.resolve=function(t){return this.resolveObject(_(t,!1,!0)).format()},o.prototype.resolveObject=function(t){if(i.isString(t)){var e=new o;e.parse(t,!1,!0),t=e}for(var r=new o,n=Object.keys(this),a=0;a<n.length;a++){var s=n[a];r[s]=this[s]}if(r.hash=t.hash,\"\"===t.href)return r.href=r.format(),r;if(t.slashes&&!t.protocol){for(var u=Object.keys(t),f=0;f<u.length;f++){var c=u[f];\"protocol\"!==c&&(r[c]=t[c])}return m[r.protocol]&&r.hostname&&!r.pathname&&(r.path=r.pathname=\"/\"),r.href=r.format(),r}if(t.protocol&&t.protocol!==r.protocol){if(!m[t.protocol]){for(var h=Object.keys(t),l=0;l<h.length;l++){var d=h[l];r[d]=t[d]}return r.href=r.format(),r}if(r.protocol=t.protocol,t.host||v[t.protocol])r.pathname=t.pathname;else{for(var p=(t.pathname||\"\").split(\"/\");p.length&&!(t.host=p.shift()););t.host||(t.host=\"\"),t.hostname||(t.hostname=\"\"),\"\"!==p[0]&&p.unshift(\"\"),p.length<2&&p.unshift(\"\"),r.pathname=p.join(\"/\")}if(r.search=t.search,r.query=t.query,r.host=t.host||\"\",r.auth=t.auth,r.hostname=t.hostname||t.host,r.port=t.port,r.pathname||r.search){var g=r.pathname||\"\",y=r.search||\"\";r.path=g+y}return r.slashes=r.slashes||t.slashes,r.href=r.format(),r}var _=r.pathname&&\"/\"===r.pathname.charAt(0),b=t.host||t.pathname&&\"/\"===t.pathname.charAt(0),w=b||_||r.host&&t.pathname,x=w,E=r.pathname&&r.pathname.split(\"/\")||[],S=(p=t.pathname&&t.pathname.split(\"/\")||[],r.protocol&&!m[r.protocol]);if(S&&(r.hostname=\"\",r.port=null,r.host&&(\"\"===E[0]?E[0]=r.host:E.unshift(r.host)),r.host=\"\",t.protocol&&(t.hostname=null,t.port=null,t.host&&(\"\"===p[0]?p[0]=t.host:p.unshift(t.host)),t.host=null),w=w&&(\"\"===p[0]||\"\"===E[0])),b)r.host=t.host||\"\"===t.host?t.host:r.host,r.hostname=t.hostname||\"\"===t.hostname?t.hostname:r.hostname,r.search=t.search,r.query=t.query,E=p;else if(p.length)E||(E=[]),E.pop(),E=E.concat(p),r.search=t.search,r.query=t.query;else if(!i.isNullOrUndefined(t.search)){if(S)r.hostname=r.host=E.shift(),(R=!!(r.host&&r.host.indexOf(\"@\")>0)&&r.host.split(\"@\"))&&(r.auth=R.shift(),r.host=r.hostname=R.shift());return r.search=t.search,r.query=t.query,i.isNull(r.pathname)&&i.isNull(r.search)||(r.path=(r.pathname?r.pathname:\"\")+(r.search?r.search:\"\")),r.href=r.format(),r}if(!E.length)return r.pathname=null,r.search?r.path=\"/\"+r.search:r.path=null,r.href=r.format(),r;for(var k=E.slice(-1)[0],A=(r.host||t.host||E.length>1)&&(\".\"===k||\"..\"===k)||\"\"===k,C=0,T=E.length;T>=0;T--)\".\"===(k=E[T])?E.splice(T,1):\"..\"===k?(E.splice(T,1),C++):C&&(E.splice(T,1),C--);if(!w&&!x)for(;C--;C)E.unshift(\"..\");!w||\"\"===E[0]||E[0]&&\"/\"===E[0].charAt(0)||E.unshift(\"\"),A&&\"/\"!==E.join(\"/\").substr(-1)&&E.push(\"\");var R,I=\"\"===E[0]||E[0]&&\"/\"===E[0].charAt(0);S&&(r.hostname=r.host=I?\"\":E.length?E.shift():\"\",(R=!!(r.host&&r.host.indexOf(\"@\")>0)&&r.host.split(\"@\"))&&(r.auth=R.shift(),r.host=r.hostname=R.shift()));return(w=w||r.host&&E.length)&&!I&&E.unshift(\"\"),E.length?r.pathname=E.join(\"/\"):(r.pathname=null,r.path=null),i.isNull(r.pathname)&&i.isNull(r.search)||(r.path=(r.pathname?r.pathname:\"\")+(r.search?r.search:\"\")),r.auth=t.auth||r.auth,r.slashes=r.slashes||t.slashes,r.href=r.format(),r},o.prototype.parseHost=function(){var t=this.host,e=s.exec(t);e&&(\":\"!==(e=e[0])&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)}},function(t,e,r){(function(t,n){var i;/*! https://mths.be/punycode v1.4.1 by @mathias */!function(o){e&&e.nodeType,t&&t.nodeType;var a=\"object\"==typeof n&&n;a.global!==a&&a.window!==a&&a.self;var s,u=2147483647,f=36,c=1,h=26,l=38,d=700,p=72,g=128,v=\"-\",m=/^xn--/,y=/[^\\x20-\\x7E]/,_=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,b={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},w=f-c,x=Math.floor,E=String.fromCharCode;function S(t){throw new RangeError(b[t])}function k(t,e){for(var r=t.length,n=[];r--;)n[r]=e(t[r]);return n}function A(t,e){var r=t.split(\"@\"),n=\"\";return r.length>1&&(n=r[0]+\"@\",t=r[1]),n+k((t=t.replace(_,\".\")).split(\".\"),e).join(\".\")}function C(t){for(var e,r,n=[],i=0,o=t.length;i<o;)(e=t.charCodeAt(i++))>=55296&&e<=56319&&i<o?56320==(64512&(r=t.charCodeAt(i++)))?n.push(((1023&e)<<10)+(1023&r)+65536):(n.push(e),i--):n.push(e);return n}function T(t){return k(t,function(t){var e=\"\";return t>65535&&(e+=E((t-=65536)>>>10&1023|55296),t=56320|1023&t),e+=E(t)}).join(\"\")}function R(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function I(t,e,r){var n=0;for(t=r?x(t/d):t>>1,t+=x(t/e);t>w*h>>1;n+=f)t=x(t/w);return x(n+(w+1)*t/(t+l))}function B(t){var e,r,n,i,o,a,s,l,d,m,y,_=[],b=t.length,w=0,E=g,k=p;for((r=t.lastIndexOf(v))<0&&(r=0),n=0;n<r;++n)t.charCodeAt(n)>=128&&S(\"not-basic\"),_.push(t.charCodeAt(n));for(i=r>0?r+1:0;i<b;){for(o=w,a=1,s=f;i>=b&&S(\"invalid-input\"),((l=(y=t.charCodeAt(i++))-48<10?y-22:y-65<26?y-65:y-97<26?y-97:f)>=f||l>x((u-w)/a))&&S(\"overflow\"),w+=l*a,!(l<(d=s<=k?c:s>=k+h?h:s-k));s+=f)a>x(u/(m=f-d))&&S(\"overflow\"),a*=m;k=I(w-o,e=_.length+1,0==o),x(w/e)>u-E&&S(\"overflow\"),E+=x(w/e),w%=e,_.splice(w++,0,E)}return T(_)}function L(t){var e,r,n,i,o,a,s,l,d,m,y,_,b,w,k,A=[];for(_=(t=C(t)).length,e=g,r=0,o=p,a=0;a<_;++a)(y=t[a])<128&&A.push(E(y));for(n=i=A.length,i&&A.push(v);n<_;){for(s=u,a=0;a<_;++a)(y=t[a])>=e&&y<s&&(s=y);for(s-e>x((u-r)/(b=n+1))&&S(\"overflow\"),r+=(s-e)*b,e=s,a=0;a<_;++a)if((y=t[a])<e&&++r>u&&S(\"overflow\"),y==e){for(l=r,d=f;!(l<(m=d<=o?c:d>=o+h?h:d-o));d+=f)k=l-m,w=f-m,A.push(E(R(m+k%w,0))),l=x(k/w);A.push(E(R(l,0))),o=I(r,b,n==i),r=0,++n}++r,++e}return A.join(\"\")}s={version:\"1.4.1\",ucs2:{decode:C,encode:T},decode:B,encode:L,toASCII:function(t){return A(t,function(t){return y.test(t)?\"xn--\"+L(t):t})},toUnicode:function(t){return A(t,function(t){return m.test(t)?B(t.slice(4).toLowerCase()):t})}},void 0===(i=function(){return s}.call(e,r,e,t))||(t.exports=i)}()}).call(this,r(241)(t),r(9))},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,\"loaded\",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,\"id\",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,r){\"use strict\";t.exports={isString:function(t){return\"string\"==typeof t},isObject:function(t){return\"object\"==typeof t&&null!==t},isNull:function(t){return null===t},isNullOrUndefined:function(t){return null==t}}},function(t,e,r){\"use strict\";e.decode=e.parse=r(244),e.encode=e.stringify=r(245)},function(t,e,r){\"use strict\";function n(t,e){return Object.prototype.hasOwnProperty.call(t,e)}t.exports=function(t,e,r,o){e=e||\"&\",r=r||\"=\";var a={};if(\"string\"!=typeof t||0===t.length)return a;var s=/\\+/g;t=t.split(e);var u=1e3;o&&\"number\"==typeof o.maxKeys&&(u=o.maxKeys);var f=t.length;u>0&&f>u&&(f=u);for(var c=0;c<f;++c){var h,l,d,p,g=t[c].replace(s,\"%20\"),v=g.indexOf(r);v>=0?(h=g.substr(0,v),l=g.substr(v+1)):(h=g,l=\"\"),d=decodeURIComponent(h),p=decodeURIComponent(l),n(a,d)?i(a[d])?a[d].push(p):a[d]=[a[d],p]:a[d]=p}return a};var i=Array.isArray||function(t){return\"[object Array]\"===Object.prototype.toString.call(t)}},function(t,e,r){\"use strict\";var n=function(t){switch(typeof t){case\"string\":return t;case\"boolean\":return t?\"true\":\"false\";case\"number\":return isFinite(t)?t:\"\";default:return\"\"}};t.exports=function(t,e,r,s){return e=e||\"&\",r=r||\"=\",null===t&&(t=void 0),\"object\"==typeof t?o(a(t),function(a){var s=encodeURIComponent(n(a))+r;return i(t[a])?o(t[a],function(t){return s+encodeURIComponent(n(t))}).join(e):s+encodeURIComponent(n(t[a]))}).join(e):s?encodeURIComponent(n(s))+r+encodeURIComponent(n(t)):\"\"};var i=Array.isArray||function(t){return\"[object Array]\"===Object.prototype.toString.call(t)};function o(t,e){if(t.map)return t.map(e);for(var r=[],n=0;n<t.length;n++)r.push(e(t[n],n));return r}var a=Object.keys||function(t){var e=[];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.push(r);return e}},function(t,e,r){\"use strict\";(function(e){var n=s(r(11)),i=s(r(12)),o=s(r(1)),a=s(r(3));function s(t){return t&&t.__esModule?t:{default:t}}var u=r(247),f=r(248),c=function(){function t(e){var r=this;(0,o.default)(this,t),this.position=0,this.url=e,this.cache=new f({fetch:function(t,e){return r._fetch(t,e)}})}return(0,a.default)(t,[{key:\"_fetch\",value:function(){var t=(0,i.default)(n.default.mark(function t(r,i){var o,a,s,f;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return o={},i<1/0?o.range=\"bytes=\"+r+\"-\"+(r+i):i===1/0&&0!==r&&(o.range=\"bytes=\"+r+\"-\"),t.next=4,u(this.url,{method:\"GET\",headers:o,redirect:\"follow\",mode:\"cors\"});case 4:if((200!==(a=t.sent).status||0!==r)&&206!==a.status){t.next=14;break}return t.t0=e,t.next=9,a.arrayBuffer();case 9:return t.t1=t.sent,s=t.t0.from.call(t.t0,t.t1),(f=/\\/(\\d+)$/.exec(a.headers.get(\"content-range\")))&&f[1]?this._stat={size:parseInt(f[1],10)}:this._stat={size:void 0},t.abrupt(\"return\",s);case 14:throw new Error(\"HTTP \"+a.status+\" fetching \"+this.url);case 15:case\"end\":return t.stop()}},t,this)}));return function(e,r){return t.apply(this,arguments)}}()},{key:\"read\",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1/0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return null===n&&(this.position,this.position+=r),this.cache.get(t,e,r,n)}},{key:\"readFile\",value:function(){var t=(0,i.default)(n.default.mark(function t(){var r;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,u(this.url,{method:\"GET\",redirect:\"follow\",mode:\"cors\"});case 2:return r=t.sent,t.t0=e,t.next=6,r.arrayBuffer();case 6:return t.t1=t.sent,t.abrupt(\"return\",t.t0.from.call(t.t0,t.t1));case 8:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"stat\",value:function(){var t=(0,i.default)(n.default.mark(function t(){var r;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(this._stat){t.next=6;break}return r=e.allocUnsafe(10),t.next=4,this.read(r,0,10,0);case 4:if(this._stat){t.next=6;break}throw new Error(\"unable to determine size of file at \"+this.url);case 6:return t.abrupt(\"return\",this._stat);case 7:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()}]),t}();t.exports=c}).call(this,r(7).Buffer)},function(t,e){var r=function(t){function e(){this.fetch=!1}return e.prototype=t,new e}(\"undefined\"!=typeof self?self:this);!function(t){!function(e){var r={searchParams:\"URLSearchParams\"in t,iterable:\"Symbol\"in t&&\"iterator\"in Symbol,blob:\"FileReader\"in t&&\"Blob\"in t&&function(){try{return new Blob,!0}catch(t){return!1}}(),formData:\"FormData\"in t,arrayBuffer:\"ArrayBuffer\"in t};if(r.arrayBuffer)var n=[\"[object Int8Array]\",\"[object Uint8Array]\",\"[object Uint8ClampedArray]\",\"[object Int16Array]\",\"[object Uint16Array]\",\"[object Int32Array]\",\"[object Uint32Array]\",\"[object Float32Array]\",\"[object Float64Array]\"],i=ArrayBuffer.isView||function(t){return t&&n.indexOf(Object.prototype.toString.call(t))>-1};function o(t){if(\"string\"!=typeof t&&(t=String(t)),/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(t))throw new TypeError(\"Invalid character in header field name\");return t.toLowerCase()}function a(t){return\"string\"!=typeof t&&(t=String(t)),t}function s(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return r.iterable&&(e[Symbol.iterator]=function(){return e}),e}function u(t){this.map={},t instanceof u?t.forEach(function(t,e){this.append(e,t)},this):Array.isArray(t)?t.forEach(function(t){this.append(t[0],t[1])},this):t&&Object.getOwnPropertyNames(t).forEach(function(e){this.append(e,t[e])},this)}function f(t){if(t.bodyUsed)return Promise.reject(new TypeError(\"Already read\"));t.bodyUsed=!0}function c(t){return new Promise(function(e,r){t.onload=function(){e(t.result)},t.onerror=function(){r(t.error)}})}function h(t){var e=new FileReader,r=c(e);return e.readAsArrayBuffer(t),r}function l(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function d(){return this.bodyUsed=!1,this._initBody=function(t){var e;this._bodyInit=t,t?\"string\"==typeof t?this._bodyText=t:r.blob&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:r.formData&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:r.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():r.arrayBuffer&&r.blob&&((e=t)&&DataView.prototype.isPrototypeOf(e))?(this._bodyArrayBuffer=l(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):r.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(t)||i(t))?this._bodyArrayBuffer=l(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText=\"\",this.headers.get(\"content-type\")||(\"string\"==typeof t?this.headers.set(\"content-type\",\"text/plain;charset=UTF-8\"):this._bodyBlob&&this._bodyBlob.type?this.headers.set(\"content-type\",this._bodyBlob.type):r.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set(\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"))},r.blob&&(this.blob=function(){var t=f(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error(\"could not read FormData body as blob\");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?f(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(h)}),this.text=function(){var t,e,r,n=f(this);if(n)return n;if(this._bodyBlob)return t=this._bodyBlob,e=new FileReader,r=c(e),e.readAsText(t),r;if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),r=new Array(e.length),n=0;n<e.length;n++)r[n]=String.fromCharCode(e[n]);return r.join(\"\")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error(\"could not read FormData body as text\");return Promise.resolve(this._bodyText)},r.formData&&(this.formData=function(){return this.text().then(v)}),this.json=function(){return this.text().then(JSON.parse)},this}u.prototype.append=function(t,e){t=o(t),e=a(e);var r=this.map[t];this.map[t]=r?r+\", \"+e:e},u.prototype.delete=function(t){delete this.map[o(t)]},u.prototype.get=function(t){return t=o(t),this.has(t)?this.map[t]:null},u.prototype.has=function(t){return this.map.hasOwnProperty(o(t))},u.prototype.set=function(t,e){this.map[o(t)]=a(e)},u.prototype.forEach=function(t,e){for(var r in this.map)this.map.hasOwnProperty(r)&&t.call(e,this.map[r],r,this)},u.prototype.keys=function(){var t=[];return this.forEach(function(e,r){t.push(r)}),s(t)},u.prototype.values=function(){var t=[];return this.forEach(function(e){t.push(e)}),s(t)},u.prototype.entries=function(){var t=[];return this.forEach(function(e,r){t.push([r,e])}),s(t)},r.iterable&&(u.prototype[Symbol.iterator]=u.prototype.entries);var p=[\"DELETE\",\"GET\",\"HEAD\",\"OPTIONS\",\"POST\",\"PUT\"];function g(t,e){var r,n,i=(e=e||{}).body;if(t instanceof g){if(t.bodyUsed)throw new TypeError(\"Already read\");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new u(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,i||null==t._bodyInit||(i=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||\"same-origin\",!e.headers&&this.headers||(this.headers=new u(e.headers)),this.method=(r=e.method||this.method||\"GET\",n=r.toUpperCase(),p.indexOf(n)>-1?n:r),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,(\"GET\"===this.method||\"HEAD\"===this.method)&&i)throw new TypeError(\"Body not allowed for GET or HEAD requests\");this._initBody(i)}function v(t){var e=new FormData;return t.trim().split(\"&\").forEach(function(t){if(t){var r=t.split(\"=\"),n=r.shift().replace(/\\+/g,\" \"),i=r.join(\"=\").replace(/\\+/g,\" \");e.append(decodeURIComponent(n),decodeURIComponent(i))}}),e}function m(t,e){e||(e={}),this.type=\"default\",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText=\"statusText\"in e?e.statusText:\"OK\",this.headers=new u(e.headers),this.url=e.url||\"\",this._initBody(t)}g.prototype.clone=function(){return new g(this,{body:this._bodyInit})},d.call(g.prototype),d.call(m.prototype),m.prototype.clone=function(){return new m(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new u(this.headers),url:this.url})},m.error=function(){var t=new m(null,{status:0,statusText:\"\"});return t.type=\"error\",t};var y=[301,302,303,307,308];m.redirect=function(t,e){if(-1===y.indexOf(e))throw new RangeError(\"Invalid status code\");return new m(null,{status:e,headers:{location:t}})},e.DOMException=t.DOMException;try{new e.DOMException}catch(t){e.DOMException=function(t,e){this.message=t,this.name=e;var r=Error(t);this.stack=r.stack},e.DOMException.prototype=Object.create(Error.prototype),e.DOMException.prototype.constructor=e.DOMException}function _(t,n){return new Promise(function(i,o){var a=new g(t,n);if(a.signal&&a.signal.aborted)return o(new e.DOMException(\"Aborted\",\"AbortError\"));var s=new XMLHttpRequest;function f(){s.abort()}s.onload=function(){var t,e,r={status:s.status,statusText:s.statusText,headers:(t=s.getAllResponseHeaders()||\"\",e=new u,t.replace(/\\r?\\n[\\t ]+/g,\" \").split(/\\r?\\n/).forEach(function(t){var r=t.split(\":\"),n=r.shift().trim();if(n){var i=r.join(\":\").trim();e.append(n,i)}}),e)};r.url=\"responseURL\"in s?s.responseURL:r.headers.get(\"X-Request-URL\");var n=\"response\"in s?s.response:s.responseText;i(new m(n,r))},s.onerror=function(){o(new TypeError(\"Network request failed\"))},s.ontimeout=function(){o(new TypeError(\"Network request failed\"))},s.onabort=function(){o(new e.DOMException(\"Aborted\",\"AbortError\"))},s.open(a.method,a.url,!0),\"include\"===a.credentials?s.withCredentials=!0:\"omit\"===a.credentials&&(s.withCredentials=!1),\"responseType\"in s&&r.blob&&(s.responseType=\"blob\"),a.headers.forEach(function(t,e){s.setRequestHeader(e,t)}),a.signal&&(a.signal.addEventListener(\"abort\",f),s.onreadystatechange=function(){4===s.readyState&&a.signal.removeEventListener(\"abort\",f)}),s.send(void 0===a._bodyInit?null:a._bodyInit)})}_.polyfill=!0,t.fetch||(t.fetch=_,t.Headers=u,t.Request=g,t.Response=m),e.Headers=u,e.Request=g,e.Response=m,e.fetch=_}({})}(r),delete r.fetch.polyfill,t.exports=e=r.fetch,e.fetch=r.fetch,e.Headers=r.Headers,e.Request=r.Request,e.Response=r.Response,e.default=r.fetch},function(t,e,r){\"use strict\";var n=u(r(11)),i=u(r(38)),o=u(r(12)),a=u(r(1)),s=u(r(3));function u(t){return t&&t.__esModule?t:{default:t}}var f=r(98),c=function(){function t(e){var r=e.fetch,n=e.size,i=void 0===n?1e7:n,o=e.chunkSize,s=void 0===o?32768:o;if((0,a.default)(this,t),!r)throw new Error(\"fetch function required\");this.fetch=r,this.chunkSize=s,this.lruCache=new f({maxSize:Math.floor(i/s)})}return(0,s.default)(t,[{key:\"get\",value:function(){var t=(0,o.default)(n.default.mark(function t(e,r,o,a){var s,u,f,c,h,l,d,p=this;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(!(e.length<r+o)){t.next=2;break}throw new Error(\"output buffer not big enough for request\");case 2:for(s=Math.floor(a/this.chunkSize),u=Math.floor((a+o)/this.chunkSize),f=new Array(u-s+1),c=function(t){f[t-s]=p._getChunk(t).then(function(e){return{data:e,chunkNumber:t}})},h=s;h<=u;h+=1)c(h);return t.next=9,i.default.all(f);case 9:l=t.sent,d=a-l[0].chunkNumber*this.chunkSize,l.forEach(function(t){var n=t.data,i=t.chunkNumber,f=i*p.chunkSize,c=0,h=p.chunkSize,l=r+(i-s)*p.chunkSize-d;i===s&&(l=r,c=d),i===u&&(h=a+o-f),n.copy(e,l,c,h)});case 12:case\"end\":return t.stop()}},t,this)}));return function(e,r,n,i){return t.apply(this,arguments)}}()},{key:\"_getChunk\",value:function(t){var e=this.lruCache.get(t);if(e)return e;var r=this.fetch(t*this.chunkSize,this.chunkSize);return this.lruCache.set(t,r),r}}]),t}();t.exports=c},function(t,e,r){\"use strict\";var n=s(r(11)),i=s(r(12)),o=s(r(1)),a=s(r(3));function s(t){return t&&t.__esModule?t:{default:t}}r(111).promisify;var u=null,f=u,c=function(){function t(e){(0,o.default)(this,t),this.position=0,this.filename=e,this.fd=f(this.filename,\"r\")}return(0,a.default)(t,[{key:\"read\",value:function(){var t=(0,i.default)(n.default.mark(function t(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments[2],o=arguments[3];return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return null===o&&(this.position,this.position+=i),t.t0=null,t.next=5,this.fd;case 5:return t.t1=t.sent,t.t2=e,t.t3=r,t.t4=i,t.t5=o,t.abrupt(\"return\",(0,t.t0)(t.t1,t.t2,t.t3,t.t4,t.t5));case 11:case\"end\":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:\"readFile\",value:function(){var t=(0,i.default)(n.default.mark(function t(){return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=null,t.next=3,this.fd;case 3:return t.t1=t.sent,t.abrupt(\"return\",(0,t.t0)(t.t1));case 5:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"stat\",value:function(){var t=(0,i.default)(n.default.mark(function t(){return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(this._stat){t.next=8;break}return t.t0=null,t.next=4,this.fd;case 4:return t.t1=t.sent,t.next=7,(0,t.t0)(t.t1);case 7:this._stat=t.sent;case 8:return t.abrupt(\"return\",this._stat);case 9:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()}]),t}();t.exports=c},function(t,e,r){\"use strict\";var n=o(r(29)),i=o(r(251));function o(t){return t&&t.__esModule?t:{default:t}}t.exports={parseHeaderText:function(t){var e=t.split(/\\r?\\n/),r=[];return e.forEach(function(t){var e=t.split(/\\t/),o=(0,i.default)(e),a=o[0],s=o.slice(1).map(function(t){var e=t.split(\":\",2),r=(0,n.default)(e,2);return{tag:r[0],value:r[1]}});a&&r.push({tag:a.substr(1),data:s})}),r}}},function(t,e,r){\"use strict\";e.__esModule=!0;var n,i=r(107),o=(n=i)&&n.__esModule?n:{default:n};e.default=function(t){return Array.isArray(t)?t:(0,o.default)(t)}},function(t,e,r){\"use strict\";var n=h(r(11)),i=h(r(29)),o=h(r(70)),a=h(r(50)),s=h(r(38)),u=h(r(12)),f=h(r(1)),c=h(r(3));function h(t){return t&&t.__esModule?t:{default:t}}var l=r(2),d=l.CramUnimplementedError,p=l.CramSizeLimitError,g=r(71),v=function(){function t(e){if((0,f.default)(this,t),e.cram?this.cram=e.cram:this.cram=new g({url:e.cramUrl,path:e.cramPath,filehandle:e.cramFilehandle,seqFetch:e.seqFetch,checkSequenceMD5:e.checkSequenceMD5,cacheSize:e.cacheSize}),!(this.cram instanceof g))throw new Error(\"invalid arguments: no cramfile\");if(this.index=e.index,!this.index.getEntriesForRange)throw new Error(\"invalid arguments: not an index\");this.fetchSizeLimit=e.fetchSizeLimit||3e6}return(0,c.default)(t,[{key:\"getRecordsForRange\",value:function(){var t=(0,u.default)(n.default.mark(function t(e,r,u){var f,c,h,l,g,v,m,y,_,b,w,x,E,S,k,A,C,T,R,I,B,L,M,O,F,N,P=this,U=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(U.viewAsPairs=U.viewAsPairs||!1,U.pairAcrossChr=U.pairAcrossChr||!1,U.maxInsertSize=U.maxInsertSize||2e5,\"string\"!=typeof e){t.next=5;break}throw new d(\"string sequence names not yet supported\");case 5:return c=e,t.next=8,this.index.getEntriesForRange(c,r,u);case 8:if(h=t.sent,!((l=h.map(function(t){return t.sliceBytes}).reduce(function(t,e){return t+e},0))>this.fetchSizeLimit)){t.next=12;break}throw new p(\"data size of \"+l.toLocaleString()+\" bytes exceeded fetch size limit of \"+this.fetchSizeLimit.toLocaleString()+\" bytes\");case 12:return g=function(t){return t.sequenceId===e&&t.alignmentStart<=u&&t.alignmentStart+t.lengthOnRef>=r},t.next=15,s.default.all(h.map(function(t){return P.getRecordsInSlice(t,g)}));case 15:if(v=t.sent,m=(f=Array.prototype).concat.apply(f,(0,a.default)(v)),!U.viewAsPairs){t.next=41;break}for(y={},_={},b=0;b<m.length;b+=1)w=m[b].readName,x=m[b].uniqueId,y[w]||(y[w]=0),y[w]+=1,_[x]=1;for(E={},(0,o.default)(y).forEach(function(t){var e=(0,i.default)(t,2),r=e[0];1===e[1]&&(E[r]=!0)}),S=[],k=0;k<m.length;k+=1)A=m[k].readName,E[A]&&m[k].mate&&(m[k].mate.sequenceId===c||U.pairAcrossChr)&&Math.abs(m[k].alignmentStart-m[k].mate.alignmentStart)<U.maxInsertSize&&(C=this.index.getEntriesForRange(m[k].mate.sequenceId,m[k].mate.alignmentStart,m[k].mate.alignmentStart+1),S.push(C));return t.next=27,s.default.all(S);case 27:for(T=t.sent,R=[],I=0;I<T.length;I+=1)(B=R).push.apply(B,(0,a.default)(T[I]));if(R=R.sort(function(t,e){return t.toString().localeCompare(e.toString())}).filter(function(t,e,r){return!e||t.toString()!==r[e-1].toString()}),L=[],M=[],!((O=R.map(function(t){return t.sliceBytes}).reduce(function(t,e){return t+e},0))>this.fetchSizeLimit)){t.next=36;break}throw new Error(\"mate data size of \"+O.toLocaleString()+\" bytes exceeded fetch size limit of \"+this.fetchSizeLimit.toLocaleString()+\" bytes\");case 36:return R.forEach(function(t){var e=P.cram.featureCache.get(t.toString());e||(e=P.getRecordsInSlice(t,function(){return!0}),P.cram.featureCache.set(t.toString(),e)),L.push(e);var r=e.then(function(t){for(var e=[],r=0;r<t.length;r+=1){var n=t[r];E[n.readName]&&!_[n.uniqueId]&&e.push(n)}return e});M.push(r)}),t.next=39,s.default.all(M);case 39:(F=t.sent).length&&(N=F.reduce(function(t,e){return t.concat(e)}),m=m.concat(N));case 41:return t.abrupt(\"return\",m);case 42:case\"end\":return t.stop()}},t,this)}));return function(e,r,n){return t.apply(this,arguments)}}()},{key:\"getRecordsInSlice\",value:function(t,e){var r=t.containerStart,n=t.sliceStart,i=t.sliceBytes;return this.cram.getContainerAtPosition(r).getSlice(n,i).getRecords(e)}},{key:\"hasDataForReferenceSequence\",value:function(t){return this.index.hasDataForReferenceSequence(t)}}]),t}();t.exports=v},function(t,e,r){\"use strict\";var n=h(r(11)),i=h(r(12)),o=h(r(70)),a=h(r(108)),s=h(r(29)),u=h(r(49)),f=h(r(1)),c=h(r(3));function h(t){return t&&t.__esModule?t:{default:t}}var l=(0,r(111).promisify)(r(88).gunzip),d=r(110).open,p=r(2).CramMalformedError,g=function(){function t(e){(0,f.default)(this,t),(0,u.default)(this,e)}return(0,c.default)(t,[{key:\"toString\",value:function(){return this.start+\":\"+this.span+\":\"+this.containerStart+\":\"+this.sliceStart+\":\"+this.sliceBytes}}]),t}();function v(t,e){if(e.some(function(t){return void 0===t}))throw new p(\"invalid .crai index file\");var r=(0,s.default)(e,6),n=r[0],i=r[1],o=r[2],a=r[3],u=r[4],f=r[5];t[n]||(t[n]=[]),t[n].push(new g({start:i,span:o,containerStart:a,sliceStart:u,sliceBytes:f}))}var m=function(){function t(e){(0,f.default)(this,t);var r=d(e.url,e.path,e.filehandle);this.readFile=r.readFile.bind(r),this.index=this.parseIndex()}return(0,c.default)(t,[{key:\"parseIndex\",value:function(){var t={};return this.readFile().then(function(t){return 31===t[0]&&139===t[1]?l(t):t}).then(function(e){for(var r=[],n=\"\",i=0;i<e.length;i+=1){var u=e[i];if(u>=48&&u<=57||!n&&45===u)n+=String.fromCharCode(u);else if(9===u)r.push((0,a.default)(n,10)),n=\"\";else if(10===u)r.push((0,a.default)(n,10)),n=\"\",v(t,r),r=[];else if(13!==u&&32!==u)throw new p(\"invalid .crai index file\")}return n&&r.push((0,a.default)(n,10)),6===r.length&&v(t,r),(0,o.default)(t).forEach(function(e){var r=(0,s.default)(e,2),n=r[0],i=r[1];t[n]=i.sort(function(t,e){return t.start-e.start||t.span-e.span})}),t})}},{key:\"getIndex\",value:function(){return this.index}},{key:\"hasDataForReferenceSequence\",value:function(){var t=(0,i.default)(n.default.mark(function t(e){return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.index;case 2:return t.t0=e,t.abrupt(\"return\",!!t.sent[t.t0]);case 4:case\"end\":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:\"getEntriesForRange\",value:function(){var t=(0,i.default)(n.default.mark(function t(e,r,i){var o,a,s,u,f,c,h,l,d,p,g,v;return n.default.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.index;case 2:if(t.t0=e,o=t.sent[t.t0]){t.next=6;break}return t.abrupt(\"return\",[]);case 6:a=o.length,s=function(t){var e=t.start,n=t.start+t.span;return e>=i?-1:n<=r?1:0},u=0,f=a-1,c=void 0;case 11:if(!(u<=f)){t.next=25;break}if(c=Math.round((f+u)/2),!((h=s(o[c]))>0)){t.next=18;break}u=c+1,t.next=23;break;case 18:if(!(h<0)){t.next=22;break}f=c-1,t.next=23;break;case 22:return t.abrupt(\"break\",25);case 23:t.next=11;break;case 25:for(l=c;l&&!s(o[l-1]);)l-=1;for(d=c;d<a-1&&!s(o[d+1]);)d+=1;if(p=o[l].start,g=o[d].start+o[d].span,v=i,!(g>=r&&v>=p)){t.next=35;break}return t.abrupt(\"return\",o.slice(l,d+1));case 35:return t.abrupt(\"return\",[]);case 36:case\"end\":return t.stop()}},t,this)}));return function(e,r,n){return t.apply(this,arguments)}}()}]),t}();t.exports=m}]);\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 4/5/18.\n */\n\n\nvar igv = (function (igv) {\n\n\n    igv.AlignmentBlock = function (b) {\n        if (b) {\n            Object.assign(this, b);\n        }\n    }\n\n    igv.AlignmentBlock.prototype.seqIndexAt = function (genomicLocation) {\n        return Math.floor(genomicLocation) - this.start + this.seqOffset\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n\n    function canBePaired(alignment) {\n        return alignment.isPaired() &&\n            alignment.mate &&\n            alignment.isMateMapped() &&\n            alignment.chr === alignment.mate.chr &&\n            (alignment.isFirstOfPair() || alignment.isSecondOfPair()) && !(alignment.isSecondary() || alignment.isSupplementary());\n    }\n\n\n    igv.AlignmentContainer = function (chr, start, end, samplingWindowSize, samplingDepth, pairsSupported) {\n\n        this.chr = chr;\n        this.start = Math.floor(start);\n        this.end = Math.ceil(end);\n        this.length = (end - start);\n\n        this.coverageMap = new CoverageMap(chr, start, end);\n        this.alignments = [];\n        this.downsampledIntervals = [];\n\n        this.samplingWindowSize = samplingWindowSize === undefined ? 100 : samplingWindowSize;\n        this.samplingDepth = samplingDepth === undefined ? 100 : samplingDepth;\n\n        this.pairsSupported = pairsSupported === undefined ? true : pairsSupported;\n        this.paired = false;  // false until proven otherwise\n        this.pairsCache = {};  // working cache of paired alignments by read name\n\n        this.downsampledReads = new Set();\n\n        this.currentBucket = new DownsampleBucket(this.start, this.start + this.samplingWindowSize, this);\n\n        this.filter = function filter(alignment) {         // TODO -- pass this in\n            return alignment.isMapped() && !alignment.isFailsVendorQualityCheck();\n        }\n\n        this.pairedEndStats = new PairedEndStats();\n\n    }\n\n    igv.AlignmentContainer.prototype.push = function (alignment) {\n\n        if (this.filter(alignment) === false) return;\n\n        if (alignment.isPaired()) {\n            this.pairedEndStats.push(alignment);\n        }\n\n        this.coverageMap.incCounts(alignment);   // Count coverage before any downsampling\n\n        if (this.pairsSupported && this.downsampledReads.has(alignment.readName)) {\n            return;   // Mate already downsampled -- pairs are treated as a single alignment for downsampling\n        }\n\n        if (alignment.start >= this.currentBucket.end) {\n            finishBucket.call(this);\n            this.currentBucket = new DownsampleBucket(alignment.start, alignment.start + this.samplingWindowSize, this);\n        }\n\n        this.currentBucket.addAlignment(alignment);\n\n    }\n\n    igv.AlignmentContainer.prototype.forEach = function (callback) {\n        this.alignments.forEach(callback);\n    }\n\n    igv.AlignmentContainer.prototype.finish = function () {\n\n        if (this.currentBucket !== undefined) {\n            finishBucket.call(this);\n        }\n\n        this.alignments.sort(function (a, b) {\n            return a.start - b.start\n        });\n\n        this.pairsCache = undefined;\n        this.downsampledReads = undefined;\n\n        this.pairedEndStats.compute();\n    }\n\n    igv.AlignmentContainer.prototype.contains = function (chr, start, end) {\n        return this.chr == chr &&\n            this.start <= start &&\n            this.end >= end;\n    }\n\n    igv.AlignmentContainer.prototype.hasDownsampledIntervals = function () {\n        return this.downsampledIntervals && this.downsampledIntervals.length > 0;\n    }\n\n    function finishBucket() {\n        this.alignments = this.alignments.concat(this.currentBucket.alignments);\n        if (this.currentBucket.downsampledCount > 0) {\n            this.downsampledIntervals.push(new DownsampledInterval(\n                this.currentBucket.start,\n                this.currentBucket.end,\n                this.currentBucket.downsampledCount));\n        }\n        this.paired = this.paired || this.currentBucket.paired;\n    }\n\n    function DownsampleBucket(start, end, alignmentContainer) {\n\n        this.start = start;\n        this.end = end;\n        this.alignments = [];\n        this.downsampledCount = 0;\n        this.samplingDepth = alignmentContainer.samplingDepth;\n        this.pairsSupported = alignmentContainer.pairsSupported;\n        this.downsampledReads = alignmentContainer.downsampledReads;\n        this.pairsCache = alignmentContainer.pairsCache;\n    }\n\n    DownsampleBucket.prototype.addAlignment = function (alignment) {\n\n        var idx, replacedAlignment, pairedAlignment;\n\n        if (this.pairsSupported && canBePaired(alignment)) {\n            pairedAlignment = this.pairsCache[alignment.readName];\n            if (pairedAlignment) {\n                // Not subject to downsampling, just update the existing alignment\n                pairedAlignment.setSecondAlignment(alignment);\n                this.pairsCache[alignment.readName] = undefined;   // Don't need to track this anymore. NOTE: Don't \"delete\", causes runtime performance issues\n                return;\n            }\n        }\n        \n        if (this.alignments.length < this.samplingDepth) {\n\n            if (this.pairsSupported && canBePaired(alignment)) {\n\n                // First alignment in a pair\n                pairedAlignment = new igv.PairedAlignment(alignment);\n                this.paired = true;\n                this.pairsCache[alignment.readName] = pairedAlignment;\n                this.alignments.push(pairedAlignment);\n\n            }\n            else {\n                this.alignments.push(alignment);\n            }\n\n        } else {\n\n            idx = Math.floor(Math.random() * (this.samplingDepth + this.downsampledCount - 1));\n\n            if (idx < this.samplingDepth) {\n                \n                // Keep the new item\n                //  idx = Math.floor(Math.random() * (this.alignments.length - 1));\n                replacedAlignment = this.alignments[idx];   // To be replaced\n\n                if (this.pairsSupported && canBePaired(alignment)) {\n\n                    if (this.pairsCache[replacedAlignment.readName] !== undefined) {\n                        this.pairsCache[replacedAlignment.readName] = undefined;\n                    }\n\n                    pairedAlignment = new igv.PairedAlignment(alignment);\n                    this.paired = true;\n                    this.pairsCache[alignment.readName] = pairedAlignment;\n                    this.alignments[idx] = pairedAlignment;\n\n                }\n                else {\n                    this.alignments[idx] = alignment;\n                }\n                this.downsampledReads.add(replacedAlignment.readName);\n\n            }\n            else {\n                this.downsampledReads.add(alignment.readName);\n            }\n\n            this.downsampledCount++;\n        }\n\n\n    }\n\n\n    // TODO -- refactor this to use an object, rather than an array,  if end-start is > some threshold\n    function CoverageMap(chr, start, end) {\n\n        this.chr = chr;\n        this.bpStart = start;\n        this.length = (end - start);\n\n        this.coverage = new Array(this.length);\n\n        this.maximum = 0;\n\n        this.threshold = 0.2;\n        this.qualityWeight = true;\n    }\n\n    CoverageMap.prototype.incCounts = function (alignment) {\n\n        var self = this;\n\n        if (alignment.blocks === undefined) {\n            incBlockCount(alignment);\n        }\n        else {\n            alignment.blocks.forEach(function (block) {\n                incBlockCount(block);\n            });\n        }\n\n        function incBlockCount(block) {\n\n            if('S' === block.type) return;\n            \n            const seq = alignment.seq;\n            const qual = alignment.qual;\n            const seqOffset = block.seqOffset;\n\n            for (let i = block.start - self.bpStart, j = 0; j < block.len; i++, j++) {\n\n                if (!self.coverage[i]) {\n                    self.coverage[i] = new Coverage();\n                }\n\n                const base = seq.charAt(seqOffset + j);\n                const key = (alignment.strand) ? \"pos\" + base : \"neg\" + base;\n                const q = qual && seqOffset + j < qual.length ? qual[seqOffset + j] : 30;\n\n                self.coverage[i][key] += 1;\n                self.coverage[i][\"qual\" + base] += q;\n\n                self.coverage[i].total += 1;\n                self.coverage[i].qual += q;\n\n                self.maximum = Math.max(self.coverage[i].total, self.maximum);\n\n            }\n        }\n    }\n\n    function Coverage() {\n        this.posA = 0;\n        this.negA = 0;\n\n        this.posT = 0;\n        this.negT = 0;\n\n        this.posC = 0;\n        this.negC = 0;\n        this.posG = 0;\n\n        this.negG = 0;\n\n        this.posN = 0;\n        this.negN = 0;\n\n        this.pos = 0;\n        this.neg = 0;\n\n        this.qualA = 0;\n        this.qualT = 0;\n        this.qualC = 0;\n        this.qualG = 0;\n        this.qualN = 0;\n\n        this.qual = 0;\n\n        this.total = 0;\n    }\n\n    const t = 0.2;\n    const qualityWeight = true;\n\n\n    Coverage.prototype.isMismatch = function (refBase) {\n\n        var myself = this,\n            mismatchQualitySum,\n             threshold = t * ((qualityWeight && this.qual) ? this.qual : this.total);\n\n        mismatchQualitySum = 0;\n        [\"A\", \"T\", \"C\", \"G\"].forEach(function (base) {\n\n            if (base !== refBase) {\n                mismatchQualitySum += ((qualityWeight && myself.qual) ? myself[\"qual\" + base] : (myself[\"pos\" + base] + myself[\"neg\" + base]));\n            }\n        });\n\n        return mismatchQualitySum >= threshold;\n\n    };\n\n    function DownsampledInterval(start, end, counts) {\n        this.start = start;\n        this.end = end;\n        this.counts = counts;\n    }\n\n    DownsampledInterval.prototype.popupData = function (genomicLocation) {\n        return [\n            {name: \"start\", value: this.start + 1},\n            {name: \"end\", value: this.end},\n            {name: \"# downsampled:\", value: this.counts}]\n    }\n\n    function PairedEndStats(lowerPercentile, upperPercentile) {\n        this.totalCount = 0;\n        this.frCount = 0;\n        this.rfCount = 0;\n        this.ffCount = 0;\n        this.sumF = 0;\n        this.sumF2 = 0;\n        //this.lp = lowerPercentile === undefined ? 0.005 : lowerPercentile;\n        //this.up = upperPercentile === undefined ? 0.995 : upperPercentile;\n        //this.digest = new Digest();\n    }\n\n    PairedEndStats.prototype.push = function (alignment) {\n\n        if (alignment.isProperPair()) {\n\n            var fragmentLength = Math.abs(alignment.fragmentLength);\n            //this.digest.push(fragmentLength);\n            this.sumF += fragmentLength;\n            this.sumF2 += fragmentLength * fragmentLength;\n\n            var po = alignment.pairOrientation;\n\n            if (typeof po === \"string\" && po.length == 4) {\n                var tmp = '' + po.charAt(0) + po.charAt(2);\n                switch (tmp) {\n                    case 'FF':\n                    case 'RR':\n                        this.ffCount++;\n                        break;\n                    case \"FR\":\n                        this.frCount++;\n                        break;\n                    case\"RF\":\n                        this.rfCount++;\n                }\n            }\n            this.totalCount++;\n        }\n    }\n\n    PairedEndStats.prototype.compute = function () {\n\n        if (this.totalCount > 100) {\n            if (this.ffCount / this.totalCount > 0.9) this.orienation = \"ff\";\n            else if (this.frCount / this.totalCount > 0.9) this.orienation = \"fr\";\n            else if (this.rfCount / this.totalCount > 0.9) this.orienation = \"rf\";\n\n\n            var fMean = this.sumF / this.totalCount;\n            var stdDev = Math.sqrt((this.totalCount * this.sumF2 - this.sumF * this.sumF) / (this.totalCount * this.totalCount));\n            this.lowerFragmentLength = fMean - 3 * stdDev;\n            this.upperFragmentLength = fMean + 3 * stdDev;\n\n            //this.lowerFragmentLength = this.digest.percentile(this.lp);\n            //this.upperFragmentLength = this.digest.percentile(this.up);\n            //this.digest = undefined;\n        }\n\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    const READ_PAIRED_FLAG = 0x1;\n    const PROPER_PAIR_FLAG = 0x2;\n    const READ_UNMAPPED_FLAG = 0x4;\n    const MATE_UNMAPPED_FLAG = 0x8;\n    const READ_STRAND_FLAG = 0x10;\n    const MATE_STRAND_FLAG = 0x20;\n    const FIRST_OF_PAIR_FLAG = 0x40;\n    const SECOND_OF_PAIR_FLAG = 0x80;\n    const SECONDARY_ALIGNMNET_FLAG = 0x100;\n    const READ_FAILS_VENDOR_QUALITY_CHECK_FLAG = 0x200;\n    const DUPLICATE_READ_FLAG = 0x400;\n    const SUPPLEMENTARY_ALIGNMENT_FLAG = 0x800;\n\n    /**\n     * readName\n     * chr\n     * cigar\n     * lengthOnRef\n     * start\n     * seq\n     * qual\n     * mq\n     * strand\n     * blocks\n     */\n\n    igv.BamAlignment = function () {\n        this.hidden = false;\n    }\n\n    igv.BamAlignment.prototype.isMapped = function () {\n        return (this.flags & READ_UNMAPPED_FLAG) === 0;\n    }\n\n    igv.BamAlignment.prototype.isPaired = function () {\n        return (this.flags & READ_PAIRED_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.isProperPair = function () {\n        return (this.flags & PROPER_PAIR_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.isFirstOfPair = function () {\n        return (this.flags & FIRST_OF_PAIR_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.isSecondOfPair = function () {\n        return (this.flags & SECOND_OF_PAIR_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.isSecondary = function () {\n        return (this.flags & SECONDARY_ALIGNMNET_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.isSupplementary = function () {\n        return (this.flags & SUPPLEMENTARY_ALIGNMENT_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.isFailsVendorQualityCheck = function () {\n        return (this.flags & READ_FAILS_VENDOR_QUALITY_CHECK_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.isDuplicate = function () {\n        return (this.flags & DUPLICATE_READ_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.isMateMapped = function () {\n        return (this.flags & MATE_UNMAPPED_FLAG) === 0;\n    }\n\n    igv.BamAlignment.prototype.isNegativeStrand = function () {\n        return (this.flags & READ_STRAND_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.isMateNegativeStrand = function () {\n        return (this.flags & MATE_STRAND_FLAG) !== 0;\n    }\n\n    igv.BamAlignment.prototype.tags = function () {\n\n        if (!this.tagDict) {\n            if (this.tagBA) {\n                this.tagDict = decodeTags(this.tagBA);\n                this.tagBA = undefined;\n            } else {\n                this.tagDict = {};  // Mark so we don't try again.  The record has not tags\n            }\n        }\n        return this.tagDict;\n\n        function decodeTags(ba) {\n\n            var p = 0,\n                len = ba.length,\n                tags = {};\n\n            while (p < len) {\n                var tag = String.fromCharCode(ba[p]) + String.fromCharCode(ba[p + 1]);\n                var type = String.fromCharCode(ba[p + 2]);\n                var value;\n\n                if (type == 'A') {\n                    value = String.fromCharCode(ba[p + 3]);\n                    p += 4;\n                } else if (type === 'i' || type === 'I') {\n                    value = readInt(ba, p + 3);\n                    p += 7;\n                } else if (type === 'c' || type === 'C') {\n                    value = ba[p + 3];\n                    p += 4;\n                } else if (type === 's' || type === 'S') {\n                    value = readShort(ba, p + 3);\n                    p += 5;\n                } else if (type === 'f') {\n                    value = readFloat(ba, p + 3);\n                    p += 7;\n                } else if (type === 'Z') {\n                    p += 3;\n                    value = '';\n                    for (; ;) {\n                        var cc = ba[p++];\n                        if (cc === 0) {\n                            break;\n                        } else {\n                            value += String.fromCharCode(cc);\n                        }\n                    }\n                } else {\n                    //'Unknown type ' + type;\n                    value = 'Error unknown type: ' + type;\n                    tags[tag] = value;\n                    break;\n                }\n                tags[tag] = value;\n            }\n            return tags;\n        }\n\n    }\n\n    igv.BamAlignment.prototype.popupData = function (genomicLocation) {\n\n        // if the user clicks on a base next to an insertion, show just the\n        // inserted bases in a popup (like in desktop IGV).\n        const nameValues = [];\n\n        // Consert genomic location to int\n        genomicLocation = Math.floor(genomicLocation);\n\n        if (this.insertions) {\n\n            const seq = this.seq;\n\n            for(let insertion of this.insertions) {\n                var ins_start = insertion.start;\n                if (genomicLocation === ins_start || genomicLocation === ins_start - 1) {\n                    nameValues.push({name: 'Insertion', value:  seq.substr(insertion.seqOffset, insertion.len)});\n                    nameValues.push({name: 'Location', value: ins_start});\n                    return nameValues;\n                }\n            }\n        }\n\n        nameValues.push({name: 'Read Name', value: this.readName});\n\n        // Sample\n        // Read group\n        nameValues.push(\"<hr>\");\n\n        // Add 1 to genomic location to map from 0-based computer units to user-based units\n        nameValues.push({name: 'Alignment Start', value: igv.numberFormatter(1 + this.start), borderTop: true});\n        nameValues.push({name: 'Read Strand', value: (true === this.strand ? '(+)' : '(-)'), borderTop: true});\n        nameValues.push({name: 'Cigar', value: this.cigar});\n        nameValues.push({name: 'Mapped', value: yesNo(this.isMapped())});\n        nameValues.push({name: 'Mapping Quality', value: this.mq});\n        nameValues.push({name: 'Secondary', value: yesNo(this.isSecondary())});\n        nameValues.push({name: 'Supplementary', value: yesNo(this.isSupplementary())});\n        nameValues.push({name: 'Duplicate', value: yesNo(this.isDuplicate())});\n        nameValues.push({name: 'Failed QC', value: yesNo(this.isFailsVendorQualityCheck())});\n\n        if (this.isPaired()) {\n            nameValues.push(\"<hr>\");\n            nameValues.push({name: 'First in Pair', value: !this.isSecondOfPair(), borderTop: true});\n            nameValues.push({name: 'Mate is Mapped', value: yesNo(this.isMateMapped())});\n            if (this.pairOrientation) {\n                nameValues.push({name: 'Pair Orientation', value: this.pairOrientation});\n            }\n            if (this.isMateMapped()) {\n                nameValues.push({name: 'Mate Chromosome', value: this.mate.chr});\n                nameValues.push({name: 'Mate Start', value: (this.mate.position + 1)});\n                nameValues.push({name: 'Mate Strand', value: (true === this.mate.strand ? '(+)' : '(-)')});\n                nameValues.push({name: 'Insert Size', value: this.fragmentLength});\n                // Mate Start\n                // Mate Strand\n                // Insert Size\n            }\n            // First in Pair\n            // Pair Orientation\n\n        }\n\n        nameValues.push(\"<hr>\");\n\n        const tagDict = this.tags();\n        let isFirst = true;\n        for (let key in tagDict) {\n\n            if (tagDict.hasOwnProperty(key)) {\n\n                if (isFirst) {\n                    nameValues.push({name: key, value: tagDict[key], borderTop: true});\n                    isFirst = false;\n                } else {\n                    nameValues.push({name: key, value: tagDict[key]});\n                }\n\n            }\n        }\n\n        nameValues.push(\"<hr>\");\n        nameValues.push({name: 'Genomic Location: ', value: igv.numberFormatter(1 + genomicLocation)});\n        nameValues.push({name: 'Read Base:', value: this.readBaseAt(genomicLocation)});\n        nameValues.push({name: 'Base Quality:', value: this.readBaseQualityAt(genomicLocation)});\n\n        return nameValues;\n\n\n        function yesNo(bool) {\n            return bool ? 'Yes' : 'No';\n        }\n    }\n\n\n    igv.BamAlignment.prototype.readBaseAt = function (genomicLocation) {\n\n        const block = blockAtGenomicLocation(this.blocks, genomicLocation);\n\n        if (block) {\n\n            if (\"*\" === this.seq) {\n                return \"*\";\n            } else {\n                const idx = block.seqIndexAt(genomicLocation);\n               // if (idx >= 0 && idx < this.seq.length) {\n                    return this.seq[idx];\n              //  }\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    igv.BamAlignment.prototype.readBaseQualityAt = function (genomicLocation) {\n\n        const block = blockAtGenomicLocation(this.blocks, genomicLocation);\n\n        if (block) {\n            if (\"*\" === this.qual) {\n                return 30;\n            } else {\n                const idx = block.seqIndexAt(genomicLocation);\n              //  if (idx >= 0 && idx < this.qual.length) {\n                    return this.qual[idx];\n              //  }\n            }\n        }\n        else {\n            return undefined;\n        }\n\n    }\n\n    function blockAtGenomicLocation(blocks, genomicLocation) {\n\n        for (let i = 0; i < blocks.length; i++) {\n            const block = blocks[i];\n            if (genomicLocation >= block.start && genomicLocation < block.start + block.len) {\n                return block;\n            }\n        }\n        return undefined;\n    }\n\n    function readInt(ba, offset) {\n        return (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset]);\n    }\n\n    function readShort(ba, offset) {\n        return (ba[offset + 1] << 8) | (ba[offset]);\n    }\n\n    function readFloat(ba, offset) {\n\n        var dataView = new DataView(ba.buffer),\n            littleEndian = true;\n\n        return dataView.getFloat32(offset, littleEndian);\n\n    }\n\n\n    igv.BamFilter = function (options) {\n\n        if (!options) options = {};\n        this.vendorFailed = options.vendorFailed === undefined ? true : options.vendorFailed;\n        this.duplicates = options.duplicates === undefined ? true : options.duplicates;\n        this.secondary = options.secondary || false;\n        this.supplementary = options.supplementary || false;\n        this.mqThreshold = options.mqThreshold === undefined ? 0 : options.mqThreshold;\n        if(options.readgroups) {\n            this.readgroups = new Set(options.readgroups);\n        }\n    }\n\n    igv.BamFilter.prototype.pass = function (alignment) {\n\n        if (this.vendorFailed && alignment.isFailsVendorQualityCheck()) return false;\n        if (this.duplicates && alignment.isDuplicate()) return false;\n        if (this.secondary && alignment.isSecondary()) return false;\n        if (this.supplementary && alignment.isSupplementary()) return false;\n        if (alignment.mq < this.mqThreshold) return false;\n\n        if(this.readgroups) {\n            var rg = alignment.tags()['RG'];\n            return this.readgroups.has(rg);\n        }\n\n        return true;\n\n\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by turner on 2/10/15.\n */\nvar igv = (function (igv) {\n\n    igv.BamAlignmentRow = function () {\n\n        this.alignments = [];\n        this.score = undefined;\n    };\n\n    igv.BamAlignmentRow.prototype.findAlignment = function (genomicLocation) {\n\n        var centerAlignment, a, i;\n\n        // find single alignment that overlaps sort location\n\n        for (i = 0; i < this.alignments.length; i++) {\n            a = this.alignments[i];\n            if (alignmentContains(a, genomicLocation)) {\n                if (a.paired) {\n                    if (a.firstAlignment && alignmentContains(a.firstAlignment, genomicLocation)) {\n                        centerAlignment = a.firstAlignment;\n                    } else if (a.secondAlignment && alignmentContains(a.secondAlignment, genomicLocation)) {\n                        centerAlignment = a.secondAlignment;\n                    }\n                } else {\n                    centerAlignment = a;\n                }\n                break;\n            }\n        }\n\n        return centerAlignment;\n\n        function alignmentContains(a, genomicLocation) {\n            return genomicLocation >= a.start && genomicLocation < a.start + a.lengthOnRef\n        }\n    }\n\n    igv.BamAlignmentRow.prototype.updateScore = function (genomicLocation, genomicInterval, sortOption, sortDirection) {\n\n        this.score = this.calculateScore(Math.floor(genomicLocation), genomicInterval, sortOption, sortDirection);\n\n    };\n\n    igv.BamAlignmentRow.prototype.calculateScore = function (genomicLocation, interval, sortOption, sortDirection) {\n\n        const alignment = this.findAlignment(genomicLocation);\n\n        if (undefined === alignment) {\n            return sortDirection ? Number.MAX_VALUE : -Number.MAX_VALUE;\n        }\n\n        if (\"NUCLEOTIDE\" === sortOption) {\n\n            const readBase = alignment.readBaseAt(genomicLocation);\n            const quality = alignment.readBaseQualityAt(genomicLocation);\n\n            if (!readBase) {\n                return sortDirection ? Number.MAX_VALUE : -Number.MAX_VALUE;\n            }\n            else {\n                return calculateBaseScore(readBase, quality, interval, genomicLocation);\n            }\n\n        } else if (\"STRAND\" === sortOption) {\n\n            return alignment.strand ? 1 : -1;\n\n        } else if (\"START\" === sortOption) {\n\n            return alignment.start;\n        }\n\n        return Number.MAX_VALUE;\n\n\n        function calculateBaseScore(base, quality, interval, genomicLocation) {\n            var idx,\n                reference,\n                coverage,\n                count,\n                phred;\n\n\n            idx = Math.floor(genomicLocation) - interval.start;\n            if (idx < interval.sequence.length) {\n                reference = interval.sequence.charAt(idx);\n            }\n            if (!reference) {\n                return undefined;\n            }\n\n            if (undefined === base) {\n                return Number.MAX_VALUE;\n            }\n            if ('N' === base) {\n                return 2;\n\n            } else if (reference === base || '=' === base) {\n                return 4 - quality / 1000;\n\n            } else if (\"X\" === base || reference !== base) {\n\n                idx = Math.floor(genomicLocation) - interval.coverageMap.bpStart;\n\n                if (idx > 0 && idx < interval.coverageMap.coverage.length) {\n\n                    coverage = interval.coverageMap.coverage[idx];\n                    count = coverage[\"pos\" + base] + coverage[\"neg\" + base];\n\n                    return -(count + (quality / 1000));\n                } else {\n                    return -(1 + quality / 1000);\n                }\n            }\n\n            return 0;\n        }\n\n    };\n\n    return igv;\n\n})(igv || {});\n\n// Represents a BAM index.\n// Code is based heavily on bam.js, part of the Dalliance Genome Explorer,  (c) Thomas Down 2006-2001.\n\nvar igv = (function (igv) {\n\n\n    const BAI_MAGIC = 21578050;\n    const TABIX_MAGIC = 21578324;\n    const MAX_HEADER_SIZE = 100000000;   // IF the header is larger than this we can't read it !\n    const MAX_GZIP_BLOCK_SIZE = (1 << 16);\n\n    /**\n     * @param indexURL\n     * @param config\n     * @param tabix\n     *\n     * @returns a Promised for the bam or tabix index.  The fulfill function takes the index as an argument.\n     */\n    igv.loadBamIndex = function (indexURL, config, tabix, genome) {\n\n        return new Promise(function (fullfill, reject) {\n            \n            igv.xhr\n                .loadArrayBuffer(indexURL, igv.buildOptions(config))\n               \n                .then(function (arrayBuffer) {\n\n                    var indices = [],\n                        magic, nbin, nintv, nref, parser,\n                        blockMin = Number.MAX_VALUE,\n                        blockMax = 0,\n                        binIndex, linearIndex, binNumber, cs, ce, b, i, ref, sequenceIndexMap;\n\n                    if (!arrayBuffer) {\n                        fullfill(null);\n                        return;\n                    }\n\n                    if (tabix) {\n                        var inflate = new Zlib.Gunzip(new Uint8Array(arrayBuffer));\n                        arrayBuffer = inflate.decompress().buffer;\n                    }\n\n                    parser = new igv.BinaryParser(new DataView(arrayBuffer));\n\n                    magic = parser.getInt();\n\n                    if (magic === BAI_MAGIC || (tabix && magic === TABIX_MAGIC)) {\n\n                        nref = parser.getInt();\n\n                        if (tabix) {\n                            // Tabix header parameters aren't used, but they must be read to advance the pointer\n                            var format = parser.getInt();\n                            var col_seq = parser.getInt();\n                            var col_beg = parser.getInt();\n                            var col_end = parser.getInt();\n                            var meta = parser.getInt();\n                            var skip = parser.getInt();\n                            var l_nm = parser.getInt();\n\n                            sequenceIndexMap = {};\n                            for (i = 0; i < nref; i++) {\n                                var seq_name = parser.getString();\n\n                                // Translate to \"official\" chr name.\n                                if (genome) {\n                                    seq_name = genome.getChromosomeName(seq_name);\n                                }\n\n                                sequenceIndexMap[seq_name] = i;\n                            }\n                        }\n\n                        for (ref = 0; ref < nref; ref++) {\n\n                            binIndex = {};\n                            linearIndex = [];\n\n                            nbin = parser.getInt();\n\n                            for (b = 0; b < nbin; b++) {\n\n                                binNumber = parser.getInt();\n\n                                if (binNumber === 37450) {\n                                    // This is a psuedo bin, not used but we have to consume the bytes\n                                    nchnk = parser.getInt(); // # of chunks for this bin\n                                    cs = parser.getVPointer();   // unmapped beg\n                                    ce = parser.getVPointer();   // unmapped end\n                                    var n_maped = parser.getLong();\n                                    var nUnmapped = parser.getLong();\n\n                                }\n                                else {\n\n                                    binIndex[binNumber] = [];\n                                    var nchnk = parser.getInt(); // # of chunks for this bin\n\n                                    for (i = 0; i < nchnk; i++) {\n                                        cs = parser.getVPointer();    //chunk_beg\n                                        ce = parser.getVPointer();    //chunk_end\n                                        if (cs && ce) {\n                                            if (cs.block < blockMin) {\n                                                blockMin = cs.block;    // Block containing first alignment\n                                            }\n                                            if (ce.block > blockMax) {\n                                                blockMax = ce.block;\n                                            }\n                                            binIndex[binNumber].push([cs, ce]);\n                                        }\n                                    }\n                                }\n                            }\n\n\n                            nintv = parser.getInt();\n                            for (i = 0; i < nintv; i++) {\n                                cs = parser.getVPointer();\n                                linearIndex.push(cs);   // Might be null\n                            }\n\n                            if (nbin > 0) {\n                                indices[ref] = {\n                                    binIndex: binIndex,\n                                    linearIndex: linearIndex\n                                }\n                            }\n                        }\n\n                    } else {\n                        throw new Error(indexURL + \" is not a \" + (tabix ? \"tabix\" : \"bai\") + \" file\");\n                    }\n                    fullfill(new igv.BamIndex(indices, blockMin, blockMax, sequenceIndexMap, tabix));\n                })\n                .catch(reject);\n        })\n    };\n\n    igv.BamIndex = function (indices, blockMin, blockMax, sequenceIndexMap, tabix) {\n        this.firstAlignmentBlock = blockMin;\n        this.lastAlignmentBlock = blockMax;\n        this.indices = indices;\n        this.sequenceIndexMap = sequenceIndexMap;\n        this.tabix = tabix;\n\n    };\n\n    /**\n     * Fetch blocks for a particular genomic range.  This method is public so it can be unit-tested.\n     *\n     * @param refId  the sequence dictionary index of the chromosome\n     * @param min  genomic start position\n     * @param max  genomic end position\n     * @param return an array of {minv: {filePointer, offset}, {maxv: {filePointer, offset}}\n     */\n    igv.BamIndex.prototype.blocksForRange = function (refId, min, max) {\n\n        var bam = this,\n            ba = bam.indices[refId],\n            overlappingBins,\n            chunks,\n            nintv,\n            lowest,\n            minLin,\n            maxLin,\n            vp,\n            i;\n\n\n        if (!ba) {\n            return [];\n        } else {\n\n            overlappingBins = reg2bins(min, max);        // List of bin #s that overlap min, max\n            chunks = [];\n\n            // Find chunks in overlapping bins.  Leaf bins (< 4681) are not pruned\n            overlappingBins.forEach(function (bin) {\n                if (ba.binIndex[bin]) {\n                    var binChunks = ba.binIndex[bin],\n                        nchnk = binChunks.length;\n                    for (var c = 0; c < nchnk; ++c) {\n                        var cs = binChunks[c][0];\n                        var ce = binChunks[c][1];\n                        chunks.push({minv: cs, maxv: ce, bin: bin});\n                    }\n                }\n            });\n\n            // Use the linear index to find minimum file position of chunks that could contain alignments in the region\n            nintv = ba.linearIndex.length;\n            lowest = null;\n            minLin = Math.min(min >> 14, nintv - 1);\n            maxLin = Math.min(max >> 14, nintv - 1);\n            for (i = minLin; i <= maxLin; ++i) {\n                vp = ba.linearIndex[i];\n                if (vp) {\n                    // todo -- I think, but am not sure, that the values in the linear index have to be in increasing order.  So the first non-null should be minimum\n                    if (!lowest || vp.isLessThan(lowest)) {\n                        lowest = vp;\n                    }\n                }\n            }\n\n            return optimizeChunks(chunks, lowest);\n        }\n\n    };\n\n    function optimizeChunks(chunks, lowest) {\n\n        var mergedChunks = [],\n            lastChunk = null;\n\n        if (chunks.length === 0) return chunks;\n\n        chunks.sort(function (c0, c1) {\n            var dif = c0.minv.block - c1.minv.block;\n            if (dif != 0) {\n                return dif;\n            } else {\n                return c0.minv.offset - c1.minv.offset;\n            }\n        });\n\n        chunks.forEach(function (chunk) {\n\n            if (!lowest || chunk.maxv.isGreaterThan(lowest)) {\n                if (lastChunk === null) {\n                    mergedChunks.push(chunk);\n                    lastChunk = chunk;\n                }\n                else {\n                    if ((chunk.minv.block - lastChunk.maxv.block) < 65000) { // Merge chunks that are withing 65k of each other\n                        if (chunk.maxv.isGreaterThan(lastChunk.maxv)) {\n                            lastChunk.maxv = chunk.maxv;\n                        }\n                    }\n                    else {\n                        mergedChunks.push(chunk);\n                        lastChunk = chunk;\n                    }\n                }\n            }\n        });\n\n        return mergedChunks;\n    }\n\n    /**\n     * Calculate the list of bins that overlap with region [beg, end]\n     *\n     */\n    function reg2bins(beg, end) {\n        var i = 0, k, list = [];\n        if (end >= 1 << 29)   end = 1 << 29;\n        --end;\n        list.push(0);\n        for (k = 1 + (beg >> 26); k <= 1 + (end >> 26); ++k) list.push(k);\n        for (k = 9 + (beg >> 23); k <= 9 + (end >> 23); ++k) list.push(k);\n        for (k = 73 + (beg >> 20); k <= 73 + (end >> 20); ++k) list.push(k);\n        for (k = 585 + (beg >> 17); k <= 585 + (end >> 17); ++k) list.push(k);\n        for (k = 4681 + (beg >> 14); k <= 4681 + (end >> 14); ++k) list.push(k);\n        return list;\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n\n    const MAX_GZIP_BLOCK_SIZE = 65536; // See BGZF compression format in SAM format specification\n\n    /**\n     * Class for reading a bam file\n     *\n     * @param config\n     * @constructor\n     */\n    igv.BamReader = function (config, genome) {\n\n        this.config = config;\n\n        this.genome = genome;\n\n        this.bamPath = config.url;\n\n        // Todo - deal with Picard convention.  WHY DOES THERE HAVE TO BE 2?\n        this.baiPath = config.indexURL || igv.inferIndexPath(this.bamPath, \"bai\"); // If there is an indexURL provided, use it!\n\n        igv.BamUtils.setReaderDefaults(this, config);\n\n    };\n\n    igv.BamReader.prototype.readAlignments = async function (chr, bpStart, bpEnd) {\n\n        const chrToIndex = await getChrIndex.call(this)\n        const queryChr = this.chrAliasTable.hasOwnProperty(chr) ? this.chrAliasTable[chr] : chr;\n        const chrId = chrToIndex[queryChr];\n\n        const alignmentContainer = new igv.AlignmentContainer(chr, bpStart, bpEnd, this.samplingWindowSize, this.samplingDepth, this.pairsSupported);\n\n        if (chrId === undefined) {\n            return alignmentContainer;\n\n        } else {\n\n            const bamIndex = await getIndex.call(this)\n            const chunks = bamIndex.blocksForRange(chrId, bpStart, bpEnd)\n\n            if (!chunks || chunks.length === 0) {\n                return alignmentContainer;\n            }\n\n            const promises = [];\n            for (let c of chunks) {\n                var fetchMin = c.minv.block,\n                    fetchMax = c.maxv.block + MAX_GZIP_BLOCK_SIZE,   // Make sure we get the whole block.\n                    range = {start: fetchMin, size: fetchMax - fetchMin + 1};\n                promises.push(igv.xhr.loadArrayBuffer(this.bamPath, igv.buildOptions(this.config, {range: range})))\n            }\n\n            const compressedChunks = await Promise.all(promises)\n\n            for (let i = 0; i < chunks.length; i++) {\n                try {\n                    const compressed = compressedChunks[i]\n                    const c = chunks[i]\n                    var ba = new Uint8Array(igv.unbgzf(compressed)); //new Uint8Array(igv.unbgzf(compressed)); //, c.maxv.block - c.minv.block + 1));\n                    igv.BamUtils.decodeBamRecords(ba, c.minv.offset, alignmentContainer, this.indexToChr, chrId, bpStart, bpEnd, this.filter);\n                } catch (e) {\n                    console.error(\"Error decompressing chunk \" + i)\n                }\n\n            }\n\n            alignmentContainer.finish();\n            return alignmentContainer;\n\n        }\n    }\n\n\n    function readHeader() {\n\n        const self = this;\n        const genome = this.genome;\n\n        return getIndex.call(self)\n\n            .then(function (index) {\n\n                const len = index.firstAlignmentBlock + MAX_GZIP_BLOCK_SIZE;   // Insure we get the complete compressed block containing the header\n\n                const options = igv.buildOptions(self.config, {range: {start: 0, size: len}});\n\n                return igv.BamUtils.readHeader(self.bamPath, options, genome);\n            })\n            .then(function (header) {\n                return header;\n            });\n    };\n\n    async function getIndex() {\n\n        const self = this;\n        const genome = this.genome;\n\n        if (self.index) {\n            return Promise.resolve(self.index);\n        }\n        else {\n            return igv.loadBamIndex(self.baiPath, self.config, false, genome)\n                .then(function (index) {\n                    self.index = index;\n                    return self.index;\n                });\n        }\n    }\n\n    async function getChrIndex() {\n\n        var self = this;\n\n        if (this.chrToIndex) {\n            return Promise.resolve(this.chrToIndex);\n        }\n        else {\n            return readHeader.call(self).then(function (header) {\n                self.chrToIndex = header.chrToIndex;\n                self.indexToChr = header.chrNames;\n                self.chrAliasTable = header.chrAliasTable;\n                return self.chrToIndex;\n            });\n        }\n    }\n\n    return igv;\n\n})\n(igv || {});\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 11/10/17.\n */\n\n/**\n * Reads an entire bam file\n */\nvar igv = (function (igv) {\n\n    /**\n     * Class for reading a bam file\n     *\n     * @param config\n     * @constructor\n     */\n    igv.BamReaderNonIndexed = function (config, genome) {\n\n        this.config = config;\n        \n        this.genome = genome;\n\n        this.bamPath = config.url;\n\n        this.isDataUri = igv.isString(config.url) && config.url.startsWith(\"data:\");\n\n        igv.BamUtils.setReaderDefaults(this, config);\n\n    };\n\n\n    // Return an alignment container\n    igv.BamReaderNonIndexed.prototype.readAlignments = function (chr, bpStart, bpEnd) {\n\n        const self = this;\n        const genome = this.genome;\n        \n        if (this.alignmentCache) {\n\n            return Promise.resolve(fetchAlignments(chr, bpStart, bpEnd));\n        }\n\n        else {\n\n            if(this.isDataUri)  {\n\n                var data =  decodeDataURI(this.bamPath);\n                var unc = igv.unbgzf(data.buffer);\n                parseAlignments(new Uint8Array(unc));\n                return Promise.resolve(fetchAlignments(chr, bpStart, bpEnd));\n            }\n            else {\n                return igv.xhr.loadArrayBuffer(self.bamPath, igv.buildOptions(self.config))\n\n                    .then(function (arrayBuffer) {\n\n                        var unc = igv.unbgzf(arrayBuffer);\n\n                        parseAlignments(new Uint8Array(unc));\n\n                        return fetchAlignments(chr, bpStart, bpEnd);\n\n                    });\n            }\n\n        }\n\n        function parseAlignments(data) {\n\n            var alignments = [];\n\n            self.header = igv.BamUtils.decodeBamHeader(data);\n\n            igv.BamUtils.decodeBamRecords(data, self.header.size, alignments, self.header.chrNames);\n\n            self.alignmentCache = new igv.FeatureCache(alignments, genome);\n        }\n\n\n        function fetchAlignments(chr, bpStart, bpEnd) {\n\n            var header, queryChr, qAlignments, alignmentContainer;\n\n            header = self.header;\n\n            queryChr = header.chrAliasTable.hasOwnProperty(chr) ? header.chrAliasTable[chr] : chr;\n\n            qAlignments = self.alignmentCache.queryFeatures(queryChr, bpStart, bpEnd);\n\n            alignmentContainer = new igv.AlignmentContainer(chr, bpStart, bpEnd, self.samplingWindowSize, self.samplingDepth, self.pairsSupported);\n\n            qAlignments.forEach(function (a) {\n                alignmentContainer.push(a);\n            });\n\n            alignmentContainer.finish();\n\n            return alignmentContainer;\n        }\n\n\n    };\n\n    function decodeDataURI(dataURI) {\n        var bytes,\n            split = dataURI.split(','),\n            info = split[0].split(':')[1],\n            dataString = split[1];\n\n        if (info.indexOf('base64') >= 0) {\n            dataString = atob(dataString);\n        } else {\n            dataString = decodeURI(dataString);\n        }\n\n        bytes = new Uint8Array(dataString.length);\n        for (var i = 0; i < dataString.length; i++) {\n            bytes[i] = dataString.charCodeAt(i);\n        }\n\n        return bytes;\n    }\n\n\n    return igv;\n\n})\n(igv || {});\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\"use strict\";\n\nvar igv = (function (igv) {\n\n\n    igv.BamSource = function (config, browser) {\n\n        const genome = browser.genome;\n\n        this.config = config;\n        this.genome = genome;\n        this.alignmentContainer = undefined;\n        this.maxRows = config.maxRows || 1000;\n\n        if (igv.isString(config.url) && config.url.startsWith(\"data:\")) {\n            if(\"cram\" === config.format) {\n                throw \"CRAM data uris are not supported\"\n            }\n            this.config.indexed = false;\n        }\n\n        if (\"ga4gh\" === config.sourceType) {\n            this.bamReader = new igv.Ga4ghAlignmentReader(config, genome);\n        } else if (\"pysam\" === config.sourceType) {\n            this.bamReader = new igv.BamWebserviceReader(config, genome)\n        } else if (\"htsget\" === config.sourceType) {\n            this.bamReader = new igv.HtsgetReader(config, genome);\n        } else if (\"shardedBam\" === config.sourceType) {\n            this.bamReader = new igv.ShardedBamReader(config, genome);\n        } else if (\"cram\" === config.format) {\n            this.bamReader = new igv.CramReader(config, genome, browser);\n        }\n        else {\n            if (this.config.indexed === false) {\n                this.bamReader = new igv.BamReaderNonIndexed(config, genome);\n            }\n            else {\n                this.bamReader = new igv.BamReader(config, genome);\n            }\n        }\n\n        this.viewAsPairs = config.viewAsPairs;\n        this.showSoftClips = config.showSoftClips;\n    };\n\n    igv.BamSource.prototype.setViewAsPairs = function (bool) {\n        var self = this;\n\n        if (this.viewAsPairs !== bool) {\n            this.viewAsPairs = bool;\n            // TODO -- repair alignments\n            if (this.alignmentContainer) {\n                var alignmentContainer = this.alignmentContainer,\n                    alignments;\n\n                if (bool) {\n                    alignments = pairAlignments(alignmentContainer.packedAlignmentRows);\n                }\n                else {\n                    alignments = unpairAlignments(alignmentContainer.packedAlignmentRows);\n                }\n                alignmentContainer.packedAlignmentRows = packAlignmentRows(alignments, alignmentContainer.start, alignmentContainer.end, self.maxRows);\n\n            }\n        }\n\n    };\n\n    igv.BamSource.prototype.setShowSoftClips = function (bool) {\n\n        if (this.showSoftClips !== bool) {\n\n            this.showSoftClips = bool;\n\n            if (this.alignmentContainer) {\n                const alignments = allAlignments(this.alignmentContainer.packedAlignmentRows);\n                const alignmentContainer = this.alignmentContainer;\n                alignmentContainer.packedAlignmentRows = packAlignmentRows(alignments, alignmentContainer.start, alignmentContainer.end, this.maxRows, bool);\n\n            }\n        }\n\n        function allAlignments(rows) {\n            let result = [];\n            for (let row of rows) {\n                for (let alignment of row.alignments) {\n                    result.push(alignment);\n                }\n            }\n            return result;\n        }\n    }\n\n    igv.BamSource.prototype.getAlignments = async function (chr, bpStart, bpEnd) {\n\n        const self = this;\n        const genome = this.genome;\n        const showSoftClips = this.showSoftClips;\n\n        if (self.alignmentContainer && self.alignmentContainer.contains(chr, bpStart, bpEnd)) {\n\n            return self.alignmentContainer;\n\n        } else {\n\n            const alignmentContainer = await self.bamReader.readAlignments(chr, bpStart, bpEnd)\n\n            const maxRows = self.config.maxRows || 500;\n            let alignments = alignmentContainer.alignments;\n\n            if (!self.viewAsPairs) {\n                alignments = unpairAlignments([{alignments: alignments}]);\n            }\n\n            const hasAlignments = alignments.length > 0;\n\n            alignmentContainer.packedAlignmentRows = packAlignmentRows(alignments, alignmentContainer.start, alignmentContainer.end, maxRows, showSoftClips);\n\n            alignmentContainer.alignments = undefined;  // Don't need to hold onto these anymore\n\n            self.alignmentContainer = alignmentContainer;\n\n            if (!hasAlignments) {\n\n                return alignmentContainer;\n\n            }\n            else {\n\n                const sequence = await genome.sequence.getSequence(chr, alignmentContainer.start, alignmentContainer.end)\n\n                if (sequence) {\n\n                    alignmentContainer.coverageMap.refSeq = sequence;    // TODO -- fix this\n                    alignmentContainer.sequence = sequence;           // TODO -- fix this\n\n                    return alignmentContainer;\n                }\n                else {\n                    console.error(\"No sequence for: \" + chr + \":\" + alignmentContainer.start + \"-\" + alignmentContainer.end)\n                }\n\n            }\n\n        }\n\n    }\n\n    function pairAlignments(rows) {\n\n        var pairCache = {},\n            result = [];\n\n        rows.forEach(function (row) {\n\n            row.alignments.forEach(function (alignment) {\n\n                var pairedAlignment;\n\n                if (canBePaired(alignment)) {\n\n                    pairedAlignment = pairCache[alignment.readName];\n                    if (pairedAlignment) {\n                        pairedAlignment.setSecondAlignment(alignment);\n                        pairCache[alignment.readName] = undefined;   // Don't need to track this anymore.\n                    }\n                    else {\n                        pairedAlignment = new igv.PairedAlignment(alignment);\n                        pairCache[alignment.readName] = pairedAlignment;\n                        result.push(pairedAlignment);\n                    }\n                }\n\n                else {\n                    result.push(alignment);\n                }\n            });\n        });\n        return result;\n    }\n\n    function unpairAlignments(rows) {\n        var result = [];\n        rows.forEach(function (row) {\n            row.alignments.forEach(function (alignment) {\n                if (alignment instanceof igv.PairedAlignment) {\n                    if (alignment.firstAlignment) result.push(alignment.firstAlignment);  // shouldn't need the null test\n                    if (alignment.secondAlignment) result.push(alignment.secondAlignment);\n\n                }\n                else {\n                    result.push(alignment);\n                }\n            });\n        });\n        return result;\n    }\n\n    function canBePaired(alignment) {\n        return alignment.isPaired() &&\n            alignment.isMateMapped() &&\n            alignment.chr === alignment.mate.chr &&\n            (alignment.isFirstOfPair() || alignment.isSecondOfPair()) && !(alignment.isSecondary() || alignment.isSupplementary());\n    }\n\n    function packAlignmentRows(alignments, start, end, maxRows, showSoftClips) {\n\n        if (!alignments) return;\n\n\n        if (alignments.length === 0) {\n            return [];\n        } else {\n\n            var bucketList = [],\n                allocatedCount = 0,\n                lastAllocatedCount = 0,\n                nextStart,\n                alignmentRow,\n                index,\n                bucket,\n                alignment,\n                alignmentSpace = 8,\n                packedAlignmentRows = [],\n                bucketStart;\n\n\n            alignments.sort(function (a, b) {\n                return showSoftClips ? a.scStart - b.scStart : a.start - b.start;\n            });\n\n            // bucketStart = Math.max(start, alignments[0].start);\n            const firstAlignment = alignments[0];\n            bucketStart = Math.max(start, showSoftClips ? firstAlignment.scStart : firstAlignment.start);\n            nextStart = bucketStart;\n\n            alignments.forEach(function (alignment) {\n\n                //var buckListIndex = Math.max(0, alignment.start - bucketStart);\n                const s = showSoftClips ? alignment.scStart : alignment.start;\n                var buckListIndex = Math.max(0, s - bucketStart);\n                if (bucketList[buckListIndex] === undefined) {\n                    bucketList[buckListIndex] = [];\n                }\n                bucketList[buckListIndex].push(alignment);\n            });\n\n\n            while (allocatedCount < alignments.length && packedAlignmentRows.length < maxRows) {\n\n                alignmentRow = new igv.BamAlignmentRow();\n\n                while (nextStart <= end) {\n\n                    bucket = undefined;\n\n                    while (!bucket && nextStart <= end) {\n\n                        index = nextStart - bucketStart;\n                        if (bucketList[index] === undefined) {\n                            ++nextStart;                     // No alignments at this index\n                        } else {\n                            bucket = bucketList[index];\n                        }\n\n                    } // while (bucket)\n\n                    if (!bucket) {\n                        break;\n                    }\n                    alignment = bucket.pop();\n                    if (0 === bucket.length) {\n                        bucketList[index] = undefined;\n                    }\n\n                    alignmentRow.alignments.push(alignment);\n\n                    nextStart = showSoftClips ?\n                        alignment.scStart + alignment.scLengthOnRef + alignmentSpace :\n                        alignment.start + alignment.lengthOnRef + alignmentSpace;\n                    ++allocatedCount;\n\n                } // while (nextStart)\n\n                if (alignmentRow.alignments.length > 0) {\n                    packedAlignmentRows.push(alignmentRow);\n                }\n\n                nextStart = bucketStart;\n\n                if (allocatedCount === lastAllocatedCount) break;   // Protect from infinite loops\n\n                lastAllocatedCount = allocatedCount;\n\n            } // while (allocatedCount)\n\n            return packedAlignmentRows;\n        }\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    const type = \"alignment\";\n\n    var alignmentStartGap = 5;\n    var downsampleRowHeight = 5;\n    var DEFAULT_COVERAGE_TRACK_HEIGHT = 50;\n    var DEFAULT_TRACK_HEIGHT = 300;\n    var DEFAULT_ALIGNMENT_COLOR = \"rgb(185, 185, 185)\";\n    var DEFAULT_COVERAGE_COLOR = \"rgb(150, 150, 150)\";\n    var DEFAULT_CONNECTOR_COLOR = \"rgb(200, 200, 200)\";\n\n    let BAMTrack;\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    igv.trackFactory[type] = function (config, browser) {\n\n        if (!BAMTrack) {\n            defineClass();\n        }\n\n        return new BAMTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        BAMTrack = igv.extend(igv.TrackBase,\n            function (config, browser) {\n\n                this.type = type;\n\n                // Override default track height for bams\n                if (config.height === undefined) config.height = DEFAULT_TRACK_HEIGHT;\n\n                igv.TrackBase.call(this, config, browser);\n\n                if (config.coverageTrackHeight === undefined) {\n                    config.coverageTrackHeight = DEFAULT_COVERAGE_TRACK_HEIGHT;\n                }\n\n                this.featureSource = new igv.BamSource(config, browser);\n\n                this.maxRows = config.maxRows || 1000;\n\n                this.coverageTrack = new CoverageTrack(config, this);\n\n                this.alignmentTrack = new AlignmentTrack(config, this);\n\n                this.visibilityWindow = config.visibilityWindow || 30000;\n\n                this.viewAsPairs = config.viewAsPairs;\n\n                this.pairsSupported = (undefined === config.pairsSupported);\n\n                this.showSoftClips = config.showSoftClips;\n                this.showAllBases = config.showAllBases;\n\n                this.color = config.color || DEFAULT_ALIGNMENT_COLOR;\n                this.coverageColor = config.coverageColor || DEFAULT_COVERAGE_COLOR;\n\n                this.minFragmentLength = config.minFragmentLength;   // Optional, might be undefined\n                this.maxFragmentLength = config.maxFragmentLength;\n\n                // Transient object, maintains the last sort option per viewport.\n                this.sortObjects = {};\n\n                if (config.sort) {\n                    if (Array.isArray(config.sort)) {\n                        for (let sort of config.sort) {\n                            assignSort(this.sortObjects, sort);\n                        }\n                    }\n                    else {\n                        assignSort(this.sortObjects, config.sort);\n                    }\n                    config.sort = undefined;\n                }\n\n                // Assign sort objects to a genomic state\n                function assignSort(currentSorts, sort) {\n\n                    const range = igv.parseLocusString(sort.locus);\n\n                    // Loop through current genomic states, assign sort to first matching state\n                    for (let gs of browser.genomicStateList) {\n\n                        if (gs.chromosome.name === range.chr && range.start >= gs.start && range.start <= gs.end) {\n\n                            currentSorts[gs.id] = {\n                                chr: range.chr,\n                                position: range.start,\n                                sortOption: sort.option || \"NUCLEOTIDE\",\n                                direction: sort.direction || \"ASC\"\n                            }\n\n                            break;\n                        }\n                    }\n\n                }\n            });\n\n        BAMTrack.prototype.getFeatures = async function (chr, bpStart, bpEnd, bpPerPixel, viewport) {\n\n            const self = this;\n\n            const alignmentContainer = await this.featureSource.getAlignments(chr, bpStart, bpEnd)\n\n            if (alignmentContainer.alignments && alignmentContainer.alignments.length > 99) {\n                if (undefined === self.minFragmentLength) {\n                    self.minFragmentLength = alignmentContainer.pairedEndStats.lowerFragmentLength;\n                }\n                if (undefined === self.maxFragmentLength) {\n                    self.maxFragmentLength = alignmentContainer.pairedEndStats.upperFragmentLength;\n                }\n            }\n\n            const sort = self.sortObjects[viewport.genomicState.id];\n\n            if (sort) {\n                if (sort.chr === chr && sort.position >= bpStart && sort.position <= bpEnd) {\n\n                    self.alignmentTrack.sortAlignmentRows(sort, alignmentContainer);\n\n                } else {\n                    delete self.sortObjects[viewport.genomicState.id];\n                }\n            }\n\n            return alignmentContainer;\n\n\n        };\n\n        BAMTrack.filters = {\n\n            noop: function () {\n                return function (alignment) {\n                    return false;\n                };\n            },\n\n            strand: function (strand) {\n                return function (alignment) {\n                    return alignment.strand === strand;\n                };\n            },\n\n            mappingQuality: function (lower, upper) {\n                return function (alignment) {\n\n                    if (lower && alignment.mq < lower) {\n                        return true;\n                    }\n\n                    if (upper && alignment.mq > upper) {\n                        return true;\n                    }\n\n                    return false;\n                }\n            }\n        };\n\n\n        /**\n         * Optional method to compute pixel height to accomodate the list of features.  The implementation below\n         * has side effects (modifiying the samples hash).  This is unfortunate, but harmless.\n         *\n         * @param alignmentContainer\n         * @returns {number}\n         */\n        BAMTrack.prototype.computePixelHeight = function (alignmentContainer) {\n\n            return this.coverageTrack.computePixelHeight(alignmentContainer) +\n                this.alignmentTrack.computePixelHeight(alignmentContainer) +\n                15;\n\n        };\n\n        BAMTrack.prototype.draw = function (options) {\n\n            igv.graphics.fillRect(options.context, 0, 0, options.pixelWidth, options.pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n            if (this.coverageTrack.height > 0) {\n                this.coverageTrack.draw(options);\n            }\n\n            this.alignmentTrack.draw(options);\n        };\n\n        BAMTrack.prototype.paintAxis = function (ctx, pixelWidth, pixelHeight) {\n\n            if (this.browser.isMultiLocusMode()) {\n                ctx.clearRect(0, 0, pixelWidth, pixelHeight);\n            }\n            else {\n                this.coverageTrack.paintAxis(ctx, pixelWidth, this.coverageTrack.height);\n            }\n        };\n\n        BAMTrack.prototype.contextMenuItemList = function (config) {\n\n            return this.alignmentTrack.contextMenuItemList(config);\n\n        };\n\n        BAMTrack.prototype.popupData = function (config) {\n\n            if (config.y >= this.coverageTrack.top && config.y < this.coverageTrack.height) {\n                return this.coverageTrack.popupData(config);\n            } else {\n                return this.alignmentTrack.popupData(config);\n            }\n\n        };\n\n        BAMTrack.prototype.menuItemList = function () {\n\n            const self = this;\n\n            const menuItems = [];\n\n            const colorByMenuItems = [{key: 'strand', label: 'read strand'}];\n\n            if (self.alignmentTrack.hasPairs) {\n                colorByMenuItems.push({key: 'firstOfPairStrand', label: 'first-of-pair strand'});\n                colorByMenuItems.push({key: 'pairOrientation', label: 'pair orientation'});\n                colorByMenuItems.push({key: 'fragmentLength', label: 'fragment length'});\n            }\n\n            const tagLabel = 'tag' + (self.alignmentTrack.colorByTag ? ' (' + self.alignmentTrack.colorByTag + ')' : '');\n            colorByMenuItems.push({key: 'tag', label: tagLabel});\n\n            const $e = $('<div class=\"igv-track-menu-category igv-track-menu-border-top\">');\n            $e.text('Color by');\n            menuItems.push({name: undefined, object: $e, click: undefined, init: undefined});\n\n            colorByMenuItems.forEach(function (item) {\n                const selected = (self.alignmentTrack.colorBy === item.key);\n                menuItems.push(colorByCB(item, selected));\n            });\n\n            menuItems.push({object: $('<div class=\"igv-track-menu-border-top\">')});\n            menuItems.push({\n                object: igv.createCheckbox(\"Show all bases\", self.showAllBases),\n                click: function () {\n\n                    const $fa = $(this).find('i');\n\n                    self.showAllBases = !self.showAllBases;\n\n                    if (true === self.showAllBases) {\n                        $fa.removeClass('igv-fa-check-hidden');\n                        $fa.addClass('igv-fa-check-visible');\n                    } else {\n                        $fa.removeClass('igv-fa-check-visible');\n                        $fa.addClass('igv-fa-check-hidden');\n                    }\n\n                    self.config.showAllBases = self.showAllBases;\n                    self.trackView.updateViews(true);\n                }\n            });\n\n            menuItems.push({object: $('<div class=\"igv-track-menu-border-top\">')});\n\n            if (self.pairsSupported && self.alignmentTrack.hasPairs) {\n\n                menuItems.push({\n                    object: igv.createCheckbox(\"View as pairs\", self.viewAsPairs),\n                    click: function () {\n\n                        const $fa = $(this).find('i');\n\n                        self.viewAsPairs = !self.viewAsPairs;\n\n                        if (true === self.viewAsPairs) {\n                            $fa.removeClass('igv-fa-check-hidden');\n                            $fa.addClass('igv-fa-check-visible');\n                        } else {\n                            $fa.removeClass('igv-fa-check-visible');\n                            $fa.addClass('igv-fa-check-hidden');\n                        }\n\n                        self.config.viewAsPairs = self.viewAsPairs;\n                        self.featureSource.setViewAsPairs(self.viewAsPairs);\n                        self.trackView.updateViews(true);\n                    }\n                });\n            }\n\n            menuItems.push({\n                object: igv.createCheckbox(\"Show soft clips\", self.showSoftClips),\n                click: function () {\n\n                    const $fa = $(this).find('i');\n\n                    self.showSoftClips = !self.showSoftClips;\n\n                    if (true === self.showSoftClips) {\n                        $fa.removeClass('igv-fa-check-hidden');\n                        $fa.addClass('igv-fa-check-visible');\n                    } else {\n                        $fa.removeClass('igv-fa-check-visible');\n                        $fa.addClass('igv-fa-check-hidden');\n                    }\n\n                    self.config.showSoftClips = self.showSoftClips;\n                    self.featureSource.setShowSoftClips(self.showSoftClips);\n                    self.trackView.updateViews(true);\n                }\n            });\n\n            return menuItems;\n\n            function colorByCB(menuItem, showCheck) {\n\n\n                const $e = igv.createCheckbox(menuItem.label, showCheck);\n\n                const clickHandler = function () {\n\n                    if (menuItem.key === self.alignmentTrack.colorBy) {\n\n                        self.alignmentTrack.colorBy = 'none';\n                        self.config.colorBy = 'none';\n                        self.trackView.repaintViews();\n\n                    } else if ('tag' === menuItem.key) {\n\n                        const clickFunction = function () {\n\n                            self.alignmentTrack.colorBy = 'tag';\n                            self.config.colorBy = 'tag';\n\n                            const tag = self.trackView.browser.inputDialog.$input.val().trim();\n                            if (tag !== self.alignmentTrack.colorByTag) {\n                                self.alignmentTrack.colorByTag = tag;\n                                self.config.colorByTag = tag;\n\n                                self.alignmentTrack.tagColors = new igv.PaletteColorTable(\"Set1\");\n                                $('#color-by-tag').text(self.alignmentTrack.colorByTag);\n                            }\n\n                            self.trackView.repaintViews();\n                        };\n\n                        const config =\n                            {\n                                label: 'Tag Name',\n                                input: self.alignmentTrack.colorByTag ? self.alignmentTrack.colorByTag : '',\n                                click: clickFunction\n                            };\n\n                        self.trackView.browser.inputDialog.configure(config);\n                        self.trackView.browser.inputDialog.present($(self.trackView.trackDiv));\n\n                    } else {\n\n                        self.alignmentTrack.colorBy = menuItem.key;\n                        self.config.colorBy = menuItem.key;\n\n                        self.trackView.repaintViews();\n                    }\n\n                };\n\n                return {name: undefined, object: $e, click: clickHandler, init: undefined}\n\n            }\n\n        };\n\n        function shadedBaseColor(qual, nucleotide) {\n\n            const minQ = 5;   //prefs.getAsInt(PreferenceManager.SAM_BASE_QUALITY_MIN),\n            const maxQ = 20;  //prefs.getAsInt(PreferenceManager.SAM_BASE_QUALITY_MAX);\n\n            let alpha;\n            if (qual < minQ) {\n                alpha = 0.1;\n            } else {\n                alpha = Math.max(0.1, Math.min(1.0, 0.1 + 0.9 * (qual - minQ) / (maxQ - minQ)));\n            }\n            // Round alpha to nearest 0.1\n            alpha = Math.round(alpha * 10) / 10.0;\n\n            let baseColor;\n            if (alpha >= 1) {\n                baseColor = igv.nucleotideColors[nucleotide];\n            }\n            else {\n                const foregroundColor = igv.nucleotideColorComponents[nucleotide];\n                if (!foregroundColor) {\n                    return undefined;\n                }\n\n                const backgroundColor = [255, 255, 255];   // White\n                baseColor = \"rgba(\" + foregroundColor[0] + \",\" + foregroundColor[1] + \",\" + foregroundColor[2] + \",\" + alpha + \")\";\n            }\n            return baseColor;\n        }\n\n        /**\n         * Called when the track is removed.  Do any needed cleanup here\n         */\n        BAMTrack.prototype.dispose = function () {\n            this.trackView = undefined;\n        }\n\n        /**\n         * Return the current state of the track.  Used to create sessions and bookmarks.\n         *\n         * @returns {*|{}}\n         */\n        BAMTrack.prototype.getState = function () {\n\n            const config = Object.assign({}, this.config);\n\n            config.sort = undefined;\n\n            for (let gs of this.browser.genomicStateList) {\n\n                const s = this.sortObjects[gs.id];\n\n                if (s) {\n                    config.sort = config.sort || [];\n\n                    config.sort.push({\n                        locus: s.chr + \":\" + (s.position + 1),\n                        option: s.sortOption,\n                        direction: s.direction\n                    });\n                }\n            }\n\n            return config;\n        }\n\n        var CoverageTrack = function (config, parent) {\n\n            this.parent = parent;\n            this.featureSource = parent.featureSource;\n            this.top = 0;\n\n\n            this.height = config.coverageTrackHeight;\n            this.dataRange = {min: 0};   // Leav max undefined\n            this.paintAxis = igv.paintAxis;\n        };\n\n        CoverageTrack.prototype.computePixelHeight = function (alignmentContainer) {\n            return this.height;\n        };\n\n        CoverageTrack.prototype.draw = function (options) {\n\n            const self = this;\n\n            const ctx = options.context;\n            if (this.top) {\n                ctx.translate(0, top);\n            }\n\n            const alignmentContainer = options.features;\n            const coverageMap = alignmentContainer.coverageMap;\n            this.dataRange.max = coverageMap.maximum;\n\n            let sequence;\n            if (coverageMap.refSeq) {\n                sequence = coverageMap.refSeq.toUpperCase();\n            }\n\n            const bpPerPixel = options.bpPerPixel;\n            const bpStart = options.bpStart;\n            const pixelWidth = options.pixelWidth;\n            const bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\n            // paint for all coverage buckets\n            // If alignment track color is != default, use it\n            let color = this.parent.coverageColor;\n            if (this.parent.color !== DEFAULT_ALIGNMENT_COLOR) {\n                color = igv.Color.darkenLighten(this.parent.color, -35);\n            }\n\n            igv.graphics.setProperties(ctx, {\n                fillStyle: color,\n                strokeStyle: color\n            });\n\n            const w = Math.max(1, Math.ceil(1.0 / bpPerPixel));\n            for (let i = 0, len = coverageMap.coverage.length; i < len; i++) {\n\n                const bp = (coverageMap.bpStart + i);\n                if (bp < bpStart) continue;\n                if (bp > bpEnd) break;\n\n                const item = coverageMap.coverage[i];\n                if (!item) continue;\n\n                const h = Math.round((item.total / this.dataRange.max) * this.height);\n                const y = this.height - h;\n                const x = Math.floor((bp - bpStart) / bpPerPixel);\n\n\n                // igv.graphics.setProperties(ctx, {fillStyle: \"rgba(0, 200, 0, 0.25)\", strokeStyle: \"rgba(0, 200, 0, 0.25)\" });\n                igv.graphics.fillRect(ctx, x, y, w, h);\n            }\n\n            // coverage mismatch coloring -- don't try to do this in above loop, color bar will be overwritten when w<1\n            if (sequence) {\n                for (let i = 0, len = coverageMap.coverage.length; i < len; i++) {\n\n                    const bp = (coverageMap.bpStart + i);\n                    if (bp < bpStart) continue;\n                    if (bp > bpEnd) break;\n\n                    const item = coverageMap.coverage[i];\n                    if (!item) continue;\n\n                    const h = (item.total / this.dataRange.max) * this.height;\n                    let y = this.height - h;\n                    const x = Math.floor((bp - bpStart) / bpPerPixel);\n\n                    const refBase = sequence[i];\n                    if (item.isMismatch(refBase)) {\n\n                        igv.graphics.setProperties(ctx, {fillStyle: igv.nucleotideColors[refBase]});\n                        igv.graphics.fillRect(ctx, x, y, w, h);\n\n                        let accumulatedHeight = 0.0;\n                        [\"A\", \"C\", \"T\", \"G\"].forEach(function (nucleotide) {\n\n                            var count,\n                                hh;\n\n                            count = item[\"pos\" + nucleotide] + item[\"neg\" + nucleotide];\n\n\n                            // non-logoritmic\n                            hh = (count / self.dataRange.max) * self.height;\n\n                            y = (self.height - hh) - accumulatedHeight;\n                            accumulatedHeight += hh;\n\n                            igv.graphics.setProperties(ctx, {fillStyle: igv.nucleotideColors[nucleotide]});\n                            igv.graphics.fillRect(ctx, x, y, w, hh);\n                        });\n                    }\n                }\n            }\n\n        };\n\n        CoverageTrack.prototype.popupData = function (config) {\n\n            let features = config.viewport.getCachedFeatures();\n            if (!features || features.length === 0) return;\n\n            let genomicLocation = Math.floor(config.genomicLocation),\n                referenceFrame = config.viewport.genomicState.referenceFrame,\n                coverageMap = features.coverageMap,\n                nameValues = [],\n                coverageMapIndex = Math.floor(genomicLocation - coverageMap.bpStart),\n                coverage = coverageMap.coverage[coverageMapIndex];\n\n            if (coverage) {\n\n\n                nameValues.push(referenceFrame.chrName + \":\" + igv.numberFormatter(1 + genomicLocation));\n\n                nameValues.push({name: 'Total Count', value: coverage.total});\n\n                // A\n                let tmp = coverage.posA + coverage.negA;\n                if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round((tmp / coverage.total) * 100.0) + \"%, \" + coverage.posA + \"+, \" + coverage.negA + \"- )\";\n                nameValues.push({name: 'A', value: tmp});\n\n\n                // C\n                tmp = coverage.posC + coverage.negC;\n                if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round((tmp / coverage.total) * 100.0) + \"%, \" + coverage.posC + \"+, \" + coverage.negC + \"- )\";\n                nameValues.push({name: 'C', value: tmp});\n\n                // G\n                tmp = coverage.posG + coverage.negG;\n                if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round((tmp / coverage.total) * 100.0) + \"%, \" + coverage.posG + \"+, \" + coverage.negG + \"- )\";\n                nameValues.push({name: 'G', value: tmp});\n\n                // T\n                tmp = coverage.posT + coverage.negT;\n                if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round((tmp / coverage.total) * 100.0) + \"%, \" + coverage.posT + \"+, \" + coverage.negT + \"- )\";\n                nameValues.push({name: 'T', value: tmp});\n\n                // N\n                tmp = coverage.posN + coverage.negN;\n                if (tmp > 0) tmp = tmp.toString() + \" (\" + Math.round((tmp / coverage.total) * 100.0) + \"%, \" + coverage.posN + \"+, \" + coverage.negN + \"- )\";\n                nameValues.push({name: 'N', value: tmp});\n\n            }\n\n\n            return nameValues;\n\n        };\n\n        var AlignmentTrack = function (config, parent) {\n\n            this.parent = parent;\n            this.featureSource = parent.featureSource;\n            this.top = config.coverageTrackHeight == 0 ? 0 : config.coverageTrackHeight + 5;\n            this.alignmentRowHeight = config.alignmentRowHeight || 14;\n\n            this.negStrandColor = config.negStrandColor || \"rgba(150, 150, 230, 0.75)\";\n            this.posStrandColor = config.posStrandColor || \"rgba(230, 150, 150, 0.75)\";\n            this.insertionColor = config.insertionColor || \"rgb(138, 94, 161)\";\n            this.deletionColor = config.deletionColor || \"black\";\n            this.skippedColor = config.skippedColor || \"rgb(150, 170, 170)\";\n            this.pairConnectorColor = config.pairConnectorColor;\n\n            this.smallFragmentLengthColor = config.smallFragmentLengthColor || \"rgb(0, 0, 150)\";\n            this.largeFragmentLengthColor = config.largeFragmentLengthColor || \"rgb(200, 0, 0)\";\n\n            this.pairOrientation = config.pairOrienation || 'fr';\n            this.pairColors = {};\n            this.pairColors[\"RL\"] = config.rlColor || \"rgb(0, 150, 0)\";\n            this.pairColors[\"RR\"] = config.rrColor || \"rgb(20, 50, 200)\";\n            this.pairColors[\"LL\"] = config.llColor || \"rgb(0, 150, 150)\";\n\n            this.colorBy = config.colorBy || \"pairOrientation\";\n            this.colorByTag = config.colorByTag;\n            this.bamColorTag = config.bamColorTag === undefined ? \"YC\" : config.bamColorTag;\n\n            this.hasPairs = false;   // Until proven otherwise\n\n            this.maxRows = config.maxRows || 1000;   // Neccessary to avoid freezing browser for deep coverage\n        };\n\n        AlignmentTrack.prototype.computePixelHeight = function (alignmentContainer) {\n\n            if (alignmentContainer.packedAlignmentRows) {\n                var h = 0;\n                if (alignmentContainer.hasDownsampledIntervals()) {\n                    h += downsampleRowHeight + alignmentStartGap;\n                }\n                return h + (this.alignmentRowHeight * alignmentContainer.packedAlignmentRows.length) + 5;\n            }\n            else {\n                return this.height;\n            }\n\n        };\n\n        AlignmentTrack.prototype.draw = function (options) {\n\n            const self = this,\n                alignmentContainer = options.features,\n                ctx = options.context,\n                bpPerPixel = options.bpPerPixel,\n                bpStart = options.bpStart,\n                pixelWidth = options.pixelWidth,\n                bpEnd = bpStart + pixelWidth * bpPerPixel + 1,\n                packedAlignmentRows = alignmentContainer.packedAlignmentRows;\n\n            const showSoftClips = this.parent.showSoftClips;\n            const showAllBases = this.parent.showAllBases;\n\n            let referenceSequence = alignmentContainer.sequence;\n            if (referenceSequence) {\n                referenceSequence = referenceSequence.toUpperCase();\n            }\n\n            let alignmentRowYInset = 0;\n\n            if (this.top) ctx.translate(0, this.top);\n\n            if (alignmentContainer.hasDownsampledIntervals()) {\n                alignmentRowYInset = downsampleRowHeight + alignmentStartGap;\n\n                alignmentContainer.downsampledIntervals.forEach(function (interval) {\n                    var xBlockStart = (interval.start - bpStart) / bpPerPixel,\n                        xBlockEnd = (interval.end - bpStart) / bpPerPixel;\n\n                    if (xBlockEnd - xBlockStart > 5) {\n                        xBlockStart += 1;\n                        xBlockEnd -= 1;\n                    }\n                    igv.graphics.fillRect(ctx, xBlockStart, 2, (xBlockEnd - xBlockStart), downsampleRowHeight - 2, {fillStyle: \"black\"});\n                })\n\n            }\n            else {\n                alignmentRowYInset = 0;\n            }\n\n            // Transient variable -- rewritten on every draw, used for click object selection\n            this.alignmentsYOffset = alignmentRowYInset;\n\n            if (packedAlignmentRows) {\n\n                const nRows = Math.min(packedAlignmentRows.length, self.maxRows);\n\n\n                for (let rowIndex = 0; rowIndex < nRows; rowIndex++) {\n\n                    const alignmentRow = packedAlignmentRows[rowIndex];\n                    const yRect = alignmentRowYInset + (self.alignmentRowHeight * rowIndex);\n                    const alignmentHeight = self.alignmentRowHeight - 2;\n                    for (let i = 0; i < alignmentRow.alignments.length; i++) {\n\n                        const alignment = alignmentRow.alignments[i];\n\n                        self.hasPairs = self.hasPairs || alignment.isPaired();\n\n                        if ((alignment.start + alignment.lengthOnRef) < bpStart) continue;\n                        if (alignment.start > bpEnd) break;\n                        if (true === alignment.hidden) {\n                            continue;\n                        }\n\n                        if (alignment instanceof igv.PairedAlignment) {\n\n                            drawPairConnector(alignment, yRect, alignmentHeight);\n\n                            drawSingleAlignment(alignment.firstAlignment, yRect, alignmentHeight);\n\n                            if (alignment.secondAlignment) {\n                                drawSingleAlignment(alignment.secondAlignment, yRect, alignmentHeight);\n                            }\n\n                        }\n                        else {\n                            drawSingleAlignment(alignment, yRect, alignmentHeight);\n                        }\n\n                    }\n                }\n            }\n\n\n            // alignment is a PairedAlignment\n            function drawPairConnector(alignment, yRect, alignmentHeight) {\n\n                var connectorColor = self.getConnectorColor(alignment.firstAlignment),\n                    xBlockStart = (alignment.connectingStart - bpStart) / bpPerPixel,\n                    xBlockEnd = (alignment.connectingEnd - bpStart) / bpPerPixel,\n                    yStrokedLine = yRect + alignmentHeight / 2;\n\n                if ((alignment.connectingEnd) < bpStart || alignment.connectingStart > bpEnd) {\n                    return;\n                }\n                if (alignment.mq <= 0) {\n                    connectorColor = igv.Color.addAlpha(connectorColor, 0.15);\n                }\n                igv.graphics.setProperties(ctx, {fillStyle: connectorColor, strokeStyle: connectorColor});\n                igv.graphics.strokeLine(ctx, xBlockStart, yStrokedLine, xBlockEnd, yStrokedLine);\n\n            }\n\n            function drawSingleAlignment(alignment, yRect, alignmentHeight) {\n\n                var alignmentColor,\n                    lastBlockEnd,\n                    blocks,\n                    block,\n                    b,\n                    diagnosticColor;\n\n                alignmentColor = self.getAlignmentColor(alignment);\n                const outlineColor = alignmentColor;\n\n                blocks = showSoftClips ? alignment.blocks : alignment.blocks.filter(b => 'S' !== b.type);\n\n                if ((alignment.start + alignment.lengthOnRef) < bpStart || alignment.start > bpEnd) {\n                    return;\n                }\n\n                if (alignment.mq <= 0) {\n                    alignmentColor = igv.Color.addAlpha(alignmentColor, 0.15);\n                }\n\n                igv.graphics.setProperties(ctx, {fillStyle: alignmentColor, strokeStyle: outlineColor});\n\n                for (b = 0; b < blocks.length; b++) {   // Can't use forEach here -- we need ability to break\n\n                    block = blocks[b];\n\n                    // Somewhat complex test, neccessary to insure gaps are drawn.\n                    // If this is not the last block, and the next block starts before the orign (off screen to left)\n                    // then skip.\n                    if ((b != blocks.length - 1) && blocks[b + 1].start < bpStart) continue;\n\n                    drawBlock(block);\n\n                    if ((block.start + block.len) > bpEnd) break;  // Do this after drawBlock to insure gaps are drawn\n\n                    if (alignment.insertions) {\n                        alignment.insertions.forEach(function (block) {\n                            var refOffset = block.start - bpStart,\n                                xBlockStart = refOffset / bpPerPixel - 1,\n                                widthBlock = 3;\n                            igv.graphics.fillRect(ctx, xBlockStart, yRect - 1, widthBlock, alignmentHeight + 2, {fillStyle: self.insertionColor});\n                        });\n                    }\n\n                }\n\n                function drawBlock(block) {\n\n\n                    const offsetBP = block.start - alignmentContainer.start;\n                    const blockStartPixel = (block.start - bpStart) / bpPerPixel;\n                    const blockEndPixel = ((block.start + block.len) - bpStart) / bpPerPixel;\n                    const blockWidthPixel = Math.max(1, blockEndPixel - blockStartPixel);\n                    const arrowHeadWidthPixel = self.alignmentRowHeight / 2.0;\n                    const yStrokedLine = yRect + alignmentHeight / 2;\n                    const isSoftClip = 'S' === block.type;\n\n                    const strokeOutline =\n                        alignment.mq <= 0 ||\n                        self.highlightedAlignmentReadNamed === alignment.readName ||\n                        isSoftClip;\n\n                    let blockOutlineColor = outlineColor;\n                    if (self.highlightedAlignmentReadNamed === alignment.readName) blockOutlineColor = 'red'\n                    else if (isSoftClip) blockOutlineColor = 'rgb(50,50,50)'\n\n                    if (block.gapType !== undefined && blockEndPixel !== undefined && lastBlockEnd !== undefined) {\n                        if (\"D\" === block.gapType) {\n                            igv.graphics.strokeLine(ctx, lastBlockEnd, yStrokedLine, blockStartPixel, yStrokedLine, {strokeStyle: self.deletionColor});\n                        }\n                        else if (\"N\" === block.gapType) {\n                            igv.graphics.strokeLine(ctx, lastBlockEnd, yStrokedLine, blockStartPixel, yStrokedLine, {strokeStyle: self.skippedColor});\n                        }\n                    }\n                    lastBlockEnd = blockEndPixel;\n\n                    const lastBlockPositiveStrand = (true === alignment.strand && b === blocks.length - 1);\n                    const lastBlockReverseStrand = (false === alignment.strand && b === 0);\n                    const lastBlock = lastBlockPositiveStrand | lastBlockReverseStrand;\n\n                    if (lastBlock) {\n                        let xListPixel;\n                        let yListPixel;\n                        if (lastBlockPositiveStrand) {\n                            xListPixel = [\n                                blockStartPixel,\n                                blockEndPixel,\n                                blockEndPixel + arrowHeadWidthPixel,\n                                blockEndPixel,\n                                blockStartPixel,\n                                blockStartPixel];\n                            yListPixel = [\n                                yRect,\n                                yRect,\n                                yRect + (alignmentHeight / 2.0),\n                                yRect + alignmentHeight,\n                                yRect + alignmentHeight,\n                                yRect];\n\n                        }\n\n                        // Last block on - strand ?\n                        else if (lastBlockReverseStrand) {\n                            xListPixel = [\n                                blockEndPixel,\n                                blockStartPixel,\n                                blockStartPixel - arrowHeadWidthPixel,\n                                blockStartPixel,\n                                blockEndPixel,\n                                blockEndPixel];\n                            yListPixel = [\n                                yRect,\n                                yRect,\n                                yRect + (alignmentHeight / 2.0),\n                                yRect + alignmentHeight,\n                                yRect + alignmentHeight,\n                                yRect];\n\n                        }\n                        igv.graphics.fillPolygon(ctx, xListPixel, yListPixel, {fillStyle: alignmentColor});\n\n                        if (strokeOutline) {\n                            igv.graphics.strokePolygon(ctx, xListPixel, yListPixel, {strokeStyle: blockOutlineColor});\n                        }\n                    }\n\n                    // Internal block\n                    else {\n                        igv.graphics.fillRect(ctx, blockStartPixel, yRect, blockWidthPixel, alignmentHeight, {fillStyle: alignmentColor});\n\n                        if (strokeOutline) {\n                            ctx.save();\n                            ctx.strokeStyle = blockOutlineColor;\n                            ctx.strokeRect(blockStartPixel, yRect, blockWidthPixel, alignmentHeight);\n                            ctx.restore();\n                        }\n                    }\n\n\n                    // Mismatch coloring\n\n                    if (isSoftClip || showAllBases || (referenceSequence && alignment.seq && alignment.seq !== \"*\")) {\n\n                        const seq = alignment.seq ? alignment.seq.toUpperCase() : undefined;\n                        const qual = alignment.qual;\n                        const seqOffset = block.seqOffset;\n\n\n                        for (let i = 0, len = block.len; i < len; i++) {\n\n                            if (offsetBP + i < 0) continue;\n\n                            let readChar = seq ? seq.charAt(seqOffset + i) : '';\n                            const refChar = referenceSequence.charAt(offsetBP + i);\n\n                            if (readChar === \"=\") {\n                                readChar = refChar;\n                            }\n                            if (readChar === \"X\" || refChar !== readChar || isSoftClip || showAllBases) {\n\n                                let baseColor;\n                                if (!isSoftClip && qual !== undefined && qual.length > seqOffset + i) {\n                                    const readQual = qual[seqOffset + i];\n                                    baseColor = shadedBaseColor(readQual, readChar, i + block.start);\n                                }\n                                else {\n                                    baseColor = igv.nucleotideColors[readChar];\n                                }\n                                if (baseColor) {\n                                    const xPixel = ((block.start + i) - bpStart) / bpPerPixel;\n                                    const widthPixel = Math.max(1, 1 / bpPerPixel);\n                                    renderBlockOrReadChar(ctx, bpPerPixel, {\n                                        x: xPixel,\n                                        y: yRect,\n                                        width: widthPixel,\n                                        height: alignmentHeight\n                                    }, baseColor, readChar);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                function renderBlockOrReadChar(context, bpp, bbox, color, char) {\n                    var threshold,\n                        center;\n\n                    threshold = 1.0 / 10.0;\n                    if (bpp <= threshold) {\n\n                        // render letter\n                        context.font = '10px sans-serif';\n                        center = bbox.x + (bbox.width / 2.0);\n                        igv.graphics.strokeText(context, char, center - (context.measureText(char).width / 2), 9 + bbox.y, {strokeStyle: color});\n                    } else {\n\n                        // render colored block\n                        igv.graphics.fillRect(context, bbox.x, bbox.y, bbox.width, bbox.height, {fillStyle: color});\n                    }\n                }\n            }\n\n        };\n\n\n        AlignmentTrack.prototype.sortAlignmentRows = function (options, alignmentContainer) {\n\n            const genomicLocation = options.position;\n            const sortOption = options.sortOption;\n            const direction = options.direction\n\n            if (alignmentContainer === null) {\n                alignmentContainer = this.featureSource.alignmentContainer;\n            }\n\n            for (let row of alignmentContainer.packedAlignmentRows) {\n                row.updateScore(genomicLocation, alignmentContainer, sortOption, direction);\n            }\n            ;\n\n            alignmentContainer.packedAlignmentRows.sort(function (rowA, rowB) {\n\n                const i = rowA.score > rowB.score ? 1 : (rowA.score < rowB.score ? -1 : 0)\n\n                return true === direction ? i : -i;\n            });\n\n        };\n\n        AlignmentTrack.prototype.popupData = function (config) {\n\n            const clickedObject = this.getClickedObject(config.viewport, config.y, config.genomicLocation);\n\n            return clickedObject ? clickedObject.popupData(config.genomicLocation) : undefined;\n        };\n\n        AlignmentTrack.prototype.contextMenuItemList = function (clickState) {\n\n            const self = this;\n            const viewport = clickState.viewport;\n            const genomicState = clickState.viewport.genomicState;\n            const genomicLocation = clickState.genomicLocation;\n            const list = [];\n\n            list.push({label: 'Sort by base', click: sortRows});\n\n            const clickedObject = this.getClickedObject(clickState.viewport, clickState.y, clickState.genomicLocation);\n            const isSingleAlignment = clickedObject && !clickedObject.paired && (typeof clickedObject.isPaired === 'function');\n            if (isSingleAlignment && clickedObject.isMateMapped()) {\n                list.push({label: 'View mate in split screen', click: viewMateInSplitScreen, init: undefined});\n            }\n\n            return list;\n\n            function sortRows() {\n\n                if (!clickState.viewport.tile) {\n                    return;\n                }\n\n                const currentSorts = self.parent.sortObjects;\n                const cs = currentSorts[viewport.genomicState.id];\n                const direction = cs ? !cs.direction : true;\n\n                const options = {\n                    chr: genomicState.referenceFrame.chrName,\n                    position: Math.floor(clickState.genomicLocation),\n                    sortOption: \"NUCLEOTIDE\",\n                    direction: direction\n                };\n                self.sortAlignmentRows(options, clickState.viewport.getCachedFeatures());\n                self.parent.trackView.repaintViews();\n\n                currentSorts[viewport.genomicState.id] = options;\n            }\n\n            function viewMateInSplitScreen() {\n                if (clickedObject.mate) {\n                    self.highlightedAlignmentReadNamed = clickedObject.readName;\n                    self.parent.trackView.browser.presentSplitScreenMultiLocusPanel(clickedObject, clickState.viewport.genomicState);\n                }\n            }\n        };\n\n        AlignmentTrack.prototype.getClickedObject = function (viewport, y, genomicLocation) {\n\n            const showSoftClips = this.parent.showSoftClips;\n\n            let features = viewport.getCachedFeatures();\n            if (!features || features.length === 0) return;\n\n            let packedAlignmentRows = features.packedAlignmentRows;\n            let downsampledIntervals = features.downsampledIntervals;\n            let packedAlignmentsIndex = Math.floor((y - this.top - this.alignmentsYOffset) / this.alignmentRowHeight);\n\n            if (packedAlignmentsIndex < 0) {\n                for (let i = 0; i < downsampledIntervals.length; i++) {\n                    if (downsampledIntervals[i].start <= genomicLocation && (downsampledIntervals[i].end >= genomicLocation)) {\n                        return downsampledIntervals[i];\n                    }\n                }\n            } else if (packedAlignmentsIndex < packedAlignmentRows.length) {\n\n                let alignmentRow = packedAlignmentRows[packedAlignmentsIndex];\n                let clicked = alignmentRow.alignments.filter(function (alignment) {\n\n                    const s = showSoftClips ? alignment.scStart : alignment.start;\n                    const l = showSoftClips ? alignment.scLengthOnRef : alignment.lengthOnRef;\n\n                    return (genomicLocation >= s && genomicLocation <= (s + l));\n                });\n\n                if (clicked.length > 0) return clicked[0];\n            }\n\n            return undefined;\n\n        };\n\n        /**\n         * Return the color for connectors in paired alignment view.   If explicitly set return that, otherwise return\n         * the alignment color, unless the color option can result in split colors (separte color for each mate).\n         *\n         * @param alignment\n         * @returns {string}\n         */\n        AlignmentTrack.prototype.getConnectorColor = function (alignment) {\n\n            if(this.pairConnectorColor) {\n                return this.pairConnectorColor\n            }\n\n            switch(this.colorBy) {\n                case \"strand\":\n                case \"firstOfPairStrand\":\n                case \"pairOrientation\":\n                case \"tag\":\n                    return this.parent.color || DEFAULT_CONNECTOR_COLOR\n                default:\n                    return this.getAlignmentColor(alignment)\n\n            }\n        }\n\n        AlignmentTrack.prototype.getAlignmentColor = function (alignment) {\n\n            const self = this;\n\n            let color = self.parent.color;\n\n            const option = self.colorBy;\n            switch (option) {\n\n                case \"strand\":\n                    color = alignment.strand ? self.posStrandColor : self.negStrandColor;\n                    break;\n\n                case \"firstOfPairStrand\":\n\n                    if (alignment instanceof igv.PairedAlignment) {\n                        color = alignment.firstOfPairStrand() ? self.posStrandColor : self.negStrandColor;\n                    }\n                    else if (alignment.isPaired()) {\n\n                        if (alignment.isFirstOfPair()) {\n                            color = alignment.strand ? self.posStrandColor : self.negStrandColor;\n                        }\n                        else if (alignment.isSecondOfPair()) {\n                            color = alignment.strand ? self.negStrandColor : self.posStrandColor;\n                        }\n                        else {\n                            console.error(\"ERROR. Paired alignments are either first or second.\")\n                        }\n                    }\n                    break;\n\n                case \"pairOrientation\":\n\n                    if (alignment.mate && alignment.isMateMapped() && alignment.mate.chr !== alignment.chr) {\n                        color = getChrColor(alignment.mate.chr);\n                    }\n\n                    else if (self.pairOrientation && alignment.pairOrientation) {\n                        var oTypes = orientationTypes[self.pairOrientation];\n                        if (oTypes) {\n                            var pairColor = self.pairColors[oTypes[alignment.pairOrientation]];\n                            if (pairColor) color = pairColor;\n                        }\n                    }\n\n                    break;\n\n                case \"fragmentLength\":\n\n                    if (alignment.mate && alignment.isMateMapped() && alignment.mate.chr !== alignment.chr) {\n                        color = getChrColor(alignment.mate.chr);\n                    }\n\n                    else if (self.parent.minFragmentLength && Math.abs(alignment.fragmentLength) < self.parent.minFragmentLength) {\n                        color = self.smallFragmentLengthColor;\n                    } else if (self.parent.maxFragmentLength && Math.abs(alignment.fragmentLength) > self.parent.maxFragmentLength) {\n                        color = self.largeFragmentLengthColor;\n                    }\n\n                    break;\n\n                case \"tag\":\n                    const tagValue = alignment.tags()[self.colorByTag];\n                    if (tagValue !== undefined) {\n\n                        if (self.bamColorTag === self.colorByTag) {\n                            // UCSC style color option\n                            color = \"rgb(\" + tagValue + \")\";\n                        }\n                        else {\n\n                            if (!self.tagColors) {\n                                self.tagColors = new igv.PaletteColorTable(\"Set1\");\n                            }\n                            color = self.tagColors.getColor(tagValue);\n                        }\n                    }\n                    break;\n\n                default:\n                    color = self.parent.color;\n            }\n\n            return color;\n\n        }\n\n        var orientationTypes = {\n\n            \"fr\": {\n\n                \"F1R2\": \"LR\",\n                \"F2R1\": \"LR\",\n\n                \"F1F2\": \"LL\",\n                \"F2F1\": \"LL\",\n\n                \"R1R2\": \"RR\",\n                \"R2R1\": \"RR\",\n\n                \"R1F2\": \"RL\",\n                \"R2F1\": \"RL\"\n            },\n\n            \"rf\": {\n\n                \"R1F2\": \"LR\",\n                \"R2F1\": \"LR\",\n\n                \"R1R2\": \"LL\",\n                \"R2R1\": \"LL\",\n\n                \"F1F2\": \"RR\",\n                \"F2F1\": \"RR\",\n\n                \"F1R2\": \"RL\",\n                \"F2R1\": \"RL\"\n            },\n\n            \"ff\": {\n\n                \"F2F1\": \"LR\",\n                \"R1R2\": \"LR\",\n\n                \"F2R1\": \"LL\",\n                \"R1F2\": \"LL\",\n\n                \"R2F1\": \"RR\",\n                \"F1R2\": \"RR\",\n\n                \"R2R1\": \"RL\",\n                \"F1F2\": \"RL\"\n            }\n        };\n\n    }\n\n    function getChrColor(chr) {\n        if (chrColorMap[chr]) {\n            return chrColorMap[chr];\n        }\n        else if (chrColorMap[\"chr\" + chr]) {\n            const color = chrColorMap[\"chr\" + chr];\n            chrColorMap[chr] = color;\n            return color;\n        }\n        else {\n            const color = igv.Color.randomRGB();\n            chrColorMap[chr] = color;\n            return color;\n        }\n    }\n\n    const chrColorMap = {\n        \"chrX\": \"rgb(204, 153, 0)\",\n        \"chrY\": \"rgb(153, 204, 0\",\n        \"chrUn\": \"rgb(50, 50, 50)\",\n        \"chr1\": \"rgb(80, 80, 255)\",\n        \"chrI\": \"rgb(139, 155, 187)\",\n        \"chr2\": \"rgb(206, 61, 50)\",\n        \"chrII\": \"rgb(206, 61, 50)\",\n        \"chr2a\": \"rgb(216, 71, 60)\",\n        \"chr2b\": \"rgb(226, 81, 70)\",\n        \"chr3\": \"rgb(116, 155, 88)\",\n        \"chrIII\": \"rgb(116, 155, 88)\",\n        \"chr4\": \"rgb(240, 230, 133)\",\n        \"chrIV\": \"rgb(240, 230, 133)\",\n        \"chr5\": \"rgb(70, 105, 131)\",\n        \"chr6\": \"rgb(186, 99, 56)\",\n        \"chr7\": \"rgb(93, 177, 221)\",\n        \"chr8\": \"rgb(128, 34, 104)\",\n        \"chr9\": \"rgb(107, 215, 107)\",\n        \"chr10\": \"rgb(213, 149, 167)\",\n        \"chr11\": \"rgb(146, 72, 34)\",\n        \"chr12\": \"rgb(131, 123, 141)\",\n        \"chr13\": \"rgb(199, 81, 39)\",\n        \"chr14\": \"rgb(213, 143, 92)\",\n        \"chr15\": \"rgb(122, 101, 165)\",\n        \"chr16\": \"rgb(228, 175, 105)\",\n        \"chr17\": \"rgb(59, 27, 83)\",\n        \"chr18\": \"rgb(205, 222, 183)\",\n        \"chr19\": \"rgb(97, 42, 121)\",\n        \"chr20\": \"rgb(174, 31, 99)\",\n        \"chr21\": \"rgb(231, 199, 111)\",\n        \"chr22\": \"rgb(90, 101, 94)\",\n        \"chr23\": \"rgb(204, 153, 0)\",\n        \"chr24\": \"rgb(153, 204, 0)\",\n        \"chr25\": \"rgb(51, 204, 0)\",\n        \"chr26\": \"rgb(0, 204, 51)\",\n        \"chr27\": \"rgb(0, 204, 153)\",\n        \"chr28\": \"rgb(0, 153, 204)\",\n        \"chr29\": \"rgb(10, 71, 255)\",\n        \"chr30\": \"rgb(71, 117, 255)\",\n        \"chr31\": \"rgb(255, 194, 10)\",\n        \"chr32\": \"rgb(255, 209, 71)\",\n        \"chr33\": \"rgb(153, 0, 51)\",\n        \"chr34\": \"rgb(153, 26, 0)\",\n        \"chr35\": \"rgb(153, 102, 0)\",\n        \"chr36\": \"rgb(128, 153, 0)\",\n        \"chr37\": \"rgb(51, 153, 0)\",\n        \"chr38\": \"rgb(0, 153, 26)\",\n        \"chr39\": \"rgb(0, 153, 102)\",\n        \"chr40\": \"rgb(0, 128, 153)\",\n        \"chr41\": \"rgb(0, 51, 153)\",\n        \"chr42\": \"rgb(26, 0, 153)\",\n        \"chr43\": \"rgb(102, 0, 153)\",\n        \"chr44\": \"rgb(153, 0, 128)\",\n        \"chr45\": \"rgb(214, 0, 71)\",\n        \"chr46\": \"rgb(255, 20, 99)\",\n        \"chr47\": \"rgb(0, 214, 143)\",\n        \"chr48\": \"rgb(20, 255, 177)\",\n    }\n\n\n    return igv;\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Bits of this code are based on the Biodalliance BAM reader by Thomas Down,  2011\n *\n * https://github.com/dasmoth/dalliance/blob/master/js/bam.js\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    var SEQ_DECODER = ['=', 'A', 'C', 'x', 'G', 'x', 'x', 'x', 'T', 'x', 'x', 'x', 'x', 'x', 'x', 'N'];\n    var CIGAR_DECODER = ['M', 'I', 'D', 'N', 'S', 'H', 'P', '=', 'X', '?', '?', '?', '?', '?', '?', '?'];\n    var READ_STRAND_FLAG = 0x10;\n    var MATE_STRAND_FLAG = 0x20;\n\n    var BAM1_MAGIC_BYTES = new Uint8Array([0x42, 0x41, 0x4d, 0x01]); // BAM\\1\n    var BAM1_MAGIC_NUMBER = readInt(BAM1_MAGIC_BYTES, 0);\n\n    const DEFAULT_SAMPLING_WINDOW_SIZE = 100;\n    const DEFAULT_SAMPLING_DEPTH = 100;\n    const MAXIMUM_SAMPLING_DEPTH = 2500;\n\n    igv.BamUtils = {\n\n        readHeader: function (url, options, genome) {\n\n            return igv.xhr.loadArrayBuffer(url, options)\n\n                .then(function (compressedBuffer) {\n\n                    var header, unc, uncba;\n\n                    unc = igv.unbgzf(compressedBuffer);\n                    uncba = new Uint8Array(unc);\n\n                    header = igv.BamUtils.decodeBamHeader(uncba, genome);\n\n                    return header;\n\n                })\n\n        },\n\n        /**\n         *\n         * @param ba  bytes to decode as a UInt8Array\n         * @param genome  optional igv genome object\n         * @returns {{ magicNumer: number, size: number, chrNames: Array, chrToIndex: ({}|*), chrAliasTable: ({}|*) }}\n         */\n        decodeBamHeader: function (ba, genome) {\n\n            var magic, samHeaderLen, samHeader, chrToIndex, chrNames, chrAliasTable, alias;\n\n            magic = readInt(ba, 0);\n            if (magic !== BAM1_MAGIC_NUMBER) {\n                throw new Error('BAM header errror: bad magic number.  This could be caused by either a corrupt or missing file.');\n            }\n\n            samHeaderLen = readInt(ba, 4);\n            samHeader = '';\n\n            for (var i = 0; i < samHeaderLen; ++i) {\n                samHeader += String.fromCharCode(ba[i + 8]);\n            }\n\n            var nRef = readInt(ba, samHeaderLen + 8);\n            var p = samHeaderLen + 12;\n\n            chrToIndex = {};\n            chrNames = [];\n            chrAliasTable = {};\n\n            for (i = 0; i < nRef; ++i) {\n                var lName = readInt(ba, p);\n                var name = '';\n                for (var j = 0; j < lName - 1; ++j) {\n                    name += String.fromCharCode(ba[p + 4 + j]);\n                }\n                var lRef = readInt(ba, p + lName + 4);\n                //dlog(name + ': ' + lRef);\n\n                chrToIndex[name] = i;\n                chrNames[i] = name;\n\n                if (genome) {\n                    alias = genome.getChromosomeName(name);\n                    chrAliasTable[alias] = name;\n                }\n\n                p = p + 8 + lName;\n            }\n\n            return {\n                magicNumber: magic,\n                size: p,\n                chrNames: chrNames,\n                chrToIndex: chrToIndex,\n                chrAliasTable: chrAliasTable\n            };\n\n        },\n\n        bam_tag2cigar: function (ba, block_end, seq_offset, lseq, al, cigarArray) {\n\n            function type2size(x) {\n                if (x == 'C' || x == 'c' || x == 'A') return 1;\n                else if (x == 'S' || x == 's') return 2;\n                else if (x == 'I' || x == 'i' || x == 'f') return 4;\n                else return 0;\n            }\n\n            // test if the real CIGAR is encoded in a CG:B,I tag\n            if (cigarArray.length != 1 || al.start < 0) return false;\n            var p = seq_offset + ((lseq + 1) >> 1) + lseq;\n            while (p + 4 < block_end) {\n                var tag = String.fromCharCode(ba[p]) + String.fromCharCode(ba[p + 1]);\n                if (tag == 'CG') break;\n                var type = String.fromCharCode(ba[p + 2]);\n                if (type == 'B') { // the binary array type\n                    type = String.fromCharCode(ba[p + 3]);\n                    var size = type2size(type);\n                    var len = readInt(ba, p + 4);\n                    p += 8 + size * len;\n                } else if (type == 'Z' || type == 'H') { // 0-terminated string\n                    p += 3;\n                    while (ba[p++] != 0) {\n                    }\n                } else { // other atomic types\n                    p += 3 + type2size(type);\n                }\n            }\n            if (p >= block_end) return false; // no CG tag\n            if (String.fromCharCode(ba[p + 2]) != 'B' || String.fromCharCode(ba[p + 3]) != 'I') return false; // not of type B,I\n\n            // now we know the real CIGAR length and its offset in the binary array\n            var cigar_len = readInt(ba, p + 4);\n            var cigar_offset = p + 8; // 4 for \"CGBI\" and 4 for length\n            if (cigar_offset + cigar_len * 4 > block_end) return false; // out of bound\n\n            // decode CIGAR\n            var cigar = '';\n            var lengthOnRef = 0;\n            cigarArray.length = 0; // empty the old array\n            p = cigar_offset;\n            for (var k = 0; k < cigar_len; ++k, p += 4) {\n                var cigop = readInt(ba, p);\n                var opLen = (cigop >> 4);\n                var opLtr = CIGAR_DECODER[cigop & 0xf];\n                if (opLtr == 'M' || opLtr == 'EQ' || opLtr == 'X' || opLtr == 'D' || opLtr == 'N' || opLtr == '=')\n                    lengthOnRef += opLen;\n                cigar = cigar + opLen + opLtr;\n                cigarArray.push({len: opLen, ltr: opLtr});\n            }\n\n            // update alignment record. We are not updating bin, as apparently it is not used.\n            al.cigar = cigar;\n            al.lengthOnRef = lengthOnRef;\n            return true;\n        },\n\n        /**\n         *\n         * @param ba                 bytes to decode as an UInt8Array\n         * @param offset             offset position of ba array to start decoding\n         * @param alignmentContainer container to receive the decoded alignments\n         * @param min                minimum genomic position\n         * @param max                maximum genomic position\n         * @param chrIdx             chromosome index\n         * @param chrNames            array of chromosome names\n         * @param filter             a igv.BamFilter object\n         */\n        decodeBamRecords: function (ba, offset, alignmentContainer, chrNames, chrIdx, min, max, filter) {\n\n            while (offset < ba.length) {\n\n                const blockSize = readInt(ba, offset);\n                const blockEnd = offset + blockSize + 4;\n                const alignment = new igv.BamAlignment();\n                const refID = readInt(ba, offset + 4);\n                const pos = readInt(ba, offset + 8);\n\n                if (blockEnd > ba.length) {\n                    return;\n                }\n                if (refID < 0) {\n                    offset = blockEnd;\n                    continue;   // unmapped read\n                }\n                else if (chrIdx !== undefined && (refID > chrIdx || pos > max)) {\n                    return;    // off right edge, we're done\n                }\n                else if (chrIdx !== undefined && (refID < chrIdx)) {\n                    offset = blockEnd;\n                    continue;   // ref ID to left of start, not sure this is possible\n                }\n\n                const bin_mq_nl = readInt(ba, offset + 12);\n                const bin = (bin_mq_nl & 0xffff0000) >> 16;\n                const mq = (bin_mq_nl & 0xff00) >> 8;\n                const nl = bin_mq_nl & 0xff;\n\n                const flag_nc = readInt(ba, offset + 16);\n                const flag = (flag_nc & 0xffff0000) >> 16;\n                const nc = flag_nc & 0xffff;\n\n                const lseq = readInt(ba, offset + 20);\n                const mateChrIdx = readInt(ba, offset + 24);\n                const matePos = readInt(ba, offset + 28);\n                const tlen = readInt(ba, offset + 32);\n\n                let readName = [];\n                for (let j = 0; j < nl - 1; ++j) {\n                    readName.push(String.fromCharCode(ba[offset + 36 + j]));\n                }\n                readName = readName.join('');\n\n                let lengthOnRef = 0;\n                let cigar = '';\n                let p = offset + 36 + nl;\n                const cigarArray = [];\n                for (let c = 0; c < nc; ++c) {\n                    var cigop = readInt(ba, p);\n                    var opLen = (cigop >> 4);\n                    var opLtr = CIGAR_DECODER[cigop & 0xf];\n                    if (opLtr == 'M' || opLtr == 'EQ' || opLtr == 'X' || opLtr == 'D' || opLtr == 'N' || opLtr == '=')\n                        lengthOnRef += opLen;\n                    cigar = cigar + opLen + opLtr;\n                    p += 4;\n\n                    cigarArray.push({len: opLen, ltr: opLtr});\n                }\n\n                alignment.chr = chrNames[refID];\n                alignment.start = pos;\n                alignment.flags = flag;\n                alignment.strand = !(flag & READ_STRAND_FLAG);\n                alignment.readName = readName;\n                alignment.cigar = cigar;\n                alignment.lengthOnRef = lengthOnRef;\n                alignment.fragmentLength = tlen;\n                alignment.mq = mq;\n\n                igv.BamUtils.bam_tag2cigar(ba, blockEnd, p, lseq, alignment, cigarArray);\n\n                alignment.end = alignment.start + alignment.lengthOnRef;\n\n                if (alignment.end < min) {\n                    offset = blockEnd;\n                    continue;\n                }  // Record out-of-range \"to the left\", skip to next one\n\n\n                let seq = [];\n                const seqBytes = (lseq + 1) >> 1;\n                for (let j = 0; j < seqBytes; ++j) {\n                    var sb = ba[p + j];\n                    seq.push(SEQ_DECODER[(sb & 0xf0) >> 4]);\n                    seq.push(SEQ_DECODER[(sb & 0x0f)]);\n                }\n                seq = seq.slice(0, lseq).join('');  // seq might have one extra character (if lseq is an odd number)\n                p += seqBytes;\n\n\n                let qualArray;\n                if (lseq === 1 && String.fromCharCode(ba[p + j] + 33) === '*') {\n                    // TODO == how to represent this?\n                } else {\n                    qualArray = [];\n                    for (let j = 0; j < lseq; ++j) {\n                        qualArray.push(ba[p + j]);\n                    }\n                }\n                p += lseq;\n\n                if (mateChrIdx >= 0) {\n                    alignment.mate = {\n                        chr: chrNames[mateChrIdx],\n                        position: matePos,\n                        strand: !(flag & MATE_STRAND_FLAG)\n                    };\n                }\n\n                alignment.seq = seq;\n                alignment.qual = qualArray;\n                alignment.tagBA = new Uint8Array(ba.buffer.slice(p, blockEnd));  // decode these on demand\n\n                this.setPairOrientation(alignment);\n\n                if ((undefined === filter || filter.pass(alignment))) {\n                    makeBlocks(alignment, cigarArray);\n                    alignmentContainer.push(alignment);\n                }\n                offset = blockEnd;\n            }\n        },\n\n        decodeSamRecords: function (sam, alignmentContainer, chr, min, max, filter) {\n\n            var lines, i, j, len, tokens, blocks, pos, qualString, rnext, pnext, lengthOnRef,\n                alignment, cigarArray, started;\n\n            lines = igv.splitLines(sam);\n            len = lines.length;\n            started = false;\n\n            for (i = 0; i < len; i++) {\n\n                tokens = lines[i].split('\\t');\n\n                alignment = new igv.BamAlignment();\n\n                alignment.chr = tokens[2];\n                alignment.start = Number.parseInt(tokens[3]) - 1;\n                alignment.flags = Number.parseInt(tokens[1]);\n                alignment.readName = tokens[0];\n                alignment.strand = !(alignment.flags & READ_STRAND_FLAG);\n                alignment.mq = Number.parseInt(tokens[4]);\n                alignment.cigar = tokens[5];\n                alignment.fragmentLength = Number.parseInt(tokens[8]);\n                alignment.seq = tokens[9];\n\n                if (alignment.chr === '*' || !alignment.isMapped()) continue;  // Unmapped\n\n                if (alignment.chr !== chr) {\n                    if (started) break; // Off the right edge, we're done\n                    else continue; // Possibly to the left, skip but keep looping\n                } else if (alignment.start > max) {\n                    break;    // off right edge, we're done\n                }\n\n                lengthOnRef = 0;\n                cigarArray = buildOperators(alignment.cigar);\n                cigarArray.forEach(function (op) {\n                    var opLen = op.len;\n                    var opLtr = op.ltr;\n                    if (opLtr == 'M' || opLtr == 'EQ' || opLtr == 'X' || opLtr == 'D' || opLtr == 'N' || opLtr == '=')\n                        lengthOnRef += opLen;\n                });\n                alignment.lengthOnRef = lengthOnRef;\n                // TODO for lh3: parse the CG:B,I tag in SAM here\n\n                if (alignment.start + lengthOnRef < min) {\n                    continue;    // To the left, skip and continue\n                }\n\n\n                qualString = tokens[10];\n                alignment.qual = [];\n                for (j = 0; j < qualString.length; j++) {\n                    alignment.qual[j] = qualString.charCodeAt(j) - 33;\n                }\n                alignment.tagDict = tokens.length < 11 ? {} : decodeSamTags(tokens.slice(11));\n\n                if (alignment.isMateMapped()) {\n                    rnext = tokens[6];\n                    alignment.mate = {\n                        chr: (rnext === '=') ? alignment.chr : rnext,\n                        position: Number.parseInt(tokens[7]),\n                        strand: !(alignment.flags & MATE_STRAND_FLAG)\n                    };\n                }\n\n                this.setPairOrientation(alignment);\n\n                if (undefined === filter || filter.pass(alignment)) {\n                    makeBlocks(alignment, cigarArray);\n                    alignmentContainer.push(alignment);\n                }\n            }\n        },\n\n        setReaderDefaults: function (reader, config) {\n\n            reader.filter = new igv.BamFilter(config.filter);\n\n            if (config.readgroup) {\n                reader.filter.readgroups = new Set([config.readgroup]);\n            }\n\n\n            reader.samplingWindowSize = config.samplingWindowSize === undefined ? DEFAULT_SAMPLING_WINDOW_SIZE : config.samplingWindowSize;\n            reader.samplingDepth = config.samplingDepth === undefined ? DEFAULT_SAMPLING_DEPTH : config.samplingDepth;\n\n            if (reader.samplingDepth > MAXIMUM_SAMPLING_DEPTH) {\n                igv.log(\"Warning: attempt to set sampling depth > maximum value of 2500\");\n                reader.samplingDepth = MAXIMUM_SAMPLING_DEPTH;\n            }\n\n            if (config.viewAsPairs) {\n                reader.pairsSupported = true;\n            }\n            else {\n                reader.pairsSupported = config.pairsSupported === undefined ? true : config.pairsSupported;\n            }\n        },\n\n        setPairOrientation: function (alignment) {\n\n            if (alignment.isMapped() && alignment.mate && alignment.isMateMapped() && alignment.mate.chr === alignment.chr) {\n                var s1 = alignment.strand ? 'F' : 'R';\n\n                var mate = alignment.mate;\n                var s2 = mate.strand ? 'F' : 'R';\n                var o1 = ' ';\n                var o2 = ' ';\n                if (alignment.isFirstOfPair()) {\n                    o1 = '1';\n                    o2 = '2';\n                } else if (alignment.isSecondOfPair()) {\n                    o1 = '2';\n                    o2 = '1';\n                }\n\n                var tmp = [];\n                var isize = alignment.fragmentLength;\n                var estReadLen = alignment.end - alignment.start;\n                if (isize === 0) {\n                    //isize not recorded.  Need to estimate.  This calculation was validated against an Illumina\n                    // -> <- library bam.\n                    var estMateEnd = alignment.start < mate.position ?\n                        mate.position + estReadLen : mate.position - estReadLen;\n                    isize = estMateEnd - alignment.start;\n                }\n\n                //if (isize > estReadLen) {\n                if (isize > 0) {\n                    tmp[0] = s1;\n                    tmp[1] = o1;\n                    tmp[2] = s2;\n                    tmp[3] = o2;\n\n                } else {\n                    tmp[2] = s1;\n                    tmp[3] = o1;\n                    tmp[0] = s2;\n                    tmp[1] = o2;\n                }\n                // }\n                alignment.pairOrientation = tmp.join('');\n            }\n\n        }\n    };\n\n\n    /**\n     * Split the alignment record into blocks as specified in the cigarArray.  Each aligned block contains\n     * its portion of the read sequence and base quality strings.  A read sequence or base quality string\n     * of \"*\" indicates the value is not recorded.  In all other cases the length of the block sequence (block.seq)\n     * and quality string (block.qual) must == the block length.\n     *\n     * @param alignment\n     * @param cigarArray\n     * @returns array of blocks\n     */\n    function makeBlocks(alignment, cigarArray) {\n\n        const blocks = [];\n\n        let insertions;\n        let seqOffset = 0;\n        let pos = alignment.start;\n        let gapType;\n\n        alignment.scStart = alignment.start;\n        alignment.scLengthOnRef = alignment.lengthOnRef;\n\n        for (let c of cigarArray) {\n\n            switch (c.ltr) {\n                case 'H' :\n                    break; // ignore hard clips\n                case 'P' :\n                    break; // ignore pads\n                case 'S' :\n\n                    let scPos = pos;\n                    alignment.scLengthOnRef += c.len;\n                    if(blocks.length === 0) {\n                        alignment.scStart -= c.len;\n                        scPos -= c.len;\n                    }\n                    blocks.push(new igv.AlignmentBlock({\n                        start: scPos,\n                        seqOffset: seqOffset,\n                        len: c.len,\n                        type: 'S'\n                    }));\n                    seqOffset += c.len;\n                    gapType = 'I';\n                    break; // soft clip read bases\n                case 'N' :\n                    pos += c.len;\n                    gapType = 'N';\n                    break;  // reference skip\n                case 'D' :\n                    pos += c.len;\n                    gapType = 'D';\n                    break;\n                case 'I' :\n\n                    if (insertions === undefined) {\n                        insertions = [];\n                    }\n                    insertions.push(new igv.AlignmentBlock({\n                        start: pos,\n                        len: c.len,\n                        seqOffset: seqOffset,\n                        type: 'I'\n                    }));\n                    seqOffset += c.len;\n                    gapType = 'I';\n                    break;\n                case 'M' :\n                case 'EQ' :\n                case '=' :\n                case 'X' :\n\n                    blocks.push(new igv.AlignmentBlock({\n                        start: pos,\n                        seqOffset: seqOffset,\n                        len: c.len,\n                        type: 'M',\n                        gapType: gapType\n                    }));\n                    seqOffset += c.len;\n                    pos += c.len;\n\n                    break;\n\n                default :\n                    console.log('Error processing cigar element: ' + c.len + c.ltr);\n            }\n        }\n\n        alignment.blocks =  blocks;\n        alignment.insertions = insertions;\n\n    }\n\n    function readInt(ba, offset) {\n        return (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset]);\n    }\n\n    function readShort(ba, offset) {\n        return (ba[offset + 1] << 8) | (ba[offset]);\n    }\n\n    /**\n     * Build a list of cigar operators from a cigarString.  Removes padding operators and concatenates consecutive\n     * operators of the same type\n     *\n     * @param cigarString\n     * @return\n     */\n    function buildOperators(cigarString) {\n\n        var operators, buffer, i, len, prevOp, next, op, nBases;\n\n        operators = [];\n        buffer = [];\n\n        // Create list of cigar operators\n        prevOp = null;\n        len = cigarString.length;\n        for (i = 0; i < len; i++) {\n            next = cigarString.charAt(i);\n            if (isDigit(next)) {\n                buffer.push(next);\n            } else {\n                op = next;\n                nBases = Number.parseInt(buffer.join(''));\n                buffer = [];\n\n                if (prevOp != null && prevOp.ltr == op) {\n                    prevOp.len += nBases;\n                } else {\n                    prevOp = {len: nBases, ltr: op};\n                    operators.push(prevOp);\n                }\n            }\n        }\n        return operators;\n\n    }\n\n    function isDigit(a) {\n        var charCode = a.charCodeAt(0);\n        return (charCode >= 48 && charCode <= 57); // 0-9\n    }\n\n    function decodeSamTags(tags) {\n\n        var tagDict = {};\n        tags.forEach(function (tag) {\n            var tokens = tag.split(':');\n            tagDict[tokens[0]] = tokens[2];\n        });\n\n        return tagDict;\n    }\n\n    return igv;\n\n})\n(igv || {});\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    /**\n     * Class for reading bam records from an igv.js-flask server\n     *\n     * @param config\n     * @constructor\n     */\n    igv.BamWebserviceReader = function (config, genome) {\n\n        this.config = config;\n        this.genome = genome;\n        igv.BamUtils.setReaderDefaults(this, config);\n\n    };\n\n    // Example http://localhost:5000/alignments/?reference=/Users/jrobinso/hg19mini.fa&file=/Users/jrobinso/cram_with_crai_index.cram&region=1:100-2000\n\n    igv.BamWebserviceReader.prototype.readAlignments = function (chr, bpStart, bpEnd) {\n\n        var self = this;\n\n        return getHeader.call(self)\n\n            .then(function (header) {\n\n                    var queryChr, url;\n\n                    queryChr = header.chrAliasTable.hasOwnProperty(chr) ? header.chrAliasTable[chr] : chr;\n\n                    url = self.config.url +\n                        \"?reference=\" + self.config.referenceFile +\n                        \"&file=\" + self.config.alignmentFile + \"\" +\n                        \"&region=\" + queryChr + \":\" + bpStart + \"-\" + bpEnd;\n\n\n                    return igv.xhr.loadString(url, igv.buildOptions(self.config))\n\n                        .then(function (sam) {\n\n                            var alignmentContainer, chrId, ba;\n\n                            chrId = header.chrToIndex[queryChr];\n\n                            alignmentContainer = new igv.AlignmentContainer(chr, bpStart, bpEnd, self.samplingWindowSize, self.samplingDepth, self.pairsSupported);\n\n                            igv.BamUtils.decodeSamRecords(sam, alignmentContainer, queryChr, bpStart, bpEnd, self.filter);\n\n                            return alignmentContainer;\n\n                        })\n\n                })\n    }\n\n\n// Example  http://localhost:5000/alignments/?reference=/Users/jrobinso/hg19mini.fa&file=/Users/jrobinso/cram_with_crai_index.cram&options=-b%20-H\n    function getHeader() {\n\n        const self = this;\n        const genome = this.genome;\n\n        if (this.header) {\n\n            return Promise.resolve(this.header);\n\n        } else {\n\n            const url = this.config.url + \"?file=\" + this.config.alignmentFile + \"&options=-b,-H\";\n            const options = igv.buildOptions(this.config);\n\n            return igv.BamUtils.readHeader(url, options, genome)\n\n                .then(function (header) {\n\n                    self.header = header;\n                    return header;\n\n                })\n        }\n\n    }\n\n\n    function readInt(ba, offset) {\n        return (ba[offset + 3] << 24) | (ba[offset + 2] << 16) | (ba[offset + 1] << 8) | (ba[offset]);\n    }\n\n    return igv;\n\n})\n(igv || {});\n\n\n\nvar igv = (function (igv) {\n\n    var BLOCK_HEADER_LENGTH = 18;\n    var BLOCK_LENGTH_OFFSET = 16;  // Location in the gzip block of the total block size (actually total block size - 1)\n    var BLOCK_FOOTER_LENGTH = 8; // Number of bytes that follow the deflated data\n    var MAX_COMPRESSED_BLOCK_SIZE = 64 * 1024; // We require that a compressed block (including header and footer, be <= this)\n    var GZIP_OVERHEAD = BLOCK_HEADER_LENGTH + BLOCK_FOOTER_LENGTH + 2; // Gzip overhead is the header, the footer, and the block size (encoded as a short).\n    var GZIP_ID1 = 31;   // Magic number\n    var GZIP_ID2 = 139;  // Magic number\n    var GZIP_FLG = 4; // FEXTRA flag means there are optional fields\n\n\n    // Uncompress data,  assumed to be series of bgzipped blocks\n    igv.unbgzf = function (data, lim) {\n\n        var oBlockList = [],\n            ptr = 0,\n            totalSize = 0;\n\n        lim = lim || data.byteLength - 18;\n\n        while (ptr < lim) {\n\n            var ba = new Uint8Array(data, ptr, 18);\n\n            var xlen = (ba[11] << 8) | (ba[10]);\n            var si1 = ba[12];\n            var si2 = ba[13];\n            var slen = (ba[15] << 8) | (ba[14]);\n            var bsize = (ba[17] << 8) | (ba[16]) + 1;\n\n            var start = 12 + xlen + ptr;    // Start of CDATA\n            var length = data.byteLength - start;\n\n            if (length < (bsize + 8)) break;\n\n            const a = new Uint8Array(data, start, length)\n            var inflate = new Zlib.RawInflate(a);\n            var unc = inflate.decompress();\n            ptr += inflate.ip + 26\n\n            totalSize += unc.byteLength;\n            oBlockList.push(unc);\n        }\n\n        // Concatenate decompressed blocks\n        if (oBlockList.length == 1) {\n            return oBlockList[0];\n        } else {\n            var out = new Uint8Array(totalSize);\n            var cursor = 0;\n            for (var i = 0; i < oBlockList.length; ++i) {\n                var b = new Uint8Array(oBlockList[i]);\n                arrayCopy(b, 0, out, cursor, b.length);\n                cursor += b.length;\n            }\n            return out.buffer;\n        }\n    }\n\n    // Uncompress data,  assumed to be series of bgzipped blocks\n    // igv.unbgzf = function (data, lim) {\n    //\n    //     var oBlockList = [],\n    //         ptr = [0],\n    //         totalSize = 0;\n    //\n    //     lim = lim || data.byteLength - 18;\n    //\n    //     while (ptr[0] < lim) {\n    //\n    //         var ba = new Uint8Array(data, ptr[0], 18);\n    //\n    //         var xlen = (ba[11] << 8) | (ba[10]);\n    //         var si1 = ba[12];\n    //         var si2 = ba[13];\n    //         var slen = (ba[15] << 8) | (ba[14]);\n    //         var bsize = (ba[17] << 8) | (ba[16]) + 1;\n    //\n    //         var start = 12 + xlen + ptr[0];    // Start of CDATA\n    //         var length = data.byteLength - start;\n    //\n    //         if (length < (bsize + 8)) break;\n    //\n    //         var unc = jszlib_inflate_buffer(data, start, length, ptr);\n    //         ptr[0] += 8;    // Skipping CRC-32 and size of uncompressed data\n    //\n    //         totalSize += unc.byteLength;\n    //         oBlockList.push(unc);\n    //     }\n    //\n    //     // Concatenate decompressed blocks\n    //     if (oBlockList.length == 1) {\n    //         return oBlockList[0];\n    //     } else {\n    //         var out = new Uint8Array(totalSize);\n    //         var cursor = 0;\n    //         for (var i = 0; i < oBlockList.length; ++i) {\n    //             var b = new Uint8Array(oBlockList[i]);\n    //             arrayCopy(b, 0, out, cursor, b.length);\n    //             cursor += b.length;\n    //         }\n    //         return out.buffer;\n    //     }\n    // }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    igv.HtsgetReader = function (config, genome) {\n      \n        this.config = config;\n        this.genome = genome;\n        igv.BamUtils.setReaderDefaults(this, config);\n        \n    };\n\n    igv.HtsgetReader.prototype.readAlignments = function (chr, start, end, retryCount) {\n\n        const self = this;\n        const genome = this.genome;\n\n        let queryChr;\n        if (self.header) {\n            queryChr = self.header.chrAliasTable.hasOwnProperty(chr) ? self.header.chrAliasTable[chr] : chr;\n        } else {\n            queryChr = chr;\n        }\n\n        const url = self.config.endpoint + '/reads/' + self.config.id + '?format=BAM' +\n            '&referenceName=' + queryChr +\n            '&start=' + start +\n            '&end=' + end;\n\n        return igv.xhr.loadJson(url, self.config)\n\n            .then(function (data) {\n\n                return loadUrls(data.htsget.urls)\n\n            })\n\n            .then(function (dataArr) {\n\n                const compressedData = concatArrays(dataArr);  // In essence a complete bam file\n                const unc = igv.unbgzf(compressedData.buffer);\n                const ba = new Uint8Array(unc);\n\n                if (!self.header) {\n                    self.header = igv.BamUtils.decodeBamHeader(ba, genome);\n                }\n\n                const chrIdx = self.header.chrToIndex[chr];\n\n                const alignmentContainer = new igv.AlignmentContainer(chr, start, end, self.samplingWindowSize, self.samplingDepth, self.pairsSupported);\n                igv.BamUtils.decodeBamRecords(ba, self.header.size, alignmentContainer, self.header.chrNames, chrIdx, start, end);\n                alignmentContainer.finish();\n\n                if(alignmentContainer.alignments.length === 0) {\n                    return tryChrAlias(chr, start, end);\n                }\n                else {\n                    return alignmentContainer;\n                }\n                \n                \n                function tryChrAlias(chr, start, end) {\n                    if (chrIdx === undefined && self.header.chrAliasTable.hasOwnProperty(chr) && !retryCount) {\n                        queryChr = self.header.chrAliasTable[chr]\n                        return self.readAlignments(queryChr, start, end, 1);\n                    }\n                    else {\n                        return alignmentContainer;\n                    }\n                }\n\n            })\n    }\n    \n\n\n    function loadUrls(urls) {\n\n        const promiseArray = [];\n\n        urls.forEach(function (urlData) {\n\n            if (urlData.url.startsWith('data:')) {\n                // this is a data-uri\n                promiseArray.push(Promise.resolve(dataUriToBytes(urlData.url)));\n\n            } else {\n                const options = {};\n\n                if (urlData.headers) {\n                    options.headers = urlData.headers;\n                    if (options.headers.hasOwnProperty(\"referer\")) {\n                        delete options.headers[\"referer\"];\n                    }\n                }\n\n                promiseArray.push(new Promise(function (fulfill, reject) {\n                    igv.xhr.loadArrayBuffer(urlData.url, options)\n                        .then(function (buffer) {\n                            fulfill(new Uint8Array(buffer));\n                        });\n                }));\n            }\n        });\n\n        return Promise.all(promiseArray);\n    }\n\n    /**\n     * Concatenate a list of Uint8Arrays\n     * @param arrays\n     */\n    function concatArrays(arrays) {\n\n        let len = 0;\n        arrays.forEach(function (a) {\n            len += a.length;\n        });\n\n        let offset = 0;\n        const newArray = new Uint8Array(len);\n        arrays.forEach(function (a) {\n            newArray.set(a, offset);\n            offset += a.length;\n        });\n\n        return newArray;\n\n    }\n\n    function dataUriToBytes(dataUri) {\n\n        const split = dataUri.split(',');\n        const info = split[0].split(':')[1];\n        let dataString = split[1];\n\n        if (info.indexOf('base64') >= 0) {\n            dataString = atob(dataString);\n        } else {\n            dataString = decodeURI(dataString);\n        }\n\n        const bytes = new Uint8Array(dataString.length);\n        for (var i = 0; i < dataString.length; i++) {\n            bytes[i] = dataString.charCodeAt(i);\n        }\n\n        return bytes;\n    }\n\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\nvar igv = (function (igv) {\n\n\n    igv.PairedAlignment = function (firstAlignment) {\n\n        this.paired = true;\n        this.firstAlignment = firstAlignment;\n        this.chr = firstAlignment.chr;\n        this.readName = firstAlignment.readName;\n\n        if (firstAlignment.start < firstAlignment.mate.position) {\n            this.start = firstAlignment.start;\n            this.scStart = firstAlignment.scStart;\n            this.connectingStart = firstAlignment.start + firstAlignment.lengthOnRef;\n            this.connectingEnd = firstAlignment.mate.position;\n        }\n        else {\n            this.start = firstAlignment.mate.position;\n            this.scStart = this.start;\n            this.connectingStart = firstAlignment.mate.position;\n            this.connectingEnd = firstAlignment.start;\n        }\n\n        this.end = Math.max(firstAlignment.mate.position, firstAlignment.start + firstAlignment.lengthOnRef);  // Approximate\n        this.lengthOnRef = this.end - this.start;\n\n        let scEnd = Math.max(this.end, firstAlignment.scStart + firstAlignment.scLengthOnRef);\n        this.scLengthOnRef = scEnd - this.scStart;\n\n    }\n\n    igv.PairedAlignment.prototype.setSecondAlignment = function (secondAlignment) {\n\n        // TODO -- check the chrs are equal,  error otherwise\n        this.secondAlignment = secondAlignment;\n        const firstAlignment = this.firstAlignment;\n\n        if (secondAlignment.start > firstAlignment.start) {\n            this.connectingEnd = secondAlignment.start;\n        }\n        else {\n            this.connectingStart = secondAlignment.start + secondAlignment.lengthOnRef;\n        }\n\n        this.start = Math.min(firstAlignment.start, secondAlignment.start);\n        this.end = Math.max(firstAlignment.start + firstAlignment.lengthOnRef, secondAlignment.start + secondAlignment.lengthOnRef)\n        this.lengthOnRef = this.end - this.start;\n\n        this.scStart = Math.min(firstAlignment.scStart, secondAlignment.scStart);\n        const scEnd = Math.max(firstAlignment.scStart + firstAlignment.scLengthOnRef, secondAlignment.scStart + secondAlignment.scLengthOnRef);\n        this.scLengthOnRef = scEnd - this.scStart;\n\n    }\n\n    igv.PairedAlignment.prototype.popupData = function (genomicLocation) {\n\n        var nameValues = [];\n\n        nameValues = nameValues.concat(this.firstAlignment.popupData(genomicLocation));\n\n        if (this.secondAlignment) {\n            nameValues.push(\"-------------------------------\");\n            nameValues = nameValues.concat(this.secondAlignment.popupData(genomicLocation));\n        }\n        return nameValues;\n    }\n\n    igv.PairedAlignment.prototype.isPaired = function () {\n        return true; // By definition\n    }\n\n    igv.PairedAlignment.prototype.firstOfPairStrand = function () {\n\n        if (this.firstAlignment.isFirstOfPair()) {\n            return this.firstAlignment.strand;\n        }\n        else if (this.secondAlignment && this.secondAlignment.isFirstOfPair()) {\n            return this.secondAlignment.strand;\n        }\n        else {\n            return this.firstAlignment.mate.strand;    // Assumption is mate is first-of-pair\n        }\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California \n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    igv.ShardedBamReader = function (config, genome) {\n\n        this.config = config;\n        this.genome = genome;\n\n        const bamReaders = {};\n        const chrAliasTable = {};\n\n        config.sources.sequences.forEach(function (chr) {\n\n            bamReaders[chr] = null;   // Placeholder\n\n            if (genome) {\n                const alias = genome.getChromosomeName(chr);\n                chrAliasTable[alias] = chr;\n            }\n        });\n\n        this.chrAliasTable = chrAliasTable;\n\n        this.bamReaders = bamReaders;\n\n        igv.BamUtils.setReaderDefaults(this, config);\n    };\n\n    igv.ShardedBamReader.prototype.readAlignments = function (chr, start, end) {\n\n        const genome = this.genome;\n        const self = this;\n\n        const queryChr = self.chrAliasTable.hasOwnProperty(chr) ? self.chrAliasTable[chr] : chr;\n\n        if (!this.bamReaders.hasOwnProperty(queryChr) || \"none\" === this.bamReaders[queryChr]) {\n            return Promise.resolve(new igv.AlignmentContainer(chr, start, end));\n        }\n\n        else {\n\n            let reader = self.bamReaders[queryChr];\n            let tmp;\n\n            if (!reader) {\n\n                tmp = {\n                    url: self.config.sources.url.replace(\"$CHR\", queryChr)\n                }\n\n                if (self.config.sources.indexURL) {\n                    tmp.indexURL = self.config.sources.indexURL.replace(\"$CHR\", queryChr);\n                }\n\n                const bamConfig = Object.assign(self.config, tmp);\n                reader = new igv.BamReader(bamConfig);\n                self.bamReaders[queryChr] = reader;\n            }\n\n            return reader.readAlignments(queryChr, start, end)\n\n                .catch(function (error) {\n                    console.error(error);\n                    igv.browser.presentAlert(\"Error reading BAM or index file for: \" + tmp ? tmp.url : \"\");\n                    self.bamReaders[queryChr] = \"none\";\n                    return new igv.AlignmentContainer(chr, start, end);   // Empty alignment container\n                })\n\n        }\n    }\n\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\nvar igv = (function (igv) {\n\n\n    igv.isb = {\n\n        querySegByStudy: function (study, limit) {\n            var q = \"SELECT * FROM [isb-cgc:tcga_201510_alpha.Copy_Number_segments] \" +\n                \"WHERE ParticipantBarcode IN \" +\n                \"(SELECT ParticipantBarcode FROM [isb-cgc:tcga_201510_alpha.Clinical_data] WHERE Study = \\\"\" + study + \"\\\")\";\n\n            if(limit) q += (\" limit \" + limit);\n\n            return q;\n        },\n\n\n        decodeSeg: function (row) {\n\n            var seg = {};\n            seg[\"ParticipantBarcode\"] = row.f[0].v;\n            seg[\"Study\"] = row.f[4].v;\n            seg[\"Chromosome\"] = row.f[6].v;\n            seg[\"Start\"] = row.f[7].v;\n            seg[\"End\"] = row.f[8].v;\n            seg[\"Num_Probes\"] = row.f[9].v;\n            seg[\"Segment_mean\"] = row.f[10].v;\n            return seg;\n        }\n\n\n    }\n\n    return igv;\n\n})(igv || {});\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 4/7/14.\n */\n\n\nvar igv = (function (igv) {\n\n\n    igv.BufferedReader = function (config, contentLength, bufferSize) {\n        this.path = config.url;\n        this.bufferSize = bufferSize ? bufferSize : 512000;\n        this.range = {start: -1, size: -1};\n        this.config = config;\n    }\n\n    /**\n     *\n     * @param requestedRange - byte rangeas {start, size}\n     * @param fulfill - function to receive result\n     * @param asUint8 - optional flag to return result as an UInt8Array\n     */\n    igv.BufferedReader.prototype.dataViewForRange = function (requestedRange, asUint8) {\n\n        var self = this;\n\n        var hasData = (self.data && (self.range.start <= requestedRange.start) &&\n            ((self.range.start + self.range.size) >= (requestedRange.start + requestedRange.size))),\n            bufferSize,\n            loadRange;\n\n        if (hasData) {\n            return Promise.resolve(subbuffer(self, requestedRange, asUint8));\n        }\n        else {\n            // If requested range size is specified, expand buffer size\n            if (requestedRange.size) {\n                bufferSize = Math.max(self.bufferSize, requestedRange.size);\n            }\n            else {\n                bufferSize = self.bufferSize;\n            }\n\n            loadRange = {start: requestedRange.start, size: bufferSize};\n\n\n            return igv.xhr.loadArrayBuffer(self.path, igv.buildOptions(self.config, {range: loadRange}))\n                .then(function (arrayBuffer) {\n                    self.data = arrayBuffer;\n                    self.range = loadRange;\n                    return subbuffer(self, requestedRange, asUint8);\n                })\n        }\n\n\n        function subbuffer(bufferedReader, requestedRange, asUint8) {\n\n            var len = bufferedReader.data.byteLength,\n                bufferStart = requestedRange.start - bufferedReader.range.start,\n                result = asUint8 ?\n                    new Uint8Array(bufferedReader.data, bufferStart, len - bufferStart) :\n                    new DataView(bufferedReader.data, bufferStart, len - bufferStart);\n            return result;\n        }\n\n\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 4/7/14.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    var BIGWIG_MAGIC_LTH = 0x888FFC26; // BigWig Magic Low to High\n    var BIGWIG_MAGIC_HTL = 0x26FC8F66; // BigWig Magic High to Low\n    var BIGBED_MAGIC_LTH = 0x8789F2EB; // BigBed Magic Low to High\n    var BIGBED_MAGIC_HTL = 0xEBF28987; // BigBed Magic High to Low\n    var BBFILE_HEADER_SIZE = 64;\n    var RPTREE_HEADER_SIZE = 48;\n    var RPTREE_NODE_LEAF_ITEM_SIZE = 32;   // leaf item size\n    var RPTREE_NODE_CHILD_ITEM_SIZE = 24;  // child item size\n    var BUFFER_SIZE = 512000;     //  buffer\n    var BPTREE_HEADER_SIZE = 32;\n\n    igv.BWReader = function (config, genome) {\n        this.path = config.url;\n        this.genome = genome;\n        this.rpTreeCache = {};\n        this.config = config;\n    };\n\n    igv.BWReader.prototype.readWGFeatures = function (bpPerPixel, windowFunction) {\n\n        const self = this;\n        const genome = this.genome;\n\n        return self.getZoomHeaders()\n            .then(function (zoomLevelHeaders) {\n                var chrIdx1, chrIdx2, chr1, chr2;\n\n                chrIdx1 = 0;\n                chrIdx2 = self.chromTree.idToChrom.length - 1;\n                chr1 = self.chromTree.idToChrom[chrIdx1];\n                chr2 = self.chromTree.idToChrom[chrIdx2];\n\n                return self.readFeatures(chr1, 0, chr2, Number.MAX_VALUE, bpPerPixel, windowFunction);\n            });\n\n    }\n\n    igv.BWReader.prototype.readFeatures = function (chr1, bpStart, chr2, bpEnd, bpPerPixel, windowFunction) {\n\n        var self = this,\n            decodeFunction,\n            chrIdx1,\n            chrIdx2;\n\n        return self.getZoomHeaders()\n\n            .then(function (zoomLevelHeaders) {\n\n                // Select a biwig \"zoom level\" appropriate for the current resolution\n                var zoomLevelHeader = zoomLevelForScale(bpPerPixel, zoomLevelHeaders),\n                    treeOffset;\n\n                if (zoomLevelHeader) {\n                    treeOffset = zoomLevelHeader.indexOffset;\n                    decodeFunction = decodeZoomData;\n                } else {\n                    treeOffset = self.header.fullIndexOffset;\n                    if (self.type === \"BigWig\") {\n                        decodeFunction = decodeWigData;\n                    }\n                    else {\n                        decodeFunction = decodeBedData;\n                    }\n                }\n\n                return self.loadRPTree(treeOffset);\n            })\n\n            .then(function (rpTree) {\n\n                chrIdx1 = self.chromTree.chromToID[chr1];\n                chrIdx2 = self.chromTree.chromToID[chr2];\n                if (chrIdx1 === undefined || chrIdx2 === undefined) {\n                    return undefined;\n                }\n                else {\n                    return rpTree.findLeafItemsOverlapping(chrIdx1, bpStart, chrIdx2, bpEnd)\n                }\n            })\n\n            .then(function (leafItems) {\n\n\n                if (!leafItems || leafItems.length == 0) {\n                    return [];\n                }\n                else {\n\n                    // Consolidate leaf items and get all data at once\n                    let start = Number.MAX_VALUE;\n                    let end = 0;\n                    for (let item of leafItems) {\n                        start = Math.min(start, item.dataOffset);\n                        end = Math.max(end, item.dataOffset + item.dataSize);\n                    }\n                    ;\n\n                    const size = end - start;\n\n                    return igv.xhr.loadArrayBuffer(self.config.url, igv.buildOptions(self.config, {\n                        range: {\n                            start: start,\n                            size: size\n                        }\n                    }))\n\n                        .then(function (arrayBuffer) {\n\n                            const allFeatures = [];\n\n                            const buffer = new Uint8Array(arrayBuffer);\n\n                            for (let item of leafItems) {\n\n                                const uint8Array = buffer.subarray(item.dataOffset - start, item.dataOffset + item.dataSize);\n\n                                let plain;\n                                const isCompressed = self.header.uncompressBuffSize > 0;\n                                if (isCompressed) {\n                                    const inflate = new Zlib.Inflate(uint8Array);\n                                    plain = inflate.decompress();\n                                }\n                                else {\n                                    plain = uint8Array;\n                                }\n\n                                decodeFunction(new DataView(plain.buffer), chrIdx1, bpStart, chrIdx2, bpEnd, allFeatures, self.chromTree.idToChrom, windowFunction);\n                            }\n\n                            allFeatures.sort(function (a, b) {\n                                return a.start - b.start;\n                            })\n\n                            return allFeatures;\n\n                        })\n                }\n            })\n\n    }\n\n    igv.BWReader.prototype.getZoomHeaders = function () {\n\n        var self = this;\n\n        if (self.zoomLevelHeaders) {\n            return Promise.resolve(self.zoomLevelHeaders);\n        }\n        else {\n            return self.loadHeader()\n                .then(function () {\n                    return self.zoomLevelHeaders;\n                })\n        }\n\n    }\n\n    igv.BWReader.prototype.loadHeader = function () {\n\n        var self = this;\n\n        if (self.header) {\n            return Promise.resolve(self.header);\n        }\n        else {\n            return igv.xhr.loadArrayBuffer(self.path, igv.buildOptions(self.config, {\n                range: {\n                    start: 0,\n                    size: BBFILE_HEADER_SIZE\n                }\n            }))\n                .then(function (data) {\n\n                    var header;\n\n                    // Assume low-to-high unless proven otherwise\n                    self.littleEndian = true;\n\n                    var binaryParser = new igv.BinaryParser(new DataView(data));\n\n                    var magic = binaryParser.getUInt();\n\n                    if (magic === BIGWIG_MAGIC_LTH) {\n                        self.type = \"BigWig\";\n                    }\n                    else if (magic == BIGBED_MAGIC_LTH) {\n                        self.type = \"BigBed\";\n                    }\n                    else {\n                        //Try big endian order\n                        self.littleEndian = false;\n\n                        binaryParser.littleEndian = false;\n                        binaryParser.position = 0;\n                        var magic = binaryParser.getUInt();\n\n                        if (magic === BIGWIG_MAGIC_HTL) {\n                            self.type = \"BigWig\";\n                        }\n                        else if (magic == BIGBED_MAGIC_HTL) {\n                            self.type = \"BigBed\";\n                        }\n                        else {\n                            // TODO -- error, unknown file type  or BE\n                        }\n                    }\n                    // Table 5  \"Common header for BigWig and BigBed files\"\n                    header = {};\n                    header.bwVersion = binaryParser.getUShort();\n                    header.nZoomLevels = binaryParser.getUShort();\n                    header.chromTreeOffset = binaryParser.getLong();\n                    header.fullDataOffset = binaryParser.getLong();\n                    header.fullIndexOffset = binaryParser.getLong();\n                    header.fieldCount = binaryParser.getUShort();\n                    header.definedFieldCount = binaryParser.getUShort();\n                    header.autoSqlOffset = binaryParser.getLong();\n                    header.totalSummaryOffset = binaryParser.getLong();\n                    header.uncompressBuffSize = binaryParser.getInt();\n                    header.reserved = binaryParser.getLong();\n\n                    return header;\n\n                })\n\n                .then(function (header) {\n\n                    self.header = header;\n\n                    return loadZoomHeadersAndChrTree.call(self);\n\n                })\n        }\n\n\n        function loadZoomHeadersAndChrTree() {\n\n            const self = this;\n            const startOffset = BBFILE_HEADER_SIZE;\n\n            var range = {start: startOffset, size: (self.header.fullDataOffset - startOffset + 5)};\n\n            return igv.xhr.loadArrayBuffer(self.path, igv.buildOptions(self.config, {range: range}))\n\n                .then(function (data) {\n\n                    const nZooms = self.header.nZoomLevels;\n                    const binaryParser = new igv.BinaryParser(new DataView(data));\n\n                    self.zoomLevelHeaders = [];\n\n                    self.firstZoomDataOffset = Number.MAX_VALUE;\n                    for (let i = 1; i <= nZooms; i++) {\n                        const zoomNumber = nZooms - i;\n                        const zlh = new ZoomLevelHeader(zoomNumber, binaryParser);\n                        self.firstZoomDataOffset = Math.min(zlh.dataOffset, self.firstZoomDataOffset);\n                        self.zoomLevelHeaders[zoomNumber] = zlh;\n                    }\n\n                    // Autosql\n                    if (self.header.autoSqlOffset > 0) {\n                        binaryParser.position = self.header.autoSqlOffset - startOffset;\n                        self.autoSql = binaryParser.getString();\n                    }\n\n                    // Total summary\n                    if (self.header.totalSummaryOffset > 0) {\n                        binaryParser.position = self.header.totalSummaryOffset - startOffset;\n                        self.totalSummary = new BWTotalSummary(binaryParser);\n                    }\n\n                    // Chrom data index\n                    if (self.header.chromTreeOffset > 0) {\n                        binaryParser.position = self.header.chromTreeOffset - startOffset;\n                        self.chromTree = new BPTree(binaryParser, startOffset, self.genome);\n                    }\n                    else {\n                        // TODO -- this is an error, not expected\n                        throw \"BigWig chromosome tree offset <= 0\";\n                    }\n\n                    //Finally total data count\n                    binaryParser.position = self.header.fullDataOffset - startOffset;\n                    self.header.dataCount = binaryParser.getInt();\n\n                    return self.header;\n\n                })\n        }\n\n    }\n\n    igv.BWReader.prototype.loadRPTree = function (offset) {\n\n        var self = this;\n\n        var rpTree = self.rpTreeCache[offset];\n        if (rpTree) {\n            return Promise.resolve(rpTree);\n        }\n        else {\n            rpTree = new RPTree(offset, self.config, self.littleEndian);\n            return rpTree.load()\n                .then(function () {\n                    self.rpTreeCache[offset] = rpTree;\n                    return rpTree;\n                })\n        }\n    }\n\n    function ZoomLevelHeader(index, byteBuffer) {\n        this.index = index;\n        this.reductionLevel = byteBuffer.getInt();\n        this.reserved = byteBuffer.getInt();\n        this.dataOffset = byteBuffer.getLong();\n        this.indexOffset = byteBuffer.getLong();\n\n    }\n\n    function RPTree(fileOffset, config, littleEndian) {\n\n        this.config = config;\n        this.fileOffset = fileOffset; // File offset to beginning of tree\n        this.path = config.url;\n        this.littleEndian = littleEndian;\n    }\n\n    RPTree.prototype.load = function () {\n\n        var self = this;\n\n        var rootNodeOffset = self.fileOffset + RPTREE_HEADER_SIZE,\n            bufferedReader = new igv.BufferedReader(self.config,  BUFFER_SIZE);\n\n        return self.readNode(rootNodeOffset, bufferedReader)\n\n            .then(function (node) {\n                self.rootNode = node;\n                return self;\n            })\n    }\n\n    RPTree.prototype.readNode = function (filePosition, bufferedReader) {\n\n        var self = this;\n\n\n        var count, isLeaf;\n\n        return bufferedReader.dataViewForRange({start: filePosition, size: 4}, false)\n\n            .then(function (dataView) {\n                var binaryParser, type, reserved;\n\n                binaryParser = new igv.BinaryParser(dataView, self.littleEndian);\n                type = binaryParser.getByte();\n                isLeaf = (type === 1) ? true : false;\n                reserved = binaryParser.getByte();\n                count = binaryParser.getUShort();\n\n                filePosition += 4;\n\n                var bytesRequired = count * (isLeaf ? RPTREE_NODE_LEAF_ITEM_SIZE : RPTREE_NODE_CHILD_ITEM_SIZE);\n                var range2 = {start: filePosition, size: bytesRequired};\n\n                return bufferedReader.dataViewForRange(range2, false);\n            })\n\n            .then(function (dataView) {\n\n                var i,\n                    items = new Array(count),\n                    binaryParser = new igv.BinaryParser(dataView);\n\n                if (isLeaf) {\n                    for (i = 0; i < count; i++) {\n                        var item = {\n                            isLeaf: true,\n                            startChrom: binaryParser.getInt(),\n                            startBase: binaryParser.getInt(),\n                            endChrom: binaryParser.getInt(),\n                            endBase: binaryParser.getInt(),\n                            dataOffset: binaryParser.getLong(),\n                            dataSize: binaryParser.getLong()\n                        };\n                        items[i] = item;\n\n                    }\n                    return new RPTreeNode(items);\n                }\n                else { // non-leaf\n                    for (i = 0; i < count; i++) {\n\n                        var item = {\n                            isLeaf: false,\n                            startChrom: binaryParser.getInt(),\n                            startBase: binaryParser.getInt(),\n                            endChrom: binaryParser.getInt(),\n                            endBase: binaryParser.getInt(),\n                            childOffset: binaryParser.getLong()\n                        };\n                        items[i] = item;\n\n                    }\n\n                    return new RPTreeNode(items);\n                }\n            })\n    }\n\n    RPTree.prototype.findLeafItemsOverlapping = function (chrIdx1, startBase, chrIdx2, endBase) {\n\n        var self = this;\n\n        return new Promise(function (fulfill, reject) {\n\n            var leafItems = [],\n                processing = new Set(),\n                bufferedReader = new igv.BufferedReader(self.config, BUFFER_SIZE);\n\n            processing.add(0);  // Zero represents the root node\n            findLeafItems(self.rootNode, 0);\n\n            function findLeafItems(node, nodeId) {\n\n                if (overlaps(node, chrIdx1, startBase, chrIdx2, endBase)) {\n\n                    var items = node.items;\n\n                    items.forEach(function (item) {\n\n                        if (overlaps(item, chrIdx1, startBase, chrIdx2, endBase)) {\n\n                            if (item.isLeaf) {\n                                leafItems.push(item);\n                            }\n\n                            else {\n                                if (item.childNode) {\n                                    findLeafItems(item.childNode);\n                                }\n                                else {\n                                    processing.add(item.childOffset);  // Represent node to-be-loaded by its file position\n\n                                    self.readNode(item.childOffset, bufferedReader)\n                                        .then(function (node) {\n                                            item.childNode = node;\n                                            findLeafItems(node, item.childOffset);\n                                        })\n                                        .catch(reject);\n                                }\n                            }\n                        }\n                    });\n\n                }\n\n                if (nodeId != undefined) processing.delete(nodeId);\n\n                // Wait until all nodes are processed\n                if (processing.size === 0) {\n                    fulfill(leafItems);\n                }\n            }\n        });\n    }\n\n    function RPTreeNode(items) {\n\n\n        this.items = items;\n\n        var minChromId = Number.MAX_VALUE,\n            maxChromId = 0,\n            minStartBase = Number.MAX_VALUE,\n            maxEndBase = 0,\n            i,\n            item;\n\n        for (i = 0; i < items.length; i++) {\n            item = items[i];\n            minChromId = Math.min(minChromId, item.startChrom);\n            maxChromId = Math.max(maxChromId, item.endChrom);\n            minStartBase = Math.min(minStartBase, item.startBase);\n            maxEndBase = Math.max(maxEndBase, item.endBase);\n        }\n\n        this.startChrom = minChromId;\n        this.endChrom = maxChromId;\n        this.startBase = minStartBase;\n        this.endBase = maxEndBase;\n\n    }\n\n    function BPTree(binaryParser, startOffset, genome) {\n\n        const self = this;\n\n        var magic = binaryParser.getInt();\n        var blockSize = binaryParser.getInt();\n        var keySize = binaryParser.getInt();\n        var valSize = binaryParser.getInt();\n        var itemCount = binaryParser.getLong();\n        var reserved = binaryParser.getLong();\n        var chromToId = {};\n        var idToChrom = [];\n\n        this.header = {\n            magic: magic,\n            blockSize: blockSize,\n            keySize: keySize,\n            valSize: valSize,\n            itemCount: itemCount,\n            reserved: reserved\n        };\n        this.chromToID = chromToId;\n        this.idToChrom = idToChrom;\n\n        // Recursively walk tree to populate dictionary\n        readTreeNode(binaryParser, -1);\n\n\n        function readTreeNode(byteBuffer, offset) {\n\n            if (offset >= 0) byteBuffer.position = offset;\n\n            var type = byteBuffer.getByte(),\n                reserved = byteBuffer.getByte(),\n                count = byteBuffer.getUShort(),\n                i,\n                key,\n                chromId,\n                chromSize,\n                childOffset,\n                bufferOffset,\n                currOffset;\n\n\n            if (type == 1) {\n\n                for (i = 0; i < count; i++) {\n\n                    key = byteBuffer.getFixedLengthTrimmedString(keySize);\n                    chromId = byteBuffer.getInt();\n                    chromSize = byteBuffer.getInt();\n\n                    if (genome) key = genome.getChromosomeName(key);  // Translate to canonical chr name\n                    chromToId[key] = chromId;\n                    idToChrom[chromId] = key;\n\n                }\n            }\n            else { // non-leaf\n\n                for (i = 0; i < count; i++) {\n\n                    key = byteBuffer.getFixedLengthTrimmedString(keySize);\n                    childOffset = byteBuffer.getLong();\n                    bufferOffset = childOffset - startOffset;\n                    currOffset = byteBuffer.position;\n                    readTreeNode(byteBuffer, bufferOffset);\n                    byteBuffer.position = currOffset;\n                }\n            }\n\n        }\n    }\n\n    /**\n     * Return true if {chrIdx1:startBase-chrIdx2:endBase} overlaps item's interval\n     * @returns {boolean}\n     */\n    function overlaps(item, chrIdx1, startBase, chrIdx2, endBase) {\n\n        if (!item) {\n            console.log(\"null item for \" + chrIdx1 + \" \" + startBase + \" \" + endBase);\n            return false;\n        }\n\n        return ((chrIdx2 > item.startChrom) || (chrIdx2 == item.startChrom && endBase >= item.startBase)) &&\n            ((chrIdx1 < item.endChrom) || (chrIdx1 == item.endChrom && startBase <= item.endBase));\n\n\n    }\n\n    function BWTotalSummary(byteBuffer) {\n\n        if (byteBuffer) {\n\n            this.basesCovered = byteBuffer.getLong();\n            this.minVal = byteBuffer.getDouble();\n            this.maxVal = byteBuffer.getDouble();\n            this.sumData = byteBuffer.getDouble();\n            this.sumSquares = byteBuffer.getDouble();\n\n            computeStats.call(this);\n        }\n        else {\n            this.basesCovered = 0;\n            this.minVal = 0;\n            this.maxVal = 0;\n            this.sumData = 0;\n            this.sumSquares = 0;\n            this.mean = 0;\n            this.stddev = 0;\n        }\n    }\n\n\n    BWTotalSummary.prototype.updateStats = function (stats) {\n\n        this.basesCovered += stats.count;\n        this.sumData += status.sumData;\n        this.sumSquares += sumSquares;\n        this.minVal = MIN(_minVal, min);\n        this.maxVal = MAX(_maxVal, max);\n\n        computeStats.call(this);\n\n    }\n\n    function computeStats() {\n        var n = this.basesCovered;\n        if (n > 0) {\n            this.mean = this.sumData / n;\n            this.stddev = Math.sqrt(this.sumSquares / (n - 1));\n\n            var min = this.minVal < 0 ? this.mean - 2 * this.stddev : 0,\n                max = this.maxVal > 0 ? this.mean + 2 * this.stddev : 0;\n\n            this.defaultRange = {\n                min: 0,\n                max: this.mean + 3 * this.stddev\n            }\n        }\n    }\n\n    function zoomLevelForScale(bpPerPixel, zoomLevelHeaders) {\n\n        var level = null, i, zl;\n\n        for (i = 0; i < zoomLevelHeaders.length; i++) {\n\n            zl = zoomLevelHeaders[i];\n\n            if (zl.reductionLevel < bpPerPixel) {\n                level = zl;\n                break;\n            }\n        }\n\n        return level;\n    }\n\n    function decodeWigData(data, chrIdx1, bpStart, chrIdx2, bpEnd, featureArray, chrDict) {\n\n        var binaryParser = new igv.BinaryParser(data),\n            chromId = binaryParser.getInt(),\n            chromStart = binaryParser.getInt(),\n            chromEnd = binaryParser.getInt(),\n            itemStep = binaryParser.getInt(),\n            itemSpan = binaryParser.getInt(),\n            type = binaryParser.getByte(),\n            reserved = binaryParser.getByte(),\n            itemCount = binaryParser.getUShort(),\n            value,\n            chr;\n\n        if (chromId >= chrIdx1 && chromId <= chrIdx2) {\n\n            while (itemCount-- > 0) {\n\n                switch (type) {\n                    case 1:\n                        chromStart = binaryParser.getInt();\n                        chromEnd = binaryParser.getInt();\n                        value = binaryParser.getFloat();\n                        break;\n                    case 2:\n                        chromStart = binaryParser.getInt();\n                        value = binaryParser.getFloat();\n                        chromEnd = chromStart + itemSpan;\n                        break;\n                    case 3:  // Fixed step\n                        value = binaryParser.getFloat();\n                        chromEnd = chromStart + itemSpan;\n                        chromStart += itemStep;\n                        break;\n\n                }\n\n                if (chromId < chrIdx1 || (chromId === chrIdx1 && chromEnd < bpStart)) continue;\n                else if (chromId > chrIdx2 || (chromId === chrIdx2 && chromStart >= bpEnd)) break;\n\n                if (Number.isFinite(value)) {\n                    chr = chrDict[chromId];\n                    featureArray.push({chr: chr, start: chromStart, end: chromEnd, value: value});\n\n                }\n            }\n        }\n\n    }\n\n\n    function decodeBedData(data, chrIdx1, bpStart, chrIdx2, bpEnd, featureArray, chrDict) {\n\n        var binaryParser = new igv.BinaryParser(data),\n            minSize = 3 * 4 + 1,   // Minimum # of bytes required for a bed record\n            chromId,\n            chromStart,\n            chromEnd,\n            rest,\n            tokens,\n            feature,\n            exonCount, exonSizes, exonStarts, exons, eStart, eEnd, chr;\n\n\n        while (binaryParser.remLength() >= minSize) {\n\n            chromId = binaryParser.getInt();\n            chr = chrDict[chromId];\n            chromStart = binaryParser.getInt();\n            chromEnd = binaryParser.getInt();\n            rest = binaryParser.getString();\n\n            if (chromId < chrIdx1 || (chromId === chrIdx1 && chromEnd < bpStart)) continue;\n            else if (chromId > chrIdx2 || (chromId === chrIdx2 && chromStart >= bpEnd)) break;\n\n\n            feature = {chr: chr, start: chromStart, end: chromEnd};\n\n            featureArray.push(feature);\n\n            tokens = rest.split(\"\\t\");\n\n            if (tokens.length > 0) {\n                feature.name = tokens[0];\n            }\n\n            if (tokens.length > 1) {\n                feature.score = parseFloat(tokens[1]);\n            }\n            if (tokens.length > 2) {\n                feature.strand = tokens[2];\n            }\n            if (tokens.length > 3) {\n                feature.cdStart = parseInt(tokens[3]);\n            }\n            if (tokens.length > 4) {\n                feature.cdEnd = parseInt(tokens[4]);\n            }\n            if (tokens.length > 5) {\n                if (tokens[5] !== \".\" && tokens[5] !== \"0\")\n                    feature.color = igv.Color.createColorString(tokens[5]);\n            }\n            if (tokens.length > 8) {\n                exonCount = parseInt(tokens[6]);\n                exonSizes = tokens[7].split(',');\n                exonStarts = tokens[8].split(',');\n                exons = [];\n\n                for (var i = 0; i < exonCount; i++) {\n                    eStart = chromStart + parseInt(exonStarts[i]);\n                    eEnd = eStart + parseInt(exonSizes[i]);\n                    exons.push({start: eStart, end: eEnd});\n                }\n\n                feature.exons = exons;\n            }\n\n        }\n\n    }\n\n\n    function decodeZoomData(data, chrIdx1, bpStart, chrIdx2, bpEnd, featureArray, chrDict, windowFunction) {\n\n        var binaryParser = new igv.BinaryParser(data),\n            minSize = 8 * 4,   // Minimum # of bytes required for a zoom record\n            chromId,\n            chromStart,\n            chromEnd,\n            validCount,\n            minVal,\n            maxVal,\n            sumData,\n            sumSquares,\n            value,\n            chr;\n\n        while (binaryParser.remLength() >= minSize) {\n\n            chromId = binaryParser.getInt();\n            chr = chrDict[chromId];\n            chromStart = binaryParser.getInt();\n            chromEnd = binaryParser.getInt();\n\n            validCount = binaryParser.getInt();\n            minVal = binaryParser.getFloat();\n            maxVal = binaryParser.getFloat();\n            sumData = binaryParser.getFloat();\n            sumSquares = binaryParser.getFloat();\n            switch (windowFunction) {\n                case \"min\":\n                    value = minVal;\n                    break;\n                case \"max\":\n                    value = maxVal;\n                    break;\n                default:\n                    value = validCount == 0 ? 0 : sumData / validCount;\n            }\n\n            if (chromId < chrIdx1 || (chromId === chrIdx1 && chromEnd < bpStart)) continue;\n            else if (chromId > chrIdx2 || (chromId === chrIdx2 && chromStart >= bpEnd)) break;\n\n\n            if (Number.isFinite(value)) {\n                featureArray.push({chr: chr, start: chromStart, end: chromEnd, value: value});\n\n\n            }\n        }\n    }\n\n    return igv;\n\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 4/7/14.\n */\n\n\nvar igv = (function (igv) {\n\n    igv.BWSource = function (config, genome) {\n        this.reader = new igv.BWReader(config, genome);\n        this.genome = genome;\n        this.wgValues = {};\n    };\n\n\n    igv.BWSource.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel, windowFunction) {\n\n        var self = this;\n\n        if (chr.toLowerCase() === \"all\") {\n            return self.getWGValues(windowFunction);\n        } else {\n            return self.reader.readFeatures(chr, bpStart, chr, bpEnd, bpPerPixel, windowFunction);\n        }\n    }\n\n\n    igv.BWSource.prototype.getDefaultRange = function () {\n\n        if (this.reader.totalSummary != undefined) {\n            return this.reader.totalSummary.defaultRange;\n        }\n        else {\n            return undefined;\n        }\n    }\n\n    igv.BWSource.prototype.defaultVisibilityWindow = function () {\n\n        if (this.reader.type === 'bigwig') {\n            return Promise.resolve(undefined);\n        }\n        else {\n            // bigbed\n            let genomeSize = this.genome ? this.genome.getGenomeLength() : 3088286401;\n            return this.reader.loadHeader()\n                .then(function (header) {\n                    // Estimate window size to return ~ 1,000 features, assuming even distribution across the genome\n                    return 1000 * (genomeSize / header.dataCount);\n                })\n        }\n    }\n\n    igv.BWSource.prototype.getWGValues = function (windowFunction) {\n        var self = this,\n            bpPerPixel,\n            nominalScreenWidth = 500;      // This doesn't need to be precise\n        \n        const genome = this.genome;\n\n        if (self.wgValues[windowFunction]) {\n            return Promise.resolve(self.wgValues[windowFunction]);\n        }\n        else {\n\n            bpPerPixel = genome.getGenomeLength() / nominalScreenWidth;\n\n            return self.reader.readWGFeatures(bpPerPixel, windowFunction)\n\n                .then(function (features) {\n\n                    var wgValues = [];\n\n                    features.forEach(function (f) {\n\n                        var wgFeature, offset, chr;\n\n                        chr = f.chr;\n                        offset = genome.getCumulativeOffset(chr);\n\n                        wgFeature = Object.assign({}, f);\n                        wgFeature.chr = \"all\";\n                        wgFeature.start = offset + f.start;\n                        wgFeature.end = offset + f.end;\n                        wgValues.push(wgFeature);\n                    })\n\n                    self.wgValues[windowFunction] = wgValues;\n\n                    return wgValues;\n\n                })\n\n        }\n    }\n\n    igv.BWSource.prototype.supportsWholeGenome = function() {\n        return true;\n    }\n\n\n    return igv;\n\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    // TODO -- big endian\n\n    igv.BinaryParser = function (dataView, littleEndian) {\n\n        this.littleEndian = littleEndian !== undefined ? littleEndian : true\n        this.position = 0;\n        this.view = dataView;\n        this.length = dataView.byteLength;\n    }\n\n    igv.BinaryParser.prototype.available = function() {\n        return this.length - this.position;\n    }\n    \n    igv.BinaryParser.prototype.remLength = function () {\n        return this.length - this.position;\n    }\n\n    igv.BinaryParser.prototype.hasNext = function () {\n        return this.position < this.length - 1;\n    }\n\n    igv.BinaryParser.prototype.getByte = function () {\n        var retValue = this.view.getUint8(this.position, this.littleEndian);\n        this.position++;\n        return retValue;\n    }\n\n    igv.BinaryParser.prototype.getShort = function () {\n\n        var retValue = this.view.getInt16(this.position, this.littleEndian);\n        this.position += 2\n        return retValue;\n    }\n\n    igv.BinaryParser.prototype.getUShort = function () {\n\n        // var byte1 = this.getByte(),\n        //     byte2 = this.getByte(),\n        //     retValue = ((byte2 << 24 >>> 16) + (byte1 << 24 >>> 24));\n        //     return retValue;\n\n       //\n        var retValue = this.view.getUint16 (this.position, this.littleEndian);\n        this.position += 2\n        return retValue;\n    }\n\n\n    igv.BinaryParser.prototype.getInt = function () {\n\n        var retValue = this.view.getInt32(this.position, this.littleEndian);\n        this.position += 4;\n        return retValue;\n    }\n\n\n    igv.BinaryParser.prototype.getUInt = function () {\n        var retValue = this.view.getUint32(this.position, this.littleEndian);\n        this.position += 4;\n        return retValue;\n    }\n\n    igv.BinaryParser.prototype.getLong = function () {\n\n        // DataView doesn't support long. So we'll try manually\n\n        var b = [];\n        b[0] = this.view.getUint8(this.position);\n        b[1] = this.view.getUint8(this.position + 1);\n        b[2] = this.view.getUint8(this.position + 2);\n        b[3] = this.view.getUint8(this.position + 3);\n        b[4] = this.view.getUint8(this.position + 4);\n        b[5] = this.view.getUint8(this.position + 5);\n        b[6] = this.view.getUint8(this.position + 6);\n        b[7] = this.view.getUint8(this.position + 7);\n\n        var value = 0;\n        if (this.littleEndian) {\n            for (var i = b.length - 1; i >= 0; i--) {\n                value = (value * 256) + b[i];\n            }\n        } else {\n            for (var i = 0; i < b.length; i++) {\n                value = (value * 256) + b[i];\n            }\n        }\n\n\n        this.position += 8;\n        return value;\n    }\n\n    igv.BinaryParser.prototype.getString = function (len) {\n\n        var s = \"\";\n        var c;\n        while ((c = this.view.getUint8(this.position++)) != 0) {\n            s += String.fromCharCode(c);\n            if (len && s.length == len) break;\n        }\n        return s;\n    }\n\n    igv.BinaryParser.prototype.getFixedLengthString = function (len) {\n\n        var s = \"\";\n        var i;\n        var c;\n        for (i = 0; i < len; i++) {\n            c = this.view.getUint8(this.position++);\n            if (c > 0) {\n                s += String.fromCharCode(c);\n            }\n        }\n        return s;\n    }\n\n    igv.BinaryParser.prototype.getFixedLengthTrimmedString = function (len) {\n\n        var s = \"\";\n        var i;\n        var c;\n        for (i = 0; i < len; i++) {\n            c = this.view.getUint8(this.position++);\n            if (c > 32) {\n                s += String.fromCharCode(c);\n            }\n        }\n        return s;\n    }\n\n    igv.BinaryParser.prototype.getFloat = function () {\n\n        var retValue = this.view.getFloat32(this.position, this.littleEndian);\n        this.position += 4;\n        return retValue;\n\n\n    }\n\n    igv.BinaryParser.prototype.getDouble = function () {\n\n        var retValue = this.view.getFloat64(this.position, this.littleEndian);\n        this.position += 8;\n        return retValue;\n    }\n\n    igv.BinaryParser.prototype.skip = function (n) {\n\n        this.position += n;\n        return this.position;\n    }\n\n\n    /**\n     * Return a bgzip (bam and tabix) virtual pointer\n     * TODO -- why isn't 8th byte used ?\n     * @returns {*}\n     */\n    igv.BinaryParser.prototype.getVPointer = function () {\n\n        var position = this.position,\n            offset = (this.view.getUint8(position + 1) << 8) | (this.view.getUint8(position)),\n            byte6 = ((this.view.getUint8(position + 6) & 0xff) * 0x100000000),\n            byte5 = ((this.view.getUint8(position + 5) & 0xff) * 0x1000000),\n            byte4 = ((this.view.getUint8(position + 4) & 0xff) * 0x10000),\n            byte3 = ((this.view.getUint8(position + 3) & 0xff) * 0x100),\n            byte2 = ((this.view.getUint8(position + 2) & 0xff)),\n            block = byte6 + byte5 + byte4 + byte3 + byte2;\n        this.position += 8;\n\n        //       if (block == 0 && offset == 0) {\n        //           return null;\n        //       } else {\n        return new VPointer(block, offset);\n        //       }\n    }\n\n\n    function VPointer(block, offset) {\n        this.block = block;\n        this.offset = offset;\n    }\n\n    VPointer.prototype.isLessThan = function (vp) {\n        return this.block < vp.block ||\n            (this.block === vp.block && this.offset < vp.offset);\n    }\n\n    VPointer.prototype.isGreaterThan = function (vp) {\n        return this.block > vp.block ||\n            (this.block === vp.block && this.offset > vp.offset);\n    }\n\n    VPointer.prototype.print = function () {\n        return \"\" + this.block + \":\" + this.offset;\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    igv.Browser = function (options, trackContainerDiv) {\n        let str;\n\n        this.guid = igv.guid();\n\n        this.namespace = '.browser_' + this.guid;\n\n        this.config = options;\n\n        this.$root = $('<div class=\"igv-root-div\">');\n\n        initialize.call(this, options);\n\n        this.trackContainerDiv = trackContainerDiv;\n\n        this.trackViews = [];\n\n        this.trackLabelsVisible = true;\n        this.isCenterGuideVisible = false;\n        this.cursorGuideVisible = false;\n\n        this.featureDB = {};   // Hash of name -> feature, used for search function.\n\n        this.constants = {\n            dragThreshold: 3,\n            scrollThreshold: 5,\n            defaultColor: \"rgb(0,0,150)\",\n            doubleClickDelay: options.doubleClickDelay || 500\n        };\n\n        // Map of event name -> [ handlerFn, ... ]\n        this.eventHandlers = {};\n\n        addMouseHandlers.call(this);\n\n    };\n\n    function initialize(options) {\n        var genomeId;\n\n        this.flanking = options.flanking;\n        this.crossDomainProxy = options.crossDomainProxy;\n        this.formats = options.formats;\n        this.trackDefaults = options.trackDefaults;\n\n        if (options.search) {\n            this.searchConfig = {\n                type: \"json\",\n                url: options.search.url,\n                coords: options.search.coords === undefined ? 1 : options.search.coords,\n                chromosomeField: options.search.chromosomeField || \"chromosome\",\n                startField: options.search.startField || \"start\",\n                endField: options.search.endField || \"end\",\n                geneField: options.search.geneField || \"gene\",\n                snpField: options.search.snpField || \"snp\",\n                resultsField: options.search.resultsField\n            }\n        }\n        else {\n\n            if (options.reference && options.reference.id) {\n                genomeId = options.reference.id;\n            }\n            else if (options.genome) {\n                genomeId = options.genome;\n            }\n            else {\n                genomeId = \"hg19\";\n            }\n\n            this.searchConfig = {\n                // Legacy support -- deprecated\n                type: \"plain\",\n                url: 'https://portals.broadinstitute.org/webservices/igv/locus?genome=$GENOME$&name=$FEATURE$',\n                coords: 0,\n                chromosomeField: \"chromosome\",\n                startField: \"start\",\n                endField: \"end\",\n                geneField: \"gene\",\n                snpField: \"snp\"\n\n            }\n        }\n    }\n\n    igv.Browser.prototype.isMultiLocusMode = function () {\n        return this.genomicStateList && this.genomicStateList.length > 1;\n    };\n\n    igv.Browser.prototype.isMultiLocusWholeGenomeView = function () {\n\n        if (undefined === this.genomicStateList || 1 === this.genomicStateList.length) {\n            return false;\n        }\n\n        for (let genomicState of this.genomicStateList) {\n            const chromosomeName = genomicState.referenceFrame.chrName.toLowerCase();\n            if ('all' === chromosomeName) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    igv.isWholeGenomeView = function (referenceFrame) {\n        let chromosomeName = referenceFrame.chrName.toLowerCase();\n\n        return 'all' === chromosomeName;\n    };\n\n    igv.hasKnownFileExtension = function (config) {\n        var extension = igv.getExtension(config);\n\n        if (undefined === extension) {\n            return false;\n        }\n        return igv.knownFileExtensions.has(extension);\n    };\n\n\n    igv.Browser.prototype.toSVG = function () {\n\n        const trackContainerBBox = this.trackContainerDiv.getBoundingClientRect();\n        const anyViewportContainerBBox = this.trackViews[0].$viewportContainer.get(0).getBoundingClientRect();\n        const ideoPanelBBox = this.ideoPanel ? this.ideoPanel.panels[0].$ideogram.get(0).getBoundingClientRect() : {\n            height: 0,\n            width: 0\n        };\n\n        // multi-locus inter-panel gap\n        const multiLocusGap = 8;\n\n        const w = trackContainerBBox.width + (this.genomicStateList.length - 1) * multiLocusGap;\n\n        const h_output = trackContainerBBox.height + ideoPanelBBox.height;\n        const h_render = 8000;\n\n        let svgContext = new C2S(\n            {\n\n                width: w,\n                height: h_render,\n\n                backdropColor: 'white',\n\n                multiLocusGap: multiLocusGap,\n\n                viewbox:\n                    {\n                        x: 0,\n                        y: 0,\n                        width: w,\n                        height: h_render\n                    }\n\n            });\n\n        const dx = anyViewportContainerBBox.x - trackContainerBBox.x;\n\n        // ideoPanel -> SVG\n        if (this.ideoPanel) {\n\n            this.ideoPanel.renderSVGContext(svgContext, {deltaX: dx, deltaY: 0});\n        }\n\n        // tracks -> SVG\n        for (let trackView of this.trackViews) {\n            trackView.renderSVGContext(svgContext, {deltaX: dx, deltaY: (ideoPanelBBox.height - trackContainerBBox.y)});\n        }\n\n        // reset height to trim away unneeded svg canvas real estate. Yes, a bit of a hack.\n        svgContext.setHeight(h_output);\n\n        return svgContext.getSerializedSvg(true);\n\n    };\n\n    igv.Browser.prototype.renderSVG = function (config) {\n\n        let svg = this.toSVG();\n\n        if (config.$container) {\n\n            const trackContainerBBox = this.trackContainerDiv.getBoundingClientRect();\n\n            config.$container.empty();\n            config.$container.width(trackContainerBBox.width);\n            config.$container.append(svg);\n        }\n\n        const path = config.filename || 'igv.svg';\n        const data = URL.createObjectURL(new Blob([svg], {type: \"application/octet-stream\"}));\n        igv.download(path, data);\n\n    };\n\n    /**\n     * Initialize a session from an object, json, or by loading from a file.\n     *\n     * TODO Really should be split into at least 2 functions, load from file and load from object/json\n     *\n     * @param options\n     * @param config\n     * @returns {*}\n     */\n    igv.Browser.prototype.loadSession = async function (options) {\n\n        var self = this;\n\n        let session\n        if (options.url || options.file) {\n            session = await loadSessionFile(options)\n        } else {\n            session = options\n        }\n        return self.loadSessionObject(session);\n\n\n        async function loadSessionFile(options) {\n\n            const urlOrFile = options.url || options.file\n\n\n            if (options.url && (options.url.startsWith(\"blob:\") || options.url.startsWith(\"data:\"))) {\n\n                var json = igv.Browser.uncompressSession(options.url);\n                return JSON.parse(json);\n\n            } else {\n                let filename = options.filename\n                if (!filename) {\n                    filename = (options.url ? igv.getFilename(options.url) : options.file.name)\n                }\n\n                if (filename.endsWith(\".xml\")) {\n\n                    const knownGenomes = await igv.GenomeUtils.getKnownGenomes()\n\n                    const string = await igv.xhr.loadString(urlOrFile)\n\n                    return new igv.XMLSession(string, knownGenomes);\n\n\n                } else if (filename.endsWith(\".json\")) {\n                    return igv.xhr.loadJson(urlOrFile);\n                } else {\n                    return undefined;\n                }\n            }\n\n        }\n    }\n\n    igv.Browser.prototype.loadSessionObject = async function (session) {\n\n        const self = this;\n\n        self.removeAllTracks(true);\n\n        const genome = await self.loadGenome(session.reference || session.genome, session.locus)\n\n        // Restore gtex selections.\n        if (session.gtexSelections) {\n\n            const genomicStates = {};\n            for (let gs of self.genomicStateList) {\n                genomicStates[gs.locusSearchString] = gs;\n            }\n\n            for (let s of Object.getOwnPropertyNames(session.gtexSelections)) {\n                const gs = genomicStates[s];\n                if (gs) {\n                    const gene = session.gtexSelections[s].gene;\n                    const snp = session.gtexSelections[s].snp;\n                    gs.selection = new igv.GtexSelection(gene, snp);\n                }\n            }\n        }\n\n        if (session.roi) {\n            self.roi = [];\n            session.roi.forEach(function (r) {\n                self.roi.push(new igv.ROI(r, self.genome));\n            });\n        }\n\n        if (!session.tracks) session.tracks = [];\n        if (session.tracks.filter(track => track.type === 'sequence').length === 0) {\n            session.tracks.push({type: \"sequence\", order: -Number.MAX_VALUE})\n        }\n\n        await self.loadTrackList(session.tracks);\n\n        var panelWidth;\n\n        if (false !== session.showIdeogram && !self.ideoPanel) {\n            panelWidth = self.viewportContainerWidth() / self.genomicStateList.length;\n            self.ideoPanel = new igv.IdeoPanel(self.$contentHeader, panelWidth, self);\n            self.ideoPanel.repaint();\n        }\n\n        self.updateLocusSearchWidget(self.genomicStateList[0]);\n\n        self.windowSizePanel.updateWithGenomicState(self.genomicStateList[0]);\n\n        // Resize is called to address minor alignment problems with multi-locus view.\n        self.resize();\n\n    }\n\n\n    igv.Browser.prototype.loadGenome = async function (idOrConfig, initialLocus) {\n\n        var self = this;\n\n        // idOrConfig might be json\n        if (igv.isString(idOrConfig) && idOrConfig.startsWith(\"{\")) {\n            try {\n                idOrConfig = JSON.parse(idOrConfig);\n            } catch (e) {\n                // Apparently its not json,  just continue\n            }\n        }\n\n        const genomeConfig = await expandReference(idOrConfig)\n        const genome = await igv.GenomeUtils.loadGenome(genomeConfig)\n        const genomeChange = self.genome && (self.genome.id !== genome.id);\n        self.genome = genome;\n        self.$current_genome.text(genome.id || '');\n        self.$current_genome.attr('title', genome.id || '');\n        self.chromosomeSelectWidget.update(genome);\n        if (genomeChange) {\n            self.removeAllTracks();\n        }\n        self.genome = genome;\n\n        let genomicStateList\n        try {\n            genomicStateList = await self.search(getInitialLocus(initialLocus, genome), true)\n        }\n        catch (error) {\n            // Couldn't find initial locus\n            console.error(error);\n            genomicStateList = await self.search(self.genome.getHomeChromosomeName());\n        }\n        self.genomicStateList = genomicStateList;\n        if (self.genomicStateList.length > 0) {\n            if (!self.rulerTrack && false !== self.config.showRuler) {\n                self.rulerTrack = new igv.RulerTrack(self);\n                self.addTrack(self.rulerTrack);\n            }\n        } else {\n            const errorString = 'Unrecognized locus ' + self.config.locus;\n            self.presentAlert(errorString, undefined);\n        }\n\n        if (genomeConfig.tracks) {\n            await self.loadTrackList(genomeConfig.tracks);\n        }\n\n        self.resize();    // Force recomputation and repaint\n        return self.genome;\n\n\n        // Expand a genome id to a reference object, if needed\n        async function expandReference(conf) {\n\n            var genomeID;\n\n            if (igv.isString(conf)) {\n                genomeID = conf;\n            }\n            else if (conf.genome) {\n                genomeID = conf.genome;\n            }\n            else if (conf.id !== undefined && conf.fastaURL === undefined) {\n                // Backward compatibility\n                genomeID = conf.id;\n            }\n\n            if (genomeID) {\n                const knownGenomes = await igv.GenomeUtils.getKnownGenomes()\n\n                var reference = knownGenomes[genomeID];\n                if (!reference) {\n                    self.presentAlert(\"Uknown genome id: \" + genomeID, undefined);\n                }\n                return reference;\n            }\n            else {\n                return conf;\n            }\n        }\n\n        function getInitialLocus(locus, genome) {\n\n            var loci = [];\n\n            if (locus) {\n                if (Array.isArray(locus)) {\n                    loci = locus.join(' ');\n\n                } else {\n                    loci = locus;\n                }\n            }\n            else {\n                loci = genome.getHomeChromosomeName();\n            }\n\n            return loci;\n        }\n    };\n\n    //\n    igv.Browser.prototype.updateUIWithGenomicStateListChange = function (genomicStateList) {\n\n        const isWGV = (this.isMultiLocusWholeGenomeView() || igv.isWholeGenomeView(genomicStateList[0].referenceFrame));\n\n        if (isWGV || this.isMultiLocusMode()) {\n            this.centerGuide.forcedHide();\n        } else {\n            this.centerGuide.forcedShow();\n        }\n\n        this.navbarManager.navbarDidResize(this.$navigation.width(), isWGV);\n\n        toggleTrackLabels(this.trackViews, this.trackLabelsVisible);\n\n    };\n\n    // track labels\n    igv.Browser.prototype.setTrackLabelName = function (trackView, name) {\n\n        trackView.viewports.forEach((viewport) => {\n            igv.setTrackLabel(viewport.$trackLabel, trackView.track, name);\n        });\n\n    };\n\n    igv.Browser.prototype.hideTrackLabels = function () {\n        this.trackLabelsVisible = false;\n        toggleTrackLabels(this.trackViews, this.trackLabelsVisible);\n    };\n\n    igv.Browser.prototype.showTrackLabels = function () {\n        this.trackLabelsVisible = true;\n        toggleTrackLabels(this.trackViews, this.trackLabelsVisible);\n    };\n\n    function toggleTrackLabels(trackViews, isVisible) {\n\n        for (let trackView of trackViews) {\n            for (let viewport of trackView.viewports) {\n                if (viewport.$trackLabel) {\n                    if (0 === trackView.viewports.indexOf(viewport) && true === isVisible) {\n                        viewport.$trackLabel.show();\n                    } else {\n                        viewport.$trackLabel.hide();\n                    }\n                }\n            }\n        }\n    }\n\n    // cursor guide\n    igv.Browser.prototype.hideCursorGuide = function () {\n        this.cursorGuide.$guide.hide();\n        this.cursorGuideVisible = false;\n    };\n\n    igv.Browser.prototype.showCursorGuide = function () {\n        this.cursorGuide.$guide.show();\n        this.cursorGuideVisible = true;\n    };\n\n    igv.Browser.prototype.setCustomCursorGuideMouseHandler = function (mouseHandler) {\n        this.cursorGuide.customMouseHandler = mouseHandler;\n    };\n\n\n    // center guide\n    igv.Browser.prototype.hideCenterGuide = function () {\n        this.centerGuide.$container.hide();\n        this.isCenterGuideVisible = false;\n    };\n\n    igv.Browser.prototype.showCenterGuide = function () {\n        this.centerGuide.$container.show();\n        this.centerGuide.resize();\n        this.isCenterGuideVisible = true;\n    };\n\n    igv.Browser.prototype.loadTrackList = function (configList) {\n\n        const self = this;\n\n        const unloadableTracks = configList.filter(function (config) {\n            return !knowHowToLoad(config);\n        })\n\n\n        if (unloadableTracks.length > 0) {\n            let message = \"The following tracks could not be loaded.  Are these local files?\";\n            unloadableTracks.forEach(function (config) {\n                message += \", \" + config.name;\n            })\n            self.presentAlert(message);\n        }\n\n\n        const promises = [];\n        configList.filter(knowHowToLoad).forEach(function (config) {\n            promises.push(self.loadTrack(config));\n        });\n\n        return Promise.all(promises)\n\n            .then(function (loadedTracks) {\n\n                const groupAutoscaleViews = self.trackViews.filter(function (trackView) {\n                    return trackView.track.autoscaleGroup\n                })\n\n                if (groupAutoscaleViews.length > 0) {\n                    self.updateViews(self.genomicStateList[0], groupAutoscaleViews);\n                }\n\n                return loadedTracks;\n            })\n    };\n\n    function knowHowToLoad(config) {\n\n        // config might be json\n        if (igv.isString(config)) {\n            config = JSON.parse(config);\n        }\n\n        const url = config.url;\n        const features = config.features;\n        return undefined === url || igv.isString(url) || igv.isFilePath(url);\n    }\n\n    /**\n     * Return a promise to load a track\n     *\n     * @param config\n     * @returns {*}\n     */\n    igv.Browser.prototype.loadTrack = function (config) {\n\n        var self = this;\n\n        // config might be json\n        if (igv.isString(config)) {\n            config = JSON.parse(config);\n        }\n\n        if (!knowHowToLoad(config)) {\n            self.presentAlert(\"The following track could not be loaded.  Is this a local files? \" + config.name);\n            return Promise.resolve();\n        }\n\n        return resolveTrackProperties(config)\n\n            .then(function (config) {\n\n                var settings,\n                    property,\n                    newTrack;\n\n                igv.inferTrackTypes(config);\n\n                // Set defaults if specified\n                if (self.trackDefaults && config.type) {\n                    settings = self.trackDefaults[config.type];\n                    if (settings) {\n                        for (property in settings) {\n                            if (settings.hasOwnProperty(property) && config[property] === undefined) {\n                                config[property] = settings[property];\n                            }\n                        }\n                    }\n                }\n\n                newTrack = igv.createTrack(config, self);\n\n                if (undefined === newTrack) {\n                    self.presentAlert(\"Unknown file type: \" + config.url, undefined);\n                    return newTrack;\n                }\n\n                // Set order field of track here.  Otherwise track order might get shuffled during asynchronous load\n                if (undefined === newTrack.order) {\n                    newTrack.order = self.trackViews.length;\n                }\n\n                self.addTrack(newTrack);\n\n                return newTrack;\n            })\n            .then(function (newTrack) {\n                return postInit(newTrack)\n            })\n\n        function resolveTrackProperties(config) {\n\n            if (igv.isString(config.url) && config.url.startsWith(\"https://drive.google.com\")) {\n\n                return igv.google.getDriveFileInfo(config.url)\n\n                    .then(function (json) {\n\n                        config.url = \"https://www.googleapis.com/drive/v3/files/\" + json.id + \"?alt=media\";\n\n                        if (!config.filename) {\n                            config.filename = json.originalFileName;\n                        }\n                        if (!config.format) {\n                            config.format = igv.inferFileFormat(config.filename);\n                        }\n                        if (config.indexURL && config.indexURL.startsWith(\"https://drive.google.com\")) {\n                            config.indexURL = igv.google.driveDownloadURL(config.indexURL);\n                        }\n\n                        return config;\n                    })\n\n\n            }\n            else {\n                if (config.url && !config.filename) {\n                    config.filename = igv.getFilename(config.url);\n                }\n\n                return Promise.resolve(config);\n            }\n\n\n        }\n\n        function postInit(track) {\n\n            if (track && typeof track.postInit === 'function') {\n                return track.postInit();\n            }\n            else {\n                return Promise.resolve(track);\n            }\n\n        }\n\n\n        function resolveTrackProperties(config) {\n\n            if (igv.isString(config.url) && config.url.startsWith(\"https://drive.google.com\")) {\n\n                return igv.google.getDriveFileInfo(config.url)\n\n                    .then(function (json) {\n\n                        config.url = \"https://www.googleapis.com/drive/v3/files/\" + json.id + \"?alt=media\";\n\n                        if (!config.filename) {\n                            config.filename = json.originalFileName;\n                        }\n                        if (!config.format) {\n                            config.format = igv.inferFileFormat(config.filename);\n                        }\n                        if (config.indexURL && config.indexURL.startsWith(\"https://drive.google.com\")) {\n                            config.indexURL = igv.google.driveDownloadURL(config.indexURL);\n                        }\n\n                        return config;\n                    })\n\n\n            }\n            else {\n                if (config.url && !config.filename) {\n                    config.filename = igv.getFilename(config.url);\n                }\n\n                return Promise.resolve(config);\n            }\n\n\n        }\n    }\n\n\n    /**\n     * Add a new track.  Each track is associated with the following DOM elements\n     *\n     *      leftHandGutter  - div on the left for track controls and legend\n     *      contentDiv  - a div element wrapping all the track content.  Height can be > viewportDiv height\n     *      viewportDiv - a div element through which the track is viewed.  This might have a vertical scrollbar\n     *      canvas     - canvas element upon which the track is drawn.  Child of contentDiv\n     *\n     * The width of all elements should be equal.  Height of the viewportDiv is controlled by the user, but never\n     * greater than the contentDiv height.   Height of contentDiv and canvas are equal, and governed by the data\n     * loaded.\n     *\n     * @param track\n     */\n    igv.Browser.prototype.addTrack = function (track) {\n\n        var trackView;\n        trackView = new igv.TrackView(this, $(this.trackContainerDiv), track);\n        this.trackViews.push(trackView);\n\n        toggleTrackLabels(this.trackViews, this.trackLabelsVisible);\n\n        this.reorderTracks();\n        if (!track.autoscaleGroup) {\n            // Group autoscale groups will get updated later (as a group)\n            trackView.updateViews();\n        }\n\n    };\n\n    igv.Browser.prototype.reorderTracks = function () {\n\n        var myself = this;\n\n        this.trackViews.sort(function (a, b) {\n            var aOrder = a.track.order || 0;\n            var bOrder = b.track.order || 0;\n            return aOrder - bOrder;\n        });\n\n        // Reattach the divs to the dom in the correct order\n        $(this.trackContainerDiv).children(\"igv-track-div\").detach();\n\n        this.trackViews.forEach(function (trackView) {\n            myself.trackContainerDiv.appendChild(trackView.trackDiv);\n        });\n\n    };\n\n\n    igv.Browser.prototype.removeTrackByName = function (name) {\n\n        var remove;\n        remove = _.first(_.filter(this.trackViews, function (trackView) {\n            return name === trackView.track.name;\n        }));\n\n        this.removeTrack(remove.track);\n\n    };\n\n    igv.Browser.prototype.removeTrack = function (track) {\n\n        // Find track panel\n        var trackPanelRemoved;\n        for (var i = 0; i < this.trackViews.length; i++) {\n            if (track === this.trackViews[i].track) {\n                trackPanelRemoved = this.trackViews[i];\n                break;\n            }\n        }\n\n        if (trackPanelRemoved) {\n            this.trackViews.splice(i, 1);\n            $(trackPanelRemoved.trackDiv).remove();\n            this.fireEvent('trackremoved', [trackPanelRemoved.track]);\n            trackPanelRemoved.dispose();\n        }\n\n    };\n\n    /**\n     * API function\n     */\n    igv.Browser.prototype.removeAllTracks = function (removeSequence) {\n        var self = this,\n            newTrackViews = [];\n\n        for (let tv of this.trackViews) {\n\n            if ((removeSequence || tv.track.id !== 'sequence') && tv.track.id !== 'ruler') {\n                self.trackContainerDiv.removeChild(tv.trackDiv);\n                self.fireEvent('trackremoved', [tv.track]);\n                tv.dispose();\n            } else {\n                newTrackViews.push(tv);\n            }\n        }\n\n        this.trackViews = newTrackViews;\n\n    }\n\n    /**\n     *\n     * @param property\n     * @param value\n     * @returns {Array}  tracks with given property value.  e.g. findTracks(\"type\", \"annotation\")\n     */\n    igv.Browser.prototype.findTracks = function (property, value) {\n\n        var tracks = [];\n        this.trackViews.forEach(function (trackView) {\n            if (value === trackView.track[property]) {\n                tracks.push(trackView.track)\n            }\n        })\n        return tracks;\n    };\n\n    igv.Browser.prototype.setTrackHeight = function (newHeight) {\n\n        this.trackHeight = newHeight;\n\n        this.trackViews.forEach(function (trackView) {\n            trackView.setTrackHeight(newHeight);\n        });\n\n    };\n\n    igv.Browser.prototype.visibilityChange = function () {\n        this.resize();\n    };\n\n    igv.Browser.prototype.resize = function () {\n\n        const self = this;\n\n        // Recompute bpPerPixel -- if previous width was zero this can be infinity\n        const viewportWidth = this.viewportWidth();\n\n        if (viewportWidth === 0) {\n            return;\n        }\n\n        if (this.genomicStateList && viewportWidth > 0) {\n\n            const isWGV = this.isMultiLocusWholeGenomeView() || igv.isWholeGenomeView(this.genomicStateList[0].referenceFrame);\n\n            if (isWGV || this.isMultiLocusMode()) {\n                this.centerGuide.forcedHide();\n            } else {\n                this.centerGuide.forcedShow();\n            }\n\n            this.navbarManager.navbarDidResize(this.$navigation.width(), isWGV);\n\n            this.genomicStateList.forEach(function (gstate) {\n                const referenceFrame = gstate.referenceFrame;\n                if (!isFinite(referenceFrame.bpPerPixel) && undefined !== referenceFrame.initialEnd) {\n                    referenceFrame.bpPerPixel = (referenceFrame.initialEnd - referenceFrame.start) / viewportWidth;\n                }\n            })\n        }\n\n        if (this.genomicStateList && 1 === this.genomicStateList.length && resizeWillExceedChromosomeLength(this.genomicStateList[0])) {\n\n            this.search(this.genomicStateList[0].chromosome.name);\n\n        } else {\n\n            if (this.ideoPanel) this.ideoPanel.resize();\n            if (this.centerGuide) this.centerGuide.resize();\n            this.trackViews.forEach(function (trackView) {\n                trackView.resize();\n            })\n        }\n\n        if (this.genomicStateList && this.genomicStateList.length > 0) {\n            this.updateLocusSearchWidget(this.genomicStateList[0]);\n            this.windowSizePanel.updateWithGenomicState(this.genomicStateList[0]);\n        }\n\n        this.updateViews();\n\n        function resizeWillExceedChromosomeLength(genomicState) {\n\n            const pixel = self.viewportContainerWidth();\n            const bpp = genomicState.referenceFrame.bpPerPixel;\n            const bp = pixel * bpp;\n            return (bp > genomicState.chromosome.bpLength);\n        }\n\n    };\n\n    igv.Browser.prototype.updateViews = function (genomicState, views) {\n\n        var self = this,\n            groupAutoscaleTracks, otherTracks;\n\n        if (!genomicState) {\n            genomicState = this.genomicStateList[0];\n        }\n        if (!views) {\n            views = this.trackViews;\n        }\n\n        this.updateLocusSearchWidget(genomicState);\n\n        this.windowSizePanel.updateWithGenomicState(genomicState);\n\n        if (this.ideoPanel) {\n            this.ideoPanel.repaint();\n        }\n        if (this.centerGuide) {\n            this.centerGuide.repaint();\n        }\n\n        // Don't autoscale while dragging.\n        if (self.isDragging) {\n            views.forEach(function (trackView) {\n                trackView.updateViews();\n            })\n        }\n        else {\n            // Group autoscale\n            groupAutoscaleTracks = {};\n            otherTracks = [];\n            views.forEach(function (trackView) {\n                var group = trackView.track.autoscaleGroup;\n                if (group) {\n                    var l = groupAutoscaleTracks[group];\n                    if (!l) {\n                        l = [];\n                        groupAutoscaleTracks[group] = l;\n                    }\n                    l.push(trackView);\n                }\n                else {\n                    otherTracks.push(trackView);\n                }\n            })\n\n            Object.keys(groupAutoscaleTracks).forEach(function (group) {\n\n                var groupTrackViews, promises;\n\n                groupTrackViews = groupAutoscaleTracks[group];\n                promises = [];\n\n                groupTrackViews.forEach(function (trackView) {\n                    promises.push(trackView.getInViewFeatures());\n                });\n\n                Promise.all(promises)\n\n                    .then(function (featureArray) {\n\n                        var allFeatures = [], dataRange;\n\n                        featureArray.forEach(function (features) {\n                            allFeatures = allFeatures.concat(features);\n                        })\n                        dataRange = igv.doAutoscale(allFeatures);\n\n                        groupTrackViews.forEach(function (trackView) {\n                            trackView.track.dataRange = dataRange;\n                            trackView.track.autoscale = false;\n                            trackView.updateViews();\n                        })\n                    })\n            })\n\n            otherTracks.forEach(function (trackView) {\n                trackView.updateViews();\n            })\n        }\n    };\n\n    igv.Browser.prototype.loadInProgress = function () {\n        var i;\n        for (i = 0; i < this.trackViews.length; i++) {\n            if (this.trackViews[i].isLoading()) return true;\n        }\n        return false;\n    };\n\n    igv.Browser.prototype.updateLocusSearchWidget = function (genomicState) {\n\n        var self = this,\n            referenceFrame,\n            ss,\n            ee,\n            str,\n            end,\n            chromosome;\n\n\n        if (this.rulerTrack) {\n            this.rulerTrack.updateLocusLabel();\n        }\n\n        if (0 === this.genomicStateList.indexOf(genomicState) && 1 === this.genomicStateList.length) {\n\n            if (genomicState.locusSearchString && 'all' === genomicState.locusSearchString.toLowerCase()) {\n\n                this.$searchInput.val(genomicState.locusSearchString);\n                this.chromosomeSelectWidget.$select.val('all');\n            } else {\n\n                referenceFrame = genomicState.referenceFrame;\n                this.chromosomeSelectWidget.$select.val(referenceFrame.chrName);\n\n                if (this.$searchInput) {\n\n                    end = referenceFrame.start + referenceFrame.bpPerPixel * (self.viewportContainerWidth() / this.genomicStateList.length);\n\n                    if (this.genome) {\n                        chromosome = this.genome.getChromosome(referenceFrame.chrName);\n                        if (chromosome) {\n                            end = Math.min(end, chromosome.bpLength);\n                        }\n                    }\n\n                    ss = igv.numberFormatter(Math.floor(referenceFrame.start + 1));\n                    ee = igv.numberFormatter(Math.floor(end));\n                    str = referenceFrame.chrName + \":\" + ss + \"-\" + ee;\n                    this.$searchInput.val(str);\n                }\n\n                this.fireEvent('locuschange', [{chr: referenceFrame.chrName, start: ss, end: ee, label: str}]);\n            }\n\n        } else {\n            this.$searchInput.val('');\n        }\n\n    };\n\n    /**\n     * Return the visible width of a track.  All tracks should have the same width.\n     */\n    igv.Browser.prototype.viewportContainerWidth = function () {\n\n        if (this.trackViews && this.trackViews.length > 0) {\n\n            return this.trackViews[0].$viewportContainer.width();\n        } else {\n\n            return syntheticViewportContainerWidth.call(this);\n        }\n\n        function syntheticViewportContainerWidth() {\n\n            var $track,\n                $viewportContainer,\n                width;\n\n            $track = $('<div class=\"igv-track-div\">');\n            $(this.trackContainerDiv).append($track);\n\n            $viewportContainer = $('<div class=\"igv-viewport-container\">');\n            $track.append($viewportContainer);\n\n            width = $viewportContainer.width();\n\n            // discard temporary DOM elements\n            $track.remove();\n\n            return width;\n        }\n\n    };\n\n    igv.Browser.prototype.viewportWidth = function () {\n        var cw,\n            vw;\n\n        cw = this.viewportContainerWidth();\n        vw = (undefined === this.genomicStateList || 1 === this.genomicStateList.length) ? cw : Math.round(cw / this.genomicStateList.length);\n\n        return vw;\n    };\n\n    igv.Browser.prototype.minimumBases = function () {\n        return this.config.minimumBases;\n    };\n\n    igv.Browser.prototype.updateZoomSlider = function ($slider) {\n\n        const viewport = this.trackViews[0].viewports[0];\n        const referenceFrame = viewport.genomicState.referenceFrame;\n\n        const window = viewport.$viewport.width() * referenceFrame.bpPerPixel;\n        const maxWindow = referenceFrame.getChromosome().bpLength;\n        const minWindow = this.minimumBases();\n        const v = (maxWindow - window) / (maxWindow - minWindow)\n        const value = Math.round(100 * v);\n\n        $slider.val(value);\n\n    };\n\n    igv.Browser.prototype.zoom = function (scaleFactor) {\n        let nuthin = undefined;\n        this.zoomWithScaleFactor(scaleFactor)\n    };\n\n    // Zoom in by a factor of 2, keeping the same center location\n    igv.Browser.prototype.zoomIn = function () {\n        this.zoomWithScaleFactor(0.5)\n    };\n\n    // Zoom out by a factor of 2, keeping the same center location if possible\n    igv.Browser.prototype.zoomOut = function () {\n        this.zoomWithScaleFactor(2.0)\n    };\n\n\n    igv.Browser.prototype.zoomWithRangePercentage = function (percentage) {\n\n        if (this.loadInProgress()) {\n            return;\n        }\n        let self = this;\n        this.trackViews[0].viewports.forEach((viewport) => {\n\n            const referenceFrame = viewport.genomicState.referenceFrame;\n            const centerBP = referenceFrame.start + referenceFrame.toBP(viewport.$viewport.width() / 2.0);\n            const chromosome = referenceFrame.getChromosome();\n            const bpp = lerp(\n                (chromosome.bpLength - chromosome.bpStart) / viewport.$viewport.width(),\n                this.minimumBases() / viewport.$viewport.width(),\n                percentage);\n            const viewportWidthBP = bpp * viewport.$viewport.width();\n\n            referenceFrame.start = centerBP - (viewportWidthBP / 2);\n            referenceFrame.bpPerPixel = bpp;\n            self.updateViews(viewport.genomicState);\n\n            function lerp(v0, v1, t) {\n                return (1 - t) * v0 + t * v1;\n            }\n\n        });\n    };\n\n    igv.Browser.prototype.zoomWithScaleFactor = function (scaleFactor, centerBPOrUndefined, viewportOrUndefined) {\n\n        if (this.loadInProgress()) {\n            return;\n        }\n\n        let self = this;\n\n        let viewports = viewportOrUndefined ? [viewportOrUndefined] : this.trackViews[0].viewports;\n        viewports.forEach((viewport) => {\n\n            const referenceFrame = viewport.genomicState.referenceFrame\n            const chromosome = referenceFrame.getChromosome();\n            const chromosomeLengthBP = chromosome.bpLength - chromosome.bpStart;\n\n            const bppThreshold = scaleFactor < 1.0 ?\n                self.minimumBases() / viewport.$viewport.width() :\n                chromosomeLengthBP / viewport.$viewport.width();\n\n            const centerBP = undefined === centerBPOrUndefined ?\n                (referenceFrame.start + referenceFrame.toBP(viewport.$viewport.width() / 2.0)) :\n                centerBPOrUndefined;\n\n            let bpp;\n            if (scaleFactor < 1.0) {\n                bpp = Math.max(referenceFrame.bpPerPixel * scaleFactor, bppThreshold);\n            } else {\n                bpp = Math.min(referenceFrame.bpPerPixel * scaleFactor, bppThreshold);\n            }\n\n            const viewportWidthBP = bpp * viewport.$viewport.width();\n            referenceFrame.start = centerBP - (viewportWidthBP / 2)\n            referenceFrame.bpPerPixel = bpp;\n            referenceFrame.clamp(viewport.$viewport.width())\n            self.updateViews(viewport.genomicState);\n\n        });\n\n\n    };\n\n    igv.Browser.prototype.presentSplitScreenMultiLocusPanel = function (alignment, genomicState) {\n\n        const genome = this.genome;\n\n        var referenceFrame,\n            viewportWidth,\n            leftMatePairGenomicState,\n            rightMatePairGenomicState;\n\n        // account for reduced viewport width as a result of adding right mate pair panel\n        viewportWidth = (this.viewportContainerWidth() / (1 + this.genomicStateList.length));\n\n        // adjust left mate pair reference frame\n        leftMatePairGenomicState = genomicState;\n        referenceFrame = leftMatePairGenomicState.referenceFrame;\n\n        const chrName = genome.getChromosomeName(alignment.chr);\n        leftMatePairGenomicState.referenceFrame = createReferenceFrame(chrName, referenceFrame.bpPerPixel, viewportWidth, alignment.start, alignment.lengthOnRef);\n\n        // create right mate pair reference frame\n        const mateChrName = genome.getChromosomeName(alignment.mate.chr);\n        rightMatePairGenomicState = {};\n        rightMatePairGenomicState.chromosome = leftMatePairGenomicState.chromosome;\n        rightMatePairGenomicState.referenceFrame = createReferenceFrame(mateChrName, referenceFrame.bpPerPixel, viewportWidth, alignment.mate.position, alignment.lengthOnRef);\n\n        // add right mate panel beside left mate panel\n        this.addMultiLocusPanelWithGenomicStateAtIndex(rightMatePairGenomicState, 1 + (this.genomicStateList.indexOf(leftMatePairGenomicState)), viewportWidth);\n\n        function createReferenceFrame(chromosomeName, bpp, pixels, alignmentStart, alignmentLength) {\n\n            var ss,\n                ee,\n                alignmentEE,\n                alignmentCC;\n\n            alignmentEE = alignmentStart + alignmentLength;\n            alignmentCC = (alignmentStart + alignmentEE) / 2;\n\n            ss = alignmentCC - (bpp * (pixels / 2));\n            ee = ss + (bpp * pixels);\n\n            return new igv.ReferenceFrame(genome, chromosomeName, ss, ee, bpp);\n        }\n\n    };\n\n    igv.Browser.prototype.selectMultiLocusPanelWithGenomicState = function (selectedGenomicState) {\n        var self = this,\n            removable;\n\n        removable = this.genomicStateList.filter(function (gs) {\n            return selectedGenomicState !== gs;\n        });\n\n        removable.forEach(function (gs) {\n            self.removeMultiLocusPanelWithGenomicState(gs, false);\n        });\n\n        this.resize();\n    };\n\n    igv.Browser.prototype.removeMultiLocusPanelWithGenomicState = function (genomicState, doResize) {\n\n        const genome = this.genome;\n\n        var self = this,\n            index,\n            viewportContainerWidth,\n            previousGenomicStateListLength,\n            width;\n\n        index = this.genomicStateList.indexOf(genomicState);\n\n        if (this.ideoPanel) {\n            this.ideoPanel.removePanelWithLocusIndex(index);\n        }\n\n        this.trackViews.forEach(function (trackView) {\n            trackView.removeViewportWithLocusIndex(index);\n        });\n\n        viewportContainerWidth = this.viewportContainerWidth();\n        previousGenomicStateListLength = this.genomicStateList.length;\n\n        this.genomicStateList.splice(index, 1);\n\n        this.genomicStateList.forEach(function (gs, i) {\n\n            const ee = gs.referenceFrame.calculateEnd(viewportContainerWidth / previousGenomicStateListLength);\n            const bpp = gs.referenceFrame.calculateBPP(ee, viewportContainerWidth / self.genomicStateList.length);\n\n            self.genomicStateList[i].referenceFrame = new igv.ReferenceFrame(genome, gs.chromosome.name, gs.referenceFrame.start, ee, bpp);\n        });\n\n        this.updateUIWithGenomicStateListChange(this.genomicStateList);\n\n        if (true === doResize) {\n            this.resize();\n        }\n\n    };\n\n    igv.Browser.prototype.addMultiLocusPanelWithGenomicStateAtIndex = function (genomicState, index, viewportWidth) {\n\n        if (index === this.genomicStateList.length) {\n\n            this.genomicStateList.push(genomicState);\n\n            if (this.ideoPanel) {\n                this.ideoPanel.addPanelWithGenomicStateAtIndex(genomicState, index, viewportWidth);\n            }\n\n            this.trackViews.forEach(function (trackView) {\n\n                var viewport;\n                viewport = new igv.Viewport(trackView, trackView.$viewportContainer, genomicState, viewportWidth);\n                trackView.viewports.push(viewport);\n\n                trackView.decorateViewports();\n\n                trackView.configureViewportContainer(trackView.$viewportContainer, trackView.viewports);\n            });\n\n        } else {\n\n            this.genomicStateList.splice(index, 0, genomicState);\n\n            if (this.ideoPanel) {\n                this.ideoPanel.addPanelWithGenomicStateAtIndex(genomicState, index, viewportWidth);\n            }\n\n            this.trackViews.forEach(function (trackView) {\n\n                var viewport,\n                    $detached;\n\n                viewport = new igv.Viewport(trackView, trackView.$viewportContainer, genomicState, viewportWidth);\n                trackView.viewports.splice(index, 0, viewport);\n\n                // The viewport constructor always appends. Reorder here.\n                $detached = viewport.$viewport.detach();\n                $detached.insertAfter(trackView.viewports[index - 1].$viewport);\n\n                trackView.decorateViewports();\n\n                trackView.configureViewportContainer(trackView.$viewportContainer, trackView.viewports);\n            });\n\n        }\n\n        if (this.rulerTrack) {\n            this.rulerTrack.updateLocusLabel();\n        }\n\n        this.updateUIWithGenomicStateListChange(this.genomicStateList);\n\n        this.resize();\n    };\n\n    igv.Browser.prototype.emptyViewportContainers = function () {\n\n        for (let trackView of this.trackViews) {\n\n            if (trackView.$outerScroll) {\n                trackView.$outerScroll.remove();\n            }\n\n            for (let viewport of trackView.viewports) {\n\n                if (viewport.rulerSweeper) {\n                    viewport.rulerSweeper.$rulerSweeper.remove();\n                }\n\n                if (viewport.popover) {\n                    viewport.popover.$popover.off();\n                    viewport.popover.$popover.empty();\n                    viewport.popover.$popover.remove();\n                }\n\n                viewport.$viewport.remove();\n            }\n\n            delete trackView.viewports;\n            trackView.viewports = [];\n\n            delete trackView.scrollbar;\n        }\n\n        this.$contentHeader.empty();\n\n    };\n\n    igv.Browser.prototype.buildViewportsWithGenomicStateList = function (genomicStateList) {\n        var width;\n\n        width = this.viewportContainerWidth() / this.genomicStateList.length;\n\n        this.trackViews.forEach(function (trackView) {\n\n            genomicStateList.forEach(function (genomicState) {\n\n                var viewport;\n                viewport = new igv.Viewport(trackView, trackView.$viewportContainer, genomicState, width);\n\n                trackView.viewports.push(viewport);\n            });\n\n            trackView.decorateViewports();\n\n            trackView.configureViewportContainer(trackView.$viewportContainer, trackView.viewports);\n        });\n\n    };\n\n    igv.Browser.prototype.goto = function (chrName, start, end) {\n        return this.search(chrName + \":\" + start + \"-\" + end);\n    };\n\n    igv.Browser.prototype.search = async function (string, init) {\n\n        const self = this\n\n        const genome = this.genome\n\n        if (string && string.trim().toLowerCase() === \"all\") string = \"all\";\n\n        const loci = string.split(' ')\n\n        let genomicStateList = await createGenomicStateList(loci)\n        if (!genomicStateList || genomicStateList.length === 0) {\n            // If nothing is found and there are spaces, consider the possibility that the search term itself has spaces\n            genomicStateList = await createGenomicStateList([string])\n        }\n\n        if (genomicStateList.length > 0) {\n\n            this.emptyViewportContainers();\n            this.genomicStateList = genomicStateList;\n            this.buildViewportsWithGenomicStateList(genomicStateList);\n\n            // assign ids to the state objects\n            for (let gs of genomicStateList) {\n                gs.id = igv.guid();\n            }\n\n        } else {\n            throw new Error('Unrecognized locus ' + string);\n        }\n\n        if (this.ideoPanel) {\n            this.ideoPanel.discardPanels();\n            const panelWidth = self.viewportContainerWidth() / genomicStateList.length;\n            this.ideoPanel.buildPanels(this.$contentHeader, panelWidth);\n        }\n\n        this.updateUIWithGenomicStateListChange(genomicStateList);\n\n        if (!init) {\n            this.updateViews();\n        }\n\n        return genomicStateList;\n\n\n        /**\n         * createGenomicStateList takes loci (gene name or name:start:end) and maps them into a list of genomicStates.\n         * A genomicState is fundamentally a referenceFrame. Plus some panel managment state.\n         * Each mult-locus panel refers to a genomicState.\n         *\n         * @param loci - array of locus strings (e.g. chr1:1-100,  egfr)\n         */\n        async function createGenomicStateList(loci) {\n\n            let searchConfig = self.searchConfig;\n            let result = [];\n\n            // Try locus string first  (e.g.  chr1:100-200)\n            for (let locus of loci) {\n                let genomicState = isLocusChrNameStartEnd(locus, self.genome);\n                if (genomicState) {\n                    genomicState.locusSearchString = locus;\n                    result.push(genomicState);\n                }\n                else {\n                    // Try local feature cache.    This is created from feature tracks tagged \"searchable\"\n                    const feature = self.featureDB[locus.toLowerCase()];\n                    if (feature) {\n                        const chromosome = self.genome.getChromosome(feature.chr);\n                        if (chromosome) {\n                            genomicState = {\n                                chromosome: chromosome,\n                                start: feature.start,\n                                end: feature.end,\n                                locusSearchString: locus\n                            }\n                            igv.Browser.validateLocusExtent(genomicState.chromosome.bpLength, genomicState, self.minimumBases());\n                            result.push(genomicState);\n                        }\n                    }\n                    else {\n                        // Try webservice\n                        const response = await searchWebService(locus)\n                        const genomicState = processSearchResult(response.result, response.locusSearchString);\n                        if (genomicState) {\n                            result.push(genomicState);\n                        }\n                    }\n                }\n                appendReferenceFrames(result);\n            }\n\n            return result;\n\n            function appendReferenceFrames(genomicStateList) {\n                const viewportWidth = self.viewportContainerWidth() / genomicStateList.length;\n                genomicStateList.forEach(function (gs) {\n                    gs.referenceFrame = new igv.ReferenceFrame(genome, gs.chromosome.name, gs.start, gs.end, (gs.end - gs.start) / viewportWidth);\n                });\n                return genomicStateList;\n            }\n\n            async function searchWebService(locus) {\n                let path = searchConfig.url.replace(\"$FEATURE$\", locus);\n                if (path.indexOf(\"$GENOME$\") > -1) {\n                    path = path.replace(\"$GENOME$\", (self.genome.id ? self.genome.id : \"hg19\"));\n                }\n                const result = await igv.xhr.loadString(path)\n                return {\n                    result: result,\n                    locusSearchString: locus\n                }\n            }\n\n            function processSearchResult(searchServiceResponse, locusSearchString) {\n\n                let results\n                if ('plain' === searchConfig.type) {\n                    results = parseSearchResults(searchServiceResponse);\n                } else {\n                    results = JSON.parse(searchServiceResponse);\n                }\n\n                if (searchConfig.resultsField) {\n                    results = results[searchConfig.resultsField];\n                }\n\n                if (!results || 0 === results.length) {\n                    return undefined;\n                } else {\n\n                    // Ingoring all but first result for now\n                    // TODO -- present all and let user select if results.length > 1\n                    const result = results[0];\n\n                    if (!(result.hasOwnProperty(searchConfig.chromosomeField) && (result.hasOwnProperty(searchConfig.startField)))) {\n                        console.log(\"Search service results must include chromosome and start fields: \" + result);\n                        return undefined;\n                    }\n\n                    const chr = result[searchConfig.chromosomeField];\n                    let start = result[searchConfig.startField] - searchConfig.coords;\n                    let end = result[searchConfig.endField];\n\n                    if (undefined === end) {\n                        end = start + 1;\n                    }\n\n                    if (self.flanking) {\n                        start = Math.max(0, start - self.flanking);\n                        end += self.flanking;\n                    }\n\n                    const geneNameLocusObject = Object.assign({}, result);\n                    geneNameLocusObject.chromosome = self.genome.getChromosome(chr);\n                    geneNameLocusObject.start = start;\n                    geneNameLocusObject.end = end;\n                    geneNameLocusObject.locusSearchString = locusSearchString;\n                    geneNameLocusObject.selection = new igv.GtexSelection(result[searchConfig.geneField], result[searchConfig.snpField]);\n\n                    return geneNameLocusObject;\n\n\n                }\n\n\n                /**\n                 * Parse the igv line-oriented (non json) search results.\n                 * Example\n                 *    EGFR    chr7:55,086,724-55,275,031    refseq\n                 *\n                 * @param data\n                 */\n                function parseSearchResults(data) {\n\n                    var lines,\n                        linesTrimmed = [],\n                        results = [];\n\n                    lines = igv.splitLines(data);\n\n                    lines.forEach(function (item) {\n                        if (\"\" === item) {\n                            // do nothing\n                        } else {\n                            linesTrimmed.push(item);\n                        }\n                    });\n\n                    linesTrimmed.forEach(function (line) {\n\n                        var tokens = line.split(\"\\t\"),\n                            source,\n                            locusTokens,\n                            rangeTokens,\n                            obj;\n\n                        if (tokens.length >= 3) {\n\n                            locusTokens = tokens[1].split(\":\");\n                            rangeTokens = locusTokens[1].split(\"-\");\n                            source = tokens[2].trim();\n\n                            obj =\n                                {\n                                    gene: tokens[0],\n                                    chromosome: self.genome.getChromosomeName(locusTokens[0].trim()),\n                                    start: parseInt(rangeTokens[0].replace(/,/g, '')),\n                                    end: parseInt(rangeTokens[1].replace(/,/g, '')),\n                                    type: (\"gtex\" === source ? \"snp\" : \"gene\")\n                                };\n\n                            results.push(obj);\n\n                        }\n\n                    });\n\n                    return results;\n\n                }\n\n                s\n\n            }\n\n            function isLocusChrNameStartEnd(locus, genome) {\n\n                var a, b, numeric, chr, chromosome, locusObject;\n\n                locusObject = {};\n                a = locus.split(':');\n\n                chr = a[0];\n                chromosome = genome.getChromosome(chr);  // Map chr to official name from (possible) alias\n                if (!chromosome) {\n                    return undefined;          // Unknown chromosome\n                }\n                locusObject.chromosome = chromosome;     // Map chr to offical name from possible alias\n                locusObject.start = 0;\n                locusObject.end = chromosome.bpLength;\n\n                // if just a chromosome name we are done\n                if (1 === a.length) {\n                    return locusObject;\n                } else {\n\n                    b = a[1].split('-');\n\n                    if (b.length > 2) {\n                        return undefined;                 // Not a locus string\n                    } else {\n\n                        locusObject.start = locusObject.end = undefined;\n\n                        numeric = b[0].replace(/\\,/g, '');\n                        if (isNaN(numeric)) {\n                            return undefined;\n                        }\n\n                        locusObject.start = parseInt(numeric, 10) - 1;\n\n                        if (isNaN(locusObject.start)) {\n                            return undefined;\n                        }\n\n                        if (2 === b.length) {\n\n                            numeric = b[1].replace(/\\,/g, '');\n                            if (isNaN(numeric)) {\n                                return false;\n                            }\n\n                            locusObject.end = parseInt(numeric, 10);\n                        }\n\n                    }\n\n                    igv.Browser.validateLocusExtent(locusObject.chromosome.bpLength, locusObject, self.minimumBases());\n\n                    return locusObject;\n\n                }\n\n            }\n        }\n    };\n\n    igv.Browser.validateLocusExtent = function (chromosomeLengthBP, extent, minimumBP) {\n\n        let ss = extent.start;\n        let ee = extent.end;\n\n        if (undefined === ee) {\n\n            ss -= minimumBP / 2;\n            ee = ss + minimumBP;\n\n            if (ee > chromosomeLengthBP) {\n                ee = chromosomeLengthBP;\n                ss = ee - minimumBP;\n            } else if (ss < 0) {\n                ss = 0;\n                ee = minimumBP;\n            }\n\n        } else if (ee - ss < minimumBP) {\n\n            const center = (ee + ss) / 2;\n\n            if (center - minimumBP / 2 < 0) {\n                ss = 0;\n                ee = ss + minimumBP;\n            } else if (center + minimumBP / 2 > chromosomeLengthBP) {\n                ee = chromosomeLengthBP;\n                ss = ee - minimumBP;\n            } else {\n                ss = center - minimumBP / 2;\n                ee = ss + minimumBP;\n            }\n        }\n\n        extent.start = Math.ceil(ss);\n        extent.end = Math.floor(ee);\n    };\n\n\n    igv.Browser.prototype.loadSampleInformation = function (url) {\n        var name = url;\n        if (url instanceof File) {\n            name = url.name;\n        }\n        var ext = name.substr(name.lastIndexOf('.') + 1);\n        if (ext === 'fam') {\n            igv.sampleInformation.loadPlinkFile(url);\n        }\n    };\n\n    // EVENTS\n\n    igv.Browser.prototype.on = function (eventName, fn) {\n        if (!this.eventHandlers[eventName]) {\n            this.eventHandlers[eventName] = [];\n        }\n        this.eventHandlers[eventName].push(fn);\n    };\n\n    /**\n     * @deprecated use off()\n     * @param eventName\n     * @param fn\n     */\n    igv.Browser.prototype.un = function (eventName, fn) {\n        if (!this.eventHandlers[eventName]) {\n            return;\n        }\n\n        var callbackIndex = this.eventHandlers[eventName].indexOf(fn);\n        if (callbackIndex !== -1) {\n            this.eventHandlers[eventName].splice(callbackIndex, 1);\n        }\n    };\n\n    igv.Browser.prototype.off = function (eventName, fn) {\n\n        if (!eventName) {\n            this.eventHandlers = {}   // Remove all event handlers\n        }\n        else if (!fn) {\n            this.eventHandlers[eventName] = []  // Remove all eventhandlers matching name\n        }\n        else {\n            // Remove specific event handler\n            const callbackIndex = this.eventHandlers[eventName].indexOf(fn);\n            if (callbackIndex !== -1) {\n                this.eventHandlers[eventName].splice(callbackIndex, 1);\n            }\n        }\n    };\n\n    igv.Browser.prototype.fireEvent = function (eventName, args, thisObj) {\n        var scope,\n            results,\n            eventHandler = this.eventHandlers[eventName];\n\n        if (undefined === eventHandler || eventHandler.length === 0) {\n            return undefined;\n        }\n\n        scope = thisObj || window;\n        results = eventHandler.map(function (event) {\n            return event.apply(scope, args);\n        });\n\n\n        return results[0];\n\n    };\n\n    igv.Browser.prototype.dispose = function () {\n\n        $(window).off(this.namespace);\n        $(document).off(this.namespace);\n\n        this.trackViews.forEach(function (tv) {\n            tv.dispose();\n        })\n\n    };\n\n    igv.Browser.prototype.toJSON = function () {\n\n        var json, trackJson, order;\n\n        json = {\n            \"reference\": this.genome.toJSON()\n        };\n\n        // Use first available trackView.\n        const locus = [];\n        const gtexSelections = {};\n        let anyTrackView = this.trackViews[0];\n        anyTrackView.viewports.forEach(function (viewport) {\n\n            const genomicState = viewport.genomicState;\n            const pixelWidth = viewport.$viewport[0].clientWidth;\n            const locusString = genomicState.referenceFrame.showLocus(pixelWidth);\n            locus.push(locusString);\n\n            if (genomicState.selection) {\n                const selection = {\n                    gene: genomicState.selection.gene,\n                    snp: genomicState.selection.snp\n                };\n\n                gtexSelections[locusString] = selection;\n            }\n        });\n\n        json[\"locus\"] = locus;\n\n        const gtexKeys = Object.getOwnPropertyNames(gtexSelections);\n        if (gtexKeys.length > 0) {\n            json[\"gtexSelections\"] = gtexSelections;\n        }\n\n        trackJson = [];\n        order = 0;\n        this.trackViews.forEach(function (tv) {\n\n            var track, config;\n\n            track = tv.track;\n            if (typeof track.getState === \"function\") {\n                config = track.getState();\n            }\n            else {\n                config = track.config;\n            }\n\n            if (config) {\n                // null backpointer to browser\n                if (config.browser) {\n                    delete config.browser;\n                }\n                config.order = track.order; //order++;\n                trackJson.push(config);\n            }\n        });\n\n        json[\"tracks\"] = trackJson;\n\n        return json;        // This is an object, not a json string\n\n    }\n\n    igv.Browser.prototype.compressedSession = function () {\n\n        var json, bytes, deflate, compressedBytes, compressedString, enc;\n\n        json = JSON.stringify(this.toJSON());\n        bytes = [];\n        for (var i = 0; i < json.length; i++) {\n            bytes.push(json.charCodeAt(i));\n        }\n        compressedBytes = new Zlib.RawDeflate(bytes).compress();            // UInt8Arry\n        compressedString = String.fromCharCode.apply(null, compressedBytes);      // Convert to string\n        enc = btoa(compressedString);\n        enc = enc.replace(/\\+/g, '.').replace(/\\//g, '_').replace(/\\=/g, '-');   // URL safe\n\n        //console.log(json);\n        //console.log(enc);\n\n        return enc;\n    }\n\n    igv.Browser.uncompressSession = function (url) {\n\n        let bytes\n        if (url.indexOf('/gzip;base64') > 0) {\n            //Proper dataURI\n            bytes = igv.decodeDataURI(url);\n        }\n        else {\n\n            let enc = url.substring(5);\n            enc = enc.replace(/\\./g, '+').replace(/_/g, '/').replace(/-/g, '=')\n\n            const compressedString = atob(enc);\n            const compressedBytes = [];\n            for (let i = 0; i < compressedString.length; i++) {\n                compressedBytes.push(compressedString.charCodeAt(i));\n            }\n            bytes = new Zlib.RawInflate(compressedBytes).decompress();\n        }\n        let json = ''\n        for (let b of bytes) {\n            json += String.fromCharCode(b)\n        }\n\n        return json;\n\n\n    }\n\n    igv.Browser.prototype.sessionURL = function () {\n        var surl, path, idx;\n\n        path = window.location.href.slice();\n        idx = path.indexOf(\"?\");\n\n        surl = (idx > 0 ? path.substring(0, idx) : path) + \"?sessionURL=data:\" + this.compressedSession();\n\n        return surl;\n\n    }\n\n    const httpMessages =\n        {\n            \"401\": \"Access unauthorized\",\n            \"403\": \"Access forbidden\",\n            \"404\": \"Not found\"\n        };\n\n    igv.Browser.prototype.presentAlert = function (alert, $parent) {\n\n        var string;\n\n        string = alert.message || alert;\n\n        if (httpMessages.hasOwnProperty(string)) {\n            string = httpMessages[string];\n        }\n\n        this.alertDialog.configure({label: string});\n        this.alertDialog.present($parent);\n    };\n\n    igv.Browser.prototype.presentMessageWithCallback = function (message, callback) {\n        this.alertDialog.presentMessageWithCallback(message, callback);\n    };\n\n\n    /**\n     * Record a mouse click on a specific viewport.   This might be the start of a drag operation.   Dragging\n     * (panning) is handled here so that the mouse can move out of a specific viewport (e.g. stray into another\n     * track) without halting the drag.\n     *\n     * @param e\n     * @param viewport\n     */\n    igv.Browser.prototype.mouseDownOnViewport = function (e, viewport) {\n\n        var coords;\n        coords = igv.pageCoordinates(e);\n        this.vpMouseDown = {\n            viewport: viewport,\n            lastMouseX: coords.x,\n            mouseDownX: coords.x,\n            lastMouseY: coords.y,\n            mouseDownY: coords.y,\n            genomicState: viewport.genomicState,\n            referenceFrame: viewport.genomicState.referenceFrame\n        };\n    };\n\n\n    igv.Browser.prototype.cancelTrackPan = function () {\n\n        const dragEnd = this.isDragging\n        this.isDragging = false;\n        this.isScrolling = false;\n        this.vpMouseDown = undefined;\n\n\n        if (dragEnd) {\n            this.updateViews();\n            this.fireEvent('trackdragend');\n        }\n\n    }\n\n\n    igv.Browser.prototype.startTrackDrag = function (trackView) {\n\n        this.dragTrack = trackView;\n\n    }\n\n    igv.Browser.prototype.updateTrackDrag = function (dragDestination) {\n\n        if (dragDestination && this.dragTrack) {\n\n            const dragged = this.dragTrack;\n            const indexDestination = this.trackViews.indexOf(dragDestination);\n            const indexDragged = this.trackViews.indexOf(dragged);\n            const trackViews = this.trackViews;\n\n            trackViews[indexDestination] = dragged;\n            trackViews[indexDragged] = dragDestination;\n\n            const newOrder = this.trackViews[indexDestination].track.order;\n            this.trackViews[indexDragged].track.order = newOrder;\n\n            const nTracks = trackViews.length;\n            let lastOrder = newOrder;\n\n            if (indexDestination < indexDragged) {\n                // Displace tracks below\n\n                for (let i = indexDestination + 1; i < nTracks; i++) {\n                    const track = trackViews[i].track;\n                    if (track.order <= lastOrder) {\n                        track.order = Math.min(Number.MAX_VALUE, lastOrder + 1);\n                        lastOrder = track.order;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                // Displace tracks above.  First track (index 0) is \"ruler\"\n                for (let i = indexDestination - 1; i > 0; i--) {\n                    const track = trackViews[i].track;\n                    if (track.order >= lastOrder) {\n                        track.order = Math.max(-Number.MAX_VALUE, lastOrder - 1);\n                        lastOrder = track.order;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            this.reorderTracks();\n        }\n    }\n\n    igv.Browser.prototype.endTrackDrag = function () {\n        if (this.dragTrack) {\n            this.dragTrack.$trackDragScrim.hide();\n        }\n        this.dragTrack = undefined;\n    }\n\n\n    /**\n     * Mouse handlers to support drag (pan)\n     */\n    function addMouseHandlers() {\n\n        var self = this;\n\n        $(window).on('resize' + this.namespace, function () {\n            self.resize();\n        });\n\n        $(this.root).on('mouseup', mouseUpOrLeave);\n        $(this.root).on('mouseleave', mouseUpOrLeave);\n\n        $(this.trackContainerDiv).on('mousemove', handleMouseMove);\n\n        $(this.trackContainerDiv).on('touchmove', handleMouseMove);\n\n        $(this.trackContainerDiv).on('mouseleave', mouseUpOrLeave);\n\n        $(this.trackContainerDiv).on('mouseup', mouseUpOrLeave);\n\n        $(this.trackContainerDiv).on('touchend', mouseUpOrLeave);\n\n        function handleMouseMove(e) {\n\n            var coords, viewport, viewportWidth, referenceFrame;\n\n            e.preventDefault();\n\n\n            if (self.loadInProgress()) {\n                return;\n            }\n\n            coords = igv.pageCoordinates(e);\n\n            if (self.vpMouseDown) {\n\n                // Determine direction,  true == horizontal\n                const horizontal = Math.abs((coords.x - self.vpMouseDown.mouseDownX)) > Math.abs((coords.y - self.vpMouseDown.mouseDownY));\n\n                viewport = self.vpMouseDown.viewport;\n                viewportWidth = viewport.$viewport.width();\n                referenceFrame = viewport.genomicState.referenceFrame;\n\n                if (!self.isDragging && !self.isScrolling) {\n                    if (horizontal) {\n                        if (self.vpMouseDown.mouseDownX && Math.abs(coords.x - self.vpMouseDown.mouseDownX) > self.constants.dragThreshold) {\n                            self.isDragging = true;\n                        }\n                    }\n                    else {\n                        if (self.vpMouseDown.mouseDownY &&\n                            Math.abs(coords.y - self.vpMouseDown.mouseDownY) > self.constants.scrollThreshold) {\n                            self.isScrolling = true;\n                            const trackView = viewport.trackView;\n                            const viewportContainerHeight = trackView.$viewportContainer.height();\n                            const contentHeight = trackView.maxContentHeight();\n                            self.vpMouseDown.r = viewportContainerHeight / contentHeight;\n                        }\n                    }\n                }\n\n                if (self.isDragging) {\n\n                    referenceFrame.shiftPixels(self.vpMouseDown.lastMouseX - coords.x, viewportWidth);\n                    self.updateLocusSearchWidget(self.vpMouseDown.genomicState);\n                    self.updateViews();\n                    self.fireEvent('trackdrag');\n                }\n\n\n                if (self.isScrolling) {\n                    const delta = self.vpMouseDown.r * (self.vpMouseDown.lastMouseY - coords.y);\n                    self.vpMouseDown.viewport.trackView.scrollBy(delta);\n                }\n\n\n                self.vpMouseDown.lastMouseX = coords.x;\n                self.vpMouseDown.lastMouseY = coords.y\n            }\n        }\n\n        function mouseUpOrLeave(e) {\n            self.cancelTrackPan();\n            self.endTrackDrag();\n        }\n    }\n\n\n    return igv;\n})\n(igv || {});\n\n\n\n/*!!\n *  Canvas 2 Svg v1.0.19\n *  A low level canvas to SVG converter. Uses a mock canvas context to build an SVG document.\n *\n *  Licensed under the MIT license:\n *  http://www.opensource.org/licenses/mit-license.php\n *\n *  Author:\n *  Kerry Liu\n *\n *  Copyright (c) 2014 Gliffy Inc.\n */\n\nvar C2S;\n\n(function () {\n    \"use strict\";\n\n    var STYLES, ctx, CanvasGradient, CanvasPattern, namedEntities;\n\n    //helper function to format a string\n    function format(str, args) {\n        var keys = Object.keys(args), i;\n        for (i=0; i<keys.length; i++) {\n            str = str.replace(new RegExp(\"\\\\{\" + keys[i] + \"\\\\}\", \"gi\"), args[keys[i]]);\n        }\n        return str;\n    }\n\n    //helper function that generates a random string\n    function randomString(holder) {\n        var chars, randomstring, i;\n        if (!holder) {\n            throw new Error(\"cannot create a random attribute name for an undefined object\");\n        }\n        chars = \"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\n        randomstring = \"\";\n        do {\n            randomstring = \"\";\n            for (i = 0; i < 12; i++) {\n                randomstring += chars[Math.floor(Math.random() * chars.length)];\n            }\n        } while (holder[randomstring]);\n        return randomstring;\n    }\n\n    //helper function to map named to numbered entities\n    function createNamedToNumberedLookup(items, radix) {\n        var i, entity, lookup = {}, base10, base16;\n        items = items.split(',');\n        radix = radix || 10;\n        // Map from named to numbered entities.\n        for (i = 0; i < items.length; i += 2) {\n            entity = '&' + items[i + 1] + ';';\n            base10 = parseInt(items[i], radix);\n            lookup[entity] = '&#'+base10+';';\n        }\n        //FF and IE need to create a regex from hex values ie &nbsp; == \\xa0\n        lookup[\"\\\\xa0\"] = '&#160;';\n        return lookup;\n    }\n\n    //helper function to map canvas-textAlign to svg-textAnchor\n    function getTextAnchor(textAlign) {\n        //TODO: support rtl languages\n        var mapping = {\"left\":\"start\", \"right\":\"end\", \"center\":\"middle\", \"start\":\"start\", \"end\":\"end\"};\n        return mapping[textAlign] || mapping.start;\n    }\n\n    //helper function to map canvas-textBaseline to svg-dominantBaseline\n    function getDominantBaseline(textBaseline) {\n        //INFO: not supported in all browsers\n        var mapping = {\"alphabetic\": \"alphabetic\", \"hanging\": \"hanging\", \"top\":\"text-before-edge\", \"bottom\":\"text-after-edge\", \"middle\":\"central\"};\n        return mapping[textBaseline] || mapping.alphabetic;\n    }\n\n    // Unpack entities lookup where the numbers are in radix 32 to reduce the size\n    // entity mapping courtesy of tinymce\n    namedEntities = createNamedToNumberedLookup(\n        '50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,' +\n            '5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,' +\n            '5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,' +\n            '5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,' +\n            '68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,' +\n            '6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,' +\n            '6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,' +\n            '75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,' +\n            '7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,' +\n            '7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,' +\n            'sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,' +\n            'st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,' +\n            't9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,' +\n            'tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,' +\n            'u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,' +\n            '81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,' +\n            '8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,' +\n            '8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,' +\n            '8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,' +\n            '8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,' +\n            'nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,' +\n            'rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,' +\n            'Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,' +\n            '80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,' +\n            '811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro', 32);\n\n\n    //Some basic mappings for attributes and default values.\n    STYLES = {\n        \"strokeStyle\":{\n            svgAttr : \"stroke\", //corresponding svg attribute\n            canvas : \"#000000\", //canvas default\n            svg : \"none\",       //svg default\n            apply : \"stroke\"    //apply on stroke() or fill()\n        },\n        \"fillStyle\":{\n            svgAttr : \"fill\",\n            canvas : \"#000000\",\n            svg : null, //svg default is black, but we need to special case this to handle canvas stroke without fill\n            apply : \"fill\"\n        },\n        \"lineCap\":{\n            svgAttr : \"stroke-linecap\",\n            canvas : \"butt\",\n            svg : \"butt\",\n            apply : \"stroke\"\n        },\n        \"lineJoin\":{\n            svgAttr : \"stroke-linejoin\",\n            canvas : \"miter\",\n            svg : \"miter\",\n            apply : \"stroke\"\n        },\n        \"miterLimit\":{\n            svgAttr : \"stroke-miterlimit\",\n            canvas : 10,\n            svg : 4,\n            apply : \"stroke\"\n        },\n        \"lineWidth\":{\n            svgAttr : \"stroke-width\",\n            canvas : 1,\n            svg : 1,\n            apply : \"stroke\"\n        },\n        \"globalAlpha\": {\n            svgAttr : \"opacity\",\n            canvas : 1,\n            svg : 1,\n            apply :  \"fill stroke\"\n        },\n        \"font\":{\n            //font converts to multiple svg attributes, there is custom logic for this\n            canvas : \"10px sans-serif\"\n        },\n        \"shadowColor\":{\n            canvas : \"#000000\"\n        },\n        \"shadowOffsetX\":{\n            canvas : 0\n        },\n        \"shadowOffsetY\":{\n            canvas : 0\n        },\n        \"shadowBlur\":{\n            canvas : 0\n        },\n        \"textAlign\":{\n            canvas : \"start\"\n        },\n        \"textBaseline\":{\n            canvas : \"alphabetic\"\n        },\n        \"lineDash\" : {\n            svgAttr : \"stroke-dasharray\",\n            canvas : [],\n            svg : null,\n            apply : \"stroke\"\n        }\n    };\n\n    /**\n     *\n     * @param gradientNode - reference to the gradient\n     * @constructor\n     */\n    CanvasGradient = function (gradientNode, ctx) {\n        this.__root = gradientNode;\n        this.__ctx = ctx;\n    };\n\n    /**\n     * Adds a color stop to the gradient root\n     */\n    CanvasGradient.prototype.addColorStop = function (offset, color) {\n        var stop = this.__ctx.__createElement(\"stop\"), regex, matches;\n        stop.setAttribute(\"offset\", offset);\n        if (color && color.indexOf(\"rgba\") !== -1) {\n            //separate alpha value, since webkit can't handle it\n            regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\n            matches = regex.exec(color);\n            stop.setAttribute(\"stop-color\", format(\"rgb({r},{g},{b})\", {r:matches[1], g:matches[2], b:matches[3]}));\n            stop.setAttribute(\"stop-opacity\", matches[4]);\n        } else {\n            stop.setAttribute(\"stop-color\", color);\n        }\n        this.__root.appendChild(stop);\n    };\n\n    CanvasPattern = function (pattern, ctx) {\n        this.__root = pattern;\n        this.__ctx = ctx;\n    };\n\n    /**\n     * The mock canvas context\n     * @param config - options include:\n     * ctx - existing Context2D to wrap around\n     * width - width of your canvas (defaults to 500)\n     * height - height of your canvas (defaults to 500)\n     * enableMirroring - enables canvas mirroring (get image data) (defaults to false)\n     * document - the document object (defaults to the current document)\n     */\n    ctx = function (config) {\n\n        if (!(this instanceof ctx)) {\n            //did someone call this without new?\n            return new ctx(config);\n        }\n\n        // clone config\n        this.config = config;\n\n        //setup options\n        this.width = config.width;\n        this.height = config.height;\n        this.enableMirroring = config.enableMirroring || false;\n\n        this.canvas = this;   ///point back to this instance!\n        this.__document = document;\n\n        // allow passing in an existing context to wrap around\n        // if a context is passed in, we know a canvas already exist\n        if (config.ctx) {\n            this.__ctx = config.ctx;\n        } else {\n            this.__canvas = this.__document.createElement(\"canvas\");\n            this.__ctx = this.__canvas.getContext(\"2d\");\n        }\n\n        // give this canvas a type\n        this.isSVG = true;\n\n        this.__setDefaultStyles();\n        this.__stack = [this.__getStyleState()];\n        this.__groupStack = [];\n\n        // root svg element\n        this.__root = this.__createElement(\"svg\");\n        this.__root.setAttribute(\"width\", this.width);\n        this.__root.setAttribute(\"height\", this.height);\n\n        // allow contents to overflow svg bbox\n        this.__root.setAttribute('overflow', 'visible');\n\n        // viewbox\n        if (config.viewbox) {\n            const str = config.viewbox.x + ' ' + config.viewbox.y + ' ' + config.viewbox.width + ' ' + config.viewbox.height;\n            this.__root.setAttribute(\"viewBox\", str);\n\n            this.viewbox = config.viewbox;\n        }\n\n        // make sure we don't generate the same ids in defs\n        this.__ids = {};\n\n        // defs\n        this.__defs = this.__createElement(\"defs\");\n        this.__root.appendChild(this.__defs);\n\n        this.multiLocusGap = config.multiLocusGap;\n\n        // svg background color\n        let backdropConfig =\n            {\n                id:'svg_output_backdrop',\n                width:'100%',\n                height:'100%',\n                fill: config.backdropColor || 'white'\n            };\n\n        let backdropRect = this.__createElement('rect', backdropConfig);\n        this.__root.appendChild( backdropRect );\n\n        // root group\n        this.__rootGroup = this.__createElement('g', { id:'root-group' });\n        this.__root.appendChild(this.__rootGroup);\n\n        // point current element to root group\n        this.__currentElement = this.__rootGroup;\n    };\n\n    ctx.prototype.setWidth = function(width) {\n\n        this.width = width;\n        this.__root.setAttribute(\"width\", this.width);\n\n        const str = this.config.viewbox.x + ' ' + this.config.viewbox.y + ' ' + width + ' ' + this.config.viewbox.height;\n        this.__root.setAttribute(\"viewBox\", str);\n\n    };\n\n    ctx.prototype.setHeight = function(height) {\n\n        this.height = height;\n        this.__root.setAttribute(\"height\", this.height);\n\n        const str = this.config.viewbox.x + ' ' + this.config.viewbox.y + ' ' + this.config.viewbox.width + ' ' + height;\n        this.__root.setAttribute(\"viewBox\", str);\n\n    };\n\n    /**\n     * Creates the specified svg element\n     * @private\n     */\n    ctx.prototype.__createElement = function (elementName, properties, resetFill) {\n\n        if (typeof properties === \"undefined\") {\n            properties = {};\n        }\n\n        let element = this.__document.createElementNS(\"http://www.w3.org/2000/svg\", elementName);\n\n        if (resetFill) {\n            //if fill or stroke is not specified, the svg element should not display. By default SVG's fill is black.\n            element.setAttribute(\"fill\", \"none\");\n            element.setAttribute(\"stroke\", \"none\");\n        }\n\n        for (let key of Object.keys(properties)) {\n            element.setAttribute(key, properties[ key ]);\n        }\n\n        return element;\n    };\n\n    /**\n     * Applies default canvas styles to the context\n     * @private\n     */\n    ctx.prototype.__setDefaultStyles = function () {\n        //default 2d canvas context properties see:http://www.w3.org/TR/2dcontext/\n        var keys = Object.keys(STYLES), i, key;\n        for (i=0; i<keys.length; i++) {\n            key = keys[i];\n            this[key] = STYLES[key].canvas;\n        }\n    };\n\n    /**\n     * Applies styles on restore\n     * @param styleState\n     * @private\n     */\n    ctx.prototype.__applyStyleState = function (styleState) {\n        var keys = Object.keys(styleState), i, key;\n        for (i=0; i<keys.length; i++) {\n            key = keys[i];\n            this[key] = styleState[key];\n        }\n    };\n\n    /**\n     * Gets the current style state\n     * @return {Object}\n     * @private\n     */\n    ctx.prototype.__getStyleState = function () {\n        var i, styleState = {}, keys = Object.keys(STYLES), key;\n        for (i=0; i<keys.length; i++) {\n            key = keys[i];\n            styleState[key] = this[key];\n        }\n        return styleState;\n    };\n\n    /**\n     * Apples the current styles to the current SVG element. On \"ctx.fill\" or \"ctx.stroke\"\n     * @param type\n     * @private\n     */\n    ctx.prototype.__applyStyleToCurrentElement = function (type) {\n    \tvar currentElement = this.__currentElement;\n    \tvar currentStyleGroup = this.__currentElementsToStyle;\n    \tif (currentStyleGroup) {\n    \t\tcurrentElement.setAttribute(type, \"\");\n    \t\tcurrentElement = currentStyleGroup.element;\n    \t\tcurrentStyleGroup.children.forEach(function (node) {\n    \t\t\tnode.setAttribute(type, \"\");\n    \t\t})\n    \t}\n\n        var keys = Object.keys(STYLES), i, style, value, id, regex, matches;\n        for (i = 0; i < keys.length; i++) {\n            style = STYLES[keys[i]];\n            value = this[keys[i]];\n            if (style.apply) {\n                //is this a gradient or pattern?\n                if (value instanceof CanvasPattern) {\n                    //pattern\n                    if (value.__ctx) {\n                        //copy over defs\n                        while(value.__ctx.__defs.childNodes.length) {\n                            id = value.__ctx.__defs.childNodes[0].getAttribute(\"id\");\n                            this.__ids[id] = id;\n                            this.__defs.appendChild(value.__ctx.__defs.childNodes[0]);\n                        }\n                    }\n                    currentElement.setAttribute(style.apply, format(\"url(#{id})\", {id:value.__root.getAttribute(\"id\")}));\n                }\n                else if (value instanceof CanvasGradient) {\n                    //gradient\n                    currentElement.setAttribute(style.apply, format(\"url(#{id})\", {id:value.__root.getAttribute(\"id\")}));\n                } else if (style && style.apply.indexOf(type) !== -1 && style.svg !== value) {\n                    if ((style.svgAttr === \"stroke\" || style.svgAttr === \"fill\") && value && value.indexOf(\"rgba\") !== -1) {\n                        //separate alpha value, since illustrator can't handle it\n                        regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\n                        matches = regex.exec(value);\n                        currentElement.setAttribute(style.svgAttr, format(\"rgb({r},{g},{b})\", {r:matches[1], g:matches[2], b:matches[3]}));\n                        //should take globalAlpha here\n                        var opacity = matches[4];\n                        var globalAlpha = this.globalAlpha;\n                        if (globalAlpha != null) {\n                            opacity *= globalAlpha;\n                        }\n                        currentElement.setAttribute(style.svgAttr+\"-opacity\", opacity);\n                    } else {\n                        var attr = style.svgAttr;\n                        if (keys[i] === 'globalAlpha') {\n                            attr = type+'-'+style.svgAttr;\n                            if (currentElement.getAttribute(attr)) {\n                                 //fill-opacity or stroke-opacity has already been set by stroke or fill.\n                                continue;\n                            }\n                        }\n                        //otherwise only update attribute if right type, and not svg default\n                        currentElement.setAttribute(attr, value);\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Will return the closest group or svg node. May return the current element.\n     * @private\n     */\n    ctx.prototype.__closestGroupOrSvg = function (node) {\n        node = node || this.__currentElement;\n        if (node.nodeName === \"g\" || node.nodeName === \"svg\") {\n            return node;\n        } else {\n            return this.__closestGroupOrSvg(node.parentNode);\n        }\n    };\n\n    /**\n     * Returns the serialized value of the svg so far\n     * @param fixNamedEntities - Standalone SVG doesn't support named entities, which document.createTextNode encodes.\n     *                           If true, we attempt to find all named entities and encode it as a numeric entity.\n     * @return serialized svg\n     */\n    ctx.prototype.getSerializedSvg = function (fixNamedEntities) {\n        var serialized = new XMLSerializer().serializeToString(this.__root),\n            keys, i, key, value, regexp, xmlns;\n\n        //IE search for a duplicate xmnls because they didn't implement setAttributeNS correctly\n        // xmlns = /xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\".+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg/gi;\n        // if (xmlns.test(serialized)) {\n        //     serialized = serialized.replace('xmlns=\"http://www.w3.org/2000/svg','xmlns:xlink=\"http://www.w3.org/1999/xlink');\n        // }\n\n        if (fixNamedEntities) {\n            keys = Object.keys(namedEntities);\n            //loop over each named entity and replace with the proper equivalent.\n            for (i=0; i<keys.length; i++) {\n                key = keys[i];\n                value = namedEntities[key];\n                regexp = new RegExp(key, \"gi\");\n                if (regexp.test(serialized)) {\n                    serialized = serialized.replace(regexp, value);\n                }\n            }\n        }\n\n        return serialized;\n    };\n\n\n    /**\n     * Returns the root svg\n     * @return\n     */\n    ctx.prototype.getSvg = function () {\n        return this.__root;\n    };\n    /**\n     * Will generate a group tag.\n     */\n    ctx.prototype.save = function () {\n        var group = this.__createElement(\"g\");\n        var parent = this.__closestGroupOrSvg();\n        this.__groupStack.push(parent);\n        parent.appendChild(group);\n        this.__currentElement = group;\n        this.__stack.push(this.__getStyleState());\n    };\n    /**\n     * Sets current element to parent, or just root if already root\n     */\n    ctx.prototype.restore = function () {\n        this.__currentElement = this.__groupStack.pop();\n        this.__currentElementsToStyle = null;\n        //Clearing canvas will make the poped group invalid, currentElement is set to the root group node.\n        if (!this.__currentElement) {\n            this.__currentElement = this.__root.childNodes[1];\n        }\n        var state = this.__stack.pop();\n        this.__applyStyleState(state);\n    };\n\n    /**\n     * Helper method to add transform\n     * @private\n     */\n    ctx.prototype.__addTransform = function (t) {\n        //if the current element has siblings, add another group\n        var parent = this.__closestGroupOrSvg();\n        if (parent.childNodes.length > 0) {\n        \tif (this.__currentElement.nodeName === \"path\") {\n        \t\tif (!this.__currentElementsToStyle) this.__currentElementsToStyle = {element: parent, children: []};\n        \t\tthis.__currentElementsToStyle.children.push(this.__currentElement)\n        \t\tthis.__applyCurrentDefaultPath();\n        \t}\n\n            var group = this.__createElement(\"g\");\n            parent.appendChild(group);\n            this.__currentElement = group;\n        }\n\n        var transform = this.__currentElement.getAttribute(\"transform\");\n        if (transform) {\n            transform += \" \";\n        } else {\n            transform = \"\";\n        }\n        transform += t;\n        this.__currentElement.setAttribute(\"transform\", transform);\n    };\n\n    ctx.prototype.addTrackGroupWithTranslationAndClipRect = function (id, tx, ty, width, height, clipYOffset) {\n\n        // clip rect\n        const clip_id = id + '_clip_rect';\n        let clipPath = this.__createElement('clipPath', { id:clip_id });\n\n        this.__defs.appendChild( clipPath );\n        clipPath.appendChild( this.__createElement('rect', { x:'0', y:clipYOffset.toString(), width:width.toString(), height:height.toString() }) );\n\n        let group = this.__createElement('g');\n        this.__rootGroup.appendChild(group);\n\n        group.setAttribute('transform', format('translate({x},{y})', { x:tx, y:ty }));\n        group.setAttribute('id', (id + '_group'));\n\n        // add clip rect\n        group.setAttribute('clip-path', format('url(#{id})', { id:clip_id }));\n\n        this.__currentElement = group;\n    };\n\n    /**\n     *  scales the current element\n     */\n    ctx.prototype.scale = function (x, y) {\n        if (y === undefined) {\n            y = x;\n        }\n        this.__addTransform(format(\"scale({x},{y})\", {x:x, y:y}));\n    };\n\n    /**\n     * rotates the current element\n     */\n    ctx.prototype.rotate = function (angle) {\n        var degrees = (angle * 180 / Math.PI);\n        this.__addTransform(format(\"rotate({angle},{cx},{cy})\", {angle:degrees, cx:0, cy:0}));\n    };\n\n    /**\n     * translates the current element\n     */\n    ctx.prototype.translate = function (x, y) {\n        this.__addTransform(format(\"translate({x},{y})\", {x:x,y:y}));\n    };\n\n    /**\n     * applies a transform to the current element\n     */\n    ctx.prototype.transform = function (a, b, c, d, e, f) {\n        this.__addTransform(format(\"matrix({a},{b},{c},{d},{e},{f})\", {a:a, b:b, c:c, d:d, e:e, f:f}));\n    };\n\n    /**\n     * Create a new Path Element\n     */\n    ctx.prototype.beginPath = function () {\n        var path, parent;\n\n        // Note that there is only one current default path, it is not part of the drawing state.\n        // See also: https://html.spec.whatwg.org/multipage/scripting.html#current-default-path\n        this.__currentDefaultPath = \"\";\n        this.__currentPosition = {};\n\n        path = this.__createElement(\"path\", {}, true);\n        parent = this.__closestGroupOrSvg();\n        parent.appendChild(path);\n        this.__currentElement = path;\n    };\n\n    /**\n     * Helper function to apply currentDefaultPath to current path element\n     * @private\n     */\n    ctx.prototype.__applyCurrentDefaultPath = function () {\n    \tvar currentElement = this.__currentElement;\n        if (currentElement.nodeName === \"path\") {\n\t\t\tcurrentElement.setAttribute(\"d\", this.__currentDefaultPath);\n        } else {\n\t\t\tconsole.error(\"Attempted to apply path command to node\", currentElement.nodeName);\n        }\n    };\n\n    /**\n     * Helper function to add path command\n     * @private\n     */\n    ctx.prototype.__addPathCommand = function (command) {\n        this.__currentDefaultPath += \" \";\n        this.__currentDefaultPath += command;\n    };\n\n    /**\n     * Adds the move command to the current path element,\n     * if the currentPathElement is not empty create a new path element\n     */\n    ctx.prototype.moveTo = function (x,y) {\n        if (this.__currentElement.nodeName !== \"path\") {\n            this.beginPath();\n        }\n\n        // creates a new subpath with the given point\n        this.__currentPosition = {x: x, y: y};\n        this.__addPathCommand(format(\"M {x} {y}\", {x:x, y:y}));\n    };\n\n    /**\n     * Closes the current path\n     */\n    ctx.prototype.closePath = function () {\n        if (this.__currentDefaultPath) {\n            this.__addPathCommand(\"Z\");\n        }\n    };\n\n    /**\n     * Adds a line to command\n     */\n    ctx.prototype.lineTo = function (x, y) {\n        this.__currentPosition = {x: x, y: y};\n        if (this.__currentDefaultPath && this.__currentDefaultPath.indexOf('M') > -1) {\n            this.__addPathCommand(format(\"L {x} {y}\", {x:x, y:y}));\n        } else {\n            this.__addPathCommand(format(\"M {x} {y}\", {x:x, y:y}));\n        }\n    };\n\n    /**\n     * Add a bezier command\n     */\n    ctx.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.__currentPosition = {x: x, y: y};\n        this.__addPathCommand(format(\"C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}\",\n            {cp1x:cp1x, cp1y:cp1y, cp2x:cp2x, cp2y:cp2y, x:x, y:y}));\n    };\n\n    /**\n     * Adds a quadratic curve to command\n     */\n    ctx.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {\n        this.__currentPosition = {x: x, y: y};\n        this.__addPathCommand(format(\"Q {cpx} {cpy} {x} {y}\", {cpx:cpx, cpy:cpy, x:x, y:y}));\n    };\n\n\n    /**\n     * Return a new normalized vector of given vector\n     */\n    var normalize = function (vector) {\n        var len = Math.sqrt(vector[0] * vector[0] + vector[1] * vector[1]);\n        return [vector[0] / len, vector[1] / len];\n    };\n\n    /**\n     * Adds the arcTo to the current path\n     *\n     * @see http://www.w3.org/TR/2015/WD-2dcontext-20150514/#dom-context-2d-arcto\n     */\n    ctx.prototype.arcTo = function (x1, y1, x2, y2, radius) {\n        // Let the point (x0, y0) be the last point in the subpath.\n        var x0 = this.__currentPosition && this.__currentPosition.x;\n        var y0 = this.__currentPosition && this.__currentPosition.y;\n\n        // First ensure there is a subpath for (x1, y1).\n        if (typeof x0 == \"undefined\" || typeof y0 == \"undefined\") {\n            return;\n        }\n\n        // Negative values for radius must cause the implementation to throw an IndexSizeError exception.\n        if (radius < 0) {\n            throw new Error(\"IndexSizeError: The radius provided (\" + radius + \") is negative.\");\n        }\n\n        // If the point (x0, y0) is equal to the point (x1, y1),\n        // or if the point (x1, y1) is equal to the point (x2, y2),\n        // or if the radius radius is zero,\n        // then the method must add the point (x1, y1) to the subpath,\n        // and connect that point to the previous point (x0, y0) by a straight line.\n        if (((x0 === x1) && (y0 === y1))\n            || ((x1 === x2) && (y1 === y2))\n            || (radius === 0)) {\n            this.lineTo(x1, y1);\n            return;\n        }\n\n        // Otherwise, if the points (x0, y0), (x1, y1), and (x2, y2) all lie on a single straight line,\n        // then the method must add the point (x1, y1) to the subpath,\n        // and connect that point to the previous point (x0, y0) by a straight line.\n        var unit_vec_p1_p0 = normalize([x0 - x1, y0 - y1]);\n        var unit_vec_p1_p2 = normalize([x2 - x1, y2 - y1]);\n        if (unit_vec_p1_p0[0] * unit_vec_p1_p2[1] === unit_vec_p1_p0[1] * unit_vec_p1_p2[0]) {\n            this.lineTo(x1, y1);\n            return;\n        }\n\n        // Otherwise, let The Arc be the shortest arc given by circumference of the circle that has radius radius,\n        // and that has one point tangent to the half-infinite line that crosses the point (x0, y0) and ends at the point (x1, y1),\n        // and that has a different point tangent to the half-infinite line that ends at the point (x1, y1), and crosses the point (x2, y2).\n        // The points at which this circle touches these two lines are called the start and end tangent points respectively.\n\n        // note that both vectors are unit vectors, so the length is 1\n        var cos = (unit_vec_p1_p0[0] * unit_vec_p1_p2[0] + unit_vec_p1_p0[1] * unit_vec_p1_p2[1]);\n        var theta = Math.acos(Math.abs(cos));\n\n        // Calculate origin\n        var unit_vec_p1_origin = normalize([\n            unit_vec_p1_p0[0] + unit_vec_p1_p2[0],\n            unit_vec_p1_p0[1] + unit_vec_p1_p2[1]\n        ]);\n        var len_p1_origin = radius / Math.sin(theta / 2);\n        var x = x1 + len_p1_origin * unit_vec_p1_origin[0];\n        var y = y1 + len_p1_origin * unit_vec_p1_origin[1];\n\n        // Calculate start angle and end angle\n        // rotate 90deg clockwise (note that y axis points to its down)\n        var unit_vec_origin_start_tangent = [\n            -unit_vec_p1_p0[1],\n            unit_vec_p1_p0[0]\n        ];\n        // rotate 90deg counter clockwise (note that y axis points to its down)\n        var unit_vec_origin_end_tangent = [\n            unit_vec_p1_p2[1],\n            -unit_vec_p1_p2[0]\n        ];\n        var getAngle = function (vector) {\n            // get angle (clockwise) between vector and (1, 0)\n            var x = vector[0];\n            var y = vector[1];\n            if (y >= 0) { // note that y axis points to its down\n                return Math.acos(x);\n            } else {\n                return -Math.acos(x);\n            }\n        };\n        var startAngle = getAngle(unit_vec_origin_start_tangent);\n        var endAngle = getAngle(unit_vec_origin_end_tangent);\n\n        // Connect the point (x0, y0) to the start tangent point by a straight line\n        this.lineTo(x + unit_vec_origin_start_tangent[0] * radius,\n                    y + unit_vec_origin_start_tangent[1] * radius);\n\n        // Connect the start tangent point to the end tangent point by arc\n        // and adding the end tangent point to the subpath.\n        this.arc(x, y, radius, startAngle, endAngle);\n    };\n\n    /**\n     * Sets the stroke property on the current element\n     */\n    ctx.prototype.stroke = function () {\n        if (this.__currentElement.nodeName === \"path\") {\n            this.__currentElement.setAttribute(\"paint-order\", \"fill stroke markers\");\n        }\n        this.__applyCurrentDefaultPath();\n        this.__applyStyleToCurrentElement(\"stroke\");\n    };\n\n    /**\n     * Sets fill properties on the current element\n     */\n    ctx.prototype.fill = function () {\n        if (this.__currentElement.nodeName === \"path\") {\n            this.__currentElement.setAttribute(\"paint-order\", \"stroke fill markers\");\n        }\n        this.__applyCurrentDefaultPath();\n        this.__applyStyleToCurrentElement(\"fill\");\n    };\n\n    /**\n     *  Adds a rectangle to the path.\n     */\n    ctx.prototype.rect = function (x, y, width, height) {\n        if (this.__currentElement.nodeName !== \"path\") {\n            this.beginPath();\n        }\n        this.moveTo(x, y);\n        this.lineTo(x+width, y);\n        this.lineTo(x+width, y+height);\n        this.lineTo(x, y+height);\n        this.lineTo(x, y);\n        this.closePath();\n    };\n\n\n    /**\n     * adds a rectangle element\n     */\n    ctx.prototype.fillRect = function (x, y, width, height) {\n\n        // See if rect instersects current viewbox\n        var r2 = {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n\n        if (this.viewbox) {\n            if (!intersectRect(this.viewbox, r2)) {\n                return;\n            }\n        }\n\n        var rect, parent;\n        rect = this.__createElement(\"rect\", r2, true);\n        parent = this.__closestGroupOrSvg();\n        parent.appendChild(rect);\n        this.__currentElement = rect;\n        this.__applyStyleToCurrentElement(\"fill\");\n    };\n\n    function intersectRect(rect1, rect2) {\n       return  (rect1.x < rect2.x + rect2.width &&\n           rect1.x + rect1.width > rect2.x &&\n           rect1.y < rect2.y + rect2.height &&\n           rect1.y + rect1.height > rect2.y);\n    }\n\n    /**\n     * Draws a rectangle with no fill\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     */\n    ctx.prototype.strokeRect = function (x, y, width, height) {\n        var rect, parent;\n        rect = this.__createElement(\"rect\", {\n            x : x,\n            y : y,\n            width : width,\n            height : height\n        }, true);\n        parent = this.__closestGroupOrSvg();\n        parent.appendChild(rect);\n        this.__currentElement = rect;\n        this.__applyStyleToCurrentElement(\"stroke\");\n    };\n\n\n    /**\n     * Clear entire canvas:\n     * 1. save current transforms\n     * 2. remove all the childNodes of the root g element\n     */\n    ctx.prototype.__clearCanvas = function () {\n        var current = this.__closestGroupOrSvg(),\n            transform = current.getAttribute(\"transform\");\n        var rootGroup = this.__root.childNodes[1];\n        var childNodes = rootGroup.childNodes;\n        for (var i = childNodes.length - 1; i >= 0; i--) {\n            if (childNodes[i]) {\n                rootGroup.removeChild(childNodes[i]);\n            }\n        }\n        this.__currentElement = rootGroup;\n        //reset __groupStack as all the child group nodes are all removed.\n        this.__groupStack = [];\n        if (transform) {\n            this.__addTransform(transform);\n        }\n    };\n\n    /**\n     * \"Clears\" a canvas by just drawing a white rectangle in the current group.\n     */\n    ctx.prototype.clearRect = function (x, y, width, height) {\n        //clear entire canvas\n        if (x === 0 && y === 0 && width === this.width && height === this.height) {\n            this.__clearCanvas();\n            return;\n        }\n        var rect, parent = this.__closestGroupOrSvg();\n        rect = this.__createElement(\"rect\", {\n            x : x,\n            y : y,\n            width : width,\n            height : height,\n            fill : \"#FFFFFF\"\n        }, true);\n        parent.appendChild(rect);\n    };\n\n    /**\n     * Adds a linear gradient to a defs tag.\n     * Returns a canvas gradient object that has a reference to it's parent def\n     */\n    ctx.prototype.createLinearGradient = function (x1, y1, x2, y2) {\n        var grad = this.__createElement(\"linearGradient\", {\n            id : randomString(this.__ids),\n            x1 : x1+\"px\",\n            x2 : x2+\"px\",\n            y1 : y1+\"px\",\n            y2 : y2+\"px\",\n            \"gradientUnits\" : \"userSpaceOnUse\"\n        }, false);\n        this.__defs.appendChild(grad);\n        return new CanvasGradient(grad, this);\n    };\n\n    /**\n     * Adds a radial gradient to a defs tag.\n     * Returns a canvas gradient object that has a reference to it's parent def\n     */\n    ctx.prototype.createRadialGradient = function (x0, y0, r0, x1, y1, r1) {\n        var grad = this.__createElement(\"radialGradient\", {\n            id : randomString(this.__ids),\n            cx : x1+\"px\",\n            cy : y1+\"px\",\n            r  : r1+\"px\",\n            fx : x0+\"px\",\n            fy : y0+\"px\",\n            \"gradientUnits\" : \"userSpaceOnUse\"\n        }, false);\n        this.__defs.appendChild(grad);\n        return new CanvasGradient(grad, this);\n\n    };\n\n    /**\n     * Parses the font string and returns svg mapping\n     * @private\n     */\n    ctx.prototype.__parseFont = function () {\n        var regex = /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-,\\'\\\"\\sa-z0-9]+?)\\s*$/i;\n        var fontPart = regex.exec( this.font );\n        var data = {\n            style : fontPart[1] || 'normal',\n            size : fontPart[4] || '10px',\n            family : fontPart[6] || 'sans-serif',\n            weight: fontPart[3] || 'normal',\n            decoration : fontPart[2] || 'normal',\n            href : null\n        };\n\n        //canvas doesn't support underline natively, but we can pass this attribute\n        if (this.__fontUnderline === \"underline\") {\n            data.decoration = \"underline\";\n        }\n\n        //canvas also doesn't support linking, but we can pass this as well\n        if (this.__fontHref) {\n            data.href = this.__fontHref;\n        }\n\n        return data;\n    };\n\n    /**\n     * Helper to link text fragments\n     * @param font\n     * @param element\n     * @return {*}\n     * @private\n     */\n    ctx.prototype.__wrapTextLink = function (font, element) {\n        if (font.href) {\n            var a = this.__createElement(\"a\");\n            a.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", font.href);\n            a.appendChild(element);\n            return a;\n        }\n        return element;\n    };\n\n    /**\n     * Fills or strokes text\n     * @param text\n     * @param x\n     * @param y\n     * @param action - stroke or fill\n     * @private\n     */\n    ctx.prototype.__applyText = function (text, x, y, action) {\n        var font = this.__parseFont(),\n            parent = this.__closestGroupOrSvg(),\n            textElement = this.__createElement(\"text\", {\n                \"font-family\" : font.family,\n                \"font-size\" : font.size,\n                \"font-style\" : font.style,\n                \"font-weight\" : font.weight,\n                \"text-decoration\" : font.decoration,\n                \"x\" : x,\n                \"y\" : y,\n                \"text-anchor\": getTextAnchor(this.textAlign),\n                \"dominant-baseline\": getDominantBaseline(this.textBaseline)\n            }, true);\n\n        textElement.appendChild(this.__document.createTextNode(text));\n        this.__currentElement = textElement;\n        this.__applyStyleToCurrentElement(action);\n        parent.appendChild(this.__wrapTextLink(font,textElement));\n    };\n\n    /**\n     * Creates a text element\n     * @param text\n     * @param x\n     * @param y\n     */\n    ctx.prototype.fillText = function (text, x, y) {\n        this.__applyText(text, x, y, \"fill\");\n    };\n\n    /**\n     * Strokes text\n     * @param text\n     * @param x\n     * @param y\n     */\n    ctx.prototype.strokeText = function (text, x, y) {\n        this.__applyText(text, x, y, \"stroke\");\n    };\n\n    /**\n     * No need to implement this for svg.\n     * @param text\n     * @return {TextMetrics}\n     */\n    ctx.prototype.measureText = function (text) {\n        this.__ctx.font = this.font;\n        return this.__ctx.measureText(text);\n    };\n\n    /**\n     *  Arc command!\n     */\n    ctx.prototype.arc = function (x, y, radius, startAngle, endAngle, counterClockwise) {\n        // in canvas no circle is drawn if no angle is provided.\n        if (startAngle === endAngle) {\n            return;\n        }\n        startAngle = startAngle % (2*Math.PI);\n        endAngle = endAngle % (2*Math.PI);\n        if (startAngle === endAngle) {\n            //circle time! subtract some of the angle so svg is happy (svg elliptical arc can't draw a full circle)\n            endAngle = ((endAngle + (2*Math.PI)) - 0.001 * (counterClockwise ? -1 : 1)) % (2*Math.PI);\n        }\n        var endX = x+radius*Math.cos(endAngle),\n            endY = y+radius*Math.sin(endAngle),\n            startX = x+radius*Math.cos(startAngle),\n            startY = y+radius*Math.sin(startAngle),\n            sweepFlag = counterClockwise ? 0 : 1,\n            largeArcFlag = 0,\n            diff = endAngle - startAngle;\n\n        // https://github.com/gliffy/canvas2svg/issues/4\n        if (diff < 0) {\n            diff += 2*Math.PI;\n        }\n\n        if (counterClockwise) {\n            largeArcFlag = diff > Math.PI ? 0 : 1;\n        } else {\n            largeArcFlag = diff > Math.PI ? 1 : 0;\n        }\n\n        this.lineTo(startX, startY);\n        this.__addPathCommand(format(\"A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}\",\n            {rx:radius, ry:radius, xAxisRotation:0, largeArcFlag:largeArcFlag, sweepFlag:sweepFlag, endX:endX, endY:endY}));\n\n        this.__currentPosition = {x: endX, y: endY};\n    };\n\n    /**\n     * Generates a ClipPath from the clip command.\n     */\n    ctx.prototype.clip = function () {\n        var group = this.__closestGroupOrSvg(),\n            clipPath = this.__createElement(\"clipPath\"),\n            id =  randomString(this.__ids),\n            newGroup = this.__createElement(\"g\");\n\n        this.__applyCurrentDefaultPath();\n        group.removeChild(this.__currentElement);\n        clipPath.setAttribute(\"id\", id);\n        clipPath.appendChild(this.__currentElement);\n\n        this.__defs.appendChild(clipPath);\n\n        //set the clip path to this group\n        group.setAttribute(\"clip-path\", format(\"url(#{id})\", {id:id}));\n\n        //clip paths can be scaled and transformed, we need to add another wrapper group to avoid later transformations\n        // to this path\n        group.appendChild(newGroup);\n\n        this.__currentElement = newGroup;\n\n    };\n\n    /**\n     * Draws a canvas, image or mock context to this canvas.\n     * Note that all svg dom manipulation uses node.childNodes rather than node.children for IE support.\n     * http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-drawimage\n     */\n    ctx.prototype.drawImage = function () {\n        //convert arguments to a real array\n        var args = Array.prototype.slice.call(arguments),\n            image=args[0],\n            dx, dy, dw, dh, sx=0, sy=0, sw, sh, parent, svg, defs, group,\n            currentElement, svgImage, canvas, context, id;\n\n        if (args.length === 3) {\n            dx = args[1];\n            dy = args[2];\n            sw = image.width;\n            sh = image.height;\n            dw = sw;\n            dh = sh;\n        } else if (args.length === 5) {\n            dx = args[1];\n            dy = args[2];\n            dw = args[3];\n            dh = args[4];\n            sw = image.width;\n            sh = image.height;\n        } else if (args.length === 9) {\n            sx = args[1];\n            sy = args[2];\n            sw = args[3];\n            sh = args[4];\n            dx = args[5];\n            dy = args[6];\n            dw = args[7];\n            dh = args[8];\n        } else {\n            throw new Error(\"Invalid number of arguments passed to drawImage: \" + arguments.length);\n        }\n\n        parent = this.__closestGroupOrSvg();\n        currentElement = this.__currentElement;\n        var translateDirective = \"translate(\" + dx + \", \" + dy + \")\";\n        if (image instanceof ctx) {\n            //canvas2svg mock canvas context. In the future we may want to clone nodes instead.\n            //also I'm currently ignoring dw, dh, sw, sh, sx, sy for a mock context.\n            svg = image.getSvg().cloneNode(true);\n            if (svg.childNodes && svg.childNodes.length > 1) {\n                defs = svg.childNodes[0];\n                while(defs.childNodes.length) {\n                    id = defs.childNodes[0].getAttribute(\"id\");\n                    this.__ids[id] = id;\n                    this.__defs.appendChild(defs.childNodes[0]);\n                }\n                group = svg.childNodes[1];\n                if (group) {\n                    //save original transform\n                    var originTransform = group.getAttribute(\"transform\");\n                    var transformDirective;\n                    if (originTransform) {\n                        transformDirective = originTransform+\" \"+translateDirective;\n                    } else {\n                        transformDirective = translateDirective;\n                    }\n                    group.setAttribute(\"transform\", transformDirective);\n                    parent.appendChild(group);\n                }\n            }\n        } else if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\n            //canvas or image\n            svgImage = this.__createElement(\"image\");\n            svgImage.setAttribute(\"width\", dw);\n            svgImage.setAttribute(\"height\", dh);\n            svgImage.setAttribute(\"preserveAspectRatio\", \"none\");\n\n            if (sx || sy || sw !== image.width || sh !== image.height) {\n                //crop the image using a temporary canvas\n                canvas = this.__document.createElement(\"canvas\");\n                canvas.width = dw;\n                canvas.height = dh;\n                context = canvas.getContext(\"2d\");\n                context.drawImage(image, sx, sy, sw, sh, 0, 0, dw, dh);\n                image = canvas;\n            }\n            svgImage.setAttribute(\"transform\", translateDirective);\n            svgImage.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\",\n                image.nodeName === \"CANVAS\" ? image.toDataURL() : image.getAttribute(\"src\"));\n            parent.appendChild(svgImage);\n        }\n    };\n\n    /**\n     * Generates a pattern tag\n     */\n    ctx.prototype.createPattern = function (image, repetition) {\n\n        let pattern = this.__document.__createElement(\"pattern\");\n        let id = randomString(this.__ids);\n        let img;\n\n        pattern.setAttribute(\"id\", id);\n        pattern.setAttribute(\"width\", image.width);\n        pattern.setAttribute(\"height\", image.height);\n        if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\n            img = this.__createElement(\"image\");\n            img.setAttribute(\"width\", image.width);\n            img.setAttribute(\"height\", image.height);\n            img.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\",\n                image.nodeName === \"CANVAS\" ? image.toDataURL() : image.getAttribute(\"src\"));\n            pattern.appendChild(img);\n            this.__defs.appendChild(pattern);\n        } else if (image instanceof ctx) {\n            pattern.appendChild(image.__root.childNodes[1]);\n            this.__defs.appendChild(pattern);\n        }\n        return new CanvasPattern(pattern, this);\n    };\n\n    ctx.prototype.setLineDash = function (dashArray) {\n        if (dashArray && dashArray.length > 0) {\n            this.lineDash = dashArray.join(\",\");\n        } else {\n            this.lineDash = null;\n        }\n    };\n\n    /**\n     * Not yet implemented\n     */\n    ctx.prototype.drawFocusRing = function () {};\n    ctx.prototype.createImageData = function () {};\n    ctx.prototype.getImageData = function () {};\n    ctx.prototype.putImageData = function () {};\n    ctx.prototype.globalCompositeOperation = function () {};\n    ctx.prototype.setTransform = function () {};\n\n    //add options for alternative namespace\n    // MODIFIED by JTR for igv packaing\n    C2S = ctx;\n\n}());\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2018 Regents of the University of California and Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n\n    igv.cBioUtils = {\n\n\n        fetchStudies: function (baseURL) {\n\n            baseURL = baseURL || \"http://www.cbioportal.org/api\";\n\n            let url = baseURL + \"/studies?projection=DETAILED&pageSize=10000000&pageNumber=0&direction=ASC\";\n            return igv.xhr.loadJson(url);\n        },\n\n        fetchSamplesByStudy: function (study, baseURL) {\n\n            baseURL = baseURL || \"http://www.cbioportal.org/api\"\n\n            let url = baseURL + \"/studies/\" + study.studyId + \"/samples\";\n\n            return igv.xhr.loadJson(url)\n\n                .then(function (samples) {\n\n                    let sampleStudyList = {\n                        studyId: study.studyId,\n                        study: study,\n                        sampleIDs: []\n                    }\n\n                    for (let sampleJson of samples) {\n\n                        sampleStudyList.sampleIDs.push(sampleJson[\"sampleId\"]);\n                    }\n\n                    return sampleStudyList;\n                })\n        },\n\n        fetchCopyNumberByStudy: function (study, baseURL) {\n\n            baseURL = baseURL || \"http://www.cbioportal.org/api\";\n\n            this.fetchSamplesByStudy(study)\n\n                .then(function (sampleStudyList) {\n\n                    let url = baseURL + \"/copy-number-segments/fetch?projection=SUMMARY\";\n                    let body = JSON.stringify(sampleStudyList);\n\n                    return igv.xhr.loadJson(url, {method: \"POST\", sendData: body})\n\n                })\n        },\n\n        initMenu: function (baseURL) {\n\n            baseURL = baseURL || \"http://www.cbioportal.org/api\";\n\n            const self = this;\n\n            return this.fetchStudies(baseURL)\n\n                .then(function (studies) {\n\n                    const samplePromises = [];\n\n                    for (let study of studies) {\n\n                        let sampleCount = study[\"cnaSampleCount\"];\n                        if (sampleCount > 0) {\n                            samplePromises.push(self.fetchSamplesByStudy(study.studyId, baseURL));\n                        }\n                    }\n\n                    return Promise.all(samplePromises);\n                })\n\n                .then(function (sampleStudyListArray) {\n\n                    const trackJson = [];\n\n                    for (let sampleStudyList of sampleStudyListArray) {\n\n                        const study = sampleStudyList.study;\n                        const sampleCount = sampleStudyList.sampleIDs.length;\n\n                        if (sampleCount > 0) {\n\n                            const name = study[\"shortName\"] + \" (\" + sampleCount + \")\";\n                            const body = JSON.stringify(sampleStudyList);\n\n                            trackJson.push({\n                                \"name\": name,\n                                \"type\": \"seg\",\n                                \"displayMode\": \"EXPANDED\",\n                                \"sourceType\": \"custom\",\n                                \"source\": {\n                                    \"url\": baseURL + \"/copy-number-segments/fetch?projection=SUMMARY\",\n                                    \"method\": \"POST\",\n                                    \"contentType\": \"application/json\",\n                                    \"body\": body,\n                                    \"queryable\": false,\n                                    \"isLog\": true,\n                                    \"mappings\": {\n                                        \"chr\": \"chromosome\",\n                                        \"value\": \"segmentMean\",\n                                        \"sampleKey\": \"uniqueSampleKey\",\n                                        \"sample\": \"sampleId\"\n                                    }\n                                }\n                            });\n                        }\n                    }\n\n                    return trackJson;\n                })\n        }\n    }\n\n\n// Example json\n\n// Copy number\n// {\n//     \"uniqueSampleKey\": \"VENHQS1PUi1BNUoyLTAxOmFjY190Y2dh\",\n//     \"uniquePatientKey\": \"VENHQS1PUi1BNUoyOmFjY190Y2dh\",\n//     \"patientId\": \"TCGA-OR-A5J2\",\n//     \"start\": 3218610,\n//     \"end\": 4749076,\n//     \"segmentMean\": -0.2239,\n//     \"studyId\": \"acc_tcga\",\n//     \"sampleId\": \"TCGA-OR-A5J2-01\",\n//     \"chromosome\": \"1\",\n//     \"numberOfProbes\": 958\n// }\n\n\n    return igv;\n\n})\n(igv || {});\n\nvar igv = (function (igv) {\n\n\n        igv.CivicReader = function (config) {\n            this.config = config;\n        }\n\n        igv.CivicReader.prototype.readFeatures = function (chr, start, end) {\n\n\n            const self = this;\n\n            return igv.xhr.loadJson(this.config.url + \"/variants/?count=5000\")\n\n                .then(function (json) {\n\n                    const records = json.records;\n                    const features = [];\n\n                    for (let record of records) {\n\n                        if (record.coordinates) {\n\n                            const id = record.id;\n                            const coordinates = record.coordinates;\n\n                            if (coordinates.chromosome) {\n                                features.push(\n                                    new CivicVariant(\n                                        coordinates.chromosome,\n                                        coordinates.start - 1,     // UCSC 0 convention\n                                        coordinates.stop,\n                                        record\n                                    ));\n                            }\n\n                            if (coordinates.chromosome2) {\n                                features.push(\n                                    new CivicVariant(\n                                        coordinates.chromosome2,\n                                        coordinates.start2 - 1,     // UCSC 0 convention\n                                        coordinates.stop2,\n                                        record\n                                    ));\n                            }\n                        }\n\n                    }\n                    return features;\n                });\n        }\n\n\n        function CivicVariant(chr, start, end, record) {\n            this.chr = chr;\n            this.start = start;\n            this.end = end;\n            this.id = record.id;\n            this.entrezName = record.entrez_name;\n            this.name = record.name;\n            this.actionabilityScore = record.civic_actionability_score;\n\n            if (record.coordinates.reference_bases) {\n                this.refBases = record.coordinates.reference_bases;\n            }\n            if (record.coordinates.variant_bases) {\n                this.altBases = record.coordinates.variant_bases\n            }\n            if (record.variant_types) {\n                this.variant_types = record.variant_types;\n            }\n\n            this.locationString = (this.chr + \":\" +\n                igv.numberFormatter(this.start + 1) + \"-\" +\n                igv.numberFormatter(this.end));\n\n            // Color based on actionability score\n            if (this.actionabilityScore !== undefined) {\n                let alpha;\n                if (this.actionabilityScore <= 10) {\n                    alpha = 0.2;\n                }\n                else {\n                    const v = Math.min(30, this.actionabilityScore);\n                    alpha = 0.2 + 0.8 * Math.log10((v - 10) / 2);\n                }\n                this.alpha = alpha;\n            }\n\n\n        }\n\n        CivicVariant.prototype.popupData = function () {\n\n\n            const link = createLink(\"CIViC\", \"https://civicdb.org/links/variants/\" + this.id);\n\n            let cravatLink;\n            const isSnp =\n                this.refBases !== this.altBases &&\n                this.refBases && this.refBases.length === 1 &&\n                this.altBases && this.altBases.length === 1;\n\n\n            const pd = [link];\n            pd.push({name: \"Entrez\", value: createLink(this.entrezName, \"https://ghr.nlm.nih.gov/gene/\" + this.entrezName)});\n            pd.push({name: \"Name\", value: this.name});\n\n            if (this.variant_types && this.variant_types.length > 0) {\n\n                const name = this.variant_types.length === 1 ? \"Type\" : \"Types\";\n                let typeString;\n                for (let vt of this.variant_types) {\n                    if (!typeString) typeString = vt.display_name;\n                    else typeString += \", \" + vt.display_name;\n                }\n                ;\n                pd.push({name: name, value: typeString});\n            }\n\n            pd.push({name: \"Actionability\", value: this.actionabilityScore});\n\n\n            pd.push({name: \"Location\", value: this.locationString});\n\n            return pd;\n\n\n            function createLink(text, href) {\n                return \"<a target='_blank' \" + \"href='\" + href + \"'>\" + text + \"</a>\"\n            }\n\n        }\n\n        return igv;\n\n\n    }\n)(igv || {});\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2018 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n\n    const READ_STRAND_FLAG = 0x10;\n    const MATE_STRAND_FLAG = 0x20;\n\n    const CRAM_MATE_STRAND_FLAG = 0x1;\n    const CRAM_MATE_MAPPED_FLAG = 0x2;\n\n    /**\n     * Class for reading a bam file\n     *\n     * @param config\n     * @constructor\n     */\n    igv.CramReader = function (config, genome, browser) {\n\n        const self = this;\n\n        this.config = config;\n        this.browser = browser;\n        this.genome = genome;\n\n        this.cramFile = new gmodCRAM.CramFile({\n            filehandle: new FileHandler(config.url),\n            seqFetch: config.seqFetch || seqFetch.bind(this),\n            checkSequenceMD5: config.checkSequenceMD5 !== undefined ? config.checkSequenceMD5 : true\n        })\n\n        const indexFileHandle = new FileHandler(config.indexURL)\n        this.indexedCramFile = new gmodCRAM.IndexedCramFile({\n            cram: this.cramFile,\n            index: new gmodCRAM.CraiIndex({\n                filehandle: indexFileHandle\n            }),\n            fetchSizeLimit: 30000000\n        });\n\n        igv.BamUtils.setReaderDefaults(this, config);\n\n    }\n\n\n    function seqFetch(seqID, start, end) {\n\n        const sequence = this.genome.sequence;\n        const genome = this.genome;\n\n        return this.getHeader()\n            .then(function (header) {\n                const chrName = genome.getChromosomeName(header.chrNames[seqID])\n                return sequence.getSequence(chrName, start - 1, end);\n            });\n    }\n\n\n    /**\n     * Parse the sequence dictionary from the SAM header and build chr name tables.  This function\n     * is public so it can be unit tested.\n     *\n     * @returns {PromiseLike<chrName, chrToIndex, chrAliasTable}>}\n     */\n\n    igv.CramReader.prototype.getHeader = function () {\n\n        if (this.header) {\n            return Promise.resolve(this.header);\n        }\n\n        else {\n            const self = this;\n            const genome = this.genome;\n\n            return this.cramFile.getSamHeader()\n\n                .then(function (samHeader) {\n\n                    const chrToIndex = {};\n                    const chrNames = [];\n                    const chrAliasTable = {};\n                    const readGroups = [];\n\n                    for (let line of samHeader) {\n\n                        if ('SQ' === line.tag) {\n                            for(let d of line.data) {\n                                if(d.tag === \"SN\") {\n                                    const seq = d.value;\n                                    chrToIndex[seq] = chrNames.length;\n                                    chrNames.push(seq);\n                                    if (genome) {\n                                        const alias = genome.getChromosomeName(seq);\n                                        chrAliasTable[alias] = seq;\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                        else if ('RG' === line.tag) {\n                            readGroups.push(line.data);\n                        }\n                    }\n\n                    self.header = {\n                        chrNames: chrNames,\n                        chrToIndex: chrToIndex,\n                        chrAliasTable: chrAliasTable,\n                        readGroups: readGroups\n                    }\n\n                    return self.header;\n                });\n        }\n    }\n\n\n    igv.CramReader.prototype.readAlignments = function (chr, bpStart, bpEnd) {\n\n        var self = this;\n        const browser = this.browser\n\n        return this.getHeader()\n\n            .then(function (header) {\n\n                const queryChr = header.chrAliasTable.hasOwnProperty(chr) ? header.chrAliasTable[chr] : chr;\n                const chrIdx = header.chrToIndex[queryChr];\n                const alignmentContainer = new igv.AlignmentContainer(chr, bpStart, bpEnd, self.samplingWindowSize, self.samplingDepth, self.pairsSupported);\n\n                if (chrIdx === undefined) {\n                    return Promise.resolve(alignmentContainer);\n\n                } else {\n                    return self.indexedCramFile.getRecordsForRange(chrIdx, bpStart, bpEnd)\n\n                        .then(function (records) {\n\n                            for (let record of records) {\n\n                                const refID = record.sequenceId;\n                                const pos = record.alignmentStart;\n                                const alignmentEnd = pos + record.lengthOnRef;\n\n                                if (refID < 0) {\n                                    continue;   // unmapped read\n                                }\n                                else if (refID > chrIdx || pos > bpEnd) {\n                                    return;    // off right edge, we're done\n                                }\n                                else if (refID < chrIdx) {\n                                    continue;   // Sequence to left of start, not sure this is possible\n                                }\n                                if (alignmentEnd < bpStart) {\n                                    continue;\n                                }  // Record out-of-range \"to the left\", skip to next one\n\n                                const alignment = decodeCramRecord(record, header.chrNames);\n\n                                //  if (filter.pass(alignment)) {\n                                alignmentContainer.push(alignment);\n                                //  }\n                            }\n\n                            alignmentContainer.finish();\n                            return alignmentContainer;\n                        })\n                        .catch(function (error) {\n                            let message = error.message;\n                            if (message && message.indexOf(\"MD5\") >= 0) {\n                                \"Sequence mismatch. Is this the correct genome for the loaded CRAM?\"\n                            }\n                            browser.presentAlert(message)\n                            throw error\n                        })\n                }\n\n                function decodeCramRecord(record, chrNames) {\n\n                    const alignment = new igv.BamAlignment();\n\n                    alignment.chr = chrNames[record.sequenceId];\n                    alignment.start = record.alignmentStart - 1;\n                    alignment.lengthOnRef = record.lengthOnRef;\n                    alignment.flags = record.flags;\n                    alignment.strand = !(record.flags & READ_STRAND_FLAG);\n                    alignment.fragmentLength = record.templateLength || record.templateSize;\n                    alignment.mq = record.mappingQuality;\n                    alignment.end = record.alignmentStart + record.lengthOnRef;\n                    alignment.readGroupId = record.readGroupId;\n\n                    if (record.mate && record.mate.sequenceId !== undefined) {\n                        const strand = record.mate.flags !== undefined ?\n                            !(record.mate.flags & CRAM_MATE_STRAND_FLAG) :\n                            !(record.flags & MATE_STRAND_FLAG);\n\n                        alignment.mate = {\n                            chr: chrNames[record.mate.sequenceId],\n                            position: record.mate.alignmentStart,\n                            strand: strand\n                        };\n                    }\n\n                    alignment.seq = record.getReadBases();\n                    alignment.qual = record.qualityScores;\n                    alignment.tagDict = record.tags;\n                    alignment.readName = record.readName;\n\n                    // TODO -- cigar encoded in tag?\n                    // igv.BamUtils.bam_tag2cigar(ba, blockEnd, p, lseq, alignment, cigarArray);\n\n                    makeBlocks(record, alignment);\n\n                    if (alignment.mate && alignment.start > alignment.mate.position && alignment.fragmentLength > 0) {\n                        alignment.fragmentLength = -alignment.fragmentLength\n                    }\n\n                    igv.BamUtils.setPairOrientation(alignment);\n\n                    return alignment;\n\n                }\n\n                function makeBlocks(cramRecord, alignment) {\n\n                    const blocks = [];\n                    let insertions;\n                    let gapType;\n                    let basesUsed = 0;\n                    let cigarString = '';\n\n                    alignment.scStart = alignment.start;\n                    alignment.scLengthOnRef = alignment.lengthOnRef;\n\n                    if (cramRecord.readFeatures) {\n\n                        for (let feature of cramRecord.readFeatures) {\n\n                            const code = feature.code;\n                            const data = feature.data;\n                            const readPos = feature.pos - 1;\n                            const refPos = feature.refPos - 1;\n\n                            if (alignment.readName === 'SRR062635.16695874') {\n                                console.log(\"\");\n                            }\n\n                            switch (code) {\n                                case 'S' :\n                                case 'I':\n                                case 'i':\n                                case 'N':\n                                case 'D':\n                                    if (readPos > basesUsed) {\n                                        const len = readPos - basesUsed;\n                                        blocks.push(new igv.AlignmentBlock({\n                                            start: refPos - len,\n                                            seqOffset: basesUsed,\n                                            len: len,\n                                            type: 'M',\n                                            gapType: gapType\n                                        }));\n                                        basesUsed += len;\n\n                                        cigarString += len + 'M';\n                                    }\n\n\n                                    if ('S' === code) {\n                                        let scPos = refPos;\n\n                                        alignment.scLengthOnRef += data.length;\n                                        if (readPos === 0) {\n                                            alignment.scStart -= data.length;\n                                            scPos -= data.length;\n                                        }\n\n                                        const len = data.length;\n                                        blocks.push(new igv.AlignmentBlock({\n                                            start: scPos,\n                                            seqOffset: basesUsed,\n                                            len: len,\n                                            type: 'S'\n                                        }));\n                                        basesUsed += len;\n                                        gapType = 'S';\n                                        cigarString += len + code;\n                                    }\n                                    else if ('I' === code || 'i' === code) {\n                                        if (insertions === undefined) {\n                                            insertions = [];\n                                        }\n                                        const len = 'i' === code ? 1 : data.length;\n                                        insertions.push(new igv.AlignmentBlock({\n                                            start: refPos - 1,\n                                            len: len,\n                                            seqOffset: basesUsed,\n                                            type: 'I'\n                                        }));\n                                        basesUsed += len;\n                                        gapType = 'I';\n                                        cigarString += len + code;\n                                    } else if ('D' === code || 'N' === code) {\n                                        gapType = code;\n                                        cigarString += data + code;\n                                    }\n                                    break;\n\n                                case 'H':\n                                case 'P':\n                                    cigarString += data + code;\n\n                                default :\n                                //  Ignore\n                            }\n                        }\n                    }\n\n                    // Last block\n                    const len = cramRecord.readLength - basesUsed;\n                    if (len > 0) {\n                        blocks.push(new igv.AlignmentBlock({\n                            start: cramRecord.alignmentStart + cramRecord.lengthOnRef - len - 1,\n                            seqOffset: basesUsed,\n                            len: len,\n                            type: 'M',\n                            gapType: gapType\n                        }));\n\n                        cigarString += len + 'M';\n                    }\n\n                    alignment.blocks = blocks;\n                    alignment.insertions = insertions;\n                    alignment.cigar = cigarString;\n\n                }\n\n            });\n    }\n\n    class FileHandler {\n\n        constructor(source) {\n            this.position = 0\n            this.url = source\n            this.cache = new BufferCache({\n                fetch: (start, length) => this._fetch(start, length),\n            })\n        }\n\n        async _fetch(position, length) {\n\n            const loadRange = {start: position, size: length};\n            this._stat = {size: undefined}\n            return igv.xhr.loadArrayBuffer(this.url, igv.buildOptions({}, {range: loadRange}))\n                .then(function (arrayBuffer) {\n                    const nodeBuffer = Buffer.from(arrayBuffer)\n                    return nodeBuffer\n                })\n        }\n\n        async read(buffer, offset = 0, length = Infinity, position = 0) {\n            let readPosition = position\n            if (readPosition === null) {\n                readPosition = this.position\n                this.position += length\n            }\n            return this.cache.get(buffer, offset, length, position)\n        }\n\n        async readFile() {\n            const arrayBuffer = await igv.xhr.loadArrayBuffer(this.url, igv.buildOptions({}))\n            return Buffer.from(arrayBuffer)\n        }\n\n        async stat() {\n            if (!this._stat) {\n                const buf = Buffer.allocUnsafe(10)\n                await this.read(buf, 0, 10, 0)\n                if (!this._stat)\n                    throw new Error(`unable to determine size of file at ${this.url}`)\n            }\n            return this._stat\n        }\n    }\n\n    class BufferCache {\n\n        constructor({fetch, size = 10000000, chunkSize = 32768}) {\n\n            this.fetch = fetch\n            this.chunkSize = chunkSize\n            this.lruCache = new QuickLRU({maxSize: Math.floor(size / chunkSize)})\n        }\n\n        async get(outputBuffer, offset, length, position) {\n            if (outputBuffer.length < offset + length)\n                throw new Error('output buffer not big enough for request')\n\n            // calculate the list of chunks involved in this fetch\n            const firstChunk = Math.floor(position / this.chunkSize)\n            const lastChunk = Math.floor((position + length) / this.chunkSize)\n\n            // fetch them all as necessary\n            const fetches = new Array(lastChunk - firstChunk + 1)\n            for (let chunk = firstChunk; chunk <= lastChunk; chunk += 1) {\n                fetches[chunk - firstChunk] = this._getChunk(chunk).then(data => ({\n                    data,\n                    chunkNumber: chunk,\n                }))\n            }\n\n            // stitch together the response buffer using them\n            const chunks = await Promise.all(fetches)\n            const chunksOffset = position - chunks[0].chunkNumber * this.chunkSize\n            chunks.forEach(({data, chunkNumber}) => {\n                const chunkPositionStart = chunkNumber * this.chunkSize\n                let copyStart = 0\n                let copyEnd = this.chunkSize\n                let copyOffset =\n                    offset + (chunkNumber - firstChunk) * this.chunkSize - chunksOffset\n\n                if (chunkNumber === firstChunk) {\n                    copyOffset = offset\n                    copyStart = chunksOffset\n                }\n                if (chunkNumber === lastChunk) {\n                    copyEnd = position + length - chunkPositionStart\n                }\n\n                data.copy(outputBuffer, copyOffset, copyStart, copyEnd)\n            })\n        }\n\n        _getChunk(chunkNumber) {\n            const cachedPromise = this.lruCache.get(chunkNumber)\n            if (cachedPromise) return cachedPromise\n\n            const freshPromise = this.fetch(\n                chunkNumber * this.chunkSize,\n                this.chunkSize,\n            )\n            this.lruCache.set(chunkNumber, freshPromise)\n            return freshPromise\n        }\n    }\n\n\n// From https://github.com/sindresorhus/quick-lru\n// MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n    'use strict';\n\n    class QuickLRU {\n        constructor(options = {}) {\n            if (!(options.maxSize && options.maxSize > 0)) {\n                throw new TypeError('`maxSize` must be a number greater than 0');\n            }\n\n            this.maxSize = options.maxSize;\n            this.cache = new Map();\n            this.oldCache = new Map();\n            this._size = 0;\n        }\n\n        _set(key, value) {\n            this.cache.set(key, value);\n            this._size++;\n\n            if (this._size >= this.maxSize) {\n                this._size = 0;\n                this.oldCache = this.cache;\n                this.cache = new Map();\n            }\n        }\n\n        get(key) {\n            if (this.cache.has(key)) {\n                return this.cache.get(key);\n            }\n\n            if (this.oldCache.has(key)) {\n                const value = this.oldCache.get(key);\n                this._set(key, value);\n                return value;\n            }\n        }\n\n        set(key, value) {\n            if (this.cache.has(key)) {\n                this.cache.set(key, value);\n            } else {\n                this._set(key, value);\n            }\n\n            return this;\n        }\n\n        has(key) {\n            return this.cache.has(key) || this.oldCache.has(key);\n        }\n\n        peek(key) {\n            if (this.cache.has(key)) {\n                return this.cache.get(key);\n            }\n\n            if (this.oldCache.has(key)) {\n                return this.oldCache.get(key);\n            }\n        }\n\n        delete(key) {\n            const deleted = this.cache.delete(key);\n            if (deleted) {\n                this._size--;\n            }\n\n            return this.oldCache.delete(key) || deleted;\n        }\n\n        clear() {\n            this.cache.clear();\n            this.oldCache.clear();\n            this._size = 0;\n        }\n\n        * keys() {\n            for (const [key] of this) {\n                yield key;\n            }\n        }\n\n        * values() {\n            for (const [, value] of this) {\n                yield value;\n            }\n        }\n\n        * [Symbol.iterator]() {\n            for (const item of this.cache) {\n                yield item;\n            }\n\n            for (const item of this.oldCache) {\n                const [key] = item;\n                if (!this.cache.has(key)) {\n                    yield item;\n                }\n            }\n        }\n\n        get size() {\n            let oldCacheSize = 0;\n            for (const key of this.oldCache.keys()) {\n                if (!this.cache.has(key)) {\n                    oldCacheSize++;\n                }\n            }\n\n            return this._size + oldCacheSize;\n        }\n    }\n\n    return igv;\n})\n(igv || {});\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n// Indexed fasta files\n\nvar igv = (function (igv) {\n\n    var reservedProperties = new Set(['fastaURL', 'indexURL', 'cytobandURL', 'indexed']);\n\n    igv.FastaSequence = function (reference) {\n\n        if (typeof reference.fastaURL === 'string' && reference.fastaURL.startsWith('data:')) {\n            this.file = decodeDataUri(reference.fastaURL);\n            this.indexed = false;  // dataURI is by definition not indexed\n            this.isDataURI = true;\n        } else {\n            this.file = reference.fastaURL;\n            this.indexed = reference.indexed !== false;   // Indexed unless it explicitly is not\n            if (this.indexed) {\n                this.indexFile = reference.indexURL || reference.indexFile || this.file + \".fai\";\n            }\n        }\n        this.withCredentials = reference.withCredentials;\n        this.chromosomeNames = [];\n        this.chromosomes = {};\n        this.sequences = {};\n        this.offsets = {};\n        this.config = buildConfig(reference);\n\n    };\n\n    // Build a track-like config object from the referenceObject\n    function buildConfig(reference) {\n        var key, config = {};\n        for (key in reference) {\n            if (reference.hasOwnProperty(key) && !reservedProperties.has(key)) {\n                config[key] = reference[key];\n            }\n        }\n        return config;\n    }\n\n    igv.FastaSequence.prototype.init = function () {\n\n        var self = this;\n\n        if (self.indexed) {\n\n            return self.getIndex()\n\n        }\n        else {\n            return self.loadAll();\n        }\n\n    }\n\n    igv.FastaSequence.prototype.getSequence = function (chr, start, end) {\n        if (this.indexed) {\n            return getSequenceIndexed.call(this, chr, start, end);\n        }\n        else {\n            return getSequenceNonIndexed.call(this, chr, start, end)\n        }\n    }\n\n    function getSequenceIndexed(chr, start, end) {\n\n        var self = this;\n\n        var interval = self.interval;\n\n        if (interval && interval.contains(chr, start, end)) {\n            return Promise.resolve(getSequenceFromInterval(interval, start, end));\n        }\n        else {\n            // Expand query, to minimum of 50kb\n            var qstart = start;\n            var qend = end;\n            if ((end - start) < 50000) {\n                var w = (end - start);\n                var center = Math.round(start + w / 2);\n                qstart = Math.max(0, center - 25000);\n                qend = center + 25000;\n            }\n\n            return self.readSequence(chr, qstart, qend)\n\n                .then(function (seqBytes) {\n                    self.interval = new igv.GenomicInterval(chr, qstart, qend, seqBytes);\n                    return getSequenceFromInterval(self.interval, start, end);\n                })\n        }\n\n        function getSequenceFromInterval(interval, start, end) {\n            var offset = start - interval.start;\n            var n = end - start;\n            var seq = interval.features ? interval.features.substr(offset, n) : null;\n            return seq;\n        }\n\n    }\n\n\n    function getSequenceNonIndexed(chr, start, end) {\n\n        var self = this;\n\n        if (this.offsets[chr]) {\n            start -= this.offsets[chr];\n            end -= this.offsets[chr];\n        }\n        let prefix = \"\";\n        if (start < 0) {\n            for (let i = start; i < Math.min(end, 0); i++) {\n                prefix += \"*\";\n            }\n        }\n\n        if (end <= 0) {\n            return Promise.resolve(prefix);\n        }\n\n        var seq = self.sequences[chr];\n        const seqEnd = Math.min(end, seq.length)\n        return Promise.resolve(prefix + seq.substring(start, end));\n    }\n\n    igv.FastaSequence.prototype.getIndex = function () {\n\n        if (this.index) {\n            return Promise.resolve(this.index);\n        } else {\n            const self = this;\n            return igv.xhr.load(self.indexFile, igv.buildOptions(self.config))\n\n                .then(function (data) {\n\n                    const lines = igv.splitLines(data);\n                    const len = lines.length;\n                    let lineNo = 0;\n                    let order = 0;\n                    self.index = {};\n\n                    while (lineNo < len) {\n                        var tokens = lines[lineNo++].split(\"\\t\");\n                        var nTokens = tokens.length;\n\n                        if (nTokens == 5) {\n                            // Parse the index line.\n                            var chr = tokens[0];\n                            var size = parseInt(tokens[1]);\n                            var position = parseInt(tokens[2]);\n                            var basesPerLine = parseInt(tokens[3]);\n                            var bytesPerLine = parseInt(tokens[4]);\n\n                            var indexEntry = {\n                                size: size,\n                                position: position,\n                                basesPerLine: basesPerLine,\n                                bytesPerLine: bytesPerLine\n                            };\n\n                            self.chromosomeNames.push(chr);\n                            self.index[chr] = indexEntry;\n                            self.chromosomes[chr] = new igv.Chromosome(chr, order++, 0, size);\n                        }\n                    }\n\n                    return self.index;\n\n                })\n        }\n\n    }\n\n    igv.FastaSequence.prototype.loadAll = function () {\n\n        var self = this;\n\n        if (this.isDataURI) {\n            return Promise.resolve(parseFasta(this.file));\n        } else {\n            return igv.xhr.load(self.file, igv.buildOptions(self.config))\n                .then(parseFasta)\n        }\n\n        function parseFasta(data) {\n\n            var lines = igv.splitLines(data),\n                len = lines.length,\n                lineNo = 0,\n                nextLine,\n                currentSeq = \"\",\n                currentChr,\n                currentRangeLocus = undefined,\n                currentOffset = 0,\n                order = 0;\n\n\n            while (lineNo < len) {\n                nextLine = lines[lineNo++].trim();\n                if (nextLine.startsWith(\"#\") || nextLine.length === 0) {\n                    continue;\n                }\n                else if (nextLine.startsWith(\">\")) {\n                    if (currentSeq) {\n                        self.chromosomeNames.push(currentChr);\n                        self.sequences[currentChr] = currentSeq;\n                        self.chromosomes[currentChr] = new igv.Chromosome(currentChr, order++, currentOffset, currentOffset + currentSeq.length, currentRangeLocus);\n                    }\n\n                    const parts = nextLine.substr(1).split(/\\s+/)\n\n                    // Check for samtools style locus string.   This is not perfect, and could fail on weird sequence names\n                    const nameParts = parts[0].split(':')\n                    currentChr = nameParts[0];\n                    currentSeq = \"\";\n                    currentOffset = 0\n                    currentRangeLocus = undefined;\n                    if (nameParts.length > 1 && nameParts[1].indexOf('-') > 0) {\n                        const locusParts = nameParts[1].split('-')\n                        if (locusParts.length === 2 &&\n                            /^[0-9]+$/.test(locusParts[0]) &&\n                            /^[0-9]+$/.test(locusParts[1])) {\n                        }\n                        const from = Number.parseInt(locusParts[0])\n                        const to = Number.parseInt(locusParts[1])\n                        if (to > from) {\n                            currentOffset = from - 1;\n                            self.offsets[currentChr] = currentOffset;\n                            currentRangeLocus = nameParts[1];\n                        }\n                    }\n                }\n                else {\n                    currentSeq += nextLine;\n                }\n            }\n            // add last seq\n            if (currentSeq) {\n                self.chromosomeNames.push(currentChr);\n                self.sequences[currentChr] = currentSeq;\n                self.chromosomes[currentChr] = new igv.Chromosome(currentChr, order++, currentOffset, currentOffset + currentSeq.length, currentRangeLocus);\n            }\n        }\n    }\n\n    igv.FastaSequence.prototype.readSequence = function (chr, qstart, qend) {\n\n        //console.log(\"Read sequence \" + chr + \":\" + qstart + \"-\" + qend);\n        const self = this;\n\n        let offset;\n        let start;\n        let end;\n        let basesPerLine;\n        let nEndBytes;\n\n        return self.getIndex()\n\n            .then(function () {\n\n                var idxEntry = self.index[chr];\n                if (!idxEntry) {\n                    console.log(\"No index entry for chr: \" + chr);\n\n                    // Tag interval with null so we don't try again\n                    self.interval = new igv.GenomicInterval(chr, qstart, qend, null);\n                    return null;\n\n                } else {\n\n                    start = Math.max(0, qstart);    // qstart should never be < 0\n                    end = Math.min(idxEntry.size, qend);\n                    const bytesPerLine = idxEntry.bytesPerLine;\n                    basesPerLine = idxEntry.basesPerLine;\n                    const position = idxEntry.position;\n                    nEndBytes = bytesPerLine - basesPerLine;\n\n                    const startLine = Math.floor(start / basesPerLine);\n                    const endLine = Math.floor(end / basesPerLine);\n\n                    const base0 = startLine * basesPerLine;   // Base at beginning of start line\n\n                    offset = start - base0;\n\n                    const startByte = position + startLine * bytesPerLine + offset;\n\n                    const base1 = endLine * basesPerLine;\n                    const offset1 = end - base1;\n                    const endByte = position + endLine * bytesPerLine + offset1 - 1;\n                    const byteCount = endByte - startByte + 1;\n\n\n                    if (byteCount <= 0) {\n                        console.error(\"No sequence for \" + chr + \":\" + qstart + \"-\" + qend)\n                        return \"\";\n                    }\n                    else {\n                        return igv.xhr.load(self.file, igv.buildOptions(self.config, {\n                            range: {\n                                start: startByte,\n                                size: byteCount\n                            }\n                        }))\n                    }\n                }\n            })\n\n            .then(function (allBytes) {\n\n                if (!allBytes) {\n                    return null;\n                }\n                else {\n                    let nBases,\n                        seqBytes = \"\",\n                        srcPos = 0,\n                        desPos = 0,\n                        allBytesLength = allBytes.length;\n\n                    if (offset > 0) {\n                        nBases = Math.min(end - start, basesPerLine - offset);\n                        seqBytes += allBytes.substr(srcPos, nBases);\n                        srcPos += (nBases + nEndBytes);\n                        desPos += nBases;\n                    }\n\n                    while (srcPos < allBytesLength) {\n                        nBases = Math.min(basesPerLine, allBytesLength - srcPos);\n                        seqBytes += allBytes.substr(srcPos, nBases);\n                        srcPos += (nBases + nEndBytes);\n                        desPos += nBases;\n                    }\n\n                    return seqBytes;\n                }\n            })\n    }\n\n    function decodeDataUri(dataUri) {\n        var bytes,\n            split = dataUri.split(','),\n            info = split[0].split(':')[1],\n            dataString = split[1];\n\n        if (info.indexOf('base64') >= 0) {\n            dataString = atob(dataString);\n        } else {\n            dataString = decodeURI(dataString);\n        }\n\n        bytes = new Uint8Array(dataString.length);\n        for (var i = 0; i < dataString.length; i++) {\n            bytes[i] = dataString.charCodeAt(i);\n        }\n\n        var inflate = new Zlib.Gunzip(bytes);\n        var plain = inflate.decompress();\n\n        let s = \"\";\n        const len = plain.length;\n        for (let i = 0; i < len; i++)\n            s += String.fromCharCode(plain[i]);\n\n        return s;\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 10/10/16.\n */\n\n\nvar igv = (function (igv) {\n\n\n    igv.CustomServiceReader = function (config) {\n\n        this.config = config;\n\n    }\n\n    igv.CustomServiceReader.prototype.readFeatures = function (chr, start, end) {\n\n\n        var self = this,\n            url = self.config.url,\n            body = self.config.body;\n\n        if (chr.toLowerCase() !== \"all\") {\n\n            url = url\n                .replace(\"$CHR\", chr)\n                .replace(\"$START\", start)\n                .replace(\"$END\", end);\n\n            if (body !== undefined) {\n                self.config.body =\n                    self.config.body\n                        .replace(\"$CHR\", chr)\n                        .replace(\"$START\", start)\n                        .replace(\"$END\", end);\n            }\n        }\n\n        return igv.xhr.load(url, self.config)\n            \n            .then(function (data) {\n\n                if (data) {\n                    if (typeof self.config.parser === \"function\") {\n                        return self.config.parser(data);\n                    }\n                    else if (igv.isString(data)) {\n                        // TODO -- make this explict in config (returnType=\"json\", \"xml\", etc)\n                        try {\n                            return JSON.parse(data);\n                        } catch (e) {\n                            // Apparently not json, just return data\n                            return data;\n                        }\n                    }\n                    else {\n                        return data;\n                    }\n                }\n                else {\n                    return [];\n                }\n            })\n            .then(function (features) {\n\n                if(self.config.mappings) {\n\n                    let mappingKeys = Object.keys(self.config.mappings);\n                    features.forEach(function (f) {\n                        mappingKeys.forEach(function (key) {\n                            f[key] = f[self.config.mappings[key]];\n                        });\n                    });\n                }\n\n                return features;\n\n            })\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n\n    igv.getDataWrapper = function(data) {\n\n        if (typeof(data) == 'string' || data instanceof String) {\n            return new StringDataWrapper(data);\n        } else {\n            return new ByteArrayDataWrapper(data);\n        }\n    }\n\n\n// Data might be a string, or an UInt8Array\n    var StringDataWrapper = function (string) {\n        this.data = string;\n        this.ptr = 0;\n    }\n\n    StringDataWrapper.prototype.nextLine = function () {\n        //return this.split(/\\r\\n|\\n|\\r/gm);\n        var start = this.ptr,\n            idx = this.data.indexOf('\\n', start);\n\n        if (idx > 0) {\n            this.ptr = idx + 1;   // Advance pointer for next line\n            return idx === start ? undefined : this.data.substring(start, idx).trim();\n        }\n        else {\n            // Last line\n            this.ptr = this.data.length;\n            return (start >= this.data.length) ? undefined : this.data.substring(start).trim();\n        }\n    }\n\n    // For use in applications where whitespace carries meaning\n    // Returns \"\" for an empty row (not undefined like nextLine), since this is needed in AED\n    StringDataWrapper.prototype.nextLineNoTrim = function () {\n        var start = this.ptr,\n            idx = this.data.indexOf('\\n', start),\n            data = this.data;\n\n        if (idx > 0) {\n            this.ptr = idx + 1;   // Advance pointer for next line\n            if(idx > start && data.charAt(idx-1) === '\\r') {\n                // Trim CR manually in CR/LF sequence\n                return data.substring(start, idx - 1);\n            }\n            return data.substring(start, idx);\n        }\n        else {\n            var length = data.length;\n            this.ptr = length;\n            // Return undefined only at the very end of the data\n            return (start >= length) ? undefined : data.substring(start);\n        }\n    }\n\n    var ByteArrayDataWrapper = function (array) {\n        this.data = array;\n        this.length = this.data.length;\n        this.ptr = 0;\n    }\n\n    ByteArrayDataWrapper.prototype.nextLine = function () {\n\n        var c, result;\n        result = \"\";\n\n        if (this.ptr >= this.length) return undefined;\n\n        for (var i = this.ptr; i < this.length; i++) {\n            c = String.fromCharCode(this.data[i]);\n            if (c === '\\r') continue;\n            if (c === '\\n') break;\n            result = result + c;\n        }\n\n        this.ptr = i + 1;\n        return result;\n    }\n\n    // The ByteArrayDataWrapper does not do any trimming by default, can reuse the function\n    ByteArrayDataWrapper.prototype.nextLineNoTrim = ByteArrayDataWrapper.prototype.nextLine;\n\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    /**\n     * Object for caching lists of features.  Supports effecient queries for sub-range  (chr, start, end)\n     *\n     * @param featureList\n     * @param The genomic range spanned by featureList (optional)\n     * @constructor\n     */\n\n    igv.FeatureCache = function (featureList, genome, range) {\n        \n        this.treeMap = buildTreeMap(featureList, genome);\n        this.range = range;\n        \n    }\n\n    igv.FeatureCache.prototype.containsRange = function (genomicRange) {\n\n        // No range means cache contains all features\n        return (this.range === undefined || this.range.contains(genomicRange.chr, genomicRange.start, genomicRange.end));\n\n    }\n\n    igv.FeatureCache.prototype.queryFeatures = function (chr, start, end) {\n\n        var featureList, intervalFeatures, feature, len, i, tree, intervals;\n\n        tree = this.treeMap[chr];\n\n        if (!tree) return [];\n\n        intervals = tree.findOverlapping(start, end);\n\n        if (intervals.length == 0) {\n            return [];\n        }\n        else {\n            // Trim the list of features in the intervals to those\n            // overlapping the requested range.\n            // Assumption: features are sorted by start position\n\n            featureList = [];\n\n            intervals.forEach(function (interval) {\n                intervalFeatures = interval.value;\n                len = intervalFeatures.length;\n                for (i = 0; i < len; i++) {\n                    feature = intervalFeatures[i];\n                    if (feature.start > end) break;\n                    else if (feature.end >= start) {\n                        featureList.push(feature);\n                    }\n                }\n            });\n\n            featureList.sort(function (a, b) {\n                return a.start - b.start;\n            });\n\n            return featureList;\n        }\n\n    };\n\n    /**\n     * Returns all features, unsorted.\n     *\n     * @returns {Array}\n     */\n    igv.FeatureCache.prototype.getAllFeatures = function () {\n\n\n        var allFeatures = [];\n        var treeMap = this.treeMap;\n        if (treeMap) {\n            for (var key in treeMap) {\n                if (treeMap.hasOwnProperty(key)) {\n\n                    var tree = treeMap[key];\n                    tree.mapIntervals(function (interval) {\n                        allFeatures = allFeatures.concat(interval.value);\n                    });\n                }\n            }\n        }\n\n        return allFeatures;\n\n    }\n\n    function buildTreeMap(featureList, genome) {\n        \n        const treeMap = {};\n        const chromosomes = [];\n        const featureCache = {};\n        \n        if (featureList) {\n\n            featureList.forEach(function (feature) {\n\n                let chr = feature.chr;\n\n                // Translate to \"official\" name\n                if(genome) {\n                    chr = genome.getChromosomeName(chr);\n                }\n\n                let geneList = featureCache[chr];\n\n                if (!geneList) {\n                    chromosomes.push(chr);\n                    geneList = [];\n                    featureCache[chr] = geneList;\n                }\n                geneList.push(feature);\n            });\n\n\n            // Now build interval tree for each chromosome\n            for (let i = 0; i < chromosomes.length; i++) {\n                const chr = chromosomes[i];\n                treeMap[chr] = buildIntervalTree(featureCache[chr]);\n            }\n        }\n\n        return treeMap;\n    };\n\n    /**\n     * Build an interval tree from the feature list for fast interval based queries.   We lump features in groups\n     * of 10, or total size / 100,   to reduce size of the tree.\n     *\n     * @param featureList\n     */\n    function buildIntervalTree(featureList) {\n\n        var i, e, iStart, iEnd, tree, chunkSize, len, subArray;\n\n        tree = new igv.IntervalTree();\n        len = featureList.length;\n\n        chunkSize = Math.max(10, Math.round(len / 100));\n\n        featureList.sort(function (f1, f2) {\n            return (f1.start === f2.start ? 0 : (f1.start > f2.start ? 1 : -1));\n        });\n\n        for (i = 0; i < len; i += chunkSize) {\n            e = Math.min(len, i + chunkSize);\n            subArray = featureList.slice(i, e);\n            iStart = subArray[0].start;\n            //\n            iEnd = iStart;\n            subArray.forEach(function (feature) {\n                iEnd = Math.max(iEnd, feature.end);\n            });\n            tree.insert(iStart, iEnd, subArray);\n        }\n\n        return tree;\n    }\n\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    const MAX_GZIP_BLOCK_SIZE = (1 << 16);\n\n    /**\n     * Reader for \"bed like\" files (tab delimited files with 1 feature per line: bed, gff, vcf, etc)\n     *\n     * @param config\n     * @constructor\n     */\n    igv.FeatureFileReader = function (config, genome) {\n\n        var uriParts;\n\n        this.config = config || {};\n        this.genome = genome;\n        this.indexURL = config.indexURL;\n        this.indexed = config.indexed;\n\n        if (igv.isFilePath(this.config.url)) {\n            this.filename = this.config.url.name;\n        } else if (igv.isString(this.config.url) && this.config.url.startsWith('data:')) {\n            this.indexed = false;  // by definition\n            this.dataURI = config.url;\n        } else {\n            uriParts = igv.parseUri(this.config.url);\n            this.filename = config.filename || uriParts.file;\n        }\n\n        this.format = this.config.format;\n\n        this.parser = this.getParser(this.format, this.config.decode);\n    };\n\n    /**\n     * Return a promise to load features for the genomic interval\n     * @param chr\n     * @param start\n     * @param end\n     */\n    igv.FeatureFileReader.prototype.readFeatures = function (chr, start, end) {\n\n        var self = this;\n\n        return self.getIndex()\n            .then(function (index) {\n                if (index) {\n                    return self.loadFeaturesWithIndex(chr, start, end);\n                } else if (self.dataURI) {\n                    return self.loadFeaturesFromDataURI();\n                } else {\n                    return self.loadFeaturesNoIndex()\n                }\n            });\n    };\n\n    igv.FeatureFileReader.prototype.readHeader = function () {\n\n        var self = this;\n\n        if (self.header) {\n            return Promise.resolve(self.header);\n        } else {\n\n            return self.getIndex()\n\n                .then(function (index) {\n\n                    var options,\n                        success;\n                    if (self.dataURI) {\n\n                        return self.loadFeaturesFromDataURI(self.dataURI)\n                            .then(function (features) {\n                                var header = self.header || {};\n                                header.features = features;\n                                return header;\n                            })\n                    } else if (index) {\n\n                        // Load the file header (not HTTP header) for an indexed file.\n                        // TODO -- we need a better solution here, this will fail if header exceeds max size.   This however is unlikely.\n                        let maxSize = \"vcf\" === self.config.format ? 65000 : 1000;\n                        if(self.config.filename && self.config.filename.endsWith(\".gz\")) maxSize /= 2;\n                        options = igv.buildOptions(self.config, {bgz: index.tabix, range: {start: 0, size: maxSize}});\n\n                        return igv.xhr.loadString(self.config.url, options)\n                            .then(function (data) {\n                                self.header = self.parser.parseHeader(data);\n                                return self.header\n                            });\n                    } else {\n                        // If this is a non-indexed file we will load all features in advance\n                        return self.loadFeaturesNoIndex()\n                            .then(function (features) {\n                                var header = self.header || {};\n                                header.features = features;\n                                return header;\n                            })\n                    }\n                })\n                .then(function (header) {\n                    if (header && self.parser) {\n                        self.parser.header = header;\n                    }\n                    return header;\n                })\n        }\n\n    };\n\n    igv.FeatureFileReader.prototype.getParser = function (format, decode) {\n\n        switch (format) {\n            case \"vcf\":\n                return new igv.VcfParser();\n            case \"seg\" :\n                return new igv.SegParser();\n            default:\n                return new igv.FeatureParser(format, decode, this.config);\n        }\n\n    };\n\n\n    /**\n     * Return a Promise for the async loaded index\n     */\n    igv.FeatureFileReader.prototype.loadIndex = function () {\n\n        var idxFile = this.config.indexURL;\n\n        if (this.filename.endsWith('.gz')) {\n\n            if (!idxFile) {\n                idxFile = this.config.url + '.tbi';\n            }\n            return igv.loadBamIndex(idxFile, this.config, true, this.genome);\n            \n        } else {\n\n            if (!idxFile) {\n                idxFile = this.config.url + '.idx';\n            }\n            return igv.loadTribbleIndex(idxFile, this.config, this.genome);\n        }\n    };\n\n    igv.FeatureFileReader.prototype.loadFeaturesNoIndex = function () {\n\n        var self = this;\n\n        var options = igv.buildOptions(self.config);    // Add oauth token, if any\n\n        return igv.xhr.loadString(self.config.url, options)\n            .then(function (data) {\n                self.header = self.parser.parseHeader(data);\n                if (self.header instanceof String && self.header.startsWith(\"##gff-version 3\")) {\n                    self.format = 'gff3';\n                }\n                return self.parser.parseFeatures(data);   // <= PARSING DONE HERE\n            })\n\n    };\n\n    igv.FeatureFileReader.prototype.loadFeaturesWithIndex = function (chr, start, end) {\n\n        //console.log(\"Using index\");\n        var self = this;\n\n\n        var blocks,\n            tabix = self.index && self.index.tabix,\n            refId = tabix ? self.index.sequenceIndexMap[chr] : chr,\n            promises = [];\n\n        blocks = self.index.blocksForRange(refId, start, end);\n\n        if (!blocks || blocks.length === 0) {\n            return Promise.resolve([]);\n        } else {\n\n            blocks.forEach(function (block) {\n\n                promises.push(new Promise(function (fullfill, reject) {\n\n                    var startPos = block.minv.block,\n                        startOffset = block.minv.offset,\n                        endPos,\n                        options,\n                        success;\n\n                    endPos = block.maxv.block + MAX_GZIP_BLOCK_SIZE;\n\n                    options = igv.buildOptions(self.config, {\n                        range: {\n                            start: startPos,\n                            size: endPos - startPos + 1\n                        }\n                    });\n\n                    success = function (data) {\n\n                        var inflated,\n                            slicedData,\n                            slicedFeatures,\n                            filteredFeatures,\n                            f,\n                            i;\n\n                        if (self.index.tabix) {\n                            inflated = new Uint8Array(igv.unbgzf(data));\n                        } else {\n                            inflated = data;\n                        }\n\n                        slicedData = startOffset ? inflated.slice(startOffset) : inflated;\n                        slicedFeatures = self.parser.parseFeatures(slicedData);\n\n                        // Filter features not in requested range.\n                        filteredFeatures = [];\n                        for (i = 0; i < slicedFeatures.length; i++) {\n                            f = slicedFeatures[i];\n                            if (f.start > end) break;\n                            if (f.end >= start && f.start <= end) {\n                                filteredFeatures.push(f);\n                            }\n                        }\n\n\n                        fullfill(filteredFeatures);\n                    };\n\n\n                    // Async load\n                    if (self.index.tabix) {\n                        igv.xhr\n                            .loadArrayBuffer(self.config.url, options)\n                            .then(success)\n                            .catch(reject);\n                    } else {\n                        igv.xhr\n                            .loadString(self.config.url, options)\n                            .then(success)\n                            .catch(reject);\n                    }\n\n                }))\n            });\n\n            return Promise.all(promises)\n\n                .then(function (featureArrays) {\n\n                    var i,\n                        allFeatures;\n\n                    if (featureArrays.length === 1) {\n                        allFeatures = featureArrays[0];\n                    } else {\n                        allFeatures = featureArrays[0];\n\n                        for (i = 1; i < featureArrays.length; i++) {\n                            allFeatures = allFeatures.concat(featureArrays[i]);\n                        }\n\n                        allFeatures.sort(function (a, b) {\n                            return a.start - b.start;\n                        });\n                    }\n\n                    return allFeatures;\n                })\n        }\n\n    };\n\n    igv.FeatureFileReader.prototype.getIndex = function () {\n\n        var self = this;\n        if (self.index !== undefined || self.indexed === false) {\n            return Promise.resolve(self.index);\n        }\n\n        if (self.indexURL || self.indexed || (typeof self.config.url === 'string' && self.config.url.endsWith(\".gz\"))) {\n\n            return self.loadIndex()\n\n                .then(function (indexOrUndefined) {\n                    if (indexOrUndefined) {\n                        self.index = indexOrUndefined;\n                        self.indexed = true;\n                    } else {\n                        self.indexed = false;\n                    }\n                    return self.index;\n                })\n                .catch(function (error) {\n                    self.indexed = false;\n                    if (self.config.indexURL !== undefined) {\n                        self.config.browser.presentAlert(\"Index file not found.  Check track configuration\", undefined)\n                    }\n                });\n        } else {\n            self.indexed = false;\n            return Promise.resolve(undefined);\n        }\n    };\n\n    igv.FeatureFileReader.prototype.loadFeaturesFromDataURI = function () {\n\n        const plain = igv.decodeDataURI(this.dataURI)\n        this.header = this.parser.parseHeader(plain);\n        if (this.header instanceof String && this.header.startsWith(\"##gff-version 3\")) {\n            this.format = 'gff3';\n        }\n        const features = this.parser.parseFeatures(plain);\n        return Promise.resolve(features);\n    };\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n *  Define parsers for bed-like files  (.bed, .gff, .vcf, etc).  A parser should implement 2 methods\n *\n *     parseHeader(data) - return an object representing a header or metadata.  Details are format specific\n *\n *     parseFeatures(data) - return an array of features\n *\n */\n\n\nvar igv = (function (igv) {\n\n    var maxFeatureCount = Number.MAX_VALUE;    // For future use,  controls downsampling\n\n    var gffNameFields = [\"Name\", \"gene_name\", \"gene\", \"gene_id\", \"alias\", \"locus\"];\n\n    var aedRegexpNoNamespace = new RegExp(\"([^:]*)\\\\(([^)]*)\\\\)\"); // name(type) for AED parsing (namespace undefined)\n    var aedRegexpNamespace = new RegExp(\"([^:]*):([^(]*)\\\\(([^)]*)\\\\)\"); // namespace:name(type) for AED parsing\n\n    /**\n     * Return a parser for the given file format.\n     */\n    igv.FeatureParser = function (format, decode, config) {\n\n        var customFormat;\n\n        if (format !== undefined) {\n            this.format = format.toLowerCase();\n        }\n        this.nameField = config ? config.nameField : undefined;\n        this.skipRows = 0;   // The number of fixed header rows to skip.  Override for specific types as needed\n\n        if (decode) {\n            this.decode = decode;\n        }\n        else {\n\n            switch (this.format) {\n                case \"narrowpeak\":\n                case \"broadpeak\":\n                case \"peaks\":\n                    this.decode = decodePeak;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"bedgraph\":\n                    this.decode = decodeBedGraph;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"wig\":\n                    this.decode = decodeWig;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"gff3\" :\n                case \"gff\" :\n                case \"gtf\" :\n                    this.decode = decodeGFF;\n                    this.delimiter = \"\\t\";\n                    break;\n                case \"fusionjuncspan\":\n                    // bhaas, needed for FusionInspector view\n                    this.decode = decodeFusionJuncSpan;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"gtexgwas\":\n                    this.skipRows = 1;\n                    this.decode = decodeGtexGWAS;\n                    this.delimiter = \"\\t\";\n                    break;\n                case \"refflat\":\n                    this.decode = decodeReflat;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"genepred\":\n                    this.decode = decodeGenePred;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"genepredext\":\n                    this.decode = decodeGenePredExt;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"ensgene\":\n                    this.decode = decodeGenePred\n                    this.shift = 1;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"refgene\":\n                    this.decode = decodeGenePredExt;\n                    this.delimiter = /\\s+/;\n                    this.shift = 1;\n                    break;\n                case \"aed\":\n                    this.decode = decodeAed;\n                    this.delimiter = \"\\t\";\n                    break;\n                case \"bed\":\n                    this.decode = decodeBed;\n                    this.delimiter = config.delimiter || /\\s+/;\n                    break;\n                case \"bedpe\":\n                    this.skipRows = 1;\n                    this.decode = decodeBedpe;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"bedpe-domain\":\n                    this.decode = decodeBedpeDomain;\n                    this.headerLine = true;\n                    this.delimiter = /\\s+/;\n                    break;\n                case \"bedpe-loop\":\n                    this.decode = decodeBedpe;\n                    this.delimiter = /\\s+/;\n                    this.skipRows = 1;\n                    this.header = {colorColumn: 7};\n                    break;\n                case \"snp\":\n                    this.decode = decodeSNP;\n                    this.delimiter = \"\\t\";\n                    break;\n                case \"rmsk\":\n                    this.decode = decodeRepeatMasker;\n                    this.delimiter = \"\\t\";\n                    break;\n                default:\n\n                    customFormat = igv.getFormat(this.format);\n                    if (customFormat !== undefined) {\n                        this.decode = decodeCustom;\n                        this.format = customFormat;\n                        this.delimiter = customFormat.delimiter || \"\\t\";\n                    }\n\n                    else {\n                        this.decode = decodeBed;\n                        this.delimiter = /\\s+/;\n                    }\n            }\n        }\n\n    };\n\n    igv.FeatureParser.prototype.parseHeader = function (data) {\n\n        var line,\n            header,\n            dataWrapper;\n\n        dataWrapper = igv.getDataWrapper(data);\n\n        while (line = dataWrapper.nextLine()) {\n            if (line.startsWith(\"track\") || line.startsWith(\"#\") || line.startsWith(\"browser\")) {\n                if (line.startsWith(\"track\")) {\n                    let h = parseTrackLine(line);\n                    if (header) {\n                        Object.assign(header, h);\n                    } else {\n                        header = h;\n                    }\n\n                } else if (line.startsWith(\"#columns\")) {\n                    let h = parseColumnsDirective(line);\n                    if (header) {\n                        Object.assign(header, h);\n                    } else {\n                        header = h;\n                    }\n                }\n                else if (line.startsWith(\"##gff-version 3\")) {\n                    this.format = \"gff3\";\n                    if (!header) header = {};\n                    header[\"format\"] = \"gff3\";\n                }\n            }\n            else {\n                break;\n            }\n        }\n\n        this.header = header;    // Directives might be needed for parsing lines\n\n        return header;\n    };\n\n    igv.FeatureParser.prototype.parseFeatures = function (data) {\n\n        if (!data) return null;\n\n        var dataWrapper,\n            wig,\n            feature,\n            tokens,\n            allFeatures = [],\n            line,\n            i,\n            cnt = 0,\n            j,\n            decode = this.decode,\n            format = this.format,\n            delimiter = this.delimiter || \"\\t\",\n            nextLine;\n\n        // Double quoted strings can contain newlines in AED\n        // \"\" is an escape for a \".\n        // Parse all this, clean it up, split into tokens in a custom way\n        function readTokensAed() {\n            var tokens = [],\n                token = \"\",\n                quotedString = false,\n                n,\n                c;\n\n            while (line || line === '') {\n                for (n = 0; n < line.length; n++) {\n                    c = line.charAt(n);\n                    if (c === delimiter) {\n                        if (!quotedString) {\n                            tokens.push(token);\n                            token = \"\";\n                        }\n                        else {\n                            token += c;\n                        }\n                    }\n                    else if (c === \"\\\"\") {\n                        // Look ahead to the next character\n                        if (n + 1 < line.length && line.charAt(n + 1) === \"\\\"\") {\n                            if (quotedString) {\n                                // Turn \"\" into a single \" in the output string\n                                token += \"\\\"\";\n                            }\n                            else {\n                                // \"\" on its own means empty string, ignore\n                            }\n                            // Skip the next double quote\n                            n++;\n                        }\n                        else {\n                            // We know the next character is NOT a double quote, flip our state\n                            quotedString = !quotedString;\n                        }\n                    }\n                    else {\n                        token += c;\n                    }\n                }\n                // We are at the end of the line\n                if (quotedString) {\n                    token += '\\n'; // Add newline to the token\n                    line = nextLine(); // Keep going\n                }\n                else {\n                    // We can end the loop\n                    break;\n                }\n            }\n            // Push the last token\n            tokens.push(token);\n            return tokens;\n        }\n\n        dataWrapper = igv.getDataWrapper(data);\n        if (format === 'aed') {\n            nextLine = dataWrapper.nextLineNoTrim.bind(dataWrapper);\n        }\n        else {\n            nextLine = dataWrapper.nextLine.bind(dataWrapper);\n        }\n\n        i = 0;\n\n        while (line = nextLine()) {\n\n            i++;\n\n            if (i <= this.skipRows) continue;\n\n            if (line.startsWith(\"track\") || line.startsWith(\"#\") || line.startsWith(\"browser\")) {\n                continue;\n            }\n            else if (format === \"wig\" && line.startsWith(\"fixedStep\")) {\n                wig = parseFixedStep(line);\n                continue;\n            }\n            else if (format === \"wig\" && line.startsWith(\"variableStep\")) {\n                wig = parseVariableStep(line);\n                continue;\n            }\n\n            if (format !== \"aed\" || line.indexOf(\"\\\"\") === -1) {\n                tokens = line.split(delimiter);\n            }\n            else {\n                tokens = readTokensAed();\n            }\n\n            if (tokens.length < 1) {\n                continue;\n            }\n\n            if (format === \"aed\") {\n                if (!this.aed) {\n                    // Store information about the aed header in the parser itself\n                    // This is done only once - on the first row\n                    this.aed = parseAedHeaderRow(tokens);\n                    continue;\n                }\n            }\n\n            feature = decode.call(this, tokens, wig);\n\n            if (feature) {\n                if (allFeatures.length < maxFeatureCount) {\n                    allFeatures.push(feature);\n                }\n                else {\n                    // Reservoir sampling,  conditionally replace existing feature with new one.\n                    j = Math.floor(Math.random() * cnt);\n                    if (j < maxFeatureCount) {\n                        allFeatures[j] = feature;\n                    }\n                }\n                cnt++;\n            }\n        }\n\n        return allFeatures;\n    };\n\n\n    function parseFixedStep(line) {\n\n        var tokens = line.split(/\\s+/),\n            cc = tokens[1].split(\"=\")[1],\n            ss = parseInt(tokens[2].split(\"=\")[1], 10),\n            step = parseInt(tokens[3].split(\"=\")[1], 10),\n            span = (tokens.length > 4) ? parseInt(tokens[4].split(\"=\")[1], 10) : 1;\n\n        return {format: \"fixedStep\", chrom: cc, start: ss, step: step, span: span, index: 0};\n\n    }\n\n    function parseVariableStep(line) {\n\n        var tokens = line.split(/\\s+/),\n            cc = tokens[1].split(\"=\")[1],\n            span = tokens.length > 2 ? parseInt(tokens[2].split(\"=\")[1], 10) : 1;\n        return {format: \"variableStep\", chrom: cc, span: span}\n    }\n\n    function parseAedToken(value) {\n        // Example: refseq:accessionNumber(aed:String)\n        // refseq - namespace, will be declared later\n        // accessionNumber - name of the field\n        // aed:String - type of the field\n        // The namespace part may be missing\n        var match = aedRegexpNamespace.exec(value);\n        if (match) {\n            return {\n                namespace: match[1],\n                name: match[2],\n                type: match[3]\n            }\n        }\n\n        match = aedRegexpNoNamespace.exec(value);\n        if (match) {\n            return {\n                namespace: '?',\n                name: match[1],\n                type: match[2]\n            }\n        }\n        else {\n            throw new Error(\"Error parsing the header row of AED file - column not in ns:name(ns:type) format\");\n        }\n    }\n\n    function parseAedHeaderRow(tokens) {\n        // First row of AED file defines column names\n        // Each header item is an aed token - see parseAedToken\n        var aed,\n            k,\n            token,\n            aedToken;\n\n        // Initialize aed section to be filled in\n        aed = {\n            columns: [ // Information about the namespace, name and type of each column\n                // Example entry:\n                // { namespace: 'bio', name: 'start', type: 'aed:Integer' }\n            ],\n            metadata: { // Metadata about the entire AED file\n                // Example:\n                // {\n                //    aed: {\n                //       application: { value: \"CHaS Browser 3.3.0.139 (r10838)\", type: \"aed:String\" },\n                //       created: { value: \"2018-01-02T10:20:30.123+01:00\", type: \"aed:DateTime\" },\n                //       modified: { value: \"2018-03-04T11:22:33.456+01:00\", type: \"aed:DateTime\" },\n                //    }\n                //    affx: {\n                //       ucscGenomeVersion: { value: \"hg19\", type: \"aed:String\" }\n                //    },\n                //    namespace: {\n                //       omim: { value: \"http://affymetrix.com/ontology/www.ncbi.nlm.nih.gov/omim/\", type: \"aed:URI\" },\n                //       affx: { value: \"http://affymetrix.com/ontology/\", type: \"aed:URI\" },\n                //       refseq: { value: \"http://affymetrix.com/ontology/www.ncbi.nlm.nih.gov/RefSeq/\", type: \"aed:URI\" }\n                //    }\n                // }\n            }\n        };\n        for (k = 0; k < tokens.length; k++) {\n            token = tokens[k];\n            aedToken = parseAedToken(token);\n            aed.columns.push(aedToken);\n        }\n\n        return aed;\n    }\n\n    function parseTrackLine(line) {\n        var properties = {},\n            tokens = line.split(/(?:\")([^\"]+)(?:\")|([^\\s\"]+)(?=\\s+|$)/g),\n            tmp = [],\n            i, tk, curr;\n\n        // Clean up tokens array\n        for (i = 1; i < tokens.length; i++) {\n            if (!tokens[i] || tokens[i].trim().length === 0) continue;\n\n            tk = tokens[i].trim();\n\n            if (tk.endsWith(\"=\") > 0) {\n                curr = tk;\n            }\n            else if (curr) {\n                tmp.push(curr + tk);\n                curr = undefined;\n            }\n            else {\n                tmp.push(tk);\n            }\n\n        }\n\n\n        tmp.forEach(function (str) {\n            if (!str) return;\n            var kv = str.split('=', 2);\n            if (kv.length == 2) {\n                properties[kv[0]] = kv[1];\n            }\n\n        });\n\n        return properties;\n    }\n\n    function parseColumnsDirective(line) {\n\n        let properties = {};\n        let t1 = line.split(/\\s+/);\n\n        if (t1.length === 2) {\n\n            let t2 = t1[1].split(\";\");\n\n            t2.forEach(function (keyValue) {\n\n                let t = keyValue.split(\"=\");\n\n                if (t[0] === \"color\") {\n                    properties.colorColumn = Number.parseInt(t[1]) - 1;\n                } else if (t[0] === \"thickness\") {\n                    properties.thicknessColumn = Number.parseInt(t[1]) - 1;\n                }\n            })\n        }\n\n        return properties;\n    }\n\n    /**\n     * Decode the \"standard\" UCSC bed format\n     * @param tokens\n     * @param ignore\n     * @returns decoded feature, or null if this is not a valid record\n     */\n    function decodeBed(tokens, ignore) {\n\n        var chr, start, end, id, name, tmp, idName, exonCount, exonSizes, exonStarts, exons, exon, feature,\n            eStart, eEnd;\n\n        if (tokens.length < 3) return undefined;\n\n        chr = tokens[0];\n        start = parseInt(tokens[1]);\n        end = tokens.length > 2 ? parseInt(tokens[2]) : start + 1;\n\n        feature = {chr: chr, start: start, end: end, score: 1000};\n\n        if (tokens.length > 3) {\n            // Note: these are very special rules for the gencode gene files.\n            // tmp = tokens[3].replace(/\"/g, '');\n            // idName = tmp.split(';');\n            // for (var i = 0; i < idName.length; i++) {\n            //     var kv = idName[i].split('=');\n            //     if (kv[0] == \"gene_id\") {\n            //         id = kv[1];\n            //     }\n            //     if (kv[0] == \"gene_name\") {\n            //         name = kv[1];\n            //     }\n            // }\n            // feature.id = id ? id : tmp;\n            // feature.name = name ? name : tmp;\n            feature.name = tokens[3];\n        }\n\n        if (tokens.length > 4) {\n            feature.score = parseFloat(tokens[4]);\n        }\n        if (tokens.length > 5) {\n            feature.strand = tokens[5];\n        }\n        if (tokens.length > 6) {\n            feature.cdStart = parseInt(tokens[6]);\n        }\n        if (tokens.length > 7) {\n            feature.cdEnd = parseInt(tokens[7]);\n        }\n        if (tokens.length > 8) {\n            if (tokens[8] !== \".\" && tokens[8] !== \"0\")\n                feature.color = igv.Color.createColorString(tokens[8]);\n        }\n        if (tokens.length > 11) {\n            exonCount = parseInt(tokens[9]);\n            exonSizes = tokens[10].split(',');\n            exonStarts = tokens[11].split(',');\n            exons = [];\n\n            for (let i = 0; i < exonCount; i++) {\n                eStart = start + parseInt(exonStarts[i]);\n                eEnd = eStart + parseInt(exonSizes[i]);\n                exons.push({start: eStart, end: eEnd});\n            }\n\n            findUTRs(exons, feature.cdStart, feature.cdEnd)\n\n            feature.exons = exons;\n        }\n\n        // Optional extra columns\n        if (this.header) {\n            let thicknessColumn = this.header.thicknessColumn;\n            let colorColumn = this.header.colorColumn;\n            if (colorColumn && colorColumn < tokens.length) {\n                feature.color = igv.Color.createColorString(tokens[colorColumn])\n            }\n            if (thicknessColumn && thicknessColumn < tokens.length) {\n                feature.thickness = tokens[thicknessColumn];\n            }\n        }\n\n        return feature;\n\n    }\n\n    /**\n     * Decode a UCSC repeat masker record.\n     *\n     * Columns, from UCSC documentation\n     *\n     * 0  bin    585    smallint(5) unsigned    Indexing field to speed chromosome range queries.\n     * 1  swScore    1504    int(10) unsigned    Smith Waterman alignment score\n     * 2  milliDiv    13    int(10) unsigned    Base mismatches in parts per thousand\n     * 3  milliDel    4    int(10) unsigned    Bases deleted in parts per thousand\n     * 4  milliIns    13    int(10) unsigned    Bases inserted in parts per thousand\n     * 5  genoName    chr1    varchar(255)    Genomic sequence name\n     * 6  genoStart    10000    int(10) unsigned    Start in genomic sequence\n     * 7  genoEnd    10468    int(10) unsigned    End in genomic sequence\n     * 8  genoLeft    -249240153    int(11)    -#bases after match in genomic sequence\n     * 9  strand    +    char(1)    Relative orientation + or -\n     * 10 repName    (CCCTAA)n    varchar(255)    Name of repeat\n     * 11 repClass    Simple_repeat    varchar(255)    Class of repeat\n     * 12 repFamily    Simple_repeat    varchar(255)    Family of repeat\n     * 13 repStart    1    int(11)    Start (if strand is +) or -#bases after match (if strand is -) in repeat sequence\n     * 14 repEnd    463    int(11)    End in repeat sequence\n     * 15 repLeft    0    int(11)    -#bases after match (if strand is +) or start (if strand is -) in repeat sequence\n     * 16 id    1    char(1)    First digit of id field in RepeatMasker .out file. Best ignored.\n     */\n    function decodeRepeatMasker(tokens, ignore) {\n\n        if (tokens.length < 15) return undefined;\n\n        const feature = {\n            swScore: Number.parseInt(tokens[1]),\n            milliDiv: Number.parseInt(tokens[2]),\n            milliDel: Number.parseInt(tokens[3]),\n            milliIns: Number.parseInt(tokens[4]),\n            chr: tokens[5],\n            start: Number.parseInt(tokens[6]),\n            end: Number.parseInt(tokens[7]),\n            //genoLeft: tokens[8],\n            strand: tokens[9],\n            repName: tokens[10],\n            repClass: tokens[11],\n            repFamily: tokens[12],\n            repStart: Number.parseInt(tokens[13]),\n            repEnd: Number.parseInt(tokens[14]),\n            repLeft: Number.parseInt(tokens[15])\n        };\n\n        return feature;\n\n    }\n\n    /**\n     * Decode a UCSC \"genePred\" record.\n     *\n     * @param tokens\n     * @param ignore\n     * @returns {*}\n     */\n    function decodeGenePred(tokens, ignore) {\n\n        var shift = this.shift === undefined ? 0 : 1;\n\n        if (tokens.length < 9 + shift) return undefined;\n\n        const cdStart = parseInt(tokens[5 + shift])\n        const cdEnd = parseInt(tokens[6 + shift])\n        var feature = {\n                name: tokens[0 + shift],\n                chr: tokens[1 + shift],\n                strand: tokens[2 + shift],\n                start: parseInt(tokens[3 + shift]),\n                end: parseInt(tokens[4 + shift]),\n                cdStart: cdStart,\n                cdEnd: cdEnd,\n                id: tokens[0 + shift]\n            },\n            exonCount = parseInt(tokens[7 + shift]),\n            exonStarts = tokens[8 + shift].split(','),\n            exonEnds = tokens[9 + shift].split(','),\n            exons = [];\n\n        for (let i = 0; i < exonCount; i++) {\n            const start = parseInt(exonStarts[i])\n            const end = parseInt(exonEnds[i])\n            exons.push({start: start, end: end});\n        }\n        findUTRs(exons, cdStart, cdEnd)\n\n        feature.exons = exons;\n\n        return feature;\n\n    }\n\n    /**\n     * Decode a UCSC \"genePredExt\" record.  refGene files are in this format.\n     *\n     * @param tokens\n     * @param ignore\n     * @returns {*}\n     */\n    function decodeGenePredExt(tokens, ignore) {\n\n        var shift = this.shift === undefined ? 0 : 1;\n\n        if (tokens.length < 11 + shift) return undefined;\n\n        const cdStart = parseInt(tokens[5 + shift])\n        const cdEnd = parseInt(tokens[6 + shift])\n        const feature = {\n                name: tokens[11 + shift],\n                chr: tokens[1 + shift],\n                strand: tokens[2 + shift],\n                start: parseInt(tokens[3 + shift]),\n                end: parseInt(tokens[4 + shift]),\n                cdStart: cdStart,\n                cdEnd: cdEnd,\n                id: tokens[0 + shift]\n            },\n            exonCount = parseInt(tokens[7 + shift]),\n            exonStarts = tokens[8 + shift].split(','),\n            exonEnds = tokens[9 + shift].split(','),\n            exons = [];\n\n        for (let i = 0; i < exonCount; i++) {\n            const start = parseInt(exonStarts[i])\n            const end = parseInt(exonEnds[i])\n            exons.push({start: start, end: end});\n        }\n        findUTRs(exons, cdStart, cdEnd)\n\n        feature.exons = exons;\n\n        return feature;\n    }\n\n    /**\n     * Decode a UCSC \"refFlat\" record\n     * @param tokens\n     * @param ignore\n     * @returns {*}\n     */\n    function decodeReflat(tokens, ignore) {\n\n        var shift = this.shift === undefined ? 0 : 1;\n\n        if (tokens.length < 10 + shift) return undefined;\n\n        const cdStart = parseInt(tokens[6 + shift])\n        const cdEnd = parseInt(tokens[7 + shift])\n        var feature = {\n                name: tokens[0 + shift],\n                id: tokens[1 + shift],\n                chr: tokens[2 + shift],\n                strand: tokens[3 + shift],\n                start: parseInt(tokens[4 + shift]),\n                end: parseInt(tokens[5 + shift]),\n                cdStart: cdStart,\n                cdEnd: cdEnd\n            },\n            exonCount = parseInt(tokens[8 + shift]),\n            exonStarts = tokens[9 + shift].split(','),\n            exonEnds = tokens[10 + shift].split(','),\n            exons = [];\n\n        for (let i = 0; i < exonCount; i++) {\n            const start = parseInt(exonStarts[i])\n            const end = parseInt(exonEnds[i])\n            exons.push({start: start, end: end});\n        }\n        findUTRs(exons, cdStart, cdEnd)\n\n        feature.exons = exons;\n\n        return feature;\n    }\n\n    function findUTRs(exons, cdStart, cdEnd) {\n\n        for(let exon of exons) {\n            const end = exon.end\n            const start = exon.start\n            if (end < cdStart || start > cdEnd) {\n                exon.utr = true;\n            } else {\n                if (cdStart >= start && cdStart <= end) {\n                    exon.cdStart = cdStart\n                }\n                if(cdEnd >= start && cdEnd <= end) {\n                    exon.cdEnd = cdEnd\n                }\n            }\n        }\n\n    }\n\n    function decodePeak(tokens, ignore) {\n\n        var tokenCount, chr, start, end, strand, name, score, qValue, signal, pValue;\n\n        tokenCount = tokens.length;\n        if (tokenCount < 9) {\n            return null;\n        }\n\n        chr = tokens[0];\n        start = parseInt(tokens[1]);\n        end = parseInt(tokens[2]);\n        name = tokens[3];\n        score = parseFloat(tokens[4]);\n        strand = tokens[5].trim();\n        signal = parseFloat(tokens[6]);\n        pValue = parseFloat(tokens[7]);\n        qValue = parseFloat(tokens[8]);\n\n        if (score === 0) score = signal;\n\n        return {\n            chr: chr, start: start, end: end, name: name, score: score, strand: strand, signal: signal,\n            pValue: pValue, qValue: qValue\n        };\n    }\n\n    function decodeBedGraph(tokens, ignore) {\n\n        var chr, start, end, value;\n\n        if (tokens.length < 3) return null;\n\n        chr = tokens[0];\n        start = parseInt(tokens[1]);\n        end = parseInt(tokens[2]);\n\n        value = parseFloat(tokens[3]);\n\n        // Optional extra columns\n        if (this.header) {\n            let colorColumn = this.header.colorColumn;\n            if (colorColumn && colorColumn < tokens.length) {\n                feature.color = igv.Color.createColorString(tokens[colorColumn])\n            }\n        }\n\n        return {chr: chr, start: start, end: end, value: value};\n    }\n\n    function decodeWig(tokens, wig) {\n\n        var ss,\n            ee,\n            value;\n\n        if (wig.format === \"fixedStep\") {\n\n            ss = (wig.index * wig.step) + wig.start;\n            ee = ss + wig.span;\n            value = parseFloat(tokens[0]);\n            ++(wig.index);\n            return isNaN(value) ? null : {chr: wig.chrom, start: ss, end: ee, value: value};\n        }\n        else if (wig.format === \"variableStep\") {\n\n            if (tokens.length < 2) return null;\n\n            ss = parseInt(tokens[0], 10);\n            ee = ss + wig.span;\n            value = parseFloat(tokens[1]);\n            return isNaN(value) ? null : {chr: wig.chrom, start: ss, end: ee, value: value};\n\n        }\n        else {\n            return decodeBedGraph(tokens);\n        }\n    }\n\n    function decodeFusionJuncSpan(tokens, ignore) {\n\n        /*\n         Format:\n\n         0       #scaffold\n         1       fusion_break_name\n         2       break_left\n         3       break_right\n         4       num_junction_reads\n         5       num_spanning_frags\n         6       spanning_frag_coords\n\n         0       B3GNT1--NPSR1\n         1       B3GNT1--NPSR1|2203-10182\n         2       2203\n         3       10182\n         4       189\n         5       1138\n         6       1860-13757,1798-13819,1391-18127,1443-17174,...\n\n         */\n\n\n        //console.log(\"decoding fusion junc spans\");\n\n        var chr = tokens[0];\n        var fusion_name = tokens[1];\n        var junction_left = parseInt(tokens[2]);\n        var junction_right = parseInt(tokens[3]);\n        var num_junction_reads = parseInt(tokens[4]);\n        var num_spanning_frags = parseInt(tokens[5]);\n\n        var spanning_frag_coords_text = tokens[6];\n\n        var feature = {\n            chr: chr,\n            name: fusion_name,\n            junction_left: junction_left,\n            junction_right: junction_right,\n            num_junction_reads: num_junction_reads,\n            num_spanning_frags: num_spanning_frags,\n            spanning_frag_coords: [],\n\n            start: -1,\n            end: -1\n        }; // set start and end later based on min/max of span coords\n\n        var min_coord = junction_left;\n        var max_coord = junction_right;\n\n        if (num_spanning_frags > 0) {\n\n            var coord_pairs = spanning_frag_coords_text.split(',');\n\n            for (var i = 0; i < coord_pairs.length; i++) {\n                var split_coords = coord_pairs[i].split('-');\n\n                var span_left = split_coords[0];\n                var span_right = split_coords[1];\n\n                if (span_left < min_coord) {\n                    min_coord = span_left;\n                }\n                if (span_right > max_coord) {\n                    max_coord = span_right;\n                }\n                feature.spanning_frag_coords.push({left: span_left, right: span_right});\n\n            }\n        }\n\n        feature.start = min_coord;\n        feature.end = max_coord;\n\n\n        return feature;\n\n    }\n\n\n    function decodeGtexGWAS(tokens, ignore) {\n        //chrom\tchromStart\tchromEnd\tStrongest SNP-risk allele\tDisease/Phenotype\tP-value\tOdds ratio or beta\tPUBMEDID\n        //1\t1247493\t1247494\trs12103-A\tInflammatory bowel disease\t8.00E-13\t1.1\t23128233\n\n        const tokenCount = tokens.length;\n        if (tokenCount < 7) {\n            return null;\n        }\n        const feature = {\n            chr: tokens[0],\n            start: parseInt(tokens[1]) - 1,\n            end: parseInt(tokens[2]),\n            'Strongest SNP-risk allele': tokens[3],\n            'Disease/Phenotype': tokens[4],\n            'P-value': tokens[5],\n            'Odds ratio or beta': tokens[6],\n        }\n        if (tokens.length > 6) {\n            'https://www.ncbi.nlm.nih.gov/pubmed/'\n            feature['PUBMEDID'] = `<a target = \"blank\" href = \"https://www.ncbi.nlm.nih.gov/pubmed/${tokens[7]}\">${tokens[7]}</a>`\n        }\n        return feature\n    }\n\n    /**\n     * Decode a single gff record (1 line in file).  Aggregations such as gene models are constructed at a higher level.\n     *      ctg123 . mRNA            1050  9000  .  +  .  ID=mRNA00001;Parent=gene00001\n     * @param tokens\n     * @param ignore\n     * @returns {*}\n     */\n    function decodeGFF(tokens, ignore) {\n\n        var tokenCount, chr, start, end, strand, type, score, phase, attributeString, color, name,\n            transcript_id, i,\n            format = this.format;\n\n        tokenCount = tokens.length;\n        if (tokenCount < 9) {\n            return null;      // Not a valid gff record\n        }\n\n        chr = tokens[0];\n        type = tokens[2];\n        start = parseInt(tokens[3]) - 1;\n        end = parseInt(tokens[4]);\n        score = \".\" === tokens[5] ? 0 : parseFloat(tokens[5]);\n        strand = tokens[6];\n        phase = \".\" === tokens[7] ? 0 : parseInt(tokens[7]);\n        attributeString = tokens[8];\n\n        // Find ID and Parent, or transcript_id\n        var delim = ('gff3' === format) ? '=' : /\\s+/;\n        var attributes = {};\n        for (let kv of  attributeString.split(';')) {\n            const t = kv.trim().split(delim, 2)\n            if (t.length == 2) {\n                const key = t[0].trim();\n                let value = t[1].trim();\n\n                //Strip off quotes, if any\n                if (value.startsWith('\"') && value.endsWith('\"')) {\n                    value = value.substr(1, value.length - 2);\n                }\n\n                const keyLower = key.toLowerCase()\n                if (\"color\" === keyLower || \"colour\" === keyLower) color = igv.Color.createColorString(t[1]);\n                else {\n                    if ('gff3' === format) {\n                        value = decodeURIComponent(value)\n                    }\n                    attributes[key] = value;\n                }\n            }\n        }\n\n        // Find name (label) property\n        if (this.nameField) {\n            name = attributes[this.nameField];\n        }\n        else {\n            for (i = 0; i < gffNameFields.length; i++) {\n                if (attributes.hasOwnProperty(gffNameFields[i])) {\n                    this.nameField = gffNameFields[i];\n                    name = attributes[this.nameField];\n                    break;\n                }\n            }\n        }\n\n        const id = attributes[\"ID\"] || attributes[\"transcript_id\"]\n        const parent = attributes[\"Parent\"]\n\n        return new GFFFeature({\n            id: id,\n            parent: parent,\n            name: name,\n            type: type,\n            chr: chr,\n            start: start,\n            end: end,\n            score: score,\n            strand: strand,\n            color: color,\n            attributeString: attributeString,\n            delim: delim\n        })\n\n    }\n\n    function GFFFeature(props) {\n        Object.assign(this, props)\n    }\n\n    GFFFeature.prototype.popupData = function (genomicLocation) {\n        const kvs = this.attributeString.split(';')\n        const pd = [];\n        pd.push({name: 'type', value: this.type})\n        pd.push({name: 'start', value: this.start + 1})\n        pd.push({name: 'end', value: this.end})\n        for (let kv of kvs) {\n            const t = kv.trim().split(this.delim, 2);\n            if (t.length === 2 && t[1] !== undefined) {\n                const key = t[0].trim();\n                let value = t[1].trim();\n                //Strip off quotes, if any\n                if (value.startsWith('\"') && value.endsWith('\"')) {\n                    value = value.substr(1, value.length - 2);\n                }\n                pd.push({name: key, value: value});\n            }\n        }\n        return pd;\n    }\n\n    /**\n     * AED file feature.\n     *\n     * @param aed link to the AED file object containing file-level metadata and column descriptors\n     * @param allColumns All columns as parsed from the AED\n     *\n     * Other values are parsed one by one\n     */\n    function AedFeature(aed, allColumns) {\n        var token, aedColumn, aedColumns = aed.columns;\n\n        // Link to AED file (for metadata)\n        this.aed = aed;\n\n        // Unparsed columns from AED file\n        this.allColumns = allColumns;\n\n        // Prepare space for the parsed values\n        this.chr = null;\n        this.start = null;\n        this.end = null;\n        this.score = 1000;\n        this.strand = '.';\n        this.cdStart = null;\n        this.cdEnd = null;\n        this.name = null;\n        this.color = null;\n\n        for (i = 0; i < allColumns.length; i++) {\n            token = allColumns[i];\n            if (!token) {\n                // Skip empty fields\n                continue;\n            }\n            aedColumn = aedColumns[i];\n            if (aedColumn.type === 'aed:Integer') {\n                token = parseInt(token);\n            }\n            if (aedColumn.namespace === 'bio') {\n                if (aedColumn.name === 'sequence') {\n                    this.chr = token;\n                }\n                else if (aedColumn.name === 'start') {\n                    this.start = token;\n                }\n                else if (aedColumn.name === 'end') {\n                    this.end = token;\n                }\n                else if (aedColumn.name === 'cdsMin') {\n                    this.cdStart = token;\n                }\n                else if (aedColumn.name === 'cdsMax') {\n                    this.cdEnd = token;\n                }\n                else if (aedColumn.name === 'strand') {\n                    this.strand = token;\n                }\n            }\n            else if (aedColumn.namespace === 'aed') {\n                if (aedColumn.name === 'name') {\n                    this.name = token;\n                }\n            }\n            else if (aedColumn.namespace === 'style') {\n                if (aedColumn.name === 'color') {\n                    this.color = igv.Color.createColorString(token);\n                }\n            }\n        }\n    }\n\n    AedFeature.prototype.popupData = function () {\n        var data = [],\n            aed = this.aed;\n        // Just dump everything we have for now\n        for (var i = 0; i < this.allColumns.length; i++) {\n            var featureValue = this.allColumns[i];\n            var name = aed.columns[i].name;\n            // Skip columns that are not interesting - you know the sequence, and you can see color\n            if (name !== 'sequence' && name !== 'color') {\n                if (featureValue) {\n                    data.push({name: name, value: featureValue});\n                }\n            }\n        }\n        return data;\n    };\n\n    /**\n     * Decode the AED file format\n     * @param tokens\n     * @param ignore\n     * @returns decoded feature, or null if this is not a valid record\n     */\n    function decodeAed(tokens, ignore) {\n        var name, value, token,\n            nonEmptyTokens = 0,\n            aedColumns = this.aed.columns,\n            aedColumn,\n            aedKey,\n            i;\n\n        // Each aed row must match the exact number of columns or we skip it\n        if (tokens.length !== aedColumns.length) {\n            console.log('Corrupted AED file row: ' + tokens.join(','));\n            return undefined;\n        }\n\n        for (i = 0; i < tokens.length; i++) {\n            aedColumn = aedColumns[i];\n            token = tokens[i];\n            if (token !== '') {\n                nonEmptyTokens++;\n            }\n            if (aedColumn.name === 'name' && aedColumn.namespace === 'aed') {\n                name = token;\n            }\n            else if (aedColumn.name === 'value' && aedColumn.namespace === 'aed') {\n                value = token;\n            }\n        }\n\n        if (nonEmptyTokens === 2 && name && value) {\n            // Special row that defines metadata for the entire file\n            aedKey = parseAedToken(name);\n            // Store in the metadata section\n            if (!this.aed.metadata[aedKey.namespace]) {\n                this.aed.metadata[aedKey.namespace] = {};\n            }\n            if (!this.aed.metadata[aedKey.namespace][aedKey.name]) {\n                this.aed.metadata[aedKey.namespace][aedKey.name] = {\n                    type: aedKey.type,\n                    value: value\n                };\n            }\n            // Ignore this value\n            return undefined;\n        }\n\n        var feature = new AedFeature(this.aed, tokens);\n\n        if (!feature.chr || !feature.start || !feature.end) {\n            console.log('Cannot parse feature: ' + tokens.join(','));\n            return undefined;\n        }\n\n        return feature;\n    }\n\n    function decodeBedpe(tokens, ignore) {\n\n        if (tokens.length < 6) {\n            console.log(\"Skipping line: \" + nextLine);\n            return undefined;\n        }\n\n        var feature = {\n            chr1: tokens[0],\n            start1: Number.parseInt(tokens[1]),\n            end1: Number.parseInt(tokens[2]),\n            chr2: tokens[3],\n            start2: Number.parseInt(tokens[4]),\n            end2: Number.parseInt(tokens[5])\n        }\n\n        if (tokens.length > 6) {\n            feature.name = tokens[6];\n        }\n\n        if (tokens.length > 7) {\n            feature.score = tokens[7];\n        }\n\n        feature.chr = feature.chr1 === feature.chr2 ? feature.chr1 : \"MIXED\";\n\n        // Start and end for the feature as a whole.  This needs revisited for interchr features\n        feature.start = Math.min(feature.start1, feature.start2);\n        feature.end = Math.max(feature.end1, feature.end2);\n\n        // Midpoints\n        let m1 = (feature.start1 + feature.end1) / 2;\n        let m2 = (feature.start2 + feature.end2) / 2;\n        feature.m1 = (m1 < m2) ? m1 : m2;\n        feature.m2 = (m1 < m2) ? m2 : m1;\n\n        // Optional extra columns\n        if (this.header) {\n            let thicknessColumn = this.header.thicknessColumn;\n            let colorColumn = this.header.colorColumn;\n            if (colorColumn && colorColumn < tokens.length) {\n                feature.color = igv.Color.createColorString(tokens[colorColumn])\n            }\n            if (thicknessColumn && thicknessColumn < tokens.length) {\n                feature.thickness = tokens[thicknessColumn];\n            }\n        }\n\n        return feature;\n    }\n\n\n    /**\n     * Decode UCSC \"interact\" files.  See https://genome.ucsc.edu/goldenpath/help/interact.html\n     * @param tokens\n     * @param ignore\n     * @returns {*}\n     */\n    function decodeInteract(tokens, ignore) {\n\n        if (tokens.length < 6) {\n            console.log(\"Skipping line: \" + nextLine);\n            return undefined;\n        }\n\n        var feature = {\n            chr1: tokens[8],\n            start1: Number.parseInt(tokens[9]),\n            end1: Number.parseInt(tokens[10]),\n            chr2: tokens[13],\n            start2: Number.parseInt(tokens[14]),\n            end2: Number.parseInt(tokens[15]),\n\n            name: tokens[3],\n            score: Number.parseFloat(tokens[4]),\n            value: Number.parseFloat(tokens[5]),\n            color: tokens[6]\n\n        }\n\n        feature.chr = feature.chr1 === feature.chr2 ? feature.chr1 : \"MIXED\";\n\n        // Start and end for the feature as a whole.  This needs revisited for interchr features\n        feature.start = Math.min(feature.start1, feature.start2);\n        feature.end = Math.max(feature.end1, feature.end2);\n\n        // Midpoints\n        let m1 = (feature.start1 + feature.end1) / 2;\n        let m2 = (feature.start2 + feature.end2) / 2;\n        feature.m1 = (m1 < m2) ? m1 : m2;\n        feature.m2 = (m1 < m2) ? m2 : m1;\n\n        // Optional extra columns\n        if (this.header) {\n            let thicknessColumn = this.header.thicknessColumn;\n            let colorColumn = this.header.colorColumn;\n            if (colorColumn && colorColumn < tokens.length) {\n                feature.color = igv.Color.createColorString(tokens[colorColumn])\n            }\n            if (thicknessColumn && thicknessColumn < tokens.length) {\n                feature.thickness = tokens[thicknessColumn];\n            }\n        }\n\n        return feature;\n    }\n\n    /**\n     * Special decoder for Hic Domain files.   In these files feature1 == feature2, they are really bed records.\n     * @param tokens\n     * @param ignore\n     * @returns {*}\n     */\n    function decodeBedpeDomain(tokens, ignore) {\n\n        return {\n            chr: tokens[0],\n            start: Number.parseInt(tokens[1]),\n            end: Number.parseInt(tokens[2]),\n            color: igv.Color.createColorString(tokens[6]),\n            score: Number.parseFloat(tokens[7])\n        };\n    }\n\n\n    function decodeSNP(tokens, ignore) {\n\n        const autoSql = [\n            'bin',\n            'chr',\n            'start',\n            'end',\n            'name',\n            'score',\n            'strand',\n            'refNCBI',\n            'refUCSC',\n            'observed',\n            'molType',\n            'class',\n            'valid',\n            'avHet',\n            'avHetSE',\n            'func',\n            'locType',\n            'weight',\n            'exceptions',\n            'submitterCount',\n            'submitters',\n            'alleleFreqCount',\n            'alleles',\n            'alleleNs',\n            'alleleFreqs',\n            'bitfields'\n        ];\n\n        const feature = {\n            chr: tokens[1],\n            start: Number.parseInt(tokens[2]),\n            end: Number.parseInt(tokens[3]),\n            name: tokens[4],\n            score: Number.parseInt(tokens[5])\n        };\n\n        const n = Math.min(tokens.length, autoSql.length);\n        for (let i = 6; i < n; i++) {\n            feature[autoSql[i]] = tokens[i];\n        }\n        return feature;\n\n    }\n\n\n    /**\n     * Decode a custom columnar format.  Required columns are 'chr' and 'start'\n     *\n     * @param tokens\n     * @param ignore\n     * @returns decoded feature, or null if this is not a valid record\n     */\n    function decodeCustom(tokens, ignore) {\n\n        const format = this.format;         // \"this\" refers to FeatureParser instance\n        const coords = format.coords || 0;\n\n        // Insure that chr and start fields are defined.\n        //if(!this.format.chr && this.format.start) {\n        //}\n\n\n        const chr = tokens[format.chr];\n        const start = parseInt(tokens[format.start]) - coords;\n        const end = format.end !== undefined ? parseInt(tokens[format.end]) : start + 1;\n\n        const feature = {chr: chr, start: start, end: end};\n\n        if (format.fields) {\n\n            format.fields.forEach(function (field, index) {\n\n                if (index != format.chr &&\n                    index != format.start &&\n                    index != format.end) {\n\n                    feature[field] = tokens[index];\n                }\n            });\n        }\n\n        return feature;\n\n    }\n\n\n    function expandFormat(format) {\n\n        const fields = format.fields;\n        const keys = ['chr', 'start', 'end'];\n\n        for (let i = 0; i < fields.length; i++) {\n            for (let key of keys) {\n                if (key === fields[i]) {\n                    format[key] = i;\n                }\n            }\n        }\n\n        return format;\n    }\n\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2015 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    const MAX_GZIP_BLOCK_SIZE = (1 << 16);\n\n    var queryableFormats = new Set([\"bigwig\", \"bw\", \"bigbed\", \"bb\", \"tdf\"]);\n\n    /**\n     * feature source for \"bed like\" files (tab delimited files with 1 feature per line: bed, gff, vcf, etc)\n     *\n     * @param config\n     * @constructor\n     */\n    igv.FeatureSource = function (config, genome) {\n\n        this.config = config || {};\n        this.genome = genome;\n\n        this.sourceType = (config.sourceType === undefined ? \"file\" : config.sourceType);\n\n        // Default GFF filter -- these feature types will be filtered out\n        if (undefined === config.filterTypes) {\n            config.filterTypes = ['chromosome', 'gene']\n        }\n\n        if (config.features && Array.isArray(config.features)) {\n            let features = config.features;\n            if (config.mappings) {\n                mapProperties(features, config.mappings)\n            }\n            this.queryable = false;\n            this.featureCache = new igv.FeatureCache(features, genome);\n            this.static = true;\n        }\n        else if (config.sourceType === \"ga4gh\") {\n            this.reader = new igv.Ga4ghVariantReader(config, genome);\n            this.queryable = true;\n        } else if (config.sourceType === \"immvar\") {\n            this.reader = new igv.ImmVarReader(config);\n            this.queryable = true;\n        } else if (config.type === \"eqtl\" && config.sourceType === \"gtex-ws\") {\n            this.reader = new igv.GtexReader(config);\n            this.queryable = true;\n        } else if (config.sourceType === \"bigquery\") {\n            this.reader = new igv.BigQueryFeatureReader(config);\n            this.queryable = true;\n        } else if (config.sourceType === 'ucscservice') {\n            this.reader = new igv.UCSCServiceReader(config.source);\n            this.queryable = true;\n        } else if (config.sourceType === 'custom' || config.source !== undefined) {    // Second test for backward compatibility\n            this.reader = new igv.CustomServiceReader(config.source);\n            this.queryable = config.source.queryable !== undefined ? config.source.queryable : true;\n        }\n        else if (\"civic-ws\" === config.sourceType) {\n            this.reader = new igv.CivicReader(config);\n            this.queryable = false;\n        }\n        else {\n            this.reader = new igv.FeatureFileReader(config, genome);\n            if (config.queryable != undefined) {\n                this.queryable = config.queryable\n            } else if (queryableFormats.has(config.format)) {\n                this.queryable = true;\n            }\n            else {\n                // Leav undefined -- will defer until we know if reader has an index\n            }\n        }\n\n\n        this.visibilityWindow = config.visibilityWindow;\n\n    };\n\n    igv.FeatureSource.prototype.supportsWholeGenome = function () {\n        return !this.queryable;\n    }\n\n    igv.FeatureSource.prototype.getFileHeader = function () {\n\n        const self = this;\n        const genome = this.genome;\n        const maxRows = this.config.maxRows || 500;\n\n\n        if (self.header) {\n            return Promise.resolve(self.header);\n        } else {\n            if (self.reader && typeof self.reader.readHeader === \"function\") {\n\n                return self.reader.readHeader()\n\n                    .then(function (header) {\n\n                        // Non-indexed readers will return features as a side effect.  This is an important,\n                        // if unfortunate, performance hack\n                        if (header) {\n\n                            self.header = header;\n\n                            var features = header.features;\n\n                            if (features) {\n\n                                if (\"gtf\" === self.config.format || \"gff3\" === self.config.format || \"gff\" === self.config.format) {\n                                    features = (new igv.GFFHelper(self.config)).combineFeatures(features);\n                                }\n\n                                // Assign overlapping features to rows\n                                packFeatures(features, maxRows);\n                                self.featureCache = new igv.FeatureCache(features, genome);\n\n                                // If track is marked \"searchable\"< cache features by name -- use this with caution, memory intensive\n                                if (self.config.searchable) {\n                                    addFeaturesToDB.call(self, features);\n                                }\n                            }\n                        }\n\n                        if (header && header.format) {\n                            self.config.format = header.format;\n                        }\n\n                        return header;\n                    })\n            }\n            else {\n                self.header = {};\n                return Promise.resolve(self.header);\n            }\n        }\n\n    };\n\n    function addFeaturesToDB(featureList) {\n        let self = this;\n\n        featureList.forEach(function (feature) {\n            if (feature.name) {\n                //TODO igv.browser => igv.Globals or igv.FeatureDB\n                self.config.browser.featureDB[feature.name.toLowerCase()] = feature;\n            }\n        });\n\n    }\n\n\n    /**\n     * Required function fo all data source objects.  Fetches features for the\n     * range requested and passes them on to the success function.  Usually this is\n     * a function that renders the features on the canvas\n     *\n     * @param chr\n     * @param bpStart\n     * @param bpEnd\n     * @param bpPerPixel\n     */\n\n    igv.FeatureSource.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel, visibilityWindow) {\n\n        const self = this;\n        const reader = this.reader;\n        const genome = this.genome;\n        const supportWholeGenome = this.config.supportWholeGenome;\n        const queryChr = genome ? genome.getChromosomeName(chr) : chr;\n        const maxRows = self.config.maxRows || 500;\n\n        return getFeatureCache()\n\n            .then(function (featureCache) {\n\n                const isQueryable = self.queryable;\n\n                if (\"all\" === chr.toLowerCase()) {\n                    if (isQueryable) {    // Strange test -- what it really means is are we querying for specific regions\n                        return [];\n                    }\n                    else {\n                        return self.getWGFeatures(featureCache.getAllFeatures());\n                    }\n                }\n                else {\n                    return self.featureCache.queryFeatures(queryChr, bpStart, bpEnd);\n                }\n\n            })\n\n\n        function getFeatureCache() {\n\n            var genomicInterval;\n\n            let intervalStart = bpStart;\n            let intervalEnd = bpEnd;\n\n            genomicInterval = new igv.GenomicInterval(queryChr, intervalStart, intervalEnd);\n\n            if (self.featureCache &&\n                (self.static || self.featureCache.containsRange(genomicInterval) || \"all\" === chr.toLowerCase())) {\n\n                return Promise.resolve(self.featureCache);\n            }\n            else {\n\n                // If a visibility window is defined, potentially expand query interval.\n                // This can save re-queries as we zoom out.  Visibility window <= 0 is a special case\n                // indicating whole chromosome should be read at once.\n                if (visibilityWindow <= 0) {\n                    // Whole chromosome\n                    intervalStart = 0;\n                    intervalEnd = Number.MAX_VALUE;\n                }\n                else if (visibilityWindow > (bpEnd - bpStart)) {\n                    const expansionWindow = Math.min(4.1 * (bpEnd - bpStart), visibilityWindow)\n                    intervalStart = Math.max(0, (bpStart + bpEnd - expansionWindow) / 2);\n                    intervalEnd = bpStart + expansionWindow;\n                }\n                genomicInterval = new igv.GenomicInterval(queryChr, intervalStart, intervalEnd);\n\n\n                return reader.readFeatures(queryChr, genomicInterval.start, genomicInterval.end)\n\n                    .then(function (featureList) {\n\n                        if (self.queryable === undefined) self.queryable = reader.indexed;\n\n                        if (featureList) {\n\n                            if (\"gtf\" === self.config.format || \"gff3\" === self.config.format || \"gff\" === self.config.format) {\n                                featureList = (new igv.GFFHelper(self.config)).combineFeatures(featureList);\n                            }\n\n                            // Assign overlapping features to rows\n                            packFeatures(featureList, maxRows);\n\n                            // Note - replacing previous cache with new one\n                            self.featureCache = self.queryable ?\n                                new igv.FeatureCache(featureList, genome, genomicInterval) :\n                                new igv.FeatureCache(featureList, genome);\n\n\n                            // If track is marked \"searchable\"< cache features by name -- use this with caution, memory intensive\n                            if (self.config.searchable) {\n                                addFeaturesToDB.call(self, featureList);\n                            }\n                        }\n                        else {\n                            self.featureCache = new igv.FeatureCache();     // Empty cache\n                        }\n\n                        return self.featureCache;\n\n                    })\n            }\n        }\n    };\n\n\n    function packFeatures(features, maxRows) {\n\n        if (features == null || features.length === 0) {\n            return;\n        }\n\n        // Segregate by chromosome\n\n        var chrFeatureMap = {},\n            chrs = [];\n        features.forEach(function (feature) {\n\n            var chr = feature.chr,\n                flist = chrFeatureMap[chr];\n\n            if (!flist) {\n                flist = [];\n                chrFeatureMap[chr] = flist;\n                chrs.push(chr);\n            }\n\n            flist.push(feature);\n        });\n\n        // Loop through chrosomosomes and pack features;\n\n        chrs.forEach(function (chr) {\n\n            pack(chrFeatureMap[chr], maxRows);\n        });\n\n\n        // Assigns a row # to each feature.  If the feature does not fit in any row and #rows == maxRows no\n        // row number is assigned.\n        function pack(featureList, maxRows) {\n\n            const rows = [];\n            featureList.sort(function (a, b) {\n                return a.start - b.start;\n            })\n            rows.push(-1000);\n\n            featureList.forEach(function (feature) {\n\n                let r = 0\n                const len = Math.min(rows.length, maxRows)\n                for (r = 0; r < len; r++) {\n                    if (feature.start > rows[r]) {\n                        feature.row = r;\n                        rows[r] = feature.end;\n                        return;\n                    }\n                }\n                feature.row = r;\n                rows[r] = feature.end;\n\n\n            });\n        }\n    }\n\n    // TODO -- filter by pixel size\n    igv.FeatureSource.prototype.getWGFeatures = function (features) {\n\n        const genome = this.genome;\n\n        const wgChromosomeNames = new Set(genome.wgChromosomeNames);\n\n        const wgFeatures = [];\n\n        for (let f of features) {\n\n            let queryChr = genome.getChromosomeName(f.chr);\n\n            if (wgChromosomeNames.has(queryChr)) {\n\n                const wg = Object.create(Object.getPrototypeOf(f));\n                Object.assign(wg, f);\n\n                wg.chr = \"all\";\n                wg.start = genome.getGenomeCoordinate(f.chr, f.start);\n                wg.end = genome.getGenomeCoordinate(f.chr, f.end);\n\n                // Don't draw exons in whole genome view\n                if (wg[\"exons\"]) delete wg[\"exons\"]\n\n                wgFeatures.push(wg);\n            }\n        }\n\n        wgFeatures.sort(function (a, b) {\n            return a.start - b.start;\n        });\n\n        return wgFeatures;\n\n    }\n\n\n    function mapProperties(features, mappings) {\n        let mappingKeys = Object.keys(mappings);\n        features.forEach(function (f) {\n            mappingKeys.forEach(function (key) {\n                f[key] = f[mappings[key]];\n            });\n        });\n    }\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nfunction getProductColor(product) {\n    let color;\n    if (product in window.colors) {\n        color = window.colors[product];\n    } else {\n        color = getRandomColor();\n        window.colors[product] = color;\n    }\n    return color;\n\n}\n\nfunction getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nwindow.colors = {};\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    var type = \"feature\";\n\n    let FeatureTrack;\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    igv.trackFactory[type] = function (config, browser) {\n\n        if (!FeatureTrack) {\n            defineClass();\n        }\n\n        return new FeatureTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        FeatureTrack = igv.extend(igv.TrackBase,\n\n            function (config, browser) {\n\n                this.type = type;\n\n                igv.TrackBase.call(this, config, browser);\n\n                // Set maxRows -- protects against pathological feature packing cases (# of rows of overlapping feaures)\n                if (config.maxRows === undefined) {\n                    config.maxRows = 500;\n                }\n                this.maxRows = config.maxRows;\n\n                this.displayMode = config.displayMode || \"EXPANDED\";    // COLLAPSED | EXPANDED | SQUISHED\n                this.labelDisplayMode = config.labelDisplayMode;\n\n                const format = config.format ? config.format.toLowerCase() : undefined;\n                if ('bigwig' === format || 'bigbed' === format) {\n                    this.featureSource = new igv.BWSource(config, browser.genome);\n\n                }\n                else {\n                    this.featureSource = new igv.FeatureSource(config, browser.genome);\n                }\n\n                // Set default heights\n                this.autoHeight = config.autoHeight;\n                this.margin = config.margin === undefined ? 10 : config.margin;\n\n                this.featureHeight = config.featureHeight || 14;\n\n                if (\"FusionJuncSpan\" === config.type) {\n                    this.squishedRowHeight = config.squishedRowHeight || 50;\n                    this.expandedRowHeight = config.expandedRowHeight || 50;\n                    this.height = config.height || this.margin + 2 * this.expandedRowHeight;\n                }\n                else if ('snp' === config.type) {\n                    this.expandedRowHeight = config.expandedRowHeight || 10;\n                    this.squishedRowHeight = config.squishedRowHeight || 5;\n                    this.height = config.height || 30;\n                }\n                else {\n                    this.squishedRowHeight = config.squishedRowHeight || 15;\n                    this.expandedRowHeight = config.expandedRowHeight || 30;\n                    this.height = config.height || this.margin + 2 * this.expandedRowHeight;\n                }\n\n\n                // Set the render function.  This can optionally be passed in the config\n                if (config.render) {\n                    this.render = config.render;\n                } else if (\"FusionJuncSpan\" === config.type) {\n                    this.render = renderFusionJuncSpan;\n                }\n                else if ('snp' === config.type) {\n                    this.render = renderSnp;\n                    // colors ordered based on priority least to greatest\n                    this.snpColors = ['rgb(0,0,0)', 'rgb(0,0,255)', 'rgb(0,255,0)', 'rgb(255,0,0)'];\n                    this.colorBy = 'function';\n                }\n                else {\n                    this.render = renderFeature;\n                    this.arrowSpacing = 30;\n                    // adjust label positions to make sure they're always visible\n                    monitorTrackDrag(this);\n                }\n\n            });\n\n        FeatureTrack.prototype.postInit = function () {\n\n            const self = this;\n            const format = this.config.format;\n\n            if (format && format.toLowerCase() === 'bigbed' && this.visibilityWindow === undefined) {\n\n                return this.featureSource.defaultVisibilityWindow()\n                    .then(function (visibilityWindow) {\n                        self.visibilityWindow = visibilityWindow;\n                        return self;\n                    })\n            }\n            else {\n                return Promise.resolve(self);\n            }\n\n        }\n\n        FeatureTrack.prototype.supportsWholeGenome = function () {\n            return this.config.indexed === false && this.config.supportsWholeGenome !== false\n        }\n\n        FeatureTrack.prototype.getFileHeader = function () {\n\n            const self = this;\n\n            if (typeof self.featureSource.getFileHeader === \"function\") {\n\n                if (self.header) {\n                    return Promise.resolve(self.header);\n                }\n                else {\n                    return self.featureSource.getFileHeader()\n\n                        .then(function (header) {\n\n                            if (header) {\n                                // Header (from track line).  Set properties,unless set in the config (config takes precedence)\n                                if (header.name && !self.config.name) {\n                                    self.name = header.name;\n                                }\n                                if (header.color && !self.config.color) {\n                                    self.color = \"rgb(\" + header.color + \")\";\n                                }\n                                self.header = header;\n                            }\n                            else {\n                                self.header = {};\n                            }\n\n                            return header;\n\n                        })\n                }\n            }\n            else {\n                return Promise.resolve(null);\n            }\n        };\n\n        FeatureTrack.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel) {\n\n            const self = this;\n\n            return this.getFileHeader()\n\n                .then(function (header) {\n                    return self.featureSource.getFeatures(chr, bpStart, bpEnd, bpPerPixel, self.visibilityWindow);\n                });\n        };\n\n\n        /**\n         * The required height in pixels required for the track content.   This is not the visible track height, which\n         * can be smaller (with a scrollbar) or larger.\n         *\n         * @param features\n         * @returns {*}\n         */\n        FeatureTrack.prototype.computePixelHeight = function (features) {\n\n\n            if (this.displayMode === \"COLLAPSED\") {\n                return this.margin + this.expandedRowHeight;\n            }\n            else {\n                let maxRow = 0;\n                if (features && (typeof features.forEach === \"function\")) {\n                    features.forEach(function (feature) {\n\n                        if (feature.row && feature.row > maxRow) {\n                            maxRow = feature.row;\n                        }\n\n                    });\n                }\n\n                const height = this.margin + (maxRow + 1) * (\"SQUISHED\" === this.displayMode ? this.squishedRowHeight : this.expandedRowHeight);\n                return height;\n\n            }\n\n        };\n\n        FeatureTrack.prototype.draw = function (options) {\n\n            const self = this;\n            const featureList = options.features;\n            const ctx = options.context;\n            const bpPerPixel = options.bpPerPixel;\n            const bpStart = options.bpStart;\n            const pixelWidth = options.pixelWidth;\n            const pixelHeight = options.pixelHeight;\n            const bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\n\n            igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n            if (featureList) {\n\n                const selectedFeatureName = igv.selectedGene ? igv.selectedGene.toUpperCase() : undefined;\n\n                let selectedFeature;\n                let lastPxEnd = [];\n\n                for (let feature of featureList) {\n\n                    if (feature.end < bpStart) continue;\n                    if (feature.start > bpEnd) break;\n\n                    if (!selectedFeature && selectedFeatureName && selectedFeatureName === feature.name.toUpperCase()) {\n                        selectedFeature = feature;\n                    }\n                    else {\n                        const row = this.displayMode === 'COLLAPSED' ? 0 : feature.row;\n                        const pxEnd = Math.ceil((feature.end - bpStart) / bpPerPixel);\n                        const last = lastPxEnd[row];\n                        if (!last || pxEnd > last) {\n                            self.render.call(this, feature, bpStart, bpPerPixel, pixelHeight, ctx, options);\n\n                            // Ensure a visible gap between features\n                            const pxStart = Math.floor((feature.start - bpStart) / bpPerPixel)\n                            if (last && pxStart - last <= 0) {\n                                ctx.globalAlpha = 0.5\n                                igv.graphics.strokeLine(ctx, pxStart, 0, pxStart, pixelHeight, {'strokeStyle': \"rgb(255, 255, 255)\"})\n                                ctx.globalAlpha = 1.0\n                            }\n                            lastPxEnd[row] = pxEnd;\n                        }\n                    }\n                }\n\n                if (selectedFeature) {\n                    const c = selectedFeature.color;\n                    selectedFeature.color = \"rgb(255,0,0)\";\n                    self.render.call(this, selectedFeature, bpStart, bpPerPixel, pixelHeight, ctx, options);\n                    selectedFeature.color = c;\n                }\n            }\n            else {\n                console.log(\"No feature list\");\n            }\n\n        };\n\n\n        /**\n         * Return \"popup data\" for feature @ genomic location.  Data is an array of key-value pairs\n         */\n        FeatureTrack.prototype.popupData = function (clickState) {\n\n            let self = this;\n\n            const yOffset = clickState.y - this.margin;\n            const features = filterByRow(this.clickedFeatures(clickState), yOffset);\n            const genomicLocation = clickState.genomicLocation;\n\n            const data = [];\n            for (let feature of features) {\n\n                const featureData = feature.popupData ? feature.popupData(genomicLocation) : this.extractPopupData(feature);\n\n                if (featureData) {\n                    if (data.length > 0) {\n                        data.push(\"<HR>\");\n                    }\n                    Array.prototype.push.apply(data, featureData);\n                }\n            }\n            ;\n\n            return data;\n\n            function filterByRow(features, y) {\n\n                let row;\n                switch (self.displayMode) {\n                    case 'SQUISHED':\n                        row = Math.floor(y / self.squishedRowHeight);\n                        break;\n                    case 'EXPANDED':\n                        row = Math.floor(y / self.expandedRowHeight);\n                        break;\n                    default:\n                        row = undefined;\n                }\n\n                return features.filter(function (feature) {\n                    return (row === undefined || feature.row === undefined || row === feature.row);\n                })\n            }\n\n        };\n\n\n        FeatureTrack.prototype.menuItemList = function () {\n\n            const self = this;\n            const menuItems = [];\n\n            if (this.render === renderSnp) {\n                ([\"function\", \"class\"]).forEach(function (colorScheme) {\n                    menuItems.push({\n                        object: igv.createCheckbox('Color by ' + colorScheme, colorScheme === self.colorBy),\n                        click: function () {\n                            self.colorBy = colorScheme;\n                            self.trackView.repaintViews();\n                        }\n                    });\n                });\n\n                menuItems.push({object: $('<div class=\"igv-track-menu-border-top\">')});\n\n            }\n\n            menuItems.push({object: $('<div class=\"igv-track-menu-border-top\">')});\n\n            [\"COLLAPSED\", \"SQUISHED\", \"EXPANDED\"].forEach(function (displayMode) {\n                const lut =\n                    {\n                        \"COLLAPSED\": \"Collapse\",\n                        \"SQUISHED\": \"Squish\",\n                        \"EXPANDED\": \"Expand\"\n                    };\n\n                menuItems.push(\n                    {\n                        object: igv.createCheckbox(lut[displayMode], displayMode === self.displayMode),\n                        click: function () {\n                            self.displayMode = displayMode;\n                            self.config.displayMode = displayMode;\n                            self.trackView.checkContentHeight();\n                            self.trackView.repaintViews();\n                        }\n                    });\n            });\n\n            return menuItems;\n\n        };\n\n\n        FeatureTrack.prototype.description = function () {\n\n            // if('snp' === this.type) {\n            if (renderSnp === this.render) {\n                let desc = \"<html>\" + this.name + \"<hr>\";\n                desc += '<em>Color By Function:</em><br>';\n                desc += '<span style=\"color:red\">Red</span>: Coding-Non-Synonymous, Splice Site<br>';\n                desc += '<span style=\"color:green\">Green</span>: Coding-Synonymous<br>';\n                desc += '<span style=\"color:blue\">Blue</span>: Untranslated<br>';\n                desc += '<span style=\"color:black\">Black</span>: Intron, Locus, Unknown<br><br>';\n                desc += '<em>Color By Class:</em><br>';\n                desc += '<span style=\"color:red\">Red</span>: Deletion<br>';\n                desc += '<span style=\"color:green\">Green</span>: MNP<br>';\n                desc += '<span style=\"color:blue\">Blue</span>: Microsatellite, Named<br>';\n                desc += '<span style=\"color:black\">Black</span>: Indel, Insertion, SNP';\n                desc += \"</html>\";\n                return desc;\n            }\n            else {\n                return this.name;\n            }\n\n        };\n\n        /**\n         * Called when the track is removed.  Do any needed cleanup here\n         */\n        FeatureTrack.prototype.dispose = function () {\n            this.trackView = undefined;\n        }\n\n\n        /**\n         * Monitors track drag events, updates label position to ensure that they're always visible.\n         * @param track\n         */\n        function monitorTrackDrag(track) {\n\n            if (track.browser.on) {\n                track.browser.on('trackdragend', onDragEnd);\n                track.browser.on('trackremoved', unSubscribe);\n            }\n\n            function onDragEnd() {\n                if (!track.trackView || !track.trackView.tile || track.displayMode === \"SQUISHED\") {\n                    return;\n                }\n                track.trackView.repaintViews();\n            }\n\n            function unSubscribe(removedTrack) {\n                if (track.browser.un && track === removedTrack) {\n                    track.browser.un('trackdrag', onDragEnd);\n                    track.browser.un('trackremoved', unSubscribe);\n                }\n            }\n\n        }\n\n        /**\n         * @param feature\n         * @param bpStart  genomic location of the left edge of the current canvas\n         * @param xScale  scale in base-pairs per pixel\n         * @returns {{px: number, px1: number, pw: number, h: number, py: number}}\n         */\n        function calculateFeatureCoordinates(feature, bpStart, xScale) {\n            let px = (feature.start - bpStart) / xScale;\n            let px1 = (feature.end - bpStart) / xScale;\n            //px = Math.round((feature.start - bpStart) / xScale),\n            //px1 = Math.round((feature.end - bpStart) / xScale),\n            let pw = px1 - px;\n\n            if (pw < 3) {\n                pw = 3;\n                px -= 1.5;\n            }\n\n            return {\n                px: px,\n                px1: px1,\n                pw: pw\n            };\n        }\n\n        /**\n         *\n         * @param feature\n         * @param bpStart  genomic location of the left edge of the current canvas\n         * @param xScale  scale in base-pairs per pixel\n         * @param pixelHeight  pixel height of the current canvas\n         * @param ctx  the canvas 2d context\n         * @param options  genomic state\n         */\n        function renderFeature(feature, bpStart, xScale, pixelHeight, ctx, options) {\n\n            const browser = this.browser;\n\n            let color = this.color;  // default\n\n            if (feature.alpha && feature.alpha !== 1) {\n                color = igv.Color.addAlpha(this.color, feature.alpha);\n            }\n\n\n            if (this.config.colorBy) {\n                const colorByValue = feature[this.config.colorBy.field];\n                if (colorByValue) {\n                    color = this.config.colorBy.pallete[colorByValue];\n                }\n            }\n\n            else if (feature.color) {\n                color = feature.color;\n            }\n            ctx.fillStyle = color;\n            ctx.strokeStyle = color;\n\n            let h;\n            let py;\n            if (this.displayMode === \"SQUISHED\" && feature.row !== undefined) {\n                h = this.featureHeight / 2;\n                py = this.margin + this.squishedRowHeight * feature.row;\n            } else if (this.displayMode === \"EXPANDED\" && feature.row !== undefined) {\n                h = this.featureHeight\n                py = this.margin + this.expandedRowHeight * feature.row;\n            } else {  // collapsed\n                h = this.featureHeight;\n                py = this.margin;\n            }\n\n            const cy = py + h / 2;\n            const h2 = h / 2;\n            const py2 = cy - h2 / 2;\n\n            const exonCount = feature.exons ? feature.exons.length : 0;\n            const coord = calculateFeatureCoordinates(feature, bpStart, xScale);\n            const step = this.arrowSpacing;\n            const direction = feature.strand === '+' ? 1 : feature.strand === '-' ? -1 : 0;\n\n            if (exonCount === 0) {\n                // single-exon transcript\n                ctx.fillRect(coord.px, py, coord.pw, h);\n\n                // Arrows\n                // Do not draw if strand is not +/-\n                if (direction !== 0) {\n                    ctx.fillStyle = \"white\";\n                    ctx.strokeStyle = \"white\";\n                    for (let x = coord.px + step / 2; x < coord.px1; x += step) {\n                        // draw arrowheads along central line indicating transcribed orientation\n                        igv.graphics.strokeLine(ctx, x - direction * 2, cy - 2, x, cy);\n                        igv.graphics.strokeLine(ctx, x - direction * 2, cy + 2, x, cy);\n                    }\n                    ctx.fillStyle = color;\n                    ctx.strokeStyle = color;\n                }\n            }\n            else {\n                // multi-exon transcript\n                igv.graphics.strokeLine(ctx, coord.px + 1, cy, coord.px1 - 1, cy); // center line for introns\n\n                const pixelWidth = options.pixelWidth;\n\n                const xLeft = Math.max(0, coord.px) + step / 2;\n                const xRight = Math.min(pixelWidth, coord.px1);\n                for (let x = xLeft; x < xRight; x += step) {\n                    // draw arrowheads along central line indicating transcribed orientation\n                    igv.graphics.strokeLine(ctx, x - direction * 2, cy - 2, x, cy);\n                    igv.graphics.strokeLine(ctx, x - direction * 2, cy + 2, x, cy);\n                }\n\n\n                let srcField, reg;\n                if (window.hasOwnProperty('colorBy')){\n                    srcField = window.colorBy;\n                    reg = new RegExp(srcField+'=([^;]+)');\n                }\n\n\n                for (let e = 0; e < exonCount; e++) {\n                    // draw the exons\n                    const exon = feature.exons[e];\n                    if (window.hasOwnProperty('colorBy')){\n                        const match = reg.exec(exon['attributeString']);\n                        try{\n                            color = getProductColor(match[1]);\n                        } catch(e){\n                            console.debug(e);\n                            console.debug(match);\n                            console.debug(exon['attributeString']);\n                            color = window.defaultColor;\n                        }\n                        ctx.fillStyle = color;\n                    }\n                    let ePx = Math.round((exon.start - bpStart) / xScale);\n                    let ePx1 = Math.round((exon.end - bpStart) / xScale);\n                    let ePw = Math.max(1, ePx1 - ePx);\n                    let ePxU;\n\n                    if (ePx + ePw < 0) {\n                        continue;  // Off the left edge\n                    }\n                    if (ePx > pixelWidth) {\n                        break; // Off the right edge\n                    }\n\n                    if (exon.utr) {\n                        ctx.fillRect(ePx, py2, ePw, h2); // Entire exon is UTR\n                    }\n                    else {\n                        if (exon.cdStart) {\n                            ePxU = Math.round((exon.cdStart - bpStart) / xScale);\n                            ctx.fillRect(ePx, py2, ePxU - ePx, h2); // start is UTR\n                            ePw -= (ePxU - ePx);\n                            ePx = ePxU;\n\n                        }\n                        if (exon.cdEnd) {\n                            ePxU = Math.round((exon.cdEnd - bpStart) / xScale);\n                            ctx.fillRect(ePxU, py2, ePx1 - ePxU, h2); // start is UTR\n                            ePw -= (ePx1 - ePxU);\n                            ePx1 = ePxU;\n                        }\n\n                        ctx.fillRect(ePx, py, ePw, h);\n\n                        // Arrows\n                        if (ePw > step + 5 && direction !== 0) {\n                            ctx.fillStyle = \"white\";\n                            ctx.strokeStyle = \"white\";\n                            for (let x = ePx + step / 2; x < ePx1; x += step) {\n                                // draw arrowheads along central line indicating transcribed orientation\n                                igv.graphics.strokeLine(ctx, x - direction * 2, cy - 2, x, cy);\n                                igv.graphics.strokeLine(ctx, x - direction * 2, cy + 2, x, cy);\n                            }\n                            ctx.fillStyle = color;\n                            ctx.strokeStyle = color;\n\n                        }\n                    }\n                }\n            }\n\n            const windowX = Math.round(options.viewportContainerX);\n            const nLoci = browser.genomicStateList ? browser.genomicStateList.length : 1\n            const windowX1 = windowX + options.viewportContainerWidth / nLoci;\n\n            renderFeatureLabels.call(this, ctx, feature, coord.px, coord.px1, py, windowX, windowX1, options.genomicState, options);\n        }\n\n        /**\n         * @param ctx       the canvas 2d context\n         * @param feature\n         * @param featureX  feature start x-coordinate\n         * @param featureX1 feature end x-coordinate\n         * @param featureY  feature y-coordinate\n         * @param windowX   visible window start x-coordinate\n         * @param windowX1  visible window end x-coordinate\n         * @param genomicState  genomic state\n         * @param options  options\n         */\n        function renderFeatureLabels(ctx, feature, featureX, featureX1, featureY, windowX, windowX1, genomicState, options) {\n\n            var geneColor, geneFontStyle, transform,\n                boxX, boxX1,    // label should be centered between these two x-coordinates\n                labelX, labelY,\n                textFitsInBox,\n                selectedFeatureName = igv.selectedGene ? igv.selectedGene.toUpperCase() : undefined;    // <= for juicebox\n\n            // feature outside of viewable window\n            if (featureX1 < windowX || featureX > windowX1) {\n                boxX = featureX;\n                boxX1 = featureX1;\n            } else {\n                // center label within visible portion of the feature\n                boxX = Math.max(featureX, windowX);\n                boxX1 = Math.min(featureX1, windowX1);\n            }\n\n            if (genomicState.selection && igv.GtexUtils.gtexLoaded && feature.name !== undefined) {\n                // TODO -- for gtex, figure out a better way to do this\n                geneColor = genomicState.selection.colorForGene(feature.name);\n            }\n\n\n            textFitsInBox = (boxX1 - boxX) > ctx.measureText(feature.name).width;\n\n            if ((feature.name !== undefined && feature.name.toUpperCase() === selectedFeatureName) ||\n                ((textFitsInBox || geneColor) && this.displayMode !== \"SQUISHED\" && feature.name !== undefined)) {\n                geneFontStyle = {\n                    // font: '10px PT Sans',\n                    textAlign: 'center',\n                    fillStyle: geneColor || feature.color || this.color,\n                    strokeStyle: geneColor || feature.color || this.color\n                };\n\n                if (this.displayMode === \"COLLAPSED\" && this.labelDisplayMode === \"SLANT\") {\n                    transform = {rotate: {angle: 45}};\n                    delete geneFontStyle.textAlign;\n                }\n\n                labelX = boxX + ((boxX1 - boxX) / 2);\n                labelY = getFeatureLabelY(featureY, transform);\n\n                // TODO: This is for compatibility with JuiceboxJS.\n                if (options.labelTransform) {\n                    ctx.save();\n                    options.labelTransform(ctx, labelX);\n                    igv.graphics.fillText(ctx, feature.name, labelX, labelY, geneFontStyle, undefined);\n                    ctx.restore();\n\n                } else {\n                    igv.graphics.fillText(ctx, feature.name, labelX, labelY, geneFontStyle, transform);\n                }\n\n            }\n        }\n\n\n        function getFeatureLabelY(featureY, transform) {\n            return transform ? featureY + 20 : featureY + 25;\n        }\n\n        /**\n         *\n         * @param feature\n         * @param bpStart  genomic location of the left edge of the current canvas\n         * @param xScale  scale in base-pairs per pixel\n         * @param pixelHeight  pixel height of the current canvas\n         * @param ctx  the canvas 2d context\n         */\n        function renderFusionJuncSpan(feature, bpStart, xScale, pixelHeight, ctx) {\n\n            var py;\n            var rowHeight = (this.displayMode === \"EXPANDED\") ? this.squishedRowHeight : this.expandedRowHeight;\n\n            if (this.display === \"COLLAPSED\") {\n                py = this.margin;\n            }\n            if (this.displayMode === \"SQUISHED\" && feature.row != undefined) {\n                py = this.margin + rowHeight * feature.row;\n            }\n            else if (this.displayMode === \"EXPANDED\" && feature.row != undefined) {\n                py = this.margin + rowHeight * feature.row;\n            }\n\n            var cy = py + 0.5 * rowHeight;\n            var top_y = cy - 0.5 * rowHeight;\n            var bottom_y = cy + 0.5 * rowHeight;\n\n            // draw the junction arc\n            var junction_left_px = Math.round((feature.junction_left - bpStart) / xScale);\n            var junction_right_px = Math.round((feature.junction_right - bpStart) / xScale);\n\n\n            ctx.beginPath();\n            ctx.moveTo(junction_left_px, cy);\n            ctx.bezierCurveTo(junction_left_px, top_y, junction_right_px, top_y, junction_right_px, cy);\n\n            ctx.lineWidth = 1 + Math.log(feature.num_junction_reads) / Math.log(2);\n            ctx.strokeStyle = 'blue';\n            ctx.stroke();\n\n            // draw the spanning arcs\n            var spanning_coords = feature.spanning_frag_coords;\n            for (var i = 0; i < spanning_coords.length; i++) {\n                var spanning_info = spanning_coords[i];\n\n                var span_left_px = Math.round((spanning_info.left - bpStart) / xScale);\n                var span_right_px = Math.round((spanning_info.right - bpStart) / xScale);\n\n\n                ctx.beginPath();\n                ctx.moveTo(span_left_px, cy);\n                ctx.bezierCurveTo(span_left_px, bottom_y, span_right_px, bottom_y, span_right_px, cy);\n\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = 'purple';\n                ctx.stroke();\n            }\n        }\n\n        // SNP constants\n        const codingNonSynonSet = new Set(['nonsense', 'missense', 'stop-loss', 'frameshift', 'cds-indel']);\n        const codingSynonSet = new Set(['coding-synon']);\n        const spliceSiteSet = new Set(['splice-3', 'splice-5']);\n        const untranslatedSet = new Set(['untranslated-5', 'untranslated-3']);\n        const locusSet = new Set(['near-gene-3', 'near-gene-5']);\n        const intronSet = new Set(['intron']);\n\n        /**\n         *\n         * @param snp\n         * @param bpStart  genomic location of the left edge of the current canvas\n         * @param xScale  scale in base-pairs per pixel\n         * @param pixelHeight  pixel height of the current canvas\n         * @param ctx  the canvas 2d context\n         */\n        function renderSnp(snp, bpStart, xScale, pixelHeight, ctx) {\n\n            var coord = calculateFeatureCoordinates(snp, bpStart, xScale),\n                py = this.margin,\n                h,\n                colorArrLength = this.snpColors.length,\n                colorPriority;\n\n            h = this.displayMode === \"squished\" ? this.squishedRowHeight : this.expandedRowHeight;\n\n            switch (this.colorBy) {\n                case 'function':\n                    colorPriority = colorByFunc(snp.func);\n                    break;\n                case 'class':\n                    colorPriority = colorByClass(snp['class']);\n            }\n\n            ctx.fillStyle = this.snpColors[colorPriority];\n            ctx.fillRect(coord.px, py, coord.pw, h);\n\n            // Coloring functions, convert a value to a priority\n\n            function colorByFunc(theFunc) {\n                var priorities;\n                var funcArray = theFunc.split(',');\n                // possible func values\n\n\n                priorities = funcArray.map(function (func) {\n                    if (codingNonSynonSet.has(func) || spliceSiteSet.has(func)) {\n                        return colorArrLength - 1;\n                    } else if (codingSynonSet.has(func)) {\n                        return colorArrLength - 2;\n                    } else if (untranslatedSet.has(func)) {\n                        return colorArrLength - 3;\n                    } else { // locusSet.has(func) || intronSet.has(func)\n                        return 0;\n                    }\n                });\n\n                return priorities.reduce(function (a, b) {\n                    return Math.max(a, b);\n                });\n            }\n\n            function colorByClass(cls) {\n                if (cls === 'deletion') {\n                    return colorArrLength - 1;\n                } else if (cls === 'mnp') {\n                    return colorArrLength - 2;\n                } else if (cls === 'microsatellite' || cls === 'named') {\n                    return colorArrLength - 3;\n                } else { // cls === 'single' || cls === 'in-del' || cls === 'insertion'\n                    return 0;\n                }\n            }\n        }\n    }\n\n    return igv;\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 9/25/17.\n */\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    igv.FeatureUtils = {\n\n        packFeatures: function (features, maxRows, sorted) {\n\n            var start;\n            var end;\n\n            if (!features) return;\n\n            maxRows = maxRows || 10000;\n\n            if (!sorted) {\n                features.sort(function (a, b) {\n                    return a.start - b.start;\n                });\n            }\n\n\n            if (features.length === 0) {\n                return [];\n\n            } else {\n\n                var bucketList = [],\n                    allocatedCount = 0,\n                    lastAllocatedCount = 0,\n                    nextStart,\n                    row,\n                    index,\n                    bucket,\n                    feature,\n                    gap = 2,\n                    bucketStart;\n\n                start = features[0].start;\n                end = features[features.length - 1].start;\n\n                bucketStart = Math.max(start, features[0].start);\n                nextStart = bucketStart;\n\n                features.forEach(function (alignment) {\n\n                    var buckListIndex = Math.max(0, alignment.start - bucketStart);\n                    if (bucketList[buckListIndex] === undefined) {\n                        bucketList[buckListIndex] = [];\n                    }\n                    bucketList[buckListIndex].push(alignment);\n                });\n\n\n                row = 0;\n\n\n                while (allocatedCount < features.length && row <= maxRows) {\n\n\n                    while (nextStart <= end) {\n\n                        bucket = undefined;\n\n                        while (!bucket && nextStart <= end) {\n\n                            index = nextStart - bucketStart;\n                            if (bucketList[index] === undefined) {\n                                ++nextStart;                     // No buckets at this index\n                            } else {\n                                bucket = bucketList[index];\n                            }\n\n                        } // while (bucket)\n\n                        if (!bucket) {\n                            break;\n                        }\n                        feature = bucket.pop();\n                        if (0 === bucket.length) {\n                            bucketList[index] = undefined;\n                        }\n\n                        feature.row = row;\n\n                        nextStart = feature.end + gap;\n                        ++allocatedCount;\n\n                    } // while (nextStart)\n\n                    row++;\n                    nextStart = bucketStart;\n\n                    if (allocatedCount === lastAllocatedCount) break;   // Protect from infinite loops\n\n                    lastAllocatedCount = allocatedCount;\n\n                } // while (allocatedCount)\n\n            }\n        },\n\n\n        /**\n         * Find features overlapping the given interval.  It is assumed that all features share the same chromosome.\n         *\n         * TODO -- significant overlap with FeatureCache, refactor to combine\n         *\n         * @param featureList\n         * @param start\n         * @param end\n         */\n        findOverlapping: function (featureList, start, end) {\n\n            if (!featureList || featureList.length == 0) {\n                return [];\n            }\n            else {\n                const tree = buildIntervalTree(featureList);\n                const intervals = tree.findOverlapping(start, end);\n\n                if (intervals.length == 0) {\n                    return [];\n                }\n                else {\n                    // Trim the list of features in the intervals to those\n                    // overlapping the requested range.\n                    // Assumption: features are sorted by start position\n\n                    featureList = [];\n\n                    intervals.forEach(function (interval) {\n                        const intervalFeatures = interval.value;\n                        const len = intervalFeatures.length;\n                        for (let i = 0; i < len; i++) {\n                            const feature = intervalFeatures[i];\n                            if (feature.start > end) break;\n                            else if (feature.end >= start) {\n                                featureList.push(feature);\n                            }\n                        }\n                    });\n\n                    featureList.sort(function (a, b) {\n                        return a.start - b.start;\n                    });\n\n                    return featureList;\n                }\n            }\n\n        }\n    }\n\n\n    /**\n     * Build an interval tree from the feature list for fast interval based queries.   We lump features in groups\n     * of 10, or total size / 100,   to reduce size of the tree.\n     *\n     * @param featureList\n     */\n    function buildIntervalTree(featureList) {\n\n        const tree = new igv.IntervalTree();\n        const len = featureList.length;\n        const chunkSize = Math.max(10, Math.round(len / 100));\n\n        featureList.sort(function (f1, f2) {\n            return (f1.start === f2.start ? 0 : (f1.start > f2.start ? 1 : -1));\n        });\n\n        for (let i = 0; i < len; i += chunkSize) {\n            const e = Math.min(len, i + chunkSize);\n            const subArray = featureList.slice(i, e);\n            const iStart = subArray[0].start;\n            let iEnd = iStart;\n            subArray.forEach(function (feature) {\n                iEnd = Math.max(iEnd, feature.end);\n            });\n            tree.insert(iStart, iEnd, subArray);\n        }\n\n        return tree;\n    }\n\n    return igv;\n})(igv || {});\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    igv.FileFormats = {\n\n        gwascatalog: {\n            fields: [\n                'bin',\n                'chr',\n                'start',\n                'end',\n                'name',\n                'pubMedID',\n                'author',\n                'pubDate',\n                'journal',\n                'title',\n                'trait',\n                'initSample',\n                'replSample',\n                'region',\n                'genes',\n                'riskAllele',\n                'riskAlFreq',\n                'pValue',\n                'pValueDesc',\n                'orOrBeta',\n                'ci95',\n                'platform',\n                'cnv'\n            ]\n        },\n\n        wgrna: {\n            fields:\n                [\n                    'bin',\n                    'chr',\n                    'start',\n                    'end',\n                    'name',\n                    'score',\n                    'strand',\n                    'thickStart',\n                    'thickEnd',\n                    'type'\n                ]\n        },\n\n        cpgislandext: {\n            fields:\n\n                [\n                    'bin',\n                    'chr',\n                    'start',\n                    'end',\n                    'name',\n                    'length',\n                    'cpgNum',\n                    'gcNum',\n                    'perCpg',\n                    'perGc',\n                    'obsExp'\n                ]\n        },\n\n        clinVarMain: {\n            fields: [\n                'chr1',\n                'start',\n                'end',\n                'name',\n                'score',\n                'strand',\n                'thickStart',\n                'thickEnd',\n                'reserved',\n                'blockCount',  // Number of blocks\n                'blockSizes',  // Comma separated list of block sizes\n                'chromStarts', // Start positions relative to chromStart\n                'origName',    // NM_198053.2(CD247):c.462C>T (p.Asp154=)\tClinVar Variation Report\n                'clinSign',    // Likely benign\tClinical significance\n                'reviewStatus', // \tbased on: criteria provided,single submitter\tReview Status\n                'type',         // single nucleotide variant\tType of Variant\n                'geneId', \t    // CD247\tGene Symbol\n                'snpId',       //\t181656780\tdbSNP ID\n                'nsvId',       //\t\tdbVar ID\n                'rcvAcc',      //\tRCV000642347\tClinVar Allele Submission\n                'testedInGtr', //\tN\tGenetic Testing Registry\n                'phenotypeList', //\tImmunodeficiency due to defect in cd3-zeta\tPhenotypes\n                'phenotype', //\tMedGen:C1857798, OMIM:610163\tPhenotype identifiers\n                'origin', //\tgermline\tData origin\n                'assembly', //\tGRCh37\tGenome assembly\n                'cytogenetic', //\t1q24.2\tCytogenetic status\n                'hgvsCod', //\tNM_198053.2:c.462C>T\tNucleotide HGVS\n                'hgvsProt', //\tNP_932170.1:p.Asp154=\tProtein HGVS\n                'numSubmit', //\t1\tNumber of submitters\n                'lastEval', //\tDec 19,2017\tLast evaluation\n                'guidelines', //\t\tGuidelines\n                'otherIds'\n            ]\n        }\n    }\n\n\n    return igv;\n})(igv || {});\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinson on 4/7/16.\n */\n\nvar igv = (function (igv) {\n\n\n    const transcriptTypes = new Set(['transcript', 'primary_transcript', 'processed_transcript', 'mRNA', 'mrna']);\n    const cdsTypes = new Set(['CDS', 'cds']);\n    const codonTypes = new Set(['start_codon', 'stop_codon']);\n    const utrTypes = new Set(['5UTR', '3UTR', 'UTR', 'five_prime_UTR', 'three_prime_UTR', \"3'-UTR\", \"5'-UTR\"]);\n    const exonTypes = new Set(['exon', 'coding-exon']);\n\n    igv.GFFHelper = function (options) {\n        this.format = options.format;\n        if(options.filterTypes) {\n            this.filterTypes = new Set(options.filterTypes)\n        }\n    }\n\n    igv.GFFHelper.prototype.combineFeatures = function (features) {\n\n        if (\"gff3\" === this.format) {\n            return combineFeaturesGFF.call(this, features);\n        }\n        else {\n            return combineFeaturesGTF.call(this, features);\n        }\n    }\n\n    function combineFeaturesGTF(features) {\n\n        const transcripts = Object.create(null)\n        const combinedFeatures = []\n        const consumedFeatures = new Set();\n        const filterTypes = this.filterTypes;\n\n        features = features.filter(f => filterTypes === undefined || !filterTypes.has(f.type))\n\n        // 1. Build dictionary of transcripts\n        for (let f of features) {\n            if (transcriptTypes.has(f.type)) {\n                const transcriptId = f.id\n                if (undefined !== transcriptId) {\n                    const gffTranscript = new GFFTranscript(f);\n                    transcripts[transcriptId] = gffTranscript;\n                    combinedFeatures.push(gffTranscript);\n                    consumedFeatures.add(f)\n                }\n            }\n        }\n\n        // Add exons\n        for (let f of features) {\n            if (exonTypes.has(f.type)) {\n                const id = f.id;   // transcript_id,  GTF groups all features with the same ID, does not have a parent/child hierarchy\n                if (id) {\n                    let transcript = transcripts[id];\n                    if (transcript === undefined) {\n                        transcript = new GFFTranscript(f);    // GTF does not require an explicit transcript record\n                        transcripts[id] = transcript;\n                        combinedFeatures.push(transcript);\n                    }\n                    transcript.addExon(f);\n                    consumedFeatures.add(f)\n                }\n            }\n        }\n\n        // Apply CDS and UTR\n        for (let f of features) {\n            if (cdsTypes.has(f.type) || utrTypes.has(f.type) || codonTypes.has(f.type)) {\n                const id = f.id;\n                if (id) {\n                    let transcript = transcripts[id];\n                    if (transcript === undefined) {\n                        transcript = new GFFTranscript(f);\n                        transcripts[id] = transcript;\n                        combinedFeatures.push(transcript);\n                    }\n                    if (utrTypes.has(f.type)) {\n                        transcript.addUTR(f);\n                    }\n                    else if (cdsTypes.has(f.type)) {\n                        transcript.addCDS(f);\n                    }\n                    else if (codonTypes.has(f.type)) {\n                        // Ignore for now\n                    }\n                    consumedFeatures.add(f)\n                }\n            }\n        }\n\n        // Finish transcripts\n        for (let f of combinedFeatures) {\n            if (typeof f.finish === \"function\") {\n                f.finish();\n            }\n        }\n\n        // Add other features\n        const others = features.filter(f => !consumedFeatures.has(f))\n        for (let f of others) {\n            combinedFeatures.push(f);\n        }\n\n        combinedFeatures.sort(function (a, b) {\n            return a.start - b.start;\n        })\n\n        return combinedFeatures;\n\n    }\n\n    function combineFeaturesGFF(features) {\n\n        // 1. Build dictionary of transcripts\n        const transcripts = Object.create(null)\n        const combinedFeatures = []\n        const consumedFeatures = new Set();\n        const filterTypes = this.filterTypes;\n\n        features = features.filter(f => filterTypes === undefined || !filterTypes.has(f.type))\n\n        for (let f of features) {\n            if (transcriptTypes.has(f.type)) {\n                const transcriptId = f.id; // getAttribute(f.attributeString, \"transcript_id\", /\\s+/);\n                if (undefined !== transcriptId) {\n                    const gffTranscript = new GFFTranscript(f);\n                    transcripts[transcriptId] = gffTranscript;\n                    combinedFeatures.push(gffTranscript);\n                    consumedFeatures.add(f)\n                }\n            }\n        }\n\n        // Add exons\n        for (let f of features) {\n            if (exonTypes.has(f.type)) {\n                const parents = getParents(f);\n                if (parents) {\n                    for (let id of parents) {\n                        let transcript = transcripts[id];\n                        if (transcript !== undefined) {\n                            transcript.addExon(f);\n                            consumedFeatures.add(f)\n                        }\n                    }\n                }\n            }\n        }\n\n        // Apply CDS and UTR\n        for (let f of features) {\n            if (cdsTypes.has(f.type) || utrTypes.has(f.type) || codonTypes.has(f.type)) {\n                const parents = getParents(f);\n                if (parents) {\n                    for (let id of parents) {\n                        let transcript = transcripts[id];\n                        if (transcript !== undefined) {\n                            if (utrTypes.has(f.type)) {\n                                transcript.addUTR(f);\n                            }\n                            else if (cdsTypes.has(f.type)) {\n                                transcript.addCDS(f);\n                            }\n                            else if (codonTypes.has(f.type)) {\n                                // Ignore for now\n                            }\n                            consumedFeatures.add(f);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Finish transcripts\n        combinedFeatures.forEach(function (f) {\n            if (typeof f.finish === \"function\") {\n                f.finish();\n            }\n        })\n\n        // Add other features\n        const others = features.filter(f => !consumedFeatures.has(f))\n        for (let f of others) {\n            combinedFeatures.push(f);\n        }\n\n        combinedFeatures.sort(function (a, b) {\n            return a.start - b.start;\n        })\n\n        return combinedFeatures;\n\n        function getParents(f) {\n            if (f.parent && f.parent.trim() !== \"\") {\n                return f.parent.trim().split(\",\");\n            }\n            else {\n                return null;\n            }\n        }\n\n    }\n\n    var GFFTranscript = function (feature) {\n        Object.assign(this, feature);\n        this.exons = [];\n    }\n\n    GFFTranscript.prototype.addExon = function (feature) {\n\n        this.exons.push(feature)\n\n        // Expand feature --  for transcripts not explicitly represented in the file\n        this.start = Math.min(this.start, feature.start);\n        this.end = Math.max(this.end, feature.end);\n    }\n\n    GFFTranscript.prototype.addCDS = function (cds) {\n\n        let exon\n        const exons = this.exons;\n\n        // Find exon containing CDS\n        for (let i = 0; i < exons.length; i++) {\n            if (exons[i].start <= cds.start && exons[i].end >= cds.end) {\n                exon = exons[i];\n                break;\n            }\n        }\n\n        if (exon) {\n            exon.cdStart = exon.cdStart ? Math.min(cds.start, exon.cdStart) : cds.start;\n            exon.cdEnd = exon.cdEnd ? Math.max(cds.end, exon.cdEnd) : cds.end;\n            if (!exon.children) {\n                exon.children = []\n            }\n            exon.children.push(cds)\n        } else {\n            cds.cdStart = cds.start\n            cds.cdEnd = cds.end\n            exons.push(cds)\n        }\n\n        // Expand feature --  for transcripts not explicitly represented in the file (gtf files)\n        this.start = Math.min(this.start, cds.start);\n        this.end = Math.max(this.end, cds.end);\n\n        this.cdStart = this.cdStart ? Math.min(cds.start, this.cdStart) : cds.start;\n        this.cdEnd = this.cdEnd ? Math.max(cds.end, this.cdEnd) : cds.end;\n    }\n\n    GFFTranscript.prototype.addUTR = function (utr) {\n\n        let exon\n        const exons = this.exons;\n\n        // Find exon containing CDS\n        for (let i = 0; i < exons.length; i++) {\n            if (exons[i].start <= utr.start && exons[i].end >= utr.end) {\n                exon = exons[i];\n                break;\n            }\n        }\n\n        if (exon) {\n            if (utr.start === exon.start && utr.end === exon.end) {\n                exon.utr = true;\n            } else {\n                if (utr.end < exon.end) {\n                    exon.cdStart = utr.end\n                }\n                if (utr.start > exon.start) {\n                    exon.cdEnd = utr.start\n                }\n            }\n            if (!exon.children) {\n                exon.children = []\n            }\n            exon.children.push(utr)\n\n        } else {\n            utr.utr = true\n            exons.push(utr)\n        }\n\n        // Expand feature --  for transcripts not explicitly represented in the file\n        this.start = Math.min(this.start, utr.start);\n        this.end = Math.max(this.end, utr.end);\n\n    }\n\n    GFFTranscript.prototype.finish = function () {\n\n        var cdStart = this.cdStart;\n        var cdEnd = this.cdEnd;\n\n        this.exons.sort(function (a, b) {\n            return a.start - b.start;\n        })\n\n        // Search for UTR exons that were not explicitly tagged\n        if (cdStart) {\n            this.exons.forEach(function (exon) {\n                if (exon.end < cdStart || exon.start > cdEnd) exon.utr = true;\n            });\n        }\n\n    }\n\n    GFFTranscript.prototype.popupData = function (genomicLocation) {\n\n        const kvs = this.attributeString.split(';')\n        const pd = []\n        pd.push({name: 'type', value: this.type})\n        pd.push({name: 'start', value: this.start + 1})\n        pd.push({name: 'end', value: this.end})\n\n        for (let kv of kvs) {\n            var t = kv.trim().split(this.delim, 2);\n            if (t.length === 2 && t[1] !== undefined) {\n                const key = t[0].trim();\n                let value = t[1].trim();\n                //Strip off quotes, if any\n                if (value.startsWith('\"') && value.endsWith('\"')) {\n                    value = value.substr(1, value.length - 2);\n                }\n                pd.push({name: key, value: value});\n            }\n        }\n\n        // If clicked over an exon add its attributes\n        for (let exon of this.exons) {\n            if (genomicLocation >= exon.start && genomicLocation < exon.end) {\n                pd.push(\"<hr>\")\n                const exonData = exon.popupData(genomicLocation)\n                for (let att of exonData) {\n                    pd.push(att)\n                }\n\n                if (exon.children) {\n                    for (let c of exon.children) {\n                        pd.push(\"<hr>\")\n                        const exonData = c.popupData(genomicLocation)\n                        for (let att of exonData) {\n                            pd.push(att)\n                        }\n                    }\n                }\n\n            }\n        }\n\n\n        return pd;\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2018 The Regents of the University of California \n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 7/5/18.\n */\n\"use strict\";\n\n\nvar igv = (function (igv) {\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    let InteractionTrack;\n\n    igv.trackFactory[\"interaction\"] = function (config, browser) {\n\n        if (!InteractionTrack) {\n            defineClass();\n        }\n\n        return new InteractionTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        InteractionTrack = igv.extend(igv.TrackBase,\n\n            function (config, browser) {\n\n                igv.TrackBase.call(this, config, browser);\n\n                this.theta = config.theta || Math.PI / 4;\n                this.sinTheta = Math.sin(this.theta);\n                this.cosTheta = Math.cos(this.theta);\n\n\n                this.height = config.height || 250;\n                this.autoHeight = true;\n\n                this.arcOrientation = (config.arcOrientation === undefined ? true : config.arcOrientation);       // true for up, false for down\n                this.thickness = config.thickness || 2;\n                this.color = config.color || \"rgb(180,25,137)\"\n\n                this.visibilityWindow = -1;\n\n                this.colorAlphaCache = {};\n\n            });\n\n        /**\n         * Return the current state of the track.  Used to create sessions and bookmarks.\n         *\n         * @returns {*|{}}\n         */\n        InteractionTrack.prototype.getState = function () {\n\n            var config = this.config || {};\n            config.arcOrientation = this.arcOrientation;\n            config.thickness = this.thickness;\n            config.color = this.color;\n            return config;\n\n        }\n\n\n        InteractionTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\n            const self = this;\n            const genome = this.browser.genome;\n\n            if (self.featureCache) {\n                return Promise.resolve(self.featureCache.queryFeatures(chr, bpStart, bpEnd));\n            }\n            else {\n\n                const options = igv.buildOptions(self.config);    // Add oauth token, if any\n\n                return igv.xhr.loadString(self.config.url, options)\n\n                    .then(function (data) {\n\n                        const parser = new igv.FeatureParser(\"bedpe\");\n\n                        const header = parser.parseHeader(data);\n\n                        const features = parser.parseFeatures(data);\n\n                        self.featureCache = new igv.FeatureCache(features, genome);\n\n                        // TODO -- whole genome features here.\n\n                        return self.featureCache.queryFeatures(chr, bpStart, bpEnd);\n\n                    })\n            }\n        };\n\n        InteractionTrack.prototype.draw = function (options) {\n\n            const self = this;\n\n            const ctx = options.context;\n            const pixelWidth = options.pixelWidth;\n            const pixelHeight = options.pixelHeight;\n            const viewportWidth = options.viewportWidth;\n            const bpPerPixel = options.bpPerPixel;\n            const bpStart = options.bpStart;\n            const xScale = bpPerPixel;\n\n            igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n            const featureList = options.features;\n\n            if (featureList) {\n\n                // Autoscale theta\n                autoscale();\n\n                featureList.forEach(function (feature) {\n\n                    let pixelStart = Math.round((feature.m1 - bpStart) / xScale);\n                    let pixelEnd = Math.round((feature.m2 - bpStart) / xScale);\n                    let direction = self.arcOrientation;\n\n                    let w = (pixelEnd - pixelStart);\n                    if (w < 3) {\n                        w = 3;\n                        pixelStart--;\n                    }\n\n                    const a = w / 2;\n                    const r = a / self.sinTheta;\n                    const b = self.cosTheta * r;\n                    const xc = pixelStart + a;\n\n                    let yc, startAngle, endAngle;\n                    if (direction) {\n                        // UP\n                        var trackBaseLine = self.height;\n                        yc = trackBaseLine + b;\n                        startAngle = Math.PI + Math.PI / 2 - self.theta;\n                        endAngle = Math.PI + Math.PI / 2 + self.theta;\n\n                    } else {\n                        // DOWN\n                        yc = -b;\n                        startAngle = Math.PI / 2 - self.theta;\n                        endAngle = Math.PI / 2 + self.theta;\n                    }\n\n                    let color = feature.color || self.color;\n                    if (color && w > viewportWidth) {\n                        color = getAlphaColor.call(self, color, \"0.1\");\n                    }\n\n                    ctx.strokeStyle = color;\n                    ctx.lineWidth = feature.thickness || self.thicknewss || 1;\n\n                    ctx.beginPath();\n                    ctx.arc(xc, yc, r, startAngle, endAngle, false);\n                    ctx.stroke();\n\n\n                })\n            }\n\n\n            function autoscale() {\n                let max = 0;\n                featureList.forEach(function (feature) {\n                    let pixelStart = (feature.start - bpStart) / xScale\n                    let pixelEnd = (feature.end - bpStart) / xScale;\n                    if (pixelEnd >= 0 && pixelStart <= pixelWidth) {\n                        max = Math.max(max, pixelEnd - pixelStart);\n                    }\n                });\n                let a = Math.min(viewportWidth, max) / 2;\n                if (max > 0) {\n                    let coa = pixelHeight / a;\n                    self.theta = estimateTheta(coa);\n                    self.sinTheta = Math.sin(self.theta);\n                    self.cosTheta = Math.cos(self.theta);\n                }\n            }\n        };\n\n\n        InteractionTrack.prototype.menuItemList = function () {\n\n            var self = this;\n\n            return [\n                {\n                    name: \"Toggle arc direction\",\n                    click: function () {\n                        self.arcOrientation = !self.arcOrientation;\n                        self.trackView.repaintViews();\n                    }\n                },\n                {\n                    name: \"Set track color\",\n                    click: function () {\n                        self.trackView.presentColorPicker();\n                    }\n                }\n\n            ];\n\n        };\n        //\n        //\n        //\n        // InteractionTrack.prototype.popupData = function (config) {\n        //\n        //     return null;\n        // };\n\n        // InteractionTrack.prototype.contextMenuItemList = function (config) {\n        //\n        //     var self = this,\n        //         clickHandler;\n        //\n        //\n        //\n        //     clickHandler = function () {\n        //\n        //         var genomicLocation = config.genomicLocation,\n        //             referenceFrame = config.viewport.genomicState.referenceFrame;\n        //\n        //         // Define a region 5 \"pixels\" wide in genomic coordinates\n        //         var bpWidth = referenceFrame.toBP(2.5);\n        //\n        //         self.sortSamples(referenceFrame.chrName, genomicLocation - bpWidth, genomicLocation + bpWidth, sortDirection);\n        //\n        //         sortDirection = (sortDirection === \"ASC\" ? \"DESC\" : \"ASC\");\n        //\n        //\n        //     };\n        //\n        //     return [{label: 'Sort by value',  click: clickHandler, init: undefined}];\n        //\n        // };\n\n\n        /**\n         * Estimate theta given the ratio of track height to 1/2 the feature width (coa).  This relationship is approximately linear.\n         */\n\n\n        function estimateTheta(x) {\n            let coa = [0.01570925532366355, 0.15838444032453644, 0.3249196962329063, 0.5095254494944288, 0.7265425280053609, 0.9999999999999999];\n            let theta = [0.031415926535897934, 0.3141592653589793, 0.6283185307179586, 0.9424777960769379, 1.2566370614359172, 1.5707963267948966];\n            let idx;\n\n            for (idx = 0; idx < coa.length; idx++) {\n                if (coa[idx] > x) {\n                    break;\n                }\n            }\n\n            let left = idx == 0 ? 0 : coa[idx - 1];\n            let right = idx < coa.length ? coa[idx] : 1;\n            let r = (x - left) / (right - left);\n\n            let thetaLeft = idx == 0 ? 0 : theta[idx - 1];\n            let thetaRight = idx < theta.length ? theta[idx] : Math.PI / 2;\n\n            return thetaLeft + r * (thetaRight - thetaLeft);\n\n        }\n\n        function getAlphaColor(color, alpha) {\n\n            let c = this.colorAlphaCache[color];\n            if (!c) {\n                c = igv.Color.addAlpha(color, alpha);\n                this.colorAlphaCache[color] = c;\n            }\n            return c;\n        }\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by turner on 2/11/14.\n */\nvar igv = (function (igv) {\n\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    let MergedTrack;\n\n    igv.trackFactory[\"merged\"] = function (config, browser) {\n\n        if (!MergedTrack) {\n            defineClass();\n        }\n\n        return new MergedTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n\n        MergedTrack = igv.extend(igv.TrackBase, function (config, browser) {\n\n            var self = this;\n\n            if (!config.tracks) {\n                console.log(\"Error: not tracks defined for merged track. \" + config);\n                return;\n            }\n\n            if (config.height === undefined) {\n                config.height = 50;\n            }\n\n            igv.TrackBase.call(this, config, browser);\n\n            this.tracks = [];\n            config.tracks.forEach(function (tconf) {\n\n                if (!tconf.type) igv.inferTrackTypes(tconf);\n\n                var t = igv.createTrack(tconf, browser);\n\n                if (t) {\n                    t.autoscale = false;     // Scaling done from merged track\n                    self.tracks.push(t);\n                }\n                else {\n                    console.log(\"Could not create track \" + tconf);\n                }\n            });\n        });\n\n        MergedTrack.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel) {\n\n            var promises = this.tracks.map(function (t) {\n                return t.getFeatures(chr, bpStart, bpEnd, bpPerPixel);\n            })\n            return Promise.all(promises);\n\n        }\n\n\n        MergedTrack.prototype.draw = function (options) {\n\n            var i, len, mergedFeatures, trackOptions, dataRange;\n\n            mergedFeatures = options.features;    // Array of feature arrays, 1 for each track\n\n            dataRange = autoscale(options.genomicState.chromosome.name, mergedFeatures);\n\n            for (i = 0, len = this.tracks.length; i < len; i++) {\n\n                trackOptions = Object.assign({}, options);\n                trackOptions.features = mergedFeatures[i];\n                this.tracks[i].dataRange = dataRange;\n                this.tracks[i].draw(trackOptions);\n            }\n\n        }\n\n        MergedTrack.prototype.paintAxis = function (ctx, pixelWidth, pixelHeight) {\n\n            var i, len, autoscale, track;\n\n            autoscale = true;   // Hardcoded for now\n\n            for (i = 0, len = this.tracks.length; i < len; i++) {\n\n                track = this.tracks[i];\n\n                if (typeof track.paintAxis === 'function') {\n                    track.paintAxis(ctx, pixelWidth, pixelHeight);\n                    if (autoscale) break;\n                }\n            }\n        }\n\n        function autoscale(chr, featureArrays) {\n\n\n            var min = 0,\n                max = -Number.MAX_VALUE,\n                allValues;\n\n            // if (chr === 'all') {\n            //     allValues = [];\n            //     featureArrays.forEach(function (features) {\n            //         features.forEach(function (f) {\n            //             if (!Number.isNaN(f.value)) {\n            //                 allValues.push(f.value);\n            //             }\n            //         });\n            //     });\n            //\n            //     min = Math.min(0, igv.Math.percentile(allValues, .1));\n            //     max = igv.Math.percentile(allValues, 99.9);\n            //\n            // }\n            // else {\n            featureArrays.forEach(function (features) {\n                features.forEach(function (f) {\n                    if (!Number.isNaN(f.value)) {\n                        min = Math.min(min, f.value);\n                        max = Math.max(max, f.value);\n                    }\n                });\n            });\n            //  }\n\n            return {min: min, max: max};\n        }\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n *  Define parser for seg files  (.bed, .gff, .vcf, etc).  A parser should implement 2 methods\n *\n *     parseHeader(data) - return an object representing a header.  Details are format specific\n *\n *     parseFeatures(data) - return a list of features\n *\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    var sampleKeyColumn = 0,\n        sampleColumn = 0,\n        chrColumn = 1,\n        startColumn = 2,\n        endColumn = 3;\n\n\n    igv.SegParser = function () {\n   }\n\n    igv.SegParser.prototype.parseHeader = function (data) {\n\n        var lines = igv.splitLines(data),\n            len = lines.length,\n            line,\n            i,\n            tokens;\n\n        for (i = 0; i < len; i++) {\n            line = lines[i];\n            if (line.startsWith(\"#\")) {\n                continue;\n            }\n            else {\n                tokens = line.split(\"\\t\");\n                this.header = {headings: tokens, lineCount: i + 1};\n                return this.header;\n                break;\n            }\n        }\n\n        return this.header;\n    }\n\n\n    igv.SegParser.prototype.parseFeatures = function (data) {\n\n        var lines = data ? igv.splitLines(data) : [] ,\n            len = lines.length,\n            tokens, allFeatures = [], line, i, dataColumn;\n\n        if (!this.header) {\n            this.header = this.parseHeader(data);\n        }\n        dataColumn = this.header.headings.length - 1;\n\n\n        for (i = this.header.lineCount; i < len; i++) {\n\n            line = lines[i];\n\n            tokens = lines[i].split(\"\\t\");\n\n            if (tokens.length > dataColumn) {\n\n                allFeatures.push({\n                    sampleKey: tokens[sampleKeyColumn],\n                    sample: tokens[sampleColumn],\n                    chr: tokens[chrColumn],\n                    start: parseInt(tokens[startColumn]),\n                    end: parseInt(tokens[endColumn]),\n                    value: parseFloat(tokens[dataColumn])\n                });\n            }\n        }\n\n        return allFeatures;\n\n    }\n\n\n    return igv;\n})\n(igv || {});\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    let SegTrack;\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    igv.trackFactory[\"seg\"] = function (config, browser) {\n\n        if (!SegTrack) {\n            defineClass();\n        }\n\n        return new SegTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        SegTrack = igv.extend(igv.TrackBase,\n\n            function (config, browser) {\n\n                igv.TrackBase.call(this, config, browser);\n\n                this.isLog = config.isLog;\n\n                this.supportHiDPI = (config.supportHiDPI !== undefined) ? config.supportHiDPI : false;\n\n                this.displayMode = config.displayMode || \"SQUISHED\"; // EXPANDED | SQUISHED\n                this.maxHeight = config.maxHeight || 500;\n                this.squishedRowHeight = config.sampleSquishHeight || config.squishedRowHeight || 2;\n                this.expandedRowHeight = config.sampleExpandHeight || config.expandedRowHeight || 12;\n\n\n                this.posColorScale = config.posColorScale ||\n                    new igv.GradientColorScale(\n                        {\n                            low: 0.1,\n                            lowR: 255,\n                            lowG: 255,\n                            lowB: 255,\n                            high: 1.5,\n                            highR: 255,\n                            highG: 0,\n                            highB: 0\n                        }\n                    );\n                this.negColorScale = config.negColorScale ||\n                    new igv.GradientColorScale(\n                        {\n                            low: -1.5,\n                            lowR: 0,\n                            lowG: 0,\n                            lowB: 255,\n                            high: -0.1,\n                            highR: 255,\n                            highG: 255,\n                            highB: 255\n                        }\n                    );\n\n                this.sampleKeys = [];\n\n                //   this.featureSource = config.sourceType === \"bigquery\" ?\n                //       new igv.BigQueryFeatureSource(this.config) :\n                this.featureSource = new igv.FeatureSource(this.config, browser.genome);\n\n                if (config.sort) {\n                    const sort = config.sort;\n                    this.sortSamples(sort.chr, sort.start, sort.end, sort.direction);\n                }\n\n            });\n\n        SegTrack.prototype.menuItemList = function () {\n\n            const self = this;\n\n            const menuItems = [];\n            const lut =\n                {\n                    \"SQUISHED\": \"Squish\",\n                    \"EXPANDED\": \"Expand\",\n                    \"FILL\": \"Fill\",\n                };\n\n            menuItems.push(\"<hr/>\");\n            menuItems.push(\"Sample Height\");\n\n            [\"SQUISHED\", \"EXPANDED\", \"FILL\"].forEach(function (displayMode) {\n                menuItems.push(\n                    {\n                        object: igv.createCheckbox(lut[displayMode], displayMode === self.displayMode),\n                        click: function () {\n                            self.displayMode = displayMode;\n                            self.config.displayMode = displayMode;\n                            self.trackView.checkContentHeight();\n                            self.trackView.repaintViews();\n                        }\n                    });\n            })\n\n            return menuItems;\n\n        };\n\n\n        SegTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\n            var self = this;\n\n            return self.featureSource.getFeatures(chr, bpStart, bpEnd);\n\n        };\n\n\n        SegTrack.prototype.draw = function (options) {\n\n            const self = this;\n\n            const v2 = igv.Math.log2(2);\n\n            const ctx = options.context;\n            const pixelWidth = options.pixelWidth;\n            const pixelHeight = options.pixelHeight;\n            igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n            const featureList = options.features;\n\n            if (featureList && featureList.length > 0) {\n\n                if (self.isLog === undefined) checkForLog(featureList);\n\n                const bpPerPixel = options.bpPerPixel;\n                const bpStart = options.bpStart;\n                const bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n                const xScale = bpPerPixel;\n\n                updateSampleKeys.call(this, featureList);\n\n                // Create a map for fast id -> row lookup\n                const samples = {};\n                this.sampleKeys.forEach(function (id, index) {\n                    samples[id] = index;\n                })\n\n\n                let sampleHeight;\n                let border;\n                switch (this.displayMode) {\n\n                    case \"FILL\":\n                        sampleHeight = options.pixelHeight / this.sampleKeys.length;\n                        border = 0\n                        break;\n\n                    case \"SQUISHED\":\n                        sampleHeight = this.squishedRowHeight;\n                        border = 0;\n                        break;\n\n                    default:   // EXPANDED\n                        sampleHeight = this.expandedRowHeight;\n                        border = 1;\n\n                }\n\n                for (let segment of featureList) {\n\n                    if (segment.end < bpStart) continue;\n                    if (segment.start > bpEnd) break;\n\n                    const sampleKey = segment.sampleKey || segment.sample\n                    segment.row = samples[sampleKey];\n                    const y = samples[sampleKey] * sampleHeight + border;\n\n                    let value = segment.value;\n                    if (!self.isLog) {\n                        value = igv.Math.log2(value / 2);\n                    }\n\n                    let color;\n                    if (value < -0.1) {\n                        color = self.negColorScale.getColor(value);\n                    }\n                    else if (value > 0.1) {\n                        color = self.posColorScale.getColor(value);\n                    }\n                    else {\n                        color = \"white\";\n                    }\n\n                    const segmentStart = Math.max(segment.start, bpStart);\n                    // const segmentStart = segment.start;\n                    const px = Math.round((segmentStart - bpStart) / xScale);\n\n                    const segmentEnd = Math.min(segment.end, bpEnd);\n                    // const segmentEnd = segment.end;\n                    const px1 = Math.round((segmentEnd - bpStart) / xScale);\n\n                    const pw = Math.max(1, px1 - px);\n\n                    // const sign = px < 0 ? '-' : '+';\n                    // console.log('start ' + sign + igv.numberFormatter(Math.abs(px)) + ' width ' + igv.numberFormatter(pw) + ' end ' + igv.numberFormatter(px + pw));\n\n                    ctx.fillStyle = color;\n\n                    // Enhance the contrast of sub-pixel displays (FILL mode) by adjusting sample height.\n                    let sh = sampleHeight;\n                    if (sampleHeight < 0.25) {\n                        const f = 0.1 + 2 * Math.abs(value);\n                        sh = Math.min(1, f * sampleHeight);\n                    }\n\n                    segment.pixelRect = {x: px, y: y, w: pw, h: sh - 2 * border};\n                    ctx.fillRect(px, y, pw, sh - 2 * border);\n\n                    //igv.graphics.fillRect(ctx, px, y, pw, sampleHeight - 2 * border, {fillStyle: color});\n\n                }\n            }\n            else {\n                console.log(\"No feature list\");\n            }\n\n\n            function checkForLog(featureList) {\n\n                if (self.isLog === undefined) {\n                    self.isLog = false;\n                    for (let feature of featureList) {\n                        if (feature.value < 0) {\n                            self.isLog = true;\n                            return;\n                        }\n                    }\n                }\n            }\n\n        };\n\n        /**\n         * Optional method to compute pixel height to accomodate the list of features.  The implementation below\n         * has side effects (modifiying the samples hash).  This is unfortunate, but harmless.\n         *\n         * @param features\n         * @returns {number}\n         */\n        SegTrack.prototype.computePixelHeight = function (features) {\n\n            if (!features) return 0;\n\n            const sampleHeight = (\"SQUISHED\" === this.displayMode) ? this.squishedRowHeight : this.expandedRowHeight;\n\n            updateSampleKeys.call(this, features);\n\n            return this.sampleKeys.length * sampleHeight;\n        };\n\n        /**\n         * Sort samples by the average value over the genomic range in the direction indicated (1 = ascending, -1 descending)\n         */\n        SegTrack.prototype.sortSamples = function (chr, bpStart, bpEnd, direction) {\n\n            const self = this;\n\n\n            this.featureSource.getFeatures(chr, bpStart, bpEnd)\n\n                .then(function (featureList) {\n\n                    updateSampleKeys.call(self, featureList);\n\n                    const scores = {};\n                    const bpLength = bpEnd - bpStart + 1;\n\n                    // Compute weighted average score for each sample\n                    for (let segment of featureList) {\n\n                        if (segment.end < bpStart) continue;\n                        if (segment.start > bpEnd) break;\n\n                        const min = Math.max(bpStart, segment.start);\n                        const max = Math.min(bpEnd, segment.end);\n                        const f = (max - min) / bpLength;\n\n                        const sampleKey = segment.sampleKey || segment.sample\n                        const s = scores[sampleKey] || 0;\n                        scores[sampleKey] = s + f * segment.value;\n\n                    }\n\n\n                    // Now sort sample names by score\n\n                    const d2 = (direction === \"ASC\" ? 1 : -1);\n                    self.sampleKeys.sort(function (a, b) {\n\n                        var s1 = scores[a];\n                        var s2 = scores[b];\n                        if (!s1) s1 = d2 * Number.MAX_VALUE;\n                        if (!s2) s2 = d2 * Number.MAX_VALUE;\n\n                        if (s1 == s2) return 0;\n                        else if (s1 > s2) return d2;\n                        else return d2 * -1;\n\n                    });\n\n\n                    self.trackView.repaintViews();\n                    // self.trackView.$viewport.scrollTop(0);\n\n\n                })\n        };\n\n        SegTrack.prototype.popupData = function (clickState) {\n\n            const self = this;\n\n            const featureList = filterByRow(this.clickedFeatures(clickState), clickState.y);\n\n            const items = [];\n\n            for (let f of featureList) {\n            }\n            featureList.forEach(function (f) {\n                extractPopupData(f, items);\n\n            });\n\n            return items;\n\n            function extractPopupData(feature, data) {\n\n                const filteredProperties = new Set(['row', 'color', 'sampleKey', 'uniqueSampleKey', 'uniquePatientKey']);\n\n                Object.keys(feature).forEach(function (property) {\n                    if (!filteredProperties.has(property) &&\n                        igv.isSimpleType(feature[property])) {\n                        data.push({name: property, value: feature[property]});\n                    }\n                });\n            }\n\n            function filterByRow(features, y) {\n\n                    return features.filter(function (feature) {\n                        const rect = feature.pixelRect;\n                        return rect && y >= rect.y && y <= (rect.y + rect.h);\n                    });\n\n            }\n        }\n\n        SegTrack.prototype.contextMenuItemList = function (clickState) {\n\n            const self = this;\n            const referenceFrame = clickState.viewport.genomicState.referenceFrame;\n            const genomicLocation = clickState.genomicLocation;\n\n            // Define a region 5 \"pixels\" wide in genomic coordinates\n            const sortDirection = this.config.sort ?\n                (this.config.sort.direction === \"ASC\" ? \"DESC\" : \"ASC\") :      // Toggle from previous sort\n                \"DESC\";\n            const bpWidth = referenceFrame.toBP(2.5);\n\n            function sortHandler(sort) {\n                self.sortSamples(sort.chr, sort.start, sort.end, sort.direction);\n            }\n\n            return [\n                {\n                    label: 'Sort by value', click: function (e) {\n\n\n                        const sort = {\n                            direction: sortDirection,\n                            chr: referenceFrame.chrName,\n                            start: genomicLocation - bpWidth,\n                            end: genomicLocation + bpWidth\n\n                        };\n\n                        sortHandler(sort);\n\n                        self.config.sort = sort;\n\n                    }\n                }];\n\n        };\n\n\n        SegTrack.prototype.supportsWholeGenome = function () {\n            return this.featureSource.supportsWholeGenome();\n        }\n\n\n        function updateSampleKeys(featureList) {\n\n            const samples = new Set(this.sampleKeys);\n\n            for (let feature of featureList) {\n\n                const sampleKey = feature.sampleKey || feature.sample;\n                if (!samples.has(sampleKey)) {\n                    samples.add(sampleKey);\n                    this.sampleKeys.push(sampleKey);\n                }\n            }\n        }\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    /**\n     *\n     * @param indexFile\n     * @param config\n     * @returns a Promise for the tribble-style (.idx) index.  The fulfill function takes the index as an argument\n     */\n    igv.loadTribbleIndex = function (indexFile, config, genome) {\n        \n        return new Promise(function (fullfill) {\n\n            igv.xhr\n                .loadArrayBuffer(indexFile, igv.buildOptions(config))\n                .then(function (arrayBuffer) {\n\n                    if (arrayBuffer) {\n\n                        var index = {};\n\n                        var parser = new igv.BinaryParser(new DataView(arrayBuffer));\n\n                        readHeader(parser);\n\n                        var nChrs = parser.getInt();\n                        while (nChrs-- > 0) {\n                            // todo -- support interval tree index, we're assuming its a linear index\n                            var chrIdx = readLinear(parser);\n                            index[chrIdx.chr] = chrIdx;\n                        }\n\n                        fullfill(new igv.TribbleIndex(index));\n                    } else {\n                        fullfill(null);\n                    }\n\n                })\n                .catch(function (error) {\n                    console.log(error);\n                    fullfill(null);\n                });\n\n            function readHeader(parser) {\n\n                //var magicString = view.getString(4);\n                var magicNumber = parser.getInt();     //   view._getInt32(offset += 32, true);\n                var type = parser.getInt();\n                var version = parser.getInt();\n\n                var indexedFile = parser.getString();\n\n                var indexedFileSize = parser.getLong();\n\n                var indexedFileTS = parser.getLong();\n                var indexedFileMD5 = parser.getString();\n                var flags = parser.getInt();\n                if (version < 3 && (flags & SEQUENCE_DICTIONARY_FLAG) == SEQUENCE_DICTIONARY_FLAG) {\n                    // readSequenceDictionary(dis);\n                }\n\n                if (version >= 3) {\n                    var nProperties = parser.getInt();\n                    while (nProperties-- > 0) {\n                        var key = parser.getString();\n                        var value = parser.getString();\n                    }\n                }\n            }\n\n            function readLinear(parser) {\n\n                var chr = parser.getString(),\n                    blockMax = 0;\n\n                // Translate to canonical name\n                if (genome) chr = genome.getChromosomeName(chr);\n\n                var binWidth = parser.getInt();\n                var nBins = parser.getInt();\n                var longestFeature = parser.getInt();\n                //largestBlockSize = parser.getInt();\n                // largestBlockSize and totalBlockSize are old V3 index values.  largest block size should be 0 for\n                // all newer V3 block.  This is a nasty hack that should be removed when we go to V4 (XML!) indices\n                var OLD_V3_INDEX = parser.getInt() > 0;\n                var nFeatures = parser.getInt();\n\n                // note the code below accounts for > 60% of the total time to read an index\n                var pos = parser.getLong();\n                var chrBegPos = pos;\n\n                var blocks = new Array();\n                for (var binNumber = 0; binNumber < nBins; binNumber++) {\n                    var nextPos = parser.getLong();\n                    var size = nextPos - pos;\n                    blocks.push({min: pos, max: nextPos}); //        {position: pos, size: size});\n                    pos = nextPos;\n\n                    if (nextPos > blockMax) blockMax = nextPos;\n                }\n\n                return {chr: chr, blocks: blocks, longestFeature: longestFeature, binWidth: binWidth};\n\n            }\n\n        });\n    };\n\n    igv.TribbleIndex = function (chrIndexTable) {\n        this.chrIndex = chrIndexTable;      // Dictionary of chr -> tribble index\n    };\n\n    /**\n     * Fetch blocks for a particular genomic range.\n     *\n     * TODO -- currently this returns all blocks for the chromosome, min and max are ignored.  Fix this.\n     *\n     * @param queryChr the sequence dictionary index of the chromosome\n     * @param min  genomic start position\n     * @param max  genomic end position\n     */\n    igv.TribbleIndex.prototype.blocksForRange = function (queryChr, min, max) { //function (refId, min, max) {\n\n        var self = this;\n        var chrIdx = this.chrIndex[queryChr];\n\n        if (chrIdx) {\n            var blocks = chrIdx.blocks;\n            var longestFeature = chrIdx.longestFeature;\n            var binWidth = chrIdx.binWidth;\n            var adjustedPosition = Math.max(min - longestFeature, 0);\n            var startBinNumber = Math.floor(adjustedPosition / binWidth);\n\n            if (startBinNumber >= blocks.length) // are we off the end of the bin list, so return nothing\n                return [];\n            else {\n\n                var endBinNumber = Math.min(Math.floor((max - 1) / binWidth), blocks.length - 1);\n\n                // By definition blocks are adjacent for the liner index.  Combine them into one merged block\n\n                var startPos = blocks[startBinNumber].min;\n                var endPos = blocks[endBinNumber].max;\n                var size = endPos - startPos;\n                if (size == 0) {\n                    return [];\n                } else {\n                    var mergedBlock = {minv: {block: startPos, offset: 0}, maxv: {block: endPos, offset: 0}};\n                    return [mergedBlock];\n                }\n\n\n                //  var blocks = chrIdx.blocks,\n                //      lastBlock = blocks[blocks.length - 1],\n                //     mergedBlock = {minv: {block: blocks[0].min, offset: 0}, maxv: {block: lastBlock.max, offset: 0}};\n                // return [mergedBlock];\n            }\n        } else {\n            return null;\n        }\n    };\n\n\n    return igv;\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    igv.UCSCServiceReader = function (config, genome) {\n        this.config = config;\n        this.genome = genome;\n        this.expandQueryInterval = false;\n    };\n\n    igv.UCSCServiceReader.prototype.readFeatures = function (chr, start, end) {\n\n        const s = Math.max(0, Math.floor(start));\n        let e = Math.ceil(end);\n\n        if(this.genome) {\n            const c = genome.getChromosome(chr);\n            if(c && e > c.bpLength) {\n                e = c.bpLength;\n            }\n        }\n\n\n        const url = this.config.url + '?db=' + this.config.db + '&table=' + this.config.tableName + '&chr=' + chr + '&start=' + s + '&end=' + e;\n\n        return igv.xhr.loadJson(url, this.config)\n            .then(function (data) {\n                if (data) {\n                    data.forEach(function (sample) {\n                        if (sample.hasOwnProperty('exonStarts') &&\n                            sample.hasOwnProperty('exonEnds') &&\n                            sample.hasOwnProperty('exonCount') &&\n                            sample.hasOwnProperty('cdsStart') &&\n                            sample.hasOwnProperty('cdsEnd')) {\n                            addExons(sample);\n                        }\n                    });\n                    return data;\n                } else {\n                    return null;\n                }\n            })\n    };\n\n    function addExons(sample) {\n        var exonCount, exonStarts, exonEnds, exons, eStart, eEnd;\n        exonCount = sample['exonCount'];\n        exonStarts = sample['exonStarts'].split(',');\n        exonEnds = sample['exonEnds'].split(',');\n        exons = [];\n\n        for (var i = 0; i < exonCount; i++) {\n            eStart = parseInt(exonStarts[i]);\n            eEnd = parseInt(exonEnds[i]);\n            var exon = {start: eStart, end: eEnd};\n\n            if (sample.cdsStart > eEnd || sample.cdsEnd < sample.cdsStart) exon.utr = true;   // Entire exon is UTR\n            if (sample.cdsStart >= eStart && sample.cdsStart <= eEnd) exon.cdStart = sample.cdsStart;\n            if (sample.cdsEnd >= eStart && sample.cdsEnd <= eEnd) exon.cdEnd = sample.cdsEnd;\n\n            exons.push(exon);\n        }\n\n        sample.exons = exons;\n    }\n\n\n    return igv;\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    const type = \"wig\";\n\n    let WigTrack;\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    igv.trackFactory[type] = function (config, browser) {\n\n        if (!WigTrack) {\n            defineClass();\n        }\n\n        return new WigTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        WigTrack = igv.extend(igv.TrackBase,\n\n            function (config, browser) {\n\n                this.type = \"wig\";\n\n                this.featureType = 'numeric';\n\n                if (config.color === undefined) {\n                    config.color = \"rgb(150,150,150)\";\n                }\n                if (config.height === undefined) {\n                    config.height = 50;\n                }\n\n                igv.TrackBase.call(this, config, browser);\n\n                const format = config.format ? config.format.toLowerCase() : config.format;\n                if (\"bigwig\" === format) {\n                    this.featureSource = new igv.BWSource(config, browser.genome);\n                } else if (\"tdf\" === format) {\n                    this.featureSource = new igv.TDFSource(config, browser.genome);\n                } else {\n                    this.featureSource = new igv.FeatureSource(config, browser.genome);\n                }\n\n                this.autoscale = config.autoscale || config.max === undefined;\n                if (!this.autoscale) {\n                    this.dataRange = {\n                        min: config.min || 0,\n                        max: config.max\n                    }\n                }\n\n                this.windowFunction = config.windowFunction || \"mean\";\n\n                this.paintAxis = igv.paintAxis;\n\n                this.graphType = config.graphType || \"bar\";\n\n            });\n\n        WigTrack.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel) {\n\n            var self = this;\n\n            return this.getFileHeader()\n\n                .then(function (header) {\n\n                    return self.featureSource.getFeatures(chr, bpStart, bpEnd, bpPerPixel, self.windowFunction);\n\n                });\n        };\n\n        WigTrack.prototype.menuItemList = function () {\n\n            var self = this,\n                menuItems = [];\n\n            menuItems.push(igv.dataRangeMenuItem(this.trackView));\n\n            menuItems.push({\n                object: igv.createCheckbox(\"Autoscale\", self.autoscale),\n                click: function () {\n                    var $fa = $(this).find('i');\n\n                    self.autoscale = !self.autoscale;\n\n                    if (true === self.autoscale) {\n                        $fa.removeClass('igv-fa-check-hidden');\n                        $fa.addClass('igv-fa-check-visible');\n                    } else {\n                        $fa.removeClass('igv-fa-check-visible');\n                        $fa.addClass('igv-fa-check-hidden');\n                    }\n\n                    self.config.autoscale = self.autoscale;\n                    self.trackView.setDataRange(undefined, undefined, self.autoscale);\n                }\n            });\n\n            return menuItems;\n\n        };\n\n        WigTrack.prototype.getFileHeader = function () {\n\n            var self = this;\n\n            if (typeof self.featureSource.getFileHeader === \"function\") {\n\n                if (self.header) {\n                    return Promise.resolve(self.header);\n                }\n                else {\n                    return self.featureSource.getFileHeader()\n                        .then(function (header) {\n\n                            if (header) {\n                                // Header (from track line).  Set properties,unless set in the config (config takes precedence)\n                                if (header.name && !self.config.name) {\n                                    self.name = header.name;\n                                }\n                                if (header.color && !self.config.color) {\n                                    self.color = \"rgb(\" + header.color + \")\";\n                                }\n                            }\n                            self.header = header;\n\n                            return header;\n\n                        })\n                }\n            }\n            else {\n                return Promise.resolve(null);\n            }\n\n        };\n\n        WigTrack.prototype.draw = function (options) {\n\n            var self = this, features, ctx, bpPerPixel, bpStart, pixelWidth, pixelHeight, bpEnd,\n                featureValueMinimum, featureValueMaximum, featureValueRange, baselineColor;\n\n            features = options.features;\n            ctx = options.context;\n            bpPerPixel = options.bpPerPixel;\n            bpStart = options.bpStart;\n            pixelWidth = options.pixelWidth;\n            pixelHeight = options.pixelHeight;\n            bpEnd = bpStart + pixelWidth * bpPerPixel + 1;\n\n            if (typeof self.color === \"string\" && self.color.startsWith(\"rgb(\")) {\n                baselineColor = igv.Color.addAlpha(self.color, 0.1);\n            }\n\n            if (features && features.length > 0) {\n\n                if (self.dataRange.min === undefined) self.dataRange.min = 0;\n\n                featureValueMinimum = self.dataRange.min;\n                featureValueMaximum = self.dataRange.max;\n\n                // Max can be less than min if config.min is set but max left to autoscale.   If that's the case there is\n                // nothing to paint.\n                if (featureValueMaximum > featureValueMinimum) {\n\n                    featureValueRange = featureValueMaximum - featureValueMinimum;\n\n                    if (renderFeature.end < bpStart) return;\n                    if (renderFeature.start > bpEnd) return;\n\n                    features.forEach(renderFeature);\n\n                    // If the track includes negative values draw a baseline\n                    if (featureValueMinimum < 0) {\n                        const basepx = (featureValueMaximum / (featureValueMaximum - featureValueMinimum)) * options.pixelHeight;\n                        igv.graphics.strokeLine(ctx, 0, basepx, options.pixelWidth, basepx, {strokeStyle: baselineColor});\n                    }\n                }\n            }\n\n\n            function renderFeature(feature) {\n\n                const x = Math.floor((feature.start - bpStart) / bpPerPixel);\n                const rectEnd = Math.ceil((feature.end - bpStart) / bpPerPixel);\n                const width = Math.max(1, rectEnd - x);\n                const y = (featureValueMaximum - feature.value) / (featureValueRange);\n\n                let yb;\n                if (featureValueMinimum > 0) {\n                    yb = 1;\n                } else if (featureValueMaximum < 0) {\n                    yb = 0;\n                } else {\n                    yb = featureValueMaximum / featureValueRange;\n                }\n\n                const yUnitless = Math.min(y, yb);\n                const y2 = Math.max(y, yb);\n                const heightUnitLess = y2 - yUnitless;\n\n                if (yUnitless >= 1 || y2 <= 0) return;      //  Value < minimum\n\n                const color = (typeof self.color === \"function\") ? self.color(feature.value) : self.color;\n\n                if (self.graphType === \"points\") {\n                    const pointSize = self.config.pointSize || 3;\n                    const py = feature.value < 0 ? (yUnitless + heightUnitLess) * pixelHeight : yUnitless * pixelHeight;\n                    const px = x + width / 2;\n\n                    if (isNaN(x)) {\n                        console.log('isNaN(x). feature start ' + igv.numberFormatter(feature.start) + ' bp start ' + igv.numberFormatter(bpStart));\n                    } else {\n                        igv.graphics.fillCircle(ctx, px, py, pointSize / 2);\n                    }\n\n                } else {\n                    igv.graphics.fillRect(ctx, x, yUnitless * pixelHeight, width, heightUnitLess * pixelHeight, {fillStyle: color});\n                }\n\n            }\n\n        };\n\n        WigTrack.prototype.popupData = function (clickState) {\n\n            // We use the featureCache property rather than method to avoid async load.  If the\n            // feature is not already loaded this won't work,  but the user wouldn't be mousing over it either.\n\n            let features = this.clickedFeatures(clickState);\n\n            if (features && features.length > 0) {\n\n                let genomicLocation = clickState.genomicLocation;\n                let referenceFrame = clickState.viewport.genomicState.referenceFrame;\n                let popupData = [];\n\n                // We need some tolerance around genomicLocation, start with +/- 2 pixels\n                let tolerance = 2 * referenceFrame.bpPerPixel;\n                let selectedFeature = binarySearch(features, genomicLocation, tolerance);\n\n                if (selectedFeature) {\n                    let posString = (selectedFeature.end - selectedFeature.start) === 1 ?\n                        igv.numberFormatter(selectedFeature.start + 1)\n                        : igv.numberFormatter(selectedFeature.start + 1) + \"-\" + igv.numberFormatter(selectedFeature.end);\n                    popupData.push({name: \"Position:\", value: posString});\n                    popupData.push({\n                        name: \"Value:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\",\n                        value: igv.numberFormatter(selectedFeature.value)\n                    });\n                }\n\n                return popupData;\n\n\n            }\n            else {\n                return [];\n            }\n        }\n\n        /**\n         * Called when the track is removed.  Do any needed cleanup here\n         */\n        WigTrack.prototype.dispose = function () {\n            this.trackView = undefined;\n        }\n\n\n        function signsDiffer(a, b) {\n            return (a > 0 && b < 0 || a < 0 && b > 0);\n        }\n\n        /**\n         * Return the closest feature to the genomic position +/- the specified tolerance.  Closest is defined\n         * by the minimum of the distance between position and start or end of the feature.\n         *\n         * @param features\n         * @param position\n         * @returns {*}\n         */\n        function binarySearch(features, position, tolerance) {\n            var startIndex = 0,\n                stopIndex = features.length - 1,\n                index = (startIndex + stopIndex) >> 1,\n                candidateFeature,\n                tmp, delta;\n\n\n            // Use binary search to get the index of at least 1 feature in the click tolerance bounds\n            while (!test(features[index], position, tolerance) && startIndex < stopIndex) {\n                if (position < features[index].start) {\n                    stopIndex = index - 1;\n                } else if (position > features[index].end) {\n                    startIndex = index + 1;\n                }\n\n                index = (startIndex + stopIndex) >> 1;\n            }\n\n            if (test(features[index], position, tolerance)) {\n\n                candidateFeature = features[index];\n                if (test(candidateFeature, position, 0)) return candidateFeature;\n\n                // Else, find closest feature to click\n                tmp = index;\n                while (tmp-- >= 0) {\n                    if (!test(features[tmp]), position, tolerance) {\n                        break;\n                    }\n                    if (test(features[tmp], position, 0)) {\n                        return features[tmp];\n                    }\n                    if (delta(features[tmp], position) < delta(candidateFeature, position)) {\n                        candidateFeature = features[tmp];\n                    }\n\n                    tmp = index;\n                    while (tmp++ < features.length) {\n                        if (!test(features[tmp]), position, tolerance) {\n                            break;\n                        }\n                        if (test(features[tmp], position, 0)) {\n                            return features[tmp];\n                        }\n                        if (delta(features[tmp], position) < delta(candidateFeature, position)) {\n                            candidateFeature = features[tmp];\n                        }\n                    }\n                }\n                return candidateFeature;\n\n            } else {\n                console.log(position + ' not found!');\n                return undefined;\n            }\n\n            function test(feature, position, tolerance) {\n                return position >= (feature.start - tolerance) && position <= (feature.end + tolerance);\n            }\n\n            function delta(feature, position) {\n                return Math.min(Math.abs(feature.start - position), Math.abs(feature.end - position));\n            }\n        }\n\n        WigTrack.prototype.getState = function () {\n\n            let config = this.config;\n\n            config.autoscale = this.autoscale;\n\n            if (!this.autoscale && this.dataRange) {\n                config.min = this.dataRange.min;\n                config.max = this.dataRange.max;\n            }\n            return config;\n\n        }\n\n        WigTrack.prototype.supportsWholeGenome = function () {\n\n            if (typeof this.featureSource.supportsWholeGenome === 'function') {\n                return this.featureSource.supportsWholeGenome();\n            }\n            else {\n                return false;\n            }\n\n        }\n\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    var CigarOperationTable = {\n        \"ALIGNMENT_MATCH\": \"M\",\n        \"INSERT\": \"I\",\n        \"DELETE\": \"D\",\n        \"SKIP\": \"N\",\n        \"CLIP_SOFT\": \"S\",\n        \"CLIP_HARD\": \"H\",\n        \"PAD\": \"P\",\n        \"SEQUENCE_MATCH\": \"=\",\n        \"SEQUENCE_MISMATCH\": \"X\"\n    }\n\n    igv.Ga4ghAlignmentReader = function (config, genome) {\n\n        this.config = config;\n        this.genome = genome;\n        this.url = config.url;\n        this.filter = new igv.BamFilter(config.filter);\n        this.readGroupSetIds = config.readGroupSetIds;\n        this.authKey = config.authKey;   // Might be undefined or nill\n\n        this.samplingWindowSize = config.samplingWindowSize === undefined ? 100 : config.samplingWindowSize;\n        this.samplingDepth = config.samplingDepth === undefined ? 100 : config.samplingDepth;\n        if (config.viewAsPairs) {\n            this.pairsSupported = true;\n        }\n        else {\n            this.pairsSupported = config.pairsSupported === undefined ? true : config.pairsSupported;\n        }\n    }\n\n\n    igv.Ga4ghAlignmentReader.prototype.readAlignments = function (chr, bpStart, bpEnd) {\n\n        const genome = this.genome;\n        const self = this;\n\n        return getChrAliasTable()\n\n            .then(function (chrAliasTable) {\n\n                var queryChr = chrAliasTable.hasOwnProperty(chr) ? chrAliasTable[chr] : chr,\n                    readURL = self.url + \"/reads/search\";\n\n                return igv.ga4ghSearch({\n                    url: readURL,\n                    body: {\n                        \"readGroupSetIds\": [self.readGroupSetIds],\n                        \"referenceName\": queryChr,\n                        \"start\": bpStart,\n                        \"end\": bpEnd,\n                        \"pageSize\": \"10000\"\n                    },\n                    decode: decodeGa4ghReads,\n                    results: new igv.AlignmentContainer(chr, bpStart, bpEnd, self.samplingWindowSize, self.samplingDepth, self.pairsSupported)\n                })\n            });\n\n\n        function getChrAliasTable() {\n\n            if (self.chrAliasTable) {\n\n                return Promise.resolve(self.chrAliasTable);\n\n            } else {\n\n                return self.readMetadata()\n\n                    .then(function (json) {\n\n                        self.chrAliasTable = {};\n\n                        if (genome && json.readGroups && json.readGroups.length > 0) {\n\n                            var referenceSetId = json.readGroups[0].referenceSetId;\n\n                            if (referenceSetId) {\n\n                                // Query for reference names to build an alias table (map of genome ref names -> dataset ref names)\n                                var readURL = self.url + \"/references/search\";\n\n                                return igv.ga4ghSearch({\n                                    url: readURL,\n                                    body: {\n                                        \"referenceSetId\": referenceSetId\n                                    },\n                                    decode: function (j) {\n                                        return j.references;\n                                    }\n                                })\n                                    .then(function (references) {\n\n\n                                        references.forEach(function (ref) {\n                                            var refName = ref.name,\n                                                alias = genome.getChromosomeName(refName);\n                                            self.chrAliasTable[alias] = refName;\n                                        });\n\n\n                                        return self.chrAliasTable;\n\n                                    })\n                            }\n                            else {\n\n                                // Try hardcoded constants -- workaround for non-compliant data at Google\n                                populateChrAliasTable(self.chrAliasTable, self.config.datasetId);\n\n                                return self.chrAliasTable;\n                            }\n                        }\n\n                        else {\n                            // No browser object, can't build map.  This can occur when run from unit tests\n                            fulfill(self.chrAliasTable);\n                        }\n                    })\n            }\n        }\n\n        /**\n         * Decode an array of ga4gh read records\n         *\n\n         */\n        function decodeGa4ghReads(json) {\n\n            var i,\n                jsonRecords = json.alignments,\n                len = jsonRecords.length,\n                json,\n                alignment,\n                jsonAlignment,\n                cigarDecoded,\n                alignments = [],\n                mate,\n                blocks;\n\n            for (i = 0; i < len; i++) {\n\n                json = jsonRecords[i];\n\n                alignment = new igv.BamAlignment();\n\n                alignment.readName = json.fragmentName;\n                alignment.properPlacement = json.properPlacement;\n                alignment.duplicateFragment = json.duplicateFragment;\n                alignment.numberReads = json.numberReads;\n                alignment.fragmentLength = json.fragmentLength;\n                alignment.readNumber = json.readNumber;\n                alignment.failedVendorQualityChecks = json.failedVendorQualityChecks;\n                alignment.secondaryAlignment = json.secondaryAlignment;\n                alignment.supplementaryAlignment = json.supplementaryAlignment;\n                alignment.seq = json.alignedSequence;\n                alignment.qual = json.alignedQuality;\n                alignment.matePos = json.nextMatePosition;\n                alignment.tagDict = json.info;\n                alignment.flags = encodeFlags(json);\n\n\n                jsonAlignment = json.alignment;\n                if (jsonAlignment) {\n                    alignment.mapped = true;\n\n                    alignment.chr = json.alignment.position.referenceName;\n                    if (genome) alignment.chr = genome.getChromosomeName(alignment.chr);\n\n                    alignment.start = parseInt(json.alignment.position.position);\n                    alignment.strand = !(json.alignment.position.reverseStrand);\n                    alignment.mq = json.alignment.mappingQuality;\n                    alignment.cigar = encodeCigar(json.alignment.cigar);\n                    cigarDecoded = translateCigar(json.alignment.cigar);\n\n                    alignment.lengthOnRef = cigarDecoded.lengthOnRef;\n\n                    blocks = makeBlocks(alignment, cigarDecoded.array);\n                    alignment.blocks = blocks.blocks;\n                    alignment.insertions = blocks.insertions;\n\n                }\n                else {\n                    alignment.mapped = false;\n                }\n\n                mate = json.nextMatePosition;\n                if (mate) {\n                    alignment.mate = {\n                        chr: mate.referenceFrame,\n                        position: parseInt(mate.position),\n                        strand: !mate.reverseStrand\n                    };\n                }\n\n                if (self.filter.pass(alignment)) {\n                    alignments.push(alignment);\n                }\n\n\n            }\n\n            return alignments;\n\n\n            // Encode a cigar string -- used for popup text\n            function encodeCigar(cigarArray) {\n\n                var cigarString = \"\";\n                cigarArray.forEach(function (cigarUnit) {\n                    var op = CigarOperationTable[cigarUnit.operation],\n                        len = cigarUnit.operationLength;\n                    cigarString = cigarString + (len + op);\n                });\n\n                return cigarString;\n            }\n\n            // TODO -- implement me\n            function encodeFlags(json) {\n                return 0;\n            }\n\n            function translateCigar(cigar) {\n\n                var cigarUnit, opLen, opLtr,\n                    lengthOnRef = 0,\n                    cigarArray = [],\n                    i;\n\n                for (i = 0; i < cigar.length; i++) {\n\n                    cigarUnit = cigar[i];\n\n                    opLtr = CigarOperationTable[cigarUnit.operation];\n                    opLen = parseInt(cigarUnit.operationLength);    // Google represents long as a String\n\n                    if (opLtr === 'M' || opLtr === 'EQ' || opLtr === 'X' || opLtr === 'D' || opLtr === 'N' || opLtr === '=')\n                        lengthOnRef += opLen;\n\n                    cigarArray.push({len: opLen, ltr: opLtr});\n\n                }\n\n                return {lengthOnRef: lengthOnRef, array: cigarArray};\n            }\n\n\n            /**\n             * Split the alignment record into blocks as specified in the cigarArray.  Each aligned block contains\n             * its portion of the read sequence and base quality strings.  A read sequence or base quality string\n             * of \"*\" indicates the value is not recorded.  In all other cases the length of the block sequence (block.seq)\n             * and quality string (block.qual) must == the block length.\n             *\n             * NOTE: Insertions are not yet treated // TODO\n             *\n             * @param record\n             * @param cigarArray\n             * @returns array of blocks\n             */\n            function makeBlocks(record, cigarArray) {\n\n\n                var blocks = [],\n                    insertions,\n                    seqOffset = 0,\n                    pos = record.start,\n                    len = cigarArray.length,\n                    gapType;\n\n                for (var i = 0; i < len; i++) {\n\n                    var c = cigarArray[i];\n\n                    switch (c.ltr) {\n                        case 'H' :\n                            break; // ignore hard clips\n                        case 'P' :\n                            break; // ignore pads\n                        case 'S' :\n                            seqOffset += c.len;\n                            gapType = 'S';\n                            break; // soft clip read bases\n                        case 'N' :\n                            pos += c.len;\n                            gapType = 'N';\n                            break;  // reference skip\n                        case 'D' :\n                            pos += c.len;\n                            gapType = 'D';\n                            break;\n                        case 'I' :\n                            if (insertions === undefined) insertions = [];\n                            insertions.push(new igv.AlignmentBlock({\n                                start: pos,\n                                len: c.len,\n                                seqOffset: seqOffset\n                            }));\n                            seqOffset += c.len;\n                            break;\n                        case 'M' :\n                        case 'EQ' :\n                        case '=' :\n                        case 'X' :\n                            blocks.push(\n                                new igv.AlignmentBlock({\n                                    start: pos,\n                                    len: c.len,\n                                    seqOffset: seqOffset,\n                                    gapType: gapType\n                                }));\n                            seqOffset += c.len;\n                            pos += c.len;\n\n                            break;\n\n                        default :\n                            console.log(\"Error processing cigar element: \" + c.len + c.ltr);\n                    }\n                }\n\n                return {blocks: blocks, insertions: insertions};\n            }\n        }\n    }\n\n\n    igv.Ga4ghAlignmentReader.prototype.readMetadata = function () {\n\n        return igv.ga4ghGet({\n            url: this.url,\n            entity: \"readgroupsets\",\n            entityId: this.readGroupSetIds\n        });\n    }\n\n    igv.decodeGa4ghReadset = function (json) {\n\n        var sequenceNames = [],\n            fileData = json[\"fileData\"];\n\n        fileData.forEach(function (fileObject) {\n\n            var refSequences = fileObject[\"refSequences\"];\n\n            refSequences.forEach(function (refSequence) {\n                sequenceNames.push(refSequence[\"name\"]);\n            });\n        });\n\n        return sequenceNames;\n    }\n\n\n    /**\n     * Hardcoded hack to work around some non-compliant google datasets\n     *\n     * @param chrAliasTable\n     * @param datasetId\n     */\n    function populateChrAliasTable(chrAliasTable, datasetId) {\n        var i;\n        if (\"461916304629\" === datasetId || \"337315832689\" === datasetId) {\n            for (i = 1; i < 23; i++) {\n                chrAliasTable[\"chr\" + i] = i;\n            }\n            chrAliasTable[\"chrX\"] = \"X\";\n            chrAliasTable[\"chrY\"] = \"Y\";\n            chrAliasTable[\"chrM\"] = \"MT\";\n        }\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    /**\n     *\n     * @param options\n     */\n    igv.ga4ghGet = function (options) {\n        var url = options.url + \"/\" + options.entity + \"/\" + options.entityId;\n        options.headers = ga4ghHeaders();\n        return igv.xhr.loadJson(url, options);      // Returns a promise\n    }\n\n    igv.ga4ghSearch = function (options) {\n        return new Promise(function (fulfill, reject) {\n            var results = options.results ? options.results : [],\n                url = options.url,\n                body = options.body,\n                decode = options.decode,\n                apiKey = igv.google.apiKey,\n                paramSeparator = \"?\",\n                fields = options.fields;  // Partial response\n\n\n            if (apiKey) {\n                url = url + paramSeparator + \"key=\" + apiKey;\n                paramSeparator = \"&\";\n            }\n\n            if (fields) {\n                url = url + paramSeparator + \"fields=\" + fields;\n            }\n\n\n            // Start the recursive load cycle.  Data is fetched in chunks, if more data is available a \"nextPageToken\" is returned.\n            return loadChunk();\n\n            function loadChunk(pageToken) {\n\n                if (pageToken) {\n                    body.pageToken = pageToken;\n                }\n                else {\n                    if (body.pageToken != undefined) delete body.pageToken;    // Remove previous page token, if any\n                }\n\n                var sendData = JSON.stringify(body);\n\n                igv.xhr.loadJson(url, {\n                        sendData: sendData,\n                        contentType: \"application/json\",\n                        headers: ga4ghHeaders(),\n                    //    oauthToken: ga4ghToken()\n                    })\n                    .then(function (json) {\n                        var nextPageToken, tmp;\n\n                        if (json) {\n\n                            tmp = decode ? decode(json) : json;\n\n                            if (tmp) {\n\n                                tmp.forEach(function (a) {\n                                    var keep = true;           // TODO -- conditionally keep (downsample)\n                                    if (keep) {\n                                        results.push(a);\n                                    }\n                                });\n                            }\n\n\n                            nextPageToken = json[\"nextPageToken\"];\n\n                            if (nextPageToken) {\n                                loadChunk(nextPageToken);\n                            }\n                            else {\n                                fulfill(results);\n                            }\n                        }\n                        else {\n                            fulfill(results);\n                        }\n\n                    })\n                    .catch(function (error) {\n                        reject(error);\n                    });\n            }\n\n        });\n\n\n    }\n\n    igv.ga4ghSearchReadGroupSets = function (options) {\n\n        igv.ga4ghSearch({\n            url: options.url + \"/readgroupsets/search\",\n            body: {\n                \"datasetIds\": [options.datasetId],\n\n                \"pageSize\": \"10000\"\n            },\n            decode: function (json) {\n                return json.readGroupSets;\n            }\n        }).then(function (results) {\n            options.success(results);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    igv.ga4ghSearchVariantSets = function (options) {\n\n        igv.ga4ghSearch({\n            url: options.url + \"/variantsets/search\",\n            body: {\n                \"datasetIds\": [options.datasetId],\n                \"pageSize\": \"10000\"\n            },\n            decode: function (json) {\n                return json.variantSets;\n            }\n        }).then(function (results) {\n            options.success(results);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    igv.ga4ghSearchCallSets = function (options) {\n\n        // When searching by dataset id, first must get variant sets.\n        if (options.datasetId) {\n\n            igv.ga4ghSearchVariantSets({\n\n                url: options.url,\n                datasetId: options.datasetId,\n                success: function (results) {\n\n                    var variantSetIds = [];\n                    results.forEach(function (vs) {\n                        variantSetIds.push(vs.id);\n                    });\n\n                    // Substitute variantSetIds for datasetId\n                    options.datasetId = undefined;\n                    options.variantSetIds = variantSetIds;\n                    igv.ga4ghSearchCallSets(options);\n\n\n                }\n            });\n\n        }\n\n        else {\n\n            igv.ga4ghSearch({\n                url: options.url + \"/callsets/search\",\n                body: {\n                    \"variantSetIds\": options.variantSetIds,\n                    \"pageSize\": \"10000\"\n                },\n                decode: function (json) {\n\n                    if (json.callSets) json.callSets.forEach(function (cs) {\n                        cs.variantSetIds = options.variantSetIds;\n                    });\n\n                    return json.callSets;\n                }\n            }).then(function (results) {\n                options.success(results);\n            }).catch(function (error) {\n                console.log(error);\n            });\n        }\n    }\n\n\n    /**\n     * Method to support ga4gh application\n     *\n     * @param options\n     */\n    igv.ga4ghSearchReadAndCallSets = function (options) {\n\n        igv.ga4ghSearchReadGroupSets({\n            url: options.url,\n            datasetId: options.datasetId,\n            success: function (readGroupSets) {\n                igv.ga4ghSearchCallSets({\n                    url: options.url,\n                    datasetId: options.datasetId,\n                    success: function (callSets) {\n\n                        // Merge call sets and read group sets\n\n                        var csHash = {};\n                        callSets.forEach(function (cs) {\n                            csHash[cs.name] = cs;\n                        });\n\n                        var mergedResults = [];\n                        readGroupSets.forEach(function (rg) {\n                            var m = {readGroupSetId: rg.id, name: rg.name, datasetId: options.datasetId},\n                                cs = csHash[rg.name];\n                            if (cs) {\n                                m.callSetId = cs.id;\n                                m.variantSetIds = cs.variantSetIds;\n                            }\n                            mergedResults.push(m);\n                        });\n\n                        options.success(mergedResults);\n\n                    }\n                });\n            }\n        });\n\n    }\n\n    function ga4ghHeaders() {\n        return {\n            \"Cache-Control\": \"no-cache\"\n        };\n\t}\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n\n    igv.Ga4ghVariantReader = function (config, genome) {\n\n        this.config = config;\n        this.genome = genome;\n        this.url = config.url;\n        this.variantSetId = config.variantSetId;\n        this.callSetIds = config.callSetIds;\n        this.includeCalls = (config.includeCalls === undefined ? true : config.includeCalls);\n\n    }\n\n    // Simulate a VCF file header\n    igv.Ga4ghVariantReader.prototype.readHeader = function () {\n\n        var self = this;\n\n\n        if (self.header) {\n            return Promise.resolve(self.header);\n        }\n\n        else {\n\n            self.header = {};\n\n            if (self.includeCalls === false) {\n                return Promise.resolve(self.header);\n            }\n            else {\n\n                var readURL = self.url + \"/callsets/search\";\n\n                return igv.ga4ghSearch({\n                    url: readURL,\n                    fields: \"nextPageToken,callSets(id,name)\",\n                    body: {\n                        \"variantSetIds\": (Array.isArray(self.variantSetId) ? self.variantSetId : [self.variantSetId]),\n                        \"pageSize\": \"10000\"\n                    },\n                    decode: function (json) {\n                        // If specific callSetIds are specified filter to those\n                        if (self.callSetIds) {\n                            var filteredCallSets = [],\n                                csIdSet = new Set();\n\n                            self.callSetIds.forEach(function (csid) {\n                                csIdSet.add(csid);\n                            })\n                            json.callSets.forEach(function (cs) {\n                                if (csIdSet.has(cs.id)) {\n                                    filteredCallSets.push(cs);\n                                }\n                            });\n                            return filteredCallSets;\n                        }\n                        else {\n                            return json.callSets;\n                        }\n                    }\n                })\n                    .then(function (callSets) {\n                        self.header.callSets = callSets;\n                        return self.header;\n                    })\n            }\n        }\n    }\n\n\n    igv.Ga4ghVariantReader.prototype.readFeatures = function (chr, bpStart, bpEnd) {\n\n        const self = this;\n        const genome = this.genome;\n\n        return self.readHeader()\n\n            .then(function (header) {\n                return getChrAliasTable()\n            })\n\n            .then(function (chrAliasTable) {\n\n                var queryChr = chrAliasTable.hasOwnProperty(chr) ? chrAliasTable[chr] : chr,\n                    readURL = self.url + \"/variants/search\";\n\n                return igv.ga4ghSearch({\n                    url: readURL,\n                    fields: (self.includeCalls ? undefined : \"nextPageToken,variants(id,variantSetId,names,referenceName,start,end,referenceBases,alternateBases,quality,filter,info)\"),\n                    body: {\n                        \"variantSetIds\": (Array.isArray(self.variantSetId) ? self.variantSetId : [self.variantSetId]),\n                        \"callSetIds\": (self.callSetIds ? self.callSetIds : undefined),\n                        \"referenceName\": queryChr,\n                        \"start\": bpStart.toString(),\n                        \"end\": bpEnd.toString(),\n                        \"pageSize\": \"10000\"\n                    },\n                    decode: function (json) {\n\n                        var v;\n\n                        var variants = [];\n\n                        json.variants.forEach(function (json) {\n\n                            v = igv.createGAVariant(json);\n\n                            if (!v.isRefBlock()) {\n                                variants.push(v);\n                            }\n                        });\n\n                        return variants;\n                    }\n                })\n            })\n\n\n        function getChrAliasTable() {\n\n            return new Promise(function (fulfill, reject) {\n\n                if (self.chrAliasTable) {\n                    fulfill(self.chrAliasTable);\n                }\n\n                else {\n                    self.readMetadata().then(function (json) {\n\n                        self.metadata = json.metadata;\n                        self.chrAliasTable = {};\n\n                        if (json.referenceBounds && genome) {\n\n                            json.referenceBounds.forEach(function (rb) {\n                                var refName = rb.referenceName,\n                                    alias = genome.getChromosomeName(refName);\n                                self.chrAliasTable[alias] = refName;\n\n                            });\n                        }\n                        fulfill(self.chrAliasTable);\n\n                    })\n                }\n\n            });\n        }\n\n    }\n\n\n    igv.Ga4ghVariantReader.prototype.readMetadata = function () {\n\n        return igv.ga4ghGet({\n            url: this.url,\n            entity: \"variantsets\",\n            entityId: this.variantSetId\n        });\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2015 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n\n    //@deprecated -- use igv.google.setApiKey\n    igv.setApiKey = function (key) {\n        igv.google.setApiKey(key);\n    }\n\n    igv.google = {\n\n        fileInfoCache: {},\n\n        // Crude test, this is conservative, nothing bad happens for a false positive\n        isGoogleURL: function (url) {\n            return (url.includes(\"googleapis\") && !url.includes(\"urlshortener\")) || (url.startsWith(\"gs://\"));\n        },\n\n        setApiKey: function (key) {\n            this.apiKey = key;\n        },\n\n        translateGoogleCloudURL: function (gsUrl) {\n\n            var i, bucket, object, qIdx, objectString, paramString;\n\n            i = gsUrl.indexOf('/', 5);\n            qIdx = gsUrl.indexOf('?');\n\n            if (i < 0) {\n                console.log(\"Invalid gs url: \" + gsUrl);\n                return gsUrl;\n            }\n\n            bucket = gsUrl.substring(5, i);\n\n            objectString = (qIdx < 0) ? gsUrl.substring(i + 1) : gsUrl.substring(i + 1, qIdx);\n            object = encodeURIComponent(objectString);\n\n            if (qIdx > 0) {\n                paramString = gsUrl.substring(qIdx);\n            }\n\n            return \"https://www.googleapis.com/storage/v1/b/\" + bucket + \"/o/\" + object +\n                (paramString ? paramString + \"&alt=media\" : \"?alt=media\");\n\n        },\n\n        addApiKey: function (url) {\n\n            var apiKey = this.apiKey,\n                paramSeparator = url.includes(\"?\") ? \"&\" : \"?\";\n\n            if (apiKey !== undefined && !url.includes(\"key=\")) {\n                if (apiKey) {\n                    url = url + paramSeparator + \"key=\" + apiKey;\n                }\n            }\n            return url;\n        },\n\n        driveDownloadURL: function (link) {\n            var i1, i2, id;\n            // Return a google drive download url for the sharable link\n            //https://drive.google.com/open?id=0B-lleX9c2pZFbDJ4VVRxakJzVGM\n            //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n\n            var id = getGoogleDriveFileID(link);\n\n            return id ? \"https://www.googleapis.com/drive/v3/files/\" + id + \"?alt=media&supportsTeamDrives=true\" : link;\n        },\n\n        getDriveFileInfo: function (googleDriveURL) {\n\n            var id = getGoogleDriveFileID(googleDriveURL),\n                endPoint = \"https://www.googleapis.com/drive/v3/files/\" + id + \"?supportsTeamDrives=true\";\n\n            return igv.xhr.loadJson(endPoint, igv.buildOptions({}));\n        },\n\n        loadGoogleProperties: function (propertiesURL) {\n\n            const self = this;\n\n            return igv.xhr.loadArrayBuffer(propertiesURL)\n\n                .then(function (arrayBuffer) {\n                    var inflate, plain, str;\n\n                    inflate = new Zlib.Gunzip(new Uint8Array(arrayBuffer));\n                    plain = inflate.decompress();\n                    str = String.fromCharCode.apply(null, plain);\n\n                    const properties = JSON.parse(str);\n                    self.setApiKey(properties[\"api_key\"]);\n\n                    self.properties = properties;\n                    return properties;\n\n                })\n        }\n    }\n\n    function getGoogleDriveFileID(link) {\n\n        //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n        var i1, i2;\n\n        if (link.includes(\"/open?id=\")) {\n            i1 = link.indexOf(\"/open?id=\") + 9;\n            i2 = link.indexOf(\"&\");\n            if (i1 > 0 && i2 > i1) {\n                return link.substring(i1, i2)\n            }\n            else if (i1 > 0) {\n                return link.substring(i1);\n            }\n\n        }\n        else if (link.includes(\"/file/d/\")) {\n            i1 = link.indexOf(\"/file/d/\") + 8;\n            i2 = link.lastIndexOf(\"/\");\n            return link.substring(i1, i2);\n        }\n    }\n\n    return igv;\n\n})(igv || {});\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2018 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 8/11/2018.\n */\n\nvar igv = (function (igv) {\n\n    const wsRegex = /(\\s+)/;\n\n    igv.GenbankParser = function (config) {\n\n        this.config = config;\n        this.nameFields = new Set([\"gene\"]);\n\n    }\n\n\n    igv.GenbankParser.prototype.parseFeatures = function (data) {\n\n        var line, locusName, accession, sequence, aliases, chr;\n\n        if (!data) return null;\n\n        const dataWrapper = igv.getDataWrapper(data);\n\n        // Read locus\n        line = dataWrapper.nextLine();\n        readLocus(line);\n\n\n        do {\n            line = dataWrapper.nextLine();\n            if (line.startsWith(\"ACCESSION\")) {\n                readAccession(line);\n            } else if (line.startsWith(\"ALIASES\")) {\n                readAliases(line);\n            }\n        }\n        while (line && !line.startsWith(\"FEATURES\"));\n\n        readFeatures(dataWrapper);\n        readOriginSequence(dataWrapper);\n\n        function readLocus(line) {\n            const tokens = line.split(wsRegex);\n            if (!tokens[0].equalsIgnoreCase(\"LOCUS\")) {\n                // throw exception\n            }\n            locusName = tokens[1].trim();\n        }\n\n        function readAccession(line) {\n\n            let tokens = line.split(wsRegex);\n            if (tokens.length < 2) {\n                console.log(\"Genbank file missing ACCESSION number.\");\n            } else {\n                accession = tokens[1].trim();\n            }\n        }\n\n        /**\n         * Read the sequence aliases line  -- Note: this is an IGV extension\n         * ACCESSION   K03160\n         *\n         * @throws IOException\n         */\n        function readAliases(line) {\n            let tokens = line.split(wsRegex);\n            if (tokens.length < 2) {\n                //log.info(\"Genbank file missing ACCESSION number.\");\n            } else {\n                aliases = tokens[1].split(\",\");\n            }\n        }\n\n\n        /**\n         * Read the origin section.   Example...\n         * <p/>\n         * ORIGIN\n         * 1 gatcctccat atacaacggt atctccacct caggtttaga tctcaacaac ggaaccattg\n         * 61 ccgacatgag acagttaggt atcgtcgaga gttacaagct aaaacgagca gtagtcagct\n         * 121 ctgcatctga agccgctgaa gttctactaa gggtggataa catcatccgt gcaagaccaa\n         *\n         * @param reader\n         */\n        function readOriginSequence(dataWrapper) {\n\n            let nextLine;\n\n            sequence = [];\n            while ((nextLine = dataWrapper.nextLine()) && !nextLine.startsWith(\"//\")) {\n                nextLine = nextLine.trim();\n                let tokens = nextLine.split(wsRegex);\n                for (let i = 1; i < tokens.length; i++) {\n                    let str = tokens[i];\n                    for (let j = 0; j < str.length; j++) {\n                        sequence.push(str.charCodeAt(j));\n                    }\n                }\n            }\n        }\n\n\n        /**\n         * FEATURES             Location/Qualifiers\n         * source          1..105338\n         * /organism=\"Homo sapiens\"\n         * /mol_type=\"genomic DNA\"\n         * /db_xref=\"taxon:9606\"\n         * /chromosome=\"10\"\n         * gene            1..105338\n         * /gene=\"PTEN\"\n         * /note=\"Derived by automated computational analysis using\n         * gene prediction method: BestRefseq.\"\n         * /db_xref=\"GeneID:5728\"\n         * /db_xref=\"HGNC:9588\"\n         * /db_xref=\"HPRD:03431\"\n         * /db_xref=\"MIM:601728\"\n         * <p/>\n         * CDS             join(1033..1111,30588..30672,62076..62120,67609..67652,\n         * 69576..69814,88681..88822,94416..94582,97457..97681,\n         * 101850..102035)\n         * /gene=\"PTEN\"\n         *\n         * @param reader\n         * @throws IOException\n         */\n        function readFeatures(dataWrapper) {\n\n\n            chr = accession || locusName;\n\n            //Process features until \"ORIGIN\"\n            let features = [];\n\n            let currentLocQualifier, nextLine,\n                errorCount = 0;\n\n            do {\n                nextLine = dataWrapper.nextLine();\n\n                // TODO -- first line is source (required), has total length => use to size sequence\n                // TODO -- keys start at column 6,   locations and qualifiers at column 22.\n\n                if (!nextLine || nextLine.startsWith(\"ORIGIN\")) {\n                    break;\n                }\n\n                if (nextLine.length() < 6) {\n                    if (errorCount < 10) {\n                        console(\"Unexpected line in genbank file (skipping): \" + nextLine);\n                    }\n                    errorCount++;\n                    continue;\n                }\n\n                if (nextLine.charAt(5) !== ' ') {\n                    let featureType = nextLine.substring(5, 21).trim();\n                    let f = {\n                        chr: chr,\n                        type: featureType,\n                        attributes: {}\n                    };\n\n                    currentLocQualifier = nextLine.substring(21);\n\n                    if (!featureType.toLowerCase().equals(\"source\")) {\n                        features.add(f);\n                    }\n\n                } else {\n                    let tmp = nextLine.substring(21).trim();\n\n                    if (tmp.length() > 0)\n                        if (tmp.charAt(0) === '/') {\n\n                            if (currentLocQualifier.charAt(0) == '/') {\n\n                                let tokens = currentLocQualifier.split(\"=\", 2);\n\n                                if (tokens.length > 1) {\n\n                                    let keyName = tokens[0].length() > 1 ? tokens[0].substring(1) : \"\";\n                                    let value = StringUtils.stripQuotes(tokens[1]);\n\n                                    f.attributes[keyName] = value;\n                                    if (nameFields.has(keyName)) {\n                                        f.setName(value);\n                                    }\n                                } else {\n                                    // TODO -- don't know how to interpret, log?\n                                }\n                            } else {\n\n                                // location string TODO -- many forms of this to support\n                                // Crude test for strand\n                                let strand = currentLocQualifier.contains(\"complement\") ? \"-\" : \"+\";\n                                f.strand = strand;\n\n\n                                // join and complement functions irrelevant\n                                let joinString = currentLocQualifier.replace(\"join\", \"\");\n                                joinString = joinString.replace(\"order\", \"\");\n                                joinString = joinString.replace(\"complement\", \"\");\n                                joinString = joinString.replace(\"(\", \"\");\n                                joinString = joinString.replace(\")\", \"\");\n\n                                if (joinString.contains(\"..\")) {\n\n                                    joinString = joinString.replace(\"<\", \"\");\n                                    joinString = joinString.replace(\">\", \"\");\n\n                                    let exons = createExons(joinString, strand);\n\n                                    let firstExon = exons[0];\n                                    f.start = firstExon.start;\n\n                                    let lastExon = exons.get[exons.length - 1];\n                                    f.setEnd = lastExon.end;\n\n                                    if (exons.length > 1) {\n                                        f.exons = exons;\n                                    }\n                                } else {\n                                    // TODO Single locus for now,  other forms possible\n                                    f.start = Number.parseInt(joinString) - 1;\n                                    f.end = start + 1;\n                                }\n\n                            }\n                            currentLocQualifier = tmp;\n                        } else {\n                            currentLocQualifier = currentLocQualifier || tmp;\n                        }\n                }\n            }\n            while (true);\n        }\n\n    }\n\n    /**\n     * Create a list of Exon objects from the Embl join string.  Apparently exons in embl\n     * format are represented by a single CDS record.\n     *\n     * @param joinString\n     */\n    function createExons(joinString, strand) {\n\n        let lociArray = joinString.split(\",\");\n\n        let exons = [];\n\n        let isNegative = joinString.contains(\"complement\");\n\n        lociArray.forEach(function (loci) {\n\n            let  tmp = loci.split(\"..\");\n\n            let exonStart = 0;    // - (isNegative ? 0 : 1);\n\n            try {\n                exonStart = Number.parseInt(tmp[0]) - 1;\n\n                let exonEnd = exonStart + 1;\n                if (tmp.length > 1) {\n                    exonEnd = Number.parseInt(tmp[1]);\n                }\n\n                exons.add({\n                    chr: accession,\n                    start: exonStart,\n                    end: exonEnd,\n                    strand: strand\n                });\n\n            } catch (e) {\n                console.error(e);\n            }\n        });\n\n        exons.sort(function (a, b) {\n            return a.start - b.start;\n        });\n\n        return exons;\n    }\n\n\n    return igv;\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    var KNOWN_GENOMES;\n\n    igv.GenomeUtils = {\n\n        loadGenome: async function (config) {\n\n            const cytobandUrl = config.cytobandURL;\n            const aliasURL = config.aliasURL;\n            const sequence = new igv.FastaSequence(config);\n\n            await sequence.init()\n\n            let cytobands\n            if (cytobandUrl) {\n                cytobands = await loadCytobands(cytobandUrl, sequence.config);\n            }\n\n            let aliases\n            if (aliasURL) {\n                aliases = await loadAliases(aliasURL, sequence.config);\n            }\n\n            return new Genome(config, sequence, cytobands, aliases);\n\n        },\n\n        getKnownGenomes: async function () {\n\n            const genomeList = igv.GenomeUtils.genomeList;\n\n            if (KNOWN_GENOMES) {\n                return KNOWN_GENOMES;\n            } else if (!genomeList) {\n                return {};\n            }\n            else if (typeof genomeList === 'string') {\n                const jsonArray = await igv.xhr.loadJson(genomeList, {})\n                return processJson(jsonArray);\n\n            }\n            else {\n                return processJson(genomeList);\n            }\n\n            function processJson(jsonArray) {\n\n                var table = {};\n\n                jsonArray.forEach(function (json) {\n                    table[json.id] = json;\n                });\n\n                KNOWN_GENOMES = table;\n\n                return table;\n            }\n        }\n    };\n\n\n    var Genome = function (config, sequence, ideograms, aliases) {\n\n        this.config = config;\n        this.id = config.id;\n        this.sequence = sequence;\n        this.chromosomeNames = sequence.chromosomeNames;\n        this.chromosomes = sequence.chromosomes;  // An object (functions as a dictionary)\n        this.ideograms = ideograms;\n\n        if (Object.keys(sequence.chromosomes).length > 1) {\n            constructWG(this, config);\n        } else {\n            this.wgChromosomeNames = [sequence.chromosomeNames[0]];\n        }\n\n        /**\n         * Return the official chromosome name for the (possibly) alias.  Deals with\n         * 1 <-> chr1,  chrM <-> MT,  IV <-> chr4, etc.\n         * @param str\n         */\n        var chrAliasTable = {},\n            self = this;\n\n\n        // The standard mappings\n        chrAliasTable[\"all\"] = \"all\";\n        this.chromosomeNames.forEach(function (name) {\n            var alias = name.startsWith(\"chr\") ? name.substring(3) : \"chr\" + name;\n            chrAliasTable[alias.toLowerCase()] = name;\n            if (name === \"chrM\") chrAliasTable[\"mt\"] = \"chrM\";\n            if (name === \"MT\") chrAliasTable[\"chrm\"] = \"MT\";\n            chrAliasTable[name.toLowerCase()] = name;\n        });\n\n        // Custom mappings\n        if (aliases) {\n            aliases.forEach(function (array) {\n                // Find the official chr name\n                var defName, i;\n\n                for (i = 0; i < array.length; i++) {\n                    if (self.chromosomes[array[i]]) {\n                        defName = array[i];\n                        break;\n                    }\n                }\n\n                if (defName) {\n                    array.forEach(function (alias) {\n                        if (alias !== defName) {\n                            chrAliasTable[alias.toLowerCase()] = defName;\n                            chrAliasTable[alias] = defName;      // Should not be needed\n                        }\n                    });\n                }\n\n            });\n        }\n\n        this.chrAliasTable = chrAliasTable;\n\n    }\n\n    Genome.prototype.toJSON = function () {\n\n        return Object.assign({}, this.config, {tracks: undefined});\n    }\n\n    Genome.prototype.getInitialLocus = function () {\n\n\n    }\n\n    Genome.prototype.getHomeChromosomeName = function () {\n        if (this.chromosomes.hasOwnProperty(\"all\")) {\n            return \"all\";\n        }\n        else {\n            const chromosome = this.chromosomes[this.chromosomeNames[0]];\n            if (chromosome.rangeLocus) {\n                return chromosome.name + \":\" + chromosome.rangeLocus;\n            } else {\n                return this.chromosomeNames[0];\n            }\n        }\n    }\n\n    Genome.prototype.getChromosomeName = function (str) {\n        var chr = this.chrAliasTable[str.toLowerCase()];\n        return chr ? chr : str;\n    }\n\n    Genome.prototype.getChromosome = function (chr) {\n        chr = this.getChromosomeName(chr);\n        return this.chromosomes[chr];\n    }\n\n    Genome.prototype.getCytobands = function (chr) {\n        return this.ideograms ? this.ideograms[chr] : null;\n    }\n\n    Genome.prototype.getLongestChromosome = function () {\n\n        var longestChr,\n            key,\n            chromosomes = this.chromosomes;\n        for (key in chromosomes) {\n            if (chromosomes.hasOwnProperty(key)) {\n                var chr = chromosomes[key];\n                if (longestChr === undefined || chr.bpLength > longestChr.bpLength) {\n                    longestChr = chr;\n                }\n            }\n            return longestChr;\n        }\n    }\n\n    Genome.prototype.getChromosomes = function () {\n        return this.chromosomes;\n    }\n\n    /**\n     * Return the genome coordinate in kb for the give chromosome and position.\n     * NOTE: This might return undefined if the chr is filtered from whole genome view.\n     */\n    Genome.prototype.getGenomeCoordinate = function (chr, bp) {\n\n        var offset = this.getCumulativeOffset(chr);\n        if (offset === undefined) return undefined;\n\n        return offset + bp;\n    }\n\n    /**\n     * Return the chromosome and coordinate in bp for the given genome coordinate\n     */\n    Genome.prototype.getChromosomeCoordinate = function (genomeCoordinate) {\n\n        if (this.cumulativeOffsets === undefined) {\n            this.cumulativeOffsets = computeCumulativeOffsets.call(this);\n        }\n\n        let lastChr = undefined;\n        let lastCoord = 0;\n        for (let name of this.wgChromosomeNames) {\n\n            const cumulativeOffset = this.cumulativeOffsets[name];\n            if (cumulativeOffset > genomeCoordinate) {\n                const position = genomeCoordinate - lastCoord;\n                return {chr: lastChr, position: position};\n            }\n            lastChr = name;\n            lastCoord = cumulativeOffset;\n        }\n\n        // If we get here off the end\n        return {chr: this.chromosomeNames[this.chromosomeNames.length - 1], position: 0};\n\n    };\n\n\n    /**\n     * Return the offset in genome coordinates (kb) of the start of the given chromosome\n     * NOTE:  This might return undefined if the chromosome is filtered from whole genome view.\n     */\n    Genome.prototype.getCumulativeOffset = function (chr) {\n\n        if (this.cumulativeOffsets === undefined) {\n            this.cumulativeOffsets = computeCumulativeOffsets.call(this);\n        }\n\n        const queryChr = this.getChromosomeName(chr);\n        return this.cumulativeOffsets[queryChr];\n    };\n\n    function computeCumulativeOffsets() {\n\n        let self = this;\n        let acc = {};\n        let offset = 0;\n        for (let name of self.wgChromosomeNames) {\n\n            acc[name] = Math.floor(offset);\n\n            const chromosome = self.getChromosome(name);\n\n            offset += chromosome.bpLength;\n        }\n\n        return acc;\n    }\n\n    /**\n     * Return the nominal genome length, this is the length of the main chromosomes (no scaffolds, etc).\n     */\n    Genome.prototype.getGenomeLength = function () {\n\n        let self = this;\n\n        if (!this.bpLength) {\n            let bpLength = 0;\n            self.wgChromosomeNames.forEach(function (cname) {\n                let c = self.chromosomes[cname];\n                bpLength += c.bpLength;\n            });\n            this.bpLength = bpLength;\n        }\n        return this.bpLength;\n    }\n\n    igv.Chromosome = function (name, order, bpStart, bpLength, rangeLocus) {\n        this.name = name;\n        this.order = order;\n        this.bpStart = bpStart;\n        this.bpLength = bpLength;\n        this.rangeLocus = rangeLocus;\n    }\n\n    igv.Cytoband = function (start, end, name, typestain) {\n        this.start = start;\n        this.end = end;\n        this.name = name;\n        this.stain = 0;\n\n        // Set the type, either p, n, or c\n        if (typestain == 'acen') {\n            this.type = 'c';\n        } else {\n            this.type = typestain.charAt(1);\n            if (this.type == 'p') {\n                this.stain = parseInt(typestain.substring(4));\n            }\n        }\n    }\n\n    igv.GenomicInterval = function (chr, start, end, features) {\n        this.chr = chr;\n        this.start = start;\n        this.end = end;\n        this.features = features;\n    }\n\n    igv.GenomicInterval.prototype.contains = function (chr, start, end) {\n        return this.chr == chr &&\n            this.start <= start &&\n            this.end >= end;\n    }\n\n    igv.GenomicInterval.prototype.containsRange = function (range) {\n        return this.chr === range.chr &&\n            this.start <= range.start &&\n            this.end >= range.end;\n    }\n\n    function loadCytobands(cytobandUrl, config) {\n        if (cytobandUrl.startsWith(\"data:\")) {\n            var data = decodeDataUri(cytobandUrl);\n            return Promise.resolve(getCytobands(data));\n        } else {\n            return igv.xhr.loadString(cytobandUrl, igv.buildOptions(config))\n                .then(function (data) {\n                    return getCytobands(data);\n                });\n        }\n\n        function getCytobands(data) {\n            var bands = [],\n                lastChr,\n                n = 0,\n                c = 1,\n                lines = igv.splitLines(data),\n                len = lines.length,\n                cytobands = {};\n\n            for (var i = 0; i < len; i++) {\n                var tokens = lines[i].split(\"\\t\");\n                var chr = tokens[0];\n                if (!lastChr) lastChr = chr;\n\n                if (chr != lastChr) {\n\n                    cytobands[lastChr] = bands;\n                    bands = [];\n                    lastChr = chr;\n                    n = 0;\n                    c++;\n                }\n\n                if (tokens.length == 5) {\n                    //10\t0\t3000000\tp15.3\tgneg\n                    var chr = tokens[0];\n                    var start = parseInt(tokens[1]);\n                    var end = parseInt(tokens[2]);\n                    var name = tokens[3];\n                    var stain = tokens[4];\n                    bands[n++] = new igv.Cytoband(start, end, name, stain);\n                }\n            }\n\n            return cytobands;\n        }\n\n        function decodeDataUri(dataUri) {\n\n            let plain\n\n            if (dataUri.startsWith(\"data:application/gzip;base64\")) {\n                plain = igv.decodeDataURI(dataUri)\n            }\n            else {\n\n                let bytes,\n                    split = dataUri.split(','),\n                    info = split[0].split(':')[1],\n                    dataString = split[1];\n\n                if (info.indexOf('base64') >= 0) {\n                    dataString = atob(dataString);\n                } else {\n                    dataString = decodeURI(dataString);\n                }\n\n                bytes = new Uint8Array(dataString.length);\n                for (let i = 0; i < dataString.length; i++) {\n                    bytes[i] = dataString.charCodeAt(i);\n                }\n\n                var inflate = new Zlib.Gunzip(bytes);\n                plain = inflate.decompress();\n            }\n\n            let s = \"\";\n            const len = plain.length;\n            for (let i = 0; i < len; i++) {\n                s += String.fromCharCode(plain[i]);\n            }\n            return s;\n        }\n    }\n\n    function loadAliases(aliasURL, config) {\n\n        return igv.xhr.loadString(aliasURL, igv.buildOptions(config))\n\n            .then(function (data) {\n\n                var lines = igv.splitLines(data),\n                    aliases = [];\n\n                lines.forEach(function (line) {\n                    if (!line.startsWith(\"#\") & line.length > 0) aliases.push(line.split(\"\\t\"));\n                });\n\n                return aliases;\n            });\n\n    }\n\n\n    function constructWG(genome, config) {\n\n        let wgChromosomes;\n        if (config.chromosomeOrder) {\n            genome.wgChromosomeNames = config.chromosomeOrder.split(',').map(nm => nm.trim())\n            wgChromosomes = genome.wgChromosomeNames.map(nm => genome.chromosomes[nm]).filter(chr => chr !== undefined)\n\n        } else {\n\n            // Trim small chromosomes.\n            const lengths = Object.keys(genome.chromosomes).map(key => genome.chromosomes[key].bpLength)\n            const median = lengths.reduce((a, b) => Math.max(a, b))\n            const threshold = median / 50;\n            wgChromosomes = Object.values(genome.chromosomes).filter(chr => chr.bpLength > threshold)\n\n            // Sort chromosomes.  First segregate numeric and alpha names, sort numeric, leave alpha as is\n            const numericChromosomes = wgChromosomes.filter(chr => isDigit(chr.name.replace('chr', '')))\n            const alphaChromosomes = wgChromosomes.filter(chr => !isDigit(chr.name.replace('chr', '')))\n            numericChromosomes.sort((a, b) => Number.parseInt(a.name.replace('chr', '')) - Number.parseInt(b.name.replace('chr', '')))\n\n            const wgChromosomeNames = numericChromosomes.map(chr => chr.name)\n            for (let chr of alphaChromosomes) {\n                wgChromosomeNames.push(chr.name)\n            }\n            genome.wgChromosomeNames = wgChromosomeNames\n        }\n\n\n        // Compute psuedo-chromosome \"all\"\n        const l = wgChromosomes.reduce((accumulator, currentValue) => accumulator += currentValue.bpLength, 0)\n        genome.chromosomes[\"all\"] = {\n            name: \"all\",\n            bpLength: l\n        };\n\n        function isDigit(val) {\n            return /^\\d+$/.test(val)\n        }\n\n    }\n\n\n    return igv;\n\n})\n(igv || {});\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    var CigarOperationTable = {\n        \"ALIGNMENT_MATCH\": \"M\",\n        \"INSERT\": \"I\",\n        \"DELETE\": \"D\",\n        \"SKIP\": \"N\",\n        \"CLIP_SOFT\": \"S\",\n        \"CLIP_HARD\": \"H\",\n        \"PAD\": \"P\",\n        \"SEQUENCE_MATCH\": \"=\",\n        \"SEQUENCE_MISMATCH\": \"X\"\n    }\n\n    igv.Ga4ghAlignmentReader = function (config, genome) {\n\n        this.config = config;\n        this.genome = genome;\n        this.url = config.url;\n        this.filter = new igv.BamFilter(config.filter);\n        this.readGroupSetIds = config.readGroupSetIds;\n        this.authKey = config.authKey;   // Might be undefined or nill\n\n        this.samplingWindowSize = config.samplingWindowSize === undefined ? 100 : config.samplingWindowSize;\n        this.samplingDepth = config.samplingDepth === undefined ? 100 : config.samplingDepth;\n        if (config.viewAsPairs) {\n            this.pairsSupported = true;\n        }\n        else {\n            this.pairsSupported = config.pairsSupported === undefined ? true : config.pairsSupported;\n        }\n    }\n\n\n    igv.Ga4ghAlignmentReader.prototype.readAlignments = function (chr, bpStart, bpEnd) {\n\n        const genome = this.genome;\n        const self = this;\n\n        return getChrAliasTable()\n\n            .then(function (chrAliasTable) {\n\n                var queryChr = chrAliasTable.hasOwnProperty(chr) ? chrAliasTable[chr] : chr,\n                    readURL = self.url + \"/reads/search\";\n\n                return igv.ga4ghSearch({\n                    url: readURL,\n                    body: {\n                        \"readGroupSetIds\": [self.readGroupSetIds],\n                        \"referenceName\": queryChr,\n                        \"start\": bpStart,\n                        \"end\": bpEnd,\n                        \"pageSize\": \"10000\"\n                    },\n                    decode: decodeGa4ghReads,\n                    results: new igv.AlignmentContainer(chr, bpStart, bpEnd, self.samplingWindowSize, self.samplingDepth, self.pairsSupported)\n                })\n            });\n\n\n        function getChrAliasTable() {\n\n            if (self.chrAliasTable) {\n\n                return Promise.resolve(self.chrAliasTable);\n\n            } else {\n\n                return self.readMetadata()\n\n                    .then(function (json) {\n\n                        self.chrAliasTable = {};\n\n                        if (genome && json.readGroups && json.readGroups.length > 0) {\n\n                            var referenceSetId = json.readGroups[0].referenceSetId;\n\n                            if (referenceSetId) {\n\n                                // Query for reference names to build an alias table (map of genome ref names -> dataset ref names)\n                                var readURL = self.url + \"/references/search\";\n\n                                return igv.ga4ghSearch({\n                                    url: readURL,\n                                    body: {\n                                        \"referenceSetId\": referenceSetId\n                                    },\n                                    decode: function (j) {\n                                        return j.references;\n                                    }\n                                })\n                                    .then(function (references) {\n\n\n                                        references.forEach(function (ref) {\n                                            var refName = ref.name,\n                                                alias = genome.getChromosomeName(refName);\n                                            self.chrAliasTable[alias] = refName;\n                                        });\n\n\n                                        return self.chrAliasTable;\n\n                                    })\n                            }\n                            else {\n\n                                // Try hardcoded constants -- workaround for non-compliant data at Google\n                                populateChrAliasTable(self.chrAliasTable, self.config.datasetId);\n\n                                return self.chrAliasTable;\n                            }\n                        }\n\n                        else {\n                            // No browser object, can't build map.  This can occur when run from unit tests\n                            fulfill(self.chrAliasTable);\n                        }\n                    })\n            }\n        }\n\n        /**\n         * Decode an array of ga4gh read records\n         *\n\n         */\n        function decodeGa4ghReads(json) {\n\n            var i,\n                jsonRecords = json.alignments,\n                len = jsonRecords.length,\n                json,\n                alignment,\n                jsonAlignment,\n                cigarDecoded,\n                alignments = [],\n                mate,\n                blocks;\n\n            for (i = 0; i < len; i++) {\n\n                json = jsonRecords[i];\n\n                alignment = new igv.BamAlignment();\n\n                alignment.readName = json.fragmentName;\n                alignment.properPlacement = json.properPlacement;\n                alignment.duplicateFragment = json.duplicateFragment;\n                alignment.numberReads = json.numberReads;\n                alignment.fragmentLength = json.fragmentLength;\n                alignment.readNumber = json.readNumber;\n                alignment.failedVendorQualityChecks = json.failedVendorQualityChecks;\n                alignment.secondaryAlignment = json.secondaryAlignment;\n                alignment.supplementaryAlignment = json.supplementaryAlignment;\n                alignment.seq = json.alignedSequence;\n                alignment.qual = json.alignedQuality;\n                alignment.matePos = json.nextMatePosition;\n                alignment.tagDict = json.info;\n                alignment.flags = encodeFlags(json);\n\n\n                jsonAlignment = json.alignment;\n                if (jsonAlignment) {\n                    alignment.mapped = true;\n\n                    alignment.chr = json.alignment.position.referenceName;\n                    if (genome) alignment.chr = genome.getChromosomeName(alignment.chr);\n\n                    alignment.start = parseInt(json.alignment.position.position);\n                    alignment.strand = !(json.alignment.position.reverseStrand);\n                    alignment.mq = json.alignment.mappingQuality;\n                    alignment.cigar = encodeCigar(json.alignment.cigar);\n                    cigarDecoded = translateCigar(json.alignment.cigar);\n\n                    alignment.lengthOnRef = cigarDecoded.lengthOnRef;\n\n                    blocks = makeBlocks(alignment, cigarDecoded.array);\n                    alignment.blocks = blocks.blocks;\n                    alignment.insertions = blocks.insertions;\n\n                }\n                else {\n                    alignment.mapped = false;\n                }\n\n                mate = json.nextMatePosition;\n                if (mate) {\n                    alignment.mate = {\n                        chr: mate.referenceFrame,\n                        position: parseInt(mate.position),\n                        strand: !mate.reverseStrand\n                    };\n                }\n\n                if (self.filter.pass(alignment)) {\n                    alignments.push(alignment);\n                }\n\n\n            }\n\n            return alignments;\n\n\n            // Encode a cigar string -- used for popup text\n            function encodeCigar(cigarArray) {\n\n                var cigarString = \"\";\n                cigarArray.forEach(function (cigarUnit) {\n                    var op = CigarOperationTable[cigarUnit.operation],\n                        len = cigarUnit.operationLength;\n                    cigarString = cigarString + (len + op);\n                });\n\n                return cigarString;\n            }\n\n            // TODO -- implement me\n            function encodeFlags(json) {\n                return 0;\n            }\n\n            function translateCigar(cigar) {\n\n                var cigarUnit, opLen, opLtr,\n                    lengthOnRef = 0,\n                    cigarArray = [],\n                    i;\n\n                for (i = 0; i < cigar.length; i++) {\n\n                    cigarUnit = cigar[i];\n\n                    opLtr = CigarOperationTable[cigarUnit.operation];\n                    opLen = parseInt(cigarUnit.operationLength);    // Google represents long as a String\n\n                    if (opLtr === 'M' || opLtr === 'EQ' || opLtr === 'X' || opLtr === 'D' || opLtr === 'N' || opLtr === '=')\n                        lengthOnRef += opLen;\n\n                    cigarArray.push({len: opLen, ltr: opLtr});\n\n                }\n\n                return {lengthOnRef: lengthOnRef, array: cigarArray};\n            }\n\n\n            /**\n             * Split the alignment record into blocks as specified in the cigarArray.  Each aligned block contains\n             * its portion of the read sequence and base quality strings.  A read sequence or base quality string\n             * of \"*\" indicates the value is not recorded.  In all other cases the length of the block sequence (block.seq)\n             * and quality string (block.qual) must == the block length.\n             *\n             * NOTE: Insertions are not yet treated // TODO\n             *\n             * @param record\n             * @param cigarArray\n             * @returns array of blocks\n             */\n            function makeBlocks(record, cigarArray) {\n\n\n                var blocks = [],\n                    insertions,\n                    seqOffset = 0,\n                    pos = record.start,\n                    len = cigarArray.length,\n                    gapType;\n\n                for (var i = 0; i < len; i++) {\n\n                    var c = cigarArray[i];\n\n                    switch (c.ltr) {\n                        case 'H' :\n                            break; // ignore hard clips\n                        case 'P' :\n                            break; // ignore pads\n                        case 'S' :\n                            seqOffset += c.len;\n                            gapType = 'S';\n                            break; // soft clip read bases\n                        case 'N' :\n                            pos += c.len;\n                            gapType = 'N';\n                            break;  // reference skip\n                        case 'D' :\n                            pos += c.len;\n                            gapType = 'D';\n                            break;\n                        case 'I' :\n                            if (insertions === undefined) insertions = [];\n                            insertions.push(new igv.AlignmentBlock({\n                                start: pos,\n                                len: c.len,\n                                seqOffset: seqOffset\n                            }));\n                            seqOffset += c.len;\n                            break;\n                        case 'M' :\n                        case 'EQ' :\n                        case '=' :\n                        case 'X' :\n                            blocks.push(\n                                new igv.AlignmentBlock({\n                                    start: pos,\n                                    len: c.len,\n                                    seqOffset: seqOffset,\n                                    gapType: gapType\n                                }));\n                            seqOffset += c.len;\n                            pos += c.len;\n\n                            break;\n\n                        default :\n                            console.log(\"Error processing cigar element: \" + c.len + c.ltr);\n                    }\n                }\n\n                return {blocks: blocks, insertions: insertions};\n            }\n        }\n    }\n\n\n    igv.Ga4ghAlignmentReader.prototype.readMetadata = function () {\n\n        return igv.ga4ghGet({\n            url: this.url,\n            entity: \"readgroupsets\",\n            entityId: this.readGroupSetIds\n        });\n    }\n\n    igv.decodeGa4ghReadset = function (json) {\n\n        var sequenceNames = [],\n            fileData = json[\"fileData\"];\n\n        fileData.forEach(function (fileObject) {\n\n            var refSequences = fileObject[\"refSequences\"];\n\n            refSequences.forEach(function (refSequence) {\n                sequenceNames.push(refSequence[\"name\"]);\n            });\n        });\n\n        return sequenceNames;\n    }\n\n\n    /**\n     * Hardcoded hack to work around some non-compliant google datasets\n     *\n     * @param chrAliasTable\n     * @param datasetId\n     */\n    function populateChrAliasTable(chrAliasTable, datasetId) {\n        var i;\n        if (\"461916304629\" === datasetId || \"337315832689\" === datasetId) {\n            for (i = 1; i < 23; i++) {\n                chrAliasTable[\"chr\" + i] = i;\n            }\n            chrAliasTable[\"chrX\"] = \"X\";\n            chrAliasTable[\"chrY\"] = \"Y\";\n            chrAliasTable[\"chrM\"] = \"MT\";\n        }\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    /**\n     *\n     * @param options\n     */\n    igv.ga4ghGet = function (options) {\n        var url = options.url + \"/\" + options.entity + \"/\" + options.entityId;\n        options.headers = ga4ghHeaders();\n        return igv.xhr.loadJson(url, options);      // Returns a promise\n    }\n\n    igv.ga4ghSearch = function (options) {\n        return new Promise(function (fulfill, reject) {\n            var results = options.results ? options.results : [],\n                url = options.url,\n                body = options.body,\n                decode = options.decode,\n                apiKey = igv.google.apiKey,\n                paramSeparator = \"?\",\n                fields = options.fields;  // Partial response\n\n\n            if (apiKey) {\n                url = url + paramSeparator + \"key=\" + apiKey;\n                paramSeparator = \"&\";\n            }\n\n            if (fields) {\n                url = url + paramSeparator + \"fields=\" + fields;\n            }\n\n\n            // Start the recursive load cycle.  Data is fetched in chunks, if more data is available a \"nextPageToken\" is returned.\n            return loadChunk();\n\n            function loadChunk(pageToken) {\n\n                if (pageToken) {\n                    body.pageToken = pageToken;\n                }\n                else {\n                    if (body.pageToken != undefined) delete body.pageToken;    // Remove previous page token, if any\n                }\n\n                var sendData = JSON.stringify(body);\n\n                igv.xhr.loadJson(url, {\n                        sendData: sendData,\n                        contentType: \"application/json\",\n                        headers: ga4ghHeaders(),\n                    //    oauthToken: ga4ghToken()\n                    })\n                    .then(function (json) {\n                        var nextPageToken, tmp;\n\n                        if (json) {\n\n                            tmp = decode ? decode(json) : json;\n\n                            if (tmp) {\n\n                                tmp.forEach(function (a) {\n                                    var keep = true;           // TODO -- conditionally keep (downsample)\n                                    if (keep) {\n                                        results.push(a);\n                                    }\n                                });\n                            }\n\n\n                            nextPageToken = json[\"nextPageToken\"];\n\n                            if (nextPageToken) {\n                                loadChunk(nextPageToken);\n                            }\n                            else {\n                                fulfill(results);\n                            }\n                        }\n                        else {\n                            fulfill(results);\n                        }\n\n                    })\n                    .catch(function (error) {\n                        reject(error);\n                    });\n            }\n\n        });\n\n\n    }\n\n    igv.ga4ghSearchReadGroupSets = function (options) {\n\n        igv.ga4ghSearch({\n            url: options.url + \"/readgroupsets/search\",\n            body: {\n                \"datasetIds\": [options.datasetId],\n\n                \"pageSize\": \"10000\"\n            },\n            decode: function (json) {\n                return json.readGroupSets;\n            }\n        }).then(function (results) {\n            options.success(results);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    igv.ga4ghSearchVariantSets = function (options) {\n\n        igv.ga4ghSearch({\n            url: options.url + \"/variantsets/search\",\n            body: {\n                \"datasetIds\": [options.datasetId],\n                \"pageSize\": \"10000\"\n            },\n            decode: function (json) {\n                return json.variantSets;\n            }\n        }).then(function (results) {\n            options.success(results);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    igv.ga4ghSearchCallSets = function (options) {\n\n        // When searching by dataset id, first must get variant sets.\n        if (options.datasetId) {\n\n            igv.ga4ghSearchVariantSets({\n\n                url: options.url,\n                datasetId: options.datasetId,\n                success: function (results) {\n\n                    var variantSetIds = [];\n                    results.forEach(function (vs) {\n                        variantSetIds.push(vs.id);\n                    });\n\n                    // Substitute variantSetIds for datasetId\n                    options.datasetId = undefined;\n                    options.variantSetIds = variantSetIds;\n                    igv.ga4ghSearchCallSets(options);\n\n\n                }\n            });\n\n        }\n\n        else {\n\n            igv.ga4ghSearch({\n                url: options.url + \"/callsets/search\",\n                body: {\n                    \"variantSetIds\": options.variantSetIds,\n                    \"pageSize\": \"10000\"\n                },\n                decode: function (json) {\n\n                    if (json.callSets) json.callSets.forEach(function (cs) {\n                        cs.variantSetIds = options.variantSetIds;\n                    });\n\n                    return json.callSets;\n                }\n            }).then(function (results) {\n                options.success(results);\n            }).catch(function (error) {\n                console.log(error);\n            });\n        }\n    }\n\n\n    /**\n     * Method to support ga4gh application\n     *\n     * @param options\n     */\n    igv.ga4ghSearchReadAndCallSets = function (options) {\n\n        igv.ga4ghSearchReadGroupSets({\n            url: options.url,\n            datasetId: options.datasetId,\n            success: function (readGroupSets) {\n                igv.ga4ghSearchCallSets({\n                    url: options.url,\n                    datasetId: options.datasetId,\n                    success: function (callSets) {\n\n                        // Merge call sets and read group sets\n\n                        var csHash = {};\n                        callSets.forEach(function (cs) {\n                            csHash[cs.name] = cs;\n                        });\n\n                        var mergedResults = [];\n                        readGroupSets.forEach(function (rg) {\n                            var m = {readGroupSetId: rg.id, name: rg.name, datasetId: options.datasetId},\n                                cs = csHash[rg.name];\n                            if (cs) {\n                                m.callSetId = cs.id;\n                                m.variantSetIds = cs.variantSetIds;\n                            }\n                            mergedResults.push(m);\n                        });\n\n                        options.success(mergedResults);\n\n                    }\n                });\n            }\n        });\n\n    }\n\n    function ga4ghHeaders() {\n        return {\n            \"Cache-Control\": \"no-cache\"\n        };\n\t}\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n\n    igv.Ga4ghVariantReader = function (config, genome) {\n\n        this.config = config;\n        this.genome = genome;\n        this.url = config.url;\n        this.variantSetId = config.variantSetId;\n        this.callSetIds = config.callSetIds;\n        this.includeCalls = (config.includeCalls === undefined ? true : config.includeCalls);\n\n    }\n\n    // Simulate a VCF file header\n    igv.Ga4ghVariantReader.prototype.readHeader = function () {\n\n        var self = this;\n\n\n        if (self.header) {\n            return Promise.resolve(self.header);\n        }\n\n        else {\n\n            self.header = {};\n\n            if (self.includeCalls === false) {\n                return Promise.resolve(self.header);\n            }\n            else {\n\n                var readURL = self.url + \"/callsets/search\";\n\n                return igv.ga4ghSearch({\n                    url: readURL,\n                    fields: \"nextPageToken,callSets(id,name)\",\n                    body: {\n                        \"variantSetIds\": (Array.isArray(self.variantSetId) ? self.variantSetId : [self.variantSetId]),\n                        \"pageSize\": \"10000\"\n                    },\n                    decode: function (json) {\n                        // If specific callSetIds are specified filter to those\n                        if (self.callSetIds) {\n                            var filteredCallSets = [],\n                                csIdSet = new Set();\n\n                            self.callSetIds.forEach(function (csid) {\n                                csIdSet.add(csid);\n                            })\n                            json.callSets.forEach(function (cs) {\n                                if (csIdSet.has(cs.id)) {\n                                    filteredCallSets.push(cs);\n                                }\n                            });\n                            return filteredCallSets;\n                        }\n                        else {\n                            return json.callSets;\n                        }\n                    }\n                })\n                    .then(function (callSets) {\n                        self.header.callSets = callSets;\n                        return self.header;\n                    })\n            }\n        }\n    }\n\n\n    igv.Ga4ghVariantReader.prototype.readFeatures = function (chr, bpStart, bpEnd) {\n\n        const self = this;\n        const genome = this.genome;\n\n        return self.readHeader()\n\n            .then(function (header) {\n                return getChrAliasTable()\n            })\n\n            .then(function (chrAliasTable) {\n\n                var queryChr = chrAliasTable.hasOwnProperty(chr) ? chrAliasTable[chr] : chr,\n                    readURL = self.url + \"/variants/search\";\n\n                return igv.ga4ghSearch({\n                    url: readURL,\n                    fields: (self.includeCalls ? undefined : \"nextPageToken,variants(id,variantSetId,names,referenceName,start,end,referenceBases,alternateBases,quality,filter,info)\"),\n                    body: {\n                        \"variantSetIds\": (Array.isArray(self.variantSetId) ? self.variantSetId : [self.variantSetId]),\n                        \"callSetIds\": (self.callSetIds ? self.callSetIds : undefined),\n                        \"referenceName\": queryChr,\n                        \"start\": bpStart.toString(),\n                        \"end\": bpEnd.toString(),\n                        \"pageSize\": \"10000\"\n                    },\n                    decode: function (json) {\n\n                        var v;\n\n                        var variants = [];\n\n                        json.variants.forEach(function (json) {\n\n                            v = igv.createGAVariant(json);\n\n                            if (!v.isRefBlock()) {\n                                variants.push(v);\n                            }\n                        });\n\n                        return variants;\n                    }\n                })\n            })\n\n\n        function getChrAliasTable() {\n\n            return new Promise(function (fulfill, reject) {\n\n                if (self.chrAliasTable) {\n                    fulfill(self.chrAliasTable);\n                }\n\n                else {\n                    self.readMetadata().then(function (json) {\n\n                        self.metadata = json.metadata;\n                        self.chrAliasTable = {};\n\n                        if (json.referenceBounds && genome) {\n\n                            json.referenceBounds.forEach(function (rb) {\n                                var refName = rb.referenceName,\n                                    alias = genome.getChromosomeName(refName);\n                                self.chrAliasTable[alias] = refName;\n\n                            });\n                        }\n                        fulfill(self.chrAliasTable);\n\n                    })\n                }\n\n            });\n        }\n\n    }\n\n\n    igv.Ga4ghVariantReader.prototype.readMetadata = function () {\n\n        return igv.ga4ghGet({\n            url: this.url,\n            entity: \"variantsets\",\n            entityId: this.variantSetId\n        });\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2015 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n\n    //@deprecated -- use igv.google.setApiKey\n    igv.setApiKey = function (key) {\n        igv.google.setApiKey(key);\n    }\n    igv.google = {\n\n        fileInfoCache: {},\n\n        // Crude test, this is conservative, nothing bad happens for a false positive\n        isGoogleURL: function (url) {\n            return (url.includes(\"googleapis\") && !url.includes(\"urlshortener\")) ||\n                this.isGoogleCloudURL(url) ||\n                this.isGoogleStorageURL(url) ||\n                this.isGoogleDrive(url)\n        },\n\n        isGoogleStorageURL: function (url) {\n            return url.startsWith(\"https://www.googleapis.com/storage\") ||\n                url.startsWith(\"https://storage.cloud.google.com\")\n        },\n\n        isGoogleCloudURL: function (url) {\n            return url.startsWith(\"gs://\")\n        },\n\n        isGoogleDrive: function (url) {\n            return url.indexOf(\"drive.google.com\") >= 0 || url.indexOf(\"www.googleapis.com/drive\") > 0\n        },\n\n        setApiKey: function (key) {\n            this.apiKey = key;\n        },\n\n        translateGoogleCloudURL: function (gsUrl) {\n\n            var i, bucket, object, qIdx, objectString, paramString;\n\n            i = gsUrl.indexOf('/', 5);\n            qIdx = gsUrl.indexOf('?');\n\n            if (i < 0) {\n                console.log(\"Invalid gs url: \" + gsUrl);\n                return gsUrl;\n            }\n\n            bucket = gsUrl.substring(5, i);\n\n            objectString = (qIdx < 0) ? gsUrl.substring(i + 1) : gsUrl.substring(i + 1, qIdx);\n            object = encodeURIComponent(objectString);\n\n            if (qIdx > 0) {\n                paramString = gsUrl.substring(qIdx);\n            }\n\n            return \"https://www.googleapis.com/storage/v1/b/\" + bucket + \"/o/\" + object +\n                (paramString ? paramString + \"&alt=media\" : \"?alt=media\");\n\n        },\n\n        addApiKey: function (url) {\n            const apiKey = this.apiKey\n            if (apiKey !== undefined && !url.includes(\"key=\")) {\n                const paramSeparator = url.includes(\"?\") ? \"&\" : \"?\"\n                url = url + paramSeparator + \"key=\" + apiKey;\n            }\n            return url;\n        },\n\n        driveDownloadURL: function (link) {\n            var i1, i2, id;\n            // Return a google drive download url for the sharable link\n            //https://drive.google.com/open?id=0B-lleX9c2pZFbDJ4VVRxakJzVGM\n            //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n\n            var id = getGoogleDriveFileID(link);\n\n            return id ? \"https://www.googleapis.com/drive/v3/files/\" + id + \"?alt=media&supportsTeamDrives=true\" : link;\n        },\n\n        getDriveFileInfo: function (googleDriveURL) {\n\n            var id = getGoogleDriveFileID(googleDriveURL),\n                endPoint = \"https://www.googleapis.com/drive/v3/files/\" + id + \"?supportsTeamDrives=true\";\n\n            return igv.xhr.loadJson(endPoint, igv.buildOptions({}));\n        },\n\n        loadGoogleProperties: function (propertiesURL) {\n\n            const self = this;\n\n            return igv.xhr.loadArrayBuffer(propertiesURL)\n\n                .then(function (arrayBuffer) {\n                    var inflate, plain, str;\n\n                    inflate = new Zlib.Gunzip(new Uint8Array(arrayBuffer));\n                    plain = inflate.decompress();\n                    str = String.fromCharCode.apply(null, plain);\n\n                    const properties = JSON.parse(str);\n                    self.setApiKey(properties[\"api_key\"]);\n\n                    self.properties = properties;\n                    return properties;\n\n                })\n        }\n    }\n\n    function getGoogleDriveFileID(link) {\n\n        //https://drive.google.com/file/d/1_FC4kCeO8E3V4dJ1yIW7A0sn1yURKIX-/view?usp=sharing\n        var i1, i2;\n\n        if (link.includes(\"/open?id=\")) {\n            i1 = link.indexOf(\"/open?id=\") + 9;\n            i2 = link.indexOf(\"&\");\n            if (i1 > 0 && i2 > i1) {\n                return link.substring(i1, i2)\n            } else if (i1 > 0) {\n                return link.substring(i1);\n            }\n\n        } else if (link.includes(\"/file/d/\")) {\n            i1 = link.indexOf(\"/file/d/\") + 8;\n            i2 = link.lastIndexOf(\"/\");\n            return link.substring(i1, i2);\n        }\n    }\n\n    return igv;\n\n})(igv || {});\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n\n    let EqtlTrack;\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    igv.trackFactory[\"eqtl\"] = function (config, browser) {\n\n        if (!EqtlTrack) {\n            defineClass();\n        }\n\n        return new EqtlTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        EqtlTrack = igv.extend(igv.TrackBase,\n\n            function (config, browser) {\n\n                var url = config.url,\n                    label = config.name;\n\n                this.config = config;\n                this.url = url;\n                this.name = label;\n                this.pValueField = config.pValueField || \"pValue\";\n                this.geneField = config.geneField || \"geneSymbol\";\n                this.snpField = config.snpField || \"snp\";\n\n                const min = config.minLogP || config.min;\n                const max = config.maxLogP || config.max;\n                this.dataRange = {\n                    min: min || 3.5,\n                    max: max || 25\n                }\n                if (!max) {\n                    this.autoscale = true;\n                }\n                else {\n                    this.autoscale = config.autoscale;\n                }\n                this.autoscalePercentile = (config.autoscalePercentile === undefined ? 98 : config.autoscalePercentile);\n\n\n                this.background = config.background;    // No default\n                this.divider = config.divider || \"rgb(225,225,225)\";\n                this.dotSize = config.dotSize || 2;\n                this.height = config.height || 100;\n                this.autoHeight = false;\n                this.disableButtons = config.disableButtons;\n\n                // Limit visibility window to 2 mb,  gtex server gets flaky beyond that\n                this.visibilityWindow = config.visibilityWindow === undefined ?\n                    2000000 : config.visibilityWindow >= 0 ? Math.min(2000000, config.visibilityWindow) : 2000000;\n\n                this.featureSource = new igv.FeatureSource(config, browser.genome);\n\n                igv.GtexUtils.gtexLoaded = true;\n\n            });\n\n        EqtlTrack.prototype.paintAxis = function (ctx, pixelWidth, pixelHeight) {\n\n            var track = this,\n                yScale = (track.dataRange.max - track.dataRange.min) / pixelHeight;\n\n            var font = {\n                'font': 'normal 10px Arial',\n                'textAlign': 'right',\n                'strokeStyle': \"black\"\n            };\n\n            igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n            // Determine a tick spacing such that there is at least 10 pixels between ticks\n\n            var n = Math.ceil((this.dataRange.max - this.dataRange.min) * 10 / pixelHeight);\n\n\n            for (var p = 4; p <= track.dataRange.max; p += n) {\n\n                var x1,\n                    x2,\n                    y1,\n                    y2,\n                    ref;\n\n                // TODO: Dashes may not actually line up with correct scale. Ask Jim about this\n\n                ref = 0.85 * pixelWidth;\n                x1 = ref - 5;\n                x2 = ref;\n\n                y1 = y2 = pixelHeight - Math.round((p - track.dataRange.min) / yScale);\n\n                igv.graphics.strokeLine(ctx, x1, y1, x2, y2, font); // Offset dashes up by 2 pixel\n\n                if (y1 > 8) {\n                    igv.graphics.fillText(ctx, p, x1 - 1, y1 + 2, font);\n                } // Offset numbers down by 2 pixels;\n            }\n\n            font['textAlign'] = 'center';\n\n            igv.graphics.fillText(ctx, \"-log10(pvalue)\", pixelWidth / 4, pixelHeight / 2, font, {rotate: {angle: -90}});\n\n        };\n\n        EqtlTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\n            const pValueField = this.pValueField;\n\n            return this.featureSource.getFeatures(chr, bpStart, bpEnd)\n                .then(function (features) {\n                    features.forEach(function (f) {\n                        f.value = f[pValueField];\n                    })\n                    return features;\n                })\n        };\n\n        EqtlTrack.prototype.draw = function (options) {\n\n            var self = this,\n                featureList = options.features,\n                ctx = options.context,\n                bpPerPixel = options.bpPerPixel,\n                bpStart = options.bpStart,\n                pixelWidth = options.pixelWidth,\n                pixelHeight = options.pixelHeight,\n                bpEnd = bpStart + pixelWidth * bpPerPixel + 1,\n                yScale = (self.dataRange.max - self.dataRange.min) / pixelHeight,\n                selection = options.genomicState.selection;\n\n            // Background\n            if (this.background) igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': this.background});\n            igv.graphics.strokeLine(ctx, 0, pixelHeight - 1, pixelWidth, pixelHeight - 1, {'strokeStyle': this.divider});\n\n            if (ctx) {\n\n                var len = featureList.length;\n\n                ctx.save();\n\n                // Draw in two passes, with \"selected\" eqtls drawn last\n                drawEqtls(false);\n                drawEqtls(true);\n\n                ctx.restore();\n\n            }\n\n\n            function drawEqtls(drawSelected) {\n\n                var radius = drawSelected ? 2 * self.dotSize : self.dotSize,\n                    eqtl,\n                    i,\n                    px,\n                    py,\n                    color,\n                    isSelected,\n                    snp,\n                    geneName,\n                    capped;\n\n                for (i = 0; i < len; i++) {\n\n                    eqtl = featureList[i];\n                    px = (Math.round(eqtl.position - bpStart + 0.5)) / bpPerPixel;\n                    if (px < 0) continue;\n                    else if (px > pixelWidth) break;\n\n\n                    snp = eqtl.snp.toUpperCase();\n                    geneName = eqtl[self.geneField].toUpperCase();\n\n                    isSelected = selection &&\n                        (selection.snp === snp || selection.gene === geneName);\n\n                    if (!drawSelected || isSelected) {\n\n                        // Add eqtl's gene to the selection if this is the selected snp.\n                        // TODO -- this should not be done here in the rendering code.\n                        if (selection && selection.snp === snp) {\n                            selection.addGene(geneName);\n                        }\n\n                        var mLogP = -Math.log(eqtl[self.pValueField]) / Math.LN10;\n                        if (mLogP >= self.dataRange.min) {\n\n                            if (mLogP > self.dataRange.max) {\n                                mLogP = self.dataRange.max;\n                                capped = true;\n                            } else {\n                                capped = false;\n\n                            }\n\n                            py = Math.max(0 + radius, pixelHeight - Math.round((mLogP - self.dataRange.min) / yScale));\n                            eqtl.px = px;\n                            eqtl.py = py;\n\n                            if (drawSelected && selection) {\n                                color = selection.colorForGene(geneName);\n                                igv.graphics.setProperties(ctx, {fillStyle: color, strokeStyle: \"black\"});\n                            } else {\n                                color = capped ? \"rgb(150, 150, 150)\" : \"rgb(180, 180, 180)\";\n                                igv.graphics.setProperties(ctx, {fillStyle: color, strokeStyle: color});\n                            }\n\n                            igv.graphics.fillCircle(ctx, px, py, radius);\n                            igv.graphics.strokeCircle(ctx, px, py, radius);\n                        }\n                    }\n                }\n            }\n\n        };\n\n        /**\n         * Return \"popup data\" for feature @ genomic location.  Data is an array of key-value pairs\n         */\n        EqtlTrack.prototype.popupData = function (config) {\n\n            let features = config.viewport.getCachedFeatures();\n            if (!features || features.length === 0) return [];\n\n            let genomicLocation = config.genomicLocation,\n                xOffset = config.x,\n                yOffset = config.y,\n                referenceFrame = config.viewport.genomicState.referenceFrame,\n                tolerance = 2 * this.dotSize * referenceFrame.bpPerPixel,\n                dotSize = this.dotSize,\n                tissue = this.name,\n                popupData = [];\n\n            features.forEach(function (feature) {\n                if (feature.end >= genomicLocation - tolerance &&\n                    feature.start <= genomicLocation + tolerance &&\n                    feature.py - yOffset < 2 * dotSize) {\n\n                    if (popupData.length > 0) {\n                        popupData.push(\"<hr>\");\n                    }\n\n                    popupData.push(\n                        {name: \"snp id\", value: feature.snp},\n                        {name: \"gene id\", value: feature.geneId},\n                        {name: \"gene name\", value: feature.geneName},\n                        {name: \"p value\", value: feature.pValue},\n                        {name: \"tissue\", value: tissue});\n\n                }\n            });\n            return popupData;\n\n\n        }\n\n\n        EqtlTrack.prototype.menuItemList = function () {\n\n            var self = this,\n                menuItems = [];\n\n            menuItems.push(igv.dataRangeMenuItem(this.trackView));\n\n            menuItems.push({\n                object: igv.createCheckbox(\"Autoscale\", self.autoscale),\n                click: function () {\n                    var $fa = $(this).find('i');\n\n                    self.autoscale = !self.autoscale;\n\n                    if (true === self.autoscale) {\n                        $fa.removeClass('igv-fa-check-hidden');\n                        $fa.addClass('igv-fa-check-visible');\n                    } else {\n                        $fa.removeClass('igv-fa-check-visible');\n                        $fa.addClass('igv-fa-check-hidden');\n                    }\n\n                    self.config.autoscale = self.autoscale;\n                    self.trackView.setDataRange(undefined, undefined, self.autoscale);\n                }\n            });\n\n            return menuItems;\n\n        };\n\n        EqtlTrack.prototype.doAutoscale = function (featureList) {\n\n            if (featureList.length > 0) {\n\n                var values = featureList\n                    .map(function (eqtl) {\n                        return -Math.log(eqtl.value) / Math.LN10\n                    });\n\n                this.dataRange.max = igv.Math.percentile(values, this.autoscalePercentile);\n            }\n            else {\n                // No features -- default\n                const max = this.config.maxLogP || this.config.max;\n                this.dataRange.max = max || 25\n            }\n\n            return this.dataRange;\n        }\n\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n\n    igv.GtexSelection = function (gene, snp) {\n\n        this.geneColors = {};\n        this.gene = null;\n        this.snp = null;\n        this.genesCount = 0;\n\n        if (gene) {\n            this.gene = gene.toUpperCase();\n            this.geneColors[this.gene] = brewer[this.genesCount++];\n\n        }\n        if (snp) {\n            this.snp = snp.toUpperCase();\n        }\n\n    }\n\n    igv.GtexSelection.prototype.addGene = function (geneName) {\n        if (!this.geneColors[geneName.toUpperCase()]) {\n            this.geneColors[geneName.toUpperCase()] = brewer[this.genesCount++];\n        }\n    }\n\n    igv.GtexSelection.prototype.colorForGene = function (geneName) {\n        return this.geneColors[geneName.toUpperCase()];\n    }\n\n    var brewer = new Array();\n// Set +!\n    brewer.push(\"rgb(228,26,28)\");\n    brewer.push(\"rgb(55,126,184)\");\n    brewer.push(\"rgb(77,175,74)\");\n    brewer.push(\"rgb(166,86,40)\");\n    brewer.push(\"rgb(152,78,163)\");\n    brewer.push(\"rgb(255,127,0)\");\n    brewer.push(\"rgb(247,129,191)\");\n    brewer.push(\"rgb(153,153,153)\");\n    brewer.push(\"rgb(255,255,51)\");\n\n// #Set 2\n    brewer.push(\"rgb(102, 194, 165\");\n    brewer.push(\"rgb(252, 141, 98\");\n    brewer.push(\"rgb(141, 160, 203\");\n    brewer.push(\"rgb(231, 138, 195\");\n    brewer.push(\"rgb(166, 216, 84\");\n    brewer.push(\"rgb(255, 217, 47\");\n    brewer.push(\"rgb(229, 196, 148\");\n    brewer.push(\"rgb(179, 179, 179\");\n\n//#Set 3\n    brewer.push(\"rgb( 141, 211, 199\");\n    brewer.push(\"rgb(255, 255, 179\");\n    brewer.push(\"rgb(190, 186, 218\");\n    brewer.push(\"rgb(251, 128, 114\");\n    brewer.push(\"rgb(128, 177, 211\");\n    brewer.push(\"rgb(253, 180, 98\");\n    brewer.push(\"rgb(179, 222, 105\");\n    brewer.push(\"rgb(252, 205, 229\");\n    brewer.push(\"rgb(217, 217, 217\");\n    brewer.push(\"rgb(188, 128, 189\");\n    brewer.push(\"rgb(204, 235, 197\");\n    brewer.push(\"rgb(255, 237, 111\");\n\n    igv.GtexUtils = {\n\n        getTissueInfo: function(datasetId, baseURL) {\n\n            datasetId = datasetId || 'gtex_v7';\n            baseURL = baseURL || 'https://gtexportal.org/rest/v1';\n\n            let url = baseURL + '/dataset/tissueInfo?datasetId=' + datasetId;\n\n            return igv.xhr.loadJson(url, {})\n        },\n\n        //https://gtexportal.org/rest/v1/association/singleTissueEqtlByLocation?chromosome=7&start=98358766&end=101523798&tissueName=Liver&datasetId=gtex_v7\n        trackConfiguration: function (tissueSummary, baseURL) {\n\n            baseURL = baseURL || 'https://gtexportal.org/rest/v1';\n\n            return {\n                type: \"eqtl\",\n                sourceType: \"gtex-ws\",\n                url: baseURL + '/association/singleTissueEqtlByLocation',\n                tissueName: tissueSummary.tissueSiteDetailId,\n                name: (tissueSummary.tissueSiteDetailId.split('_').join(' ')),\n                visibilityWindow: 250000\n            }\n\n        }\n\n    };\n\n\n    return igv;\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 UC San Diego\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 10/8/15.\n */\n\nvar igv = (function (igv) {\n\n\n    /**\n     * @param url - url to the webservice\n     * @constructor\n     */\n    igv.GtexReader = function (config) {\n\n        this.config = config;\n        this.url = config.url;\n        this.tissueName = config.tissueName;\n        this.indexed = true;\n        this.datasetId = config.datasetId || \"gtex_v7\"\n    };\n\n    //{\n    //    \"release\": \"v6\",\n    //    \"singleTissueEqtl\": [\n    //    {\n    //        \"beta\": -0.171944779728988,\n    //        \"chromosome\": \"3\",\n    //        \"gencodeId\": \"ENSG00000168827.10\",\n    //        \"geneSymbol\": \"GFM1\",\n    //        \"pValue\": 1.22963421134407e-09,\n    //        \"snpId\": \"rs3765025\",\n    //        \"start\": 158310846,\n    //        \"tissueName\": \"Thyroid\"\n    //    },\n    // \"singleTissueEqtl\": [\n    //     {\n    //         \"beta\": 0.388922,\n    //         \"chromosome\": \"12\",\n    //         \"gencodeId\": \"ENSG00000245017.2\",\n    //         \"geneSymbol\": \"RP11-181C3.1\",\n    //         \"geneSymbolUpper\": \"RP11-181C3.1\",\n    //         \"pValue\": 5.76253e-06,\n    //         \"release\": \"v7\",\n    //         \"snpId\": \"rs10860345\",\n    //         \"start\": 98972466,\n    //         \"tissueName\": \"Adrenal_Gland\",\n    //         \"variantId\": \"12_98972466_T_C_b37\"\n    //     }\n    //\n    // http://vgtxportaltest.broadinstitute.org:9000/v6/singleTissueEqtlByLocation?tissueName=Thyroid&chromosome=3&start=158310650&end=158311650\n\n        igv.GtexReader.prototype.readFeatures = function (chr, bpStart, bpEnd) {\n\n            let self=this,\n                queryChr = chr.startsWith(\"chr\") ? chr.substr(3) : chr,\n                queryStart = Math.floor(bpStart),\n                queryEnd = Math.ceil(bpEnd),\n                datasetId = this.datasetId,\n                queryURL = this.url + \"?chromosome=\" + queryChr + \"&start=\" + queryStart + \"&end=\" + queryEnd +\n                    \"&tissueName=\" + this.tissueName + \"&datasetId=\" + datasetId;\n\n            return new Promise(function (fulfill, reject) {\n\n                igv.xhr.loadJson(queryURL, {\n                    withCredentials: self.config.withCredentials\n                }).then(function (json) {\n\n                    var variants;\n\n                    if (json && json.singleTissueEqtl) {\n                        //variants = json.variants;\n                        //variants.sort(function (a, b) {\n                        //    return a.POS - b.POS;\n                        //});\n                        //source.cache = new FeatureCache(chr, queryStart, queryEnd, variants);\n\n                        json.singleTissueEqtl.forEach(function (eqtl) {\n                            eqtl.chr = \"chr\" + eqtl.chromosome;\n                            eqtl.position = eqtl.pos;\n                            eqtl.start = eqtl.pos - 1;\n                            eqtl.end = eqtl.start + 1;\n                            eqtl.snp = eqtl.snpId;\n                            eqtl.geneName = eqtl.geneSymbol;\n                            eqtl.geneId = eqtl.gencodeId;\n\n                        });\n\n                        fulfill(json.singleTissueEqtl);\n                    }\n                    else {\n                        fulfill(null);\n                    }\n\n                }).catch(reject);\n\n            });\n        }\n\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n// Experimental class for fetching features from an mpg webservice.\n// http://immvar.broadinstitute.org:3000/load_data?chromosome=&start=&end=&categories=\n\nvar igv = (function (igv) {\n\n    /**\n     * @param url - url to the webservice\n     * @constructor\n     */\n    igv.ImmVarReader = function (config) {\n\n        this.config = config;\n        this.url = config.url;\n        this.cellConditionId = config.cellConditionId;\n        this.valueThreshold = config.valueThreshold ? config.valueThreshold : 5E-2;\n\n    };\n\n    igv.ImmVarReader.prototype.readFeatures = function (queryChr, queryStart, queryEnd) {\n\n        var self = this,\n            queryURL = this.url + \"?chromosome=\" + queryChr + \"&start=\" + queryStart + \"&end=\" + queryEnd +\n                \"&cell_condition_id=\" + this.cellConditionId;\n\n        return new Promise(function (fulfill, reject) {\n            igv.xhr.loadJson(queryURL, {\n                withCredentials: self.config.withCredentials\n            }).then(function (json) {\n\n                if (json) {\n                    //variants = json.variants;\n                    //variants.sort(function (a, b) {\n                    //    return a.POS - b.POS;\n                    //});\n                    //source.cache = new FeatureCache(chr, queryStart, queryEnd, variants);\n\n                    json.eqtls.forEach(function (eqtl) {\n                        eqtl.chr = eqtl.chromosome;\n                        eqtl.start = eqtl.position;\n                        eqtl.end = eqtl.position + 1;\n                    });\n\n                    fulfill(json.eqtls);\n                }\n                else {\n                    fulfill(null);\n                }\n\n            }).catch(function (error) {\n                reject(error);\n            });\n\n        });\n    }\n\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n// Simple variant track for mpg prototype\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    const DEFAULT_POPOVER_WINDOW = 100000000;\n    const type = \"gwas\";\n\n    let GWASTrack;\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    igv.trackFactory[type] = function (config, browser) {\n\n        if (!GWASTrack) {\n            defineClass();\n        }\n\n        return new GWASTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        GWASTrack = igv.extend(igv.TrackBase,\n            function (config, browser) {\n                this.config = config;\n                this.url = config.url;\n                this.name = config.name;\n                this.trait = config.trait;\n                this.height = config.height || 100;   // The preferred height\n                this.minLogP = config.minLogP || 0;\n                this.maxLogP = config.maxLogP || 15;\n                this.background = config.background;    // No default\n                this.divider = config.divider || \"rgb(225,225,225)\";\n                this.dotSize = config.dotSize || 4;\n                this.popoverWindow = (config.popoverWindow === undefined ? DEFAULT_POPOVER_WINDOW : config.popoverWindow);\n\n                this.description = config.description;  // might be null\n                this.proxy = config.proxy;   // might be null\n\n                this.portalURL = config.portalURL ? config.portalURL : window.location.origin;\n                this.variantURL = config.variantURL || \"http://www.type2diabetesgenetics.org/variant/variantInfo/\";\n                this.traitURL = config.traitURL || \"http://www.type2diabetesgenetics.org/trait/traitInfo/\";\n\n                var cs = config.colorScale || {\n                    thresholds: [5e-8, 5e-4, 0.5],\n                    colors: [\"rgb(255,50,50)\", \"rgb(251,100,100)\", \"rgb(251,170,170)\", \"rgb(227,238,249)\"]\n                };\n\n                this.pvalue = config.pvalue ? config.pvalue : \"PVALUE\";\n\n                this.colorScale = new igv.BinnedColorScale(cs);\n\n                // An obvious hack -- the source should be passed in as an arbument\n                if (config.format && (\"gtexgwas\" === config.format.toLowerCase())) {\n                    this.featureSource = new igv.FeatureSource(config, browser.genome);\n                } else {\n                    this.featureSource = new igv.T2DVariantSource(config, browser.genome);\n                }\n\n            });\n\n        GWASTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n            return this.featureSource.getFeatures(chr, bpStart, bpEnd);\n        };\n\n        GWASTrack.prototype.draw = function (options) {\n\n            var track = this,\n                featureList = options.features,\n                ctx = options.context,\n                bpPerPixel = options.bpPerPixel,\n                bpStart = options.bpStart,\n                pixelWidth = options.pixelWidth,\n                pixelHeight = options.pixelHeight,\n                bpEnd = bpStart + pixelWidth * bpPerPixel + 1,\n                yScale = (track.maxLogP - track.minLogP) / pixelHeight,\n                enablePopover = (bpEnd - bpStart) < DEFAULT_POPOVER_WINDOW;\n\n            if (enablePopover) {\n                this.po = [];\n            }\n            else {\n                this.po = undefined;\n            }\n\n            if (this.background) igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': this.background});\n            igv.graphics.strokeLine(ctx, 0, pixelHeight - 1, pixelWidth, pixelHeight - 1, {'strokeStyle': this.divider});\n\n            var variant, pos, len, xScale, px, px1, pw, py, color, pvalue, val;\n\n            if (featureList) {\n                len = featureList.length;\n\n                for (var i = 0; i < len; i++) {\n\n                    variant = featureList[i];\n\n                    pos = variant.start;     // TODO fixme\n\n                    if (pos < bpStart) continue;\n                    if (pos > bpEnd) break;\n\n                    pvalue = variant.pvalue || variant[track.pvalue];\n                    if (!pvalue) continue;\n\n                    color = track.colorScale.getColor(pvalue);\n                    val = -Math.log(pvalue) / 2.302585092994046;\n\n                    xScale = bpPerPixel;\n\n                    px = Math.round((pos - bpStart) / xScale);\n\n                    py = Math.max(track.dotSize, pixelHeight - Math.round((val - track.minLogP) / yScale));\n\n                    if (color) igv.graphics.setProperties(ctx, {fillStyle: color, strokeStyle: \"black\"});\n\n                    igv.graphics.fillCircle(ctx, px, py, track.dotSize);\n                    //canvas.strokeCircle(px, py, radius);\n\n                    if (enablePopover) track.po.push({x: px, y: py, feature: variant});\n\n                }\n            }\n\n        };\n\n        GWASTrack.prototype.paintAxis = function (ctx, pixelWidth, pixelHeight) {\n\n            var track = this,\n                yScale = (track.maxLogP - track.minLogP) / pixelHeight;\n\n            var font = {\n                'font': 'normal 10px Arial',\n                'textAlign': 'right',\n                'strokeStyle': \"black\"\n            };\n\n            igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n            for (var p = 2; p < track.maxLogP; p += 2) {\n                var yp = pixelHeight - Math.round((p - track.minLogP) / yScale);\n                // TODO: Dashes may not actually line up with correct scale. Ask Jim about this\n                igv.graphics.strokeLine(ctx, 45, yp - 2, 50, yp - 2, font); // Offset dashes up by 2 pixel\n                igv.graphics.fillText(ctx, p, 44, yp + 2, font); // Offset numbers down by 2 pixels;\n            }\n\n\n            font['textAlign'] = 'center';\n\n\n            igv.graphics.fillText(ctx, \"-log10(pvalue)\", pixelWidth / 2, pixelHeight / 2, font, {rotate: {angle: -90}});\n\n\n        };\n\n\n        GWASTrack.prototype.popupData = function (config) {\n\n            var genomicLocation = config.genomicLocation,\n                xOffset = config.x,\n                yOffset = config.y,\n                referenceFrame = config.viewport.genomicState.referenceFrame,\n                i,\n                len,\n                p,\n                dbSnp,\n                url,\n                data = [],\n                chr,\n                pos,\n                pvalue;\n\n            if (this.po) {\n                for (i = 0, len = this.po.length; i < len; i++) {\n                    p = this.po[i];\n\n                    if (Math.abs(xOffset - p.x) < this.dotSize && Math.abs(yOffset - p.y) <= this.dotSize) {\n\n                        chr = p.feature.CHROM || p.feature.chr;   // TODO fixme\n                        pos = p.feature.POS || p.feature.start;   // TODO fixme\n                        pvalue = p.feature[this.pvalue] || p.feature.pvalue;\n                        dbSnp = p.feature.DBSNP_ID;\n\n\n                        if (dbSnp) {\n                            url = this.variantURL.startsWith(\"http\") ? this.variantURL : this.portalURL + \"/\" + this.variantURL;\n                            data.push(\"<a target='_blank' href='\" + url + (url.endsWith(\"/\") ? \"\" : \"/\") + dbSnp + \"' >\" + dbSnp + \"</a>\");\n                        }\n                        data.push(chr + \":\" + pos.toString());\n                        data.push({name: 'p-value', value: pvalue});\n\n                        if (p.feature.ZSCORE) {\n                            data.push({name: 'z-score', value: p.feature.ZSCORE});\n                        }\n\n                        if (dbSnp) {\n                            url = this.traitURL.startsWith(\"http\") ? this.traitURL : this.portalURL + \"/\" + this.traitURL;\n                            data.push(\"<a target='_blank' href='\" + url + (url.endsWith(\"/\") ? \"\" : \"/\") + dbSnp + \"'>\" +\n                                \"see all available statistics for this variant</a>\");\n                        }\n\n                        if (i < len - 1) {\n                            data.push(\"<p/>\");\n                        }\n                    }\n                }\n            } else {\n                data.push(\"Popover not available at this resolution.\")\n\n            }\n            return data;\n        };\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n// Experimental class for fetching features from an mpg webservice.\n\n\nvar igv = (function (igv) {\n\n\n    const VARIANT = \"VARIANT\";\n    const TRAIT = \"TRAIT\";\n    /**\n     * @param url - url to the webservice\n     * @constructor\n     */\n    igv.T2DVariantSource = function (config) {\n\n        this.config = config;\n        this.url = config.url;\n        this.trait = config.trait;\n        this.dataset = config.dataset;\n        this.pvalue = config.pvalue;\n\n        // Hack for old service that is missing CORS headers\n        // if (config.dataset === undefined && config.proxy === undefined) {\n        // }\n\n        if (config.valueThreshold === undefined) {\n            config.valueThreshold = 5E-2;\n        }\n\n        if (config.dataset === undefined) {\n            this.queryJson = config.queryJson || queryJsonV1;\n            this.jsonToVariants = config.jsonToVariants || jsonToVariantsV1;\n        } else {\n            this.queryJson = config.queryJson || queryJsonV2;\n            this.jsonToVariants = config.jsonToVariants || jsonToVariantsV2;\n        }\n\n    };\n\n    /**\n     * Required function fo all data source objects.  Fetches features for the\n     * range requested and passes them on to the success function.  Usually this is\n     * a function that renders the features on the canvas\n     *\n     * @param queryChr\n     * @param bpStart\n     * @param bpEnd\n     */\n\n    igv.T2DVariantSource.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\n        const  self = this;\n        const genome = this.genome;\n        \n        return new Promise(function (fulfill, reject) {\n\n            if (self.cache && self.cache.chr === chr && self.cache.end > bpEnd && self.cache.start < bpStart) {\n                fulfill(self.cache.featuresBetween(bpStart, bpEnd));\n            }\n\n            else {\n\n                // Get a minimum 10mb window around the requested locus\n                var window = Math.max(bpEnd - bpStart, 10000000) / 2,\n                    center = (bpEnd + bpStart) / 2,\n                    queryChr = (chr.startsWith(\"chr\") ? chr.substring(3) : chr), // Webservice uses \"1,2,3...\" convention\n                    queryStart = Math.max(0, center - window),\n                    queryEnd = center + window,\n                    queryURL = self.config.proxy ? self.config.proxy : self.url,\n                    body = self.queryJson(queryChr, queryStart, queryEnd, self.config);\n\n                igv.xhr.loadJson(queryURL, {\n                    sendData: body,\n                    withCredentials: self.config.withCredentials\n\n                }).then(function (json) {\n                    var variants;\n\n                    if (json) {\n\n                        if (json.error_code) {\n                            //alert(\"Error querying trait \" + self.trait + \"  (error_code=\" + json.error_code + \")\");\n                            igv.browser.presentAlert(\"Error querying trait \" + self.trait + \"  (error_code=\" + json.error_code + \")\", undefined);\n                            fulfill(null);\n                        }\n                        else {\n                            variants = self.jsonToVariants(json, self.config);\n\n                            variants.sort(function (a, b) {\n                                return a.POS - b.POS;\n                            });\n\n                            // TODO -- extract pvalue\n\n                            self.cache = new FeatureCache(chr, queryStart, queryEnd, variants);\n\n                            fulfill(variants);\n                        }\n                    }\n                    else {\n                        fulfill(null);\n                    }\n                }).catch(reject);\n\n            }\n\n        });\n    }\n\n\n    // Experimental linear index feature cache.\n    var FeatureCache = function (chr, start, end, features) {\n\n        var i, bin, lastBin;\n\n        this.chr = chr;\n        this.start = start;\n        this.end = end;\n        this.binSize = (end - start) / 100;\n        this.binIndeces = [0];\n        this.features = features;\n\n        lastBin = 0;\n        for (i = 0; i < features.length; i++) {\n            bin = Math.max(0, Math.floor((features[i].POS - this.start) / this.binSize));\n            if (bin > lastBin) {\n                this.binIndeces.push(i);\n                lastBin = bin;\n            }\n        }\n    }\n\n    FeatureCache.prototype.featuresBetween = function (start, end) {\n\n\n        var startBin = Math.max(0, Math.min(Math.floor((start - this.start) / this.binSize) - 1, this.binIndeces.length - 1)),\n            endBin = Math.max(0, Math.min(Math.floor((end - this.start) / this.binSize), this.binIndeces.length - 1)),\n            startIdx = this.binIndeces[startBin],\n            endIdx = this.binIndeces[endBin];\n\n        return this.features; //.slice(startIdx, endIdx);\n\n    }\n\n\n    //\n    //\n    /**\n     * Default json -> variant converter function.  Can be overriden.\n     * Convert webservice json to an array of variants\n     *\n     * @param json\n     * @param config\n     * @returns {Array|*}\n     */\n    function jsonToVariantsV2(json, config) {\n\n        var variants = [];\n        \n        json.variants.forEach(function (record) {\n\n            var variant = {};\n            record.forEach(function (object) {\n                for (var property in object) {\n                    if (object.hasOwnProperty(property)) {\n                        if (\"POS\" === property) {\n                            variant.start = object[property] - 1;\n                        }\n                        variant[property] = object[property];\n\n                    }\n                }\n\n            });\n\n            // \"unwind\" the pvalue, then null the nested array to save memory\n            variant.pvalue = variant[config.pvalue][config.dataset][config.trait];\n            variant[config.pvalue] = undefined;\n\n            variants.push(variant);\n        })\n        return variants;\n    }\n\n\n    function queryJsonV2(queryChr, queryStart, queryEnd, config) {\n        var phenotype = config.trait,\n            pvalue = config.pvalue,\n            dataset = config.dataset,\n            properties = {\n                \"cproperty\": [\"VAR_ID\", \"DBSNP_ID\", \"CHROM\", \"POS\"],\n                \"orderBy\": [\"CHROM\"],\n                \"dproperty\": {},\n                \"pproperty\": JSON.parse('{\"' + pvalue + '\": {\"' + dataset + '\": [\"' + phenotype + '\"]}}')\n            },\n\n            filters =\n                [\n                    {\n                        \"dataset_id\": \"x\",\n                        \"phenotype\": \"x\",\n                        \"operand\": \"CHROM\",\n                        \"operator\": \"EQ\",\n                        \"value\": queryChr,\n                        \"operand_type\": \"STRING\"\n                    },\n                    {\n                        \"dataset_id\": \"x\",\n                        \"phenotype\": \"x\",\n                        \"operand\": \"POS\",\n                        \"operator\": \"GTE\",\n                        \"value\": queryStart,\n                        \"operand_type\": \"INTEGER\"\n                    },\n                    {\n                        \"dataset_id\": \"x\",\n                        \"phenotype\": \"x\",\n                        \"operand\": \"POS\",\n                        \"operator\": \"LTE\",\n                        \"value\": queryEnd,\n                        \"operand_type\": \"INTEGER\"\n                    },\n                    {\n                        \"dataset_id\": dataset,\n                        \"phenotype\": phenotype,\n                        \"operand\": pvalue,\n                        \"operator\": \"LT\",\n                        \"value\": config.valueThreshold,\n                        \"operand_type\": \"FLOAT\"\n                    }\n                ],\n            data = {\n                \"passback\": \"x\",\n                \"entity\": \"variant\",\n                \"properties\": properties,\n                \"filters\": filters\n            };\n\n        return JSON.stringify(data);\n    }\n\n\n    function queryJsonV1(queryChr, queryStart, queryEnd, config) {\n\n        var type = config.url.includes(\"variant\") ? VARIANT : TRAIT,\n            pvalue = config.pvalue ? config.pvalue : \"PVALUE\",\n\n            filters =\n                [\n                    {\"operand\": \"CHROM\", \"operator\": \"EQ\", \"value\": queryChr, \"filter_type\": \"STRING\"},\n                    {\"operand\": \"POS\", \"operator\": \"GT\", \"value\": queryStart, \"filter_type\": \"FLOAT\"},\n                    {\"operand\": \"POS\", \"operator\": \"LT\", \"value\": queryEnd, \"filter_type\": \"FLOAT\"},\n                    {\"operand\": pvalue, \"operator\": \"LTE\", \"value\": config.valueThreshold, \"filter_type\": \"FLOAT\"}\n                ],\n            columns = type === TRAIT ?\n                [\"CHROM\", \"POS\", \"DBSNP_ID\", \"PVALUE\", \"ZSCORE\"] :\n                [\"CHROM\", \"POS\", pvalue, \"DBSNP_ID\"],\n            data = {\n                \"user_group\": \"ui\",\n                \"filters\": filters,\n                \"columns\": columns\n            };\n\n\n        if (type === TRAIT) data.trait = config.trait;\n\n        return config.proxy ? \"url=\" + config.url + \"&data=\" + JSON.stringify(data) : JSON.stringify(data);\n\n    }\n\n    function jsonToVariantsV1(json, config) {\n\n        json.variants.forEach(function (variant) {\n            variant.chr = variant.CHROM;\n            variant.start = variant.POS - 1;\n        })\n        return json.variants;\n    }\n\n\n    return igv;\n})(igv || {});\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of panel software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and panel permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n//\n// Chromosome ideogram\n//\n\nvar igv = (function (igv) {\n\n    igv.IdeoPanel = function ($parent, panelWidth, browser) {\n        this.browser = browser;\n        this.$parent = $parent;\n        this.buildPanels($parent, panelWidth);\n\n    };\n\n    igv.IdeoPanel.prototype.renderSVGContext = function (context, offset) {\n\n        let self = this;\n\n        this.panels.forEach((panel, i) => {\n\n            const bbox = panel.$ideogram.get(0).getBoundingClientRect();\n            const dx = offset.deltaX + (i * (panel.$canvas.width() + context.multiLocusGap));\n            const dy = offset.deltaY;\n            context.addTrackGroupWithTranslationAndClipRect('ideogram', dx, dy, bbox.width, bbox.height, 0);\n\n            context.save();\n            let paintConfig =\n                {\n                    ctx: context,\n                    width: panel.$canvas.width(),\n                    height: panel.$canvas.height(),\n                    genome: self.browser.genome,\n                    referenceFrame: panel.genomicState.referenceFrame,\n                    ideogramWidth: panel.$ideogram.width()\n                };\n            repaintContext(paintConfig);\n\n            context.restore();\n        });\n\n    };\n\n    igv.IdeoPanel.prototype.buildPanels = function ($parent, width) {\n\n        var self = this;\n\n        $parent.append($('<div class=\"igv-ideogram-shim\"></div>'));\n\n        this.panels = this.browser.genomicStateList.map(function (genomicState) {\n            return panelWithGenomicState.call(self, $parent, genomicState, width)\n        });\n    };\n\n    igv.IdeoPanel.prototype.setWidth = function (width, doRepaint) {\n\n        this.panels.forEach(function (panel) {\n            var canvas;\n\n            panel.$ideogram.outerWidth(width);\n\n            setupCanvasSize(panel);\n\n            panel.ideograms = {};\n        });\n\n        if (true === doRepaint) {\n            this.repaint();\n        }\n\n    };\n\n    igv.IdeoPanel.prototype.resize = function () {\n        this.setWidth(this.browser.viewportContainerWidth() / this.browser.genomicStateList.length, true)\n    };\n\n    igv.IdeoPanel.prototype.repaint = function () {\n        let self = this;\n\n        this.panels.forEach((panel) => {\n            let config =\n                {\n                    ctx: panel.ctx,\n                    width: panel.$canvas.width(),\n                    height: panel.$canvas.height(),\n                    genome: self.browser.genome,\n                    referenceFrame: panel.genomicState.referenceFrame,\n                    ideogramWidth: panel.$ideogram.width()\n                };\n\n            repaintContext(config);\n        });\n\n    };\n\n    igv.IdeoPanel.prototype.discardPanels = function () {\n\n        this.panels.forEach(function (panel) {\n            panel.$ideogram.remove();\n        });\n\n        this.panels = undefined;\n\n    };\n\n    igv.IdeoPanel.prototype.addPanelWithGenomicStateAtIndex = function (genomicState, index, width) {\n        var panel,\n            $detached;\n\n        panel = panelWithGenomicState.call(this, this.$parent, genomicState, width);\n\n        if (index === this.panels.length) {\n            this.panels.push(panel);\n        } else {\n\n            this.panels.splice(index, 0, panel);\n\n            // The viewport constructor always appends. Reorder here.\n            $detached = panel.$ideogram.detach();\n            $detached.insertAfter(this.panels[index - 1].$ideogram);\n        }\n\n        assessBorders(this.panels);\n    };\n\n    igv.IdeoPanel.prototype.removePanelWithLocusIndex = function (index) {\n\n        this.panels[index].$ideogram.remove();\n        this.panels.splice(index, 1);\n\n        assessBorders(this.panels);\n\n    };\n\n    igv.IdeoPanel.prototype.repaintPanelWithGenomicState = function (genomicState) {\n\n        let panel = this.panels[ this.browser.genomicStateList.indexOf(genomicState) ];\n\n        let config =\n            {\n                ctx: panel.ctx,\n                width: panel.$canvas.width(),\n                height: panel.$canvas.height(),\n                genome: this.browser.genome,\n                referenceFrame: panel.genomicState.referenceFrame,\n                ideogramWidth: panel.$ideogram.width()\n            };\n\n        repaintContext(config);\n    };\n\n    function panelWithGenomicState($parent, genomicState, width) {\n\n        var panel;\n\n        const browser = this.browser;\n\n        panel = {};\n\n        panel.genomicState = genomicState;\n\n        panel.$ideogram = $('<div class=\"igv-ideogram-content\"></div>');\n\n        $parent.append(panel.$ideogram);\n\n        addBorder(panel.$ideogram, browser.genomicStateList.indexOf(genomicState), browser.genomicStateList.length);\n\n        panel.$ideogram.outerWidth(width);\n\n        panel.$canvas = $('<canvas>');\n        panel.$ideogram.append(panel.$canvas);\n\n        setupCanvasSize(panel);\n\n        panel.ideograms = {};\n\n        panel.$ideogram.on('click', function (e) {\n            clickHandler(browser, panel, e);\n        });\n\n        return panel;\n    }\n\n    function addBorder($ideogram, index, length) {\n\n        if (index < length && (1 + index !== length)) {\n            $ideogram.addClass('igv-ideogram-content-border-right');\n        } else {\n            $ideogram.removeClass('igv-ideogram-content-border-right');\n        }\n\n    }\n\n    function assessBorders(panels) {\n\n        panels.forEach(function (panel, p) {\n\n            if (1 === panels.length || (1 + p) === panels.length) {\n                panel.$ideogram.removeClass('igv-ideogram-content-border-right');\n            } else {\n                panel.$ideogram.addClass('igv-ideogram-content-border-right');\n            }\n\n        });\n\n    }\n\n    function repaintContext ({ ctx, width, height, genome, referenceFrame, ideogramWidth }) {\n\n        if (!(width > 0 && height > 0)) {\n            return;\n        }\n\n        if (!(genome && referenceFrame && genome.getChromosome(referenceFrame.chrName) && height > 0)) {\n            return;\n        }\n\n        const stainColors = [];\n        igv.graphics.fillRect(ctx, 0, 0, width, height, {fillStyle: igv.Color.greyScale(255)});\n\n        if (referenceFrame.chrName.toLowerCase() === \"all\") {\n            return;\n        }\n\n        drawIdeogram({ ctx, referenceFrame, genome, width, height, stainColors });\n\n        const chromosome = genome.getChromosome(referenceFrame.chrName);\n\n        const widthBP = Math.round(referenceFrame.bpPerPixel * ideogramWidth);\n        const xBP = referenceFrame.start;\n\n        // Total chromosome length can be > chromosome.bpLength for partial fastas.\n        let chrLength = chromosome.bpLength;\n        const cytobands = genome.getCytobands(referenceFrame.chrName);\n        if(cytobands) {\n            chrLength = Math.max(chrLength, cytobands[cytobands.length - 1].end)\n        }\n\n\n        if (widthBP < chrLength) {\n\n            const percentWidth = widthBP / chrLength\n            const percentX = xBP / chrLength\n\n            let x = Math.floor(percentX * width)\n            let ww = Math.floor(percentWidth * width)\n\n            x = Math.max(0, x)\n            x = Math.min(width - ww, x)\n\n            // Push current context\n            ctx.save()\n\n            // Draw red box\n            ctx.strokeStyle = \"red\"\n            ctx.lineWidth = (ww < 2) ? 1 : 2\n\n            const xx = x + (ctx.lineWidth) / 2\n            ww = (ww < 2) ? 1 : ww - ctx.lineWidth\n\n            const yy = ctx.lineWidth / 2\n            const hh = height - ctx.lineWidth\n\n            ctx.strokeRect(xx, yy, ww, hh)\n\n            // Pop current context\n            ctx.restore()\n        }\n\n    }\n\n    function drawIdeogram({ ctx, referenceFrame, genome, width, height, stainColors }) {\n\n        var shim,\n            shim2,\n            ideogramTop,\n            cytobands,\n            cytoband,\n            center,\n            xC,\n            yC,\n            chrLength,\n            scale,\n            start,\n            end,\n            i;\n\n        shim = 1;\n        shim2 = 0.5 * shim;\n        ideogramTop = 0;\n\n        if (undefined === genome) {\n            return;\n        }\n\n        igv.graphics.fillRect(ctx, 0, 0, width, height, {fillStyle: igv.Color.greyScale(255)});\n\n        cytobands = genome.getCytobands(referenceFrame.chrName);\n        if (cytobands) {\n\n            center = (ideogramTop + height / 2);\n\n            xC = [];\n            yC = [];\n\n            if (0 === cytobands.length) {\n                return;\n            }\n\n            chrLength = cytobands[cytobands.length - 1].end;\n\n            scale = width / chrLength;\n\n            // round rect clipping path\n            ctx.beginPath();\n            igv.graphics.roundRect(ctx, shim2, shim2 + ideogramTop, width - 2 * shim2, height - 2 * shim2, (height - 2 * shim2) / 2, 0, 1);\n            ctx.clip();\n\n            for (i = 0; i < cytobands.length; i++) {\n\n                cytoband = cytobands[i];\n                start = scale * cytoband.start;\n                end = scale * cytoband.end;\n\n                if (cytoband.type === 'c') {\n\n                    if (cytoband.name.charAt(0) === 'p') {\n                        xC[0] = start;\n                        yC[0] = height + ideogramTop;\n                        xC[1] = start;\n                        yC[1] = ideogramTop;\n                        xC[2] = end;\n                        yC[2] = center;\n                    } else {\n                        xC[0] = end;\n                        yC[0] = height + ideogramTop;\n                        xC[1] = end;\n                        yC[1] = ideogramTop;\n                        xC[2] = start;\n                        yC[2] = center;\n                    }\n\n                    ctx.fillStyle = \"rgb(150, 0, 0)\";\n                    ctx.strokeStyle = \"rgb(150, 0, 0)\";\n                    igv.graphics.polygon(ctx, xC, yC, 1, 0);\n                } else {\n\n                    ctx.fillStyle = getCytobandColor(stainColors, cytoband);\n                    igv.graphics.fillRect(ctx, start, shim + ideogramTop, (end - start), height - 2 * shim);\n                }\n            }\n        }\n\n        // round rect border\n        ctx.strokeStyle = igv.Color.greyScale(41);\n        igv.graphics.roundRect(ctx, shim2, shim2 + ideogramTop, width - 2 * shim2, height - 2 * shim2, (height - 2 * shim2) / 2, 0, 1);\n    }\n\n    function getCytobandColor(colors, data) {\n\n        if (data.type === 'c') { // centermere: \"acen\"\n            return \"rgb(150, 10, 10)\"\n        } else {\n            var stain = data.stain; // + 4;\n\n            var shade = 230;\n            if (data.type === 'p') {\n                shade = Math.floor(230 - stain / 100.0 * 230);\n            }\n            var c = colors[shade];\n            if (!c) {\n                c = \"rgb(\" + shade + \",\" + shade + \",\" + shade + \")\";\n                colors[shade] = c;\n            }\n            return c;\n\n        }\n    }\n\n    function setupCanvasSize(panel) {\n        var canvas = panel.$canvas.get(0);\n        var w = +panel.$ideogram.width();\n        var h = +panel.$ideogram.height();\n        canvas.style.width = w + \"px\";\n        canvas.style.height = h + \"px\";\n        canvas.width = window.devicePixelRatio * w;\n        canvas.height = window.devicePixelRatio * h;\n        panel.ctx = canvas.getContext(\"2d\");\n        panel.ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    }\n\n    function clickHandler(browser, panel, e) {\n\n        const xy = igv.translateMouseCoordinates(e, panel.$ideogram.get(0));\n\n        let referenceFrame = panel.genomicState.referenceFrame;\n\n        const locusLength = referenceFrame.bpPerPixel * panel.$ideogram.width();\n\n        const chr = browser.genome.getChromosome(referenceFrame.chrName);\n\n        const chrCoveragePercentage = locusLength / chr.bpLength;\n\n        let xPercentage = xy.x / panel.$ideogram.width();\n        if (xPercentage - (chrCoveragePercentage / 2.0) < 0) {\n            xPercentage = chrCoveragePercentage / 2.0;\n        }\n\n        if (xPercentage + (chrCoveragePercentage / 2.0) > 1.0) {\n            xPercentage = 1.0 - chrCoveragePercentage / 2.0;\n        }\n\n        const ss = Math.round((xPercentage - (chrCoveragePercentage / 2.0)) * chr.bpLength);\n        const ee = Math.round((xPercentage + (chrCoveragePercentage / 2.0)) * chr.bpLength);\n\n        referenceFrame.start = Math.round((xPercentage - (chrCoveragePercentage / 2.0)) * chr.bpLength);\n        referenceFrame.bpPerPixel = (ee - ss) / panel.$ideogram.width();\n\n        browser.updateLocusSearchWidget(panel.genomicState);\n\n        browser.updateViews()\n\n    }\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of ctx software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and ctx permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n// Collection of helper functions for canvas rendering.  The \"ctx\" paramter in these functions is a canvas 2d context.\n//\n// Example usage\n//\n//    igv.graphics.strokeLine(context, 0, 0, 10, 10);\n//\n\nvar igv = (function (igv) {\n\n\n    var debug = false;\n\n    var log = function (msg) {\n        if (debug) {\n            var d = new Date();\n            var time = d.getHours() + \":\" + d.getMinutes() + \":\" + d.getSeconds();\n            if (typeof console != \"undefined\") {\n                console.log(\"igv-canvas: \" + time + \" \" + msg);\n            }\n        }\n    };\n\n\n    igv.graphics = {\n\n\n        setProperties: function (ctx, properties) {\n\n            for (var key in properties) {\n                if (properties.hasOwnProperty(key)) {\n                    var value = properties[key];\n                    ctx[key] = value;\n                }\n            }\n        },\n\n        strokeLine: function (ctx, x1, y1, x2, y2, properties) {\n\n            x1 = Math.floor(x1) + 0.5;\n            y1 = Math.floor(y1) + 0.5;\n            x2 = Math.floor(x2) + 0.5;\n            y2 = Math.floor(y2) + 0.5;\n\n            log(\"stroke line, prop: \" + properties);\n\n            if (properties) {\n                ctx.save();\n                igv.graphics.setProperties(ctx, properties);\n            }\n\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n\n            if (properties) ctx.restore();\n        },\n\n        fillRect: function (ctx, x, y, w, h, properties) {\n\n            var c;\n            x = Math.round(x);\n            y = Math.round(y);\n\n            if (properties) {\n                ctx.save();\n                igv.graphics.setProperties(ctx, properties);\n            }\n\n            ctx.fillRect(x, y, w, h);\n\n            if (properties) ctx.restore();\n        },\n\n        fillPolygon: function (ctx, x, y, properties) {\n            if (properties) {\n                ctx.save();\n                igv.graphics.setProperties(ctx, properties);\n            }\n            doPath(ctx, x, y);\n            ctx.fill();\n            if (properties) ctx.restore();\n        },\n\n        strokePolygon: function (ctx, x, y, properties) {\n            if (properties) {\n                ctx.save();\n                igv.graphics.setProperties(ctx, properties);\n            }\n            doPath(ctx, x, y);\n            ctx.stroke();\n            if (properties) ctx.restore();\n        },\n\n        fillText: function (ctx, text, x, y, properties, transforms) {\n\n            if (properties || transforms) {\n                ctx.save();\n            }\n\n            if (properties) {\n                igv.graphics.setProperties(ctx, properties);\n            }\n\n            if (transforms) {\n                // Slow path with context saving and extra translate\n                ctx.translate(x, y);\n\n                for (var transform in transforms) {\n                    var value = transforms[transform];\n\n                    // TODO: Add error checking for robustness\n                    if (transform == 'translate') {\n                        ctx.translate(value['x'], value['y']);\n                    }\n                    if (transform == 'rotate') {\n                        ctx.rotate(value['angle'] * Math.PI / 180);\n                    }\n                }\n\n                ctx.fillText(text, 0, 0);\n            }\n            else {\n                ctx.fillText(text, x, y);\n            }\n\n            if (properties || transforms) ctx.restore();\n        },\n\n        strokeText: function (ctx, text, x, y, properties, transforms) {\n\n\n            if (properties || transforms) {\n                ctx.save();\n            }\n\n            if (properties) {\n                igv.graphics.setProperties(ctx, properties);\n            }\n\n            if (transforms) {\n                ctx.translate(x, y);\n\n                for (var transform in transforms) {\n                    var value = transforms[transform];\n\n                    // TODO: Add error checking for robustness\n                    if (transform == 'translate') {\n                        ctx.translate(value['x'], value['y']);\n                    }\n                    if (transform == 'rotate') {\n                        ctx.rotate(value['angle'] * Math.PI / 180);\n                    }\n                }\n\n                ctx.strokeText(text, 0, 0);\n            }\n            else {\n                ctx.strokeText(text, x, y);\n            }\n\n            if (properties || transforms) ctx.restore();\n        },\n\n        strokeCircle: function (ctx, x, y, radius) {\n\n            ctx.beginPath();\n            ctx.arc(x, y, radius, 0, 2 * Math.PI);\n            ctx.stroke();\n        },\n\n        fillCircle: function (ctx, x, y, radius) {\n\n            ctx.beginPath();\n            ctx.arc(x, y, radius, 0, 2 * Math.PI);\n            ctx.fill();\n        },\n\n        drawArrowhead: function (ctx, x, y, size, lineWidth) {\n\n            ctx.save();\n            if (!size) {\n                size = 5;\n            }\n            if (lineWidth) {\n                ctx.lineWidth = lineWidth;\n            }\n            ctx.beginPath();\n            ctx.moveTo(x, y - size / 2);\n            ctx.lineTo(x, y + size / 2);\n            ctx.lineTo(x + size, y);\n            ctx.lineTo(x, y - size / 2);\n            ctx.closePath();\n            ctx.fill();\n            ctx.restore();\n        },\n\n        dashedLine: function (ctx, x1, y1, x2, y2, dashLen, properties) {\n            x1 = Math.round(x1);\n            y1 = Math.round(y1);\n            x2 = Math.round(x2);\n            y2 = Math.round(y2);\n            dashLen = Math.round(dashLen);\n            log(\"dashedLine\");\n            if (properties) {\n                ctx.save();\n                igv.graphics.setProperties(ctx, properties);\n            }\n\n            if (dashLen == undefined) dashLen = 2;\n            ctx.moveTo(x1, y1);\n\n            var dX = x2 - x1;\n            var dY = y2 - y1;\n            var dashes = Math.floor(Math.sqrt(dX * dX + dY * dY) / dashLen);\n            var dashX = dX / dashes;\n            var dashY = dY / dashes;\n\n            var q = 0;\n            while (q++ < dashes) {\n                x1 += dashX;\n                y1 += dashY;\n                ctx[q % 2 == 0 ? 'moveTo' : 'lineTo'](x1, y1);\n            }\n            ctx[q % 2 == 0 ? 'moveTo' : 'lineTo'](x2, y2);\n\n            if (properties) ctx.restore();\n        },\n\n        roundRect: function (ctx, x, y, width, height, radius, fill, stroke) {\n\n            if (typeof stroke == \"undefined\") {\n                stroke = true;\n            }\n            if (typeof radius === \"undefined\") {\n                radius = 5;\n            }\n            ctx.beginPath();\n            ctx.moveTo(x + radius, y);\n            ctx.lineTo(x + width - radius, y);\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n            ctx.lineTo(x + width, y + height - radius);\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n            ctx.lineTo(x + radius, y + height);\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n            ctx.lineTo(x, y + radius);\n            ctx.quadraticCurveTo(x, y, x + radius, y);\n            ctx.closePath();\n            if (stroke) {\n                ctx.stroke();\n            }\n            if (fill) {\n                ctx.fill();\n            }\n        },\n        polygon: function (ctx, x, y, fill, stroke) {\n\n            if (typeof stroke == \"undefined\") {\n                stroke = true;\n            }\n\n            ctx.beginPath();\n            var len = x.length;\n            ctx.moveTo(x[0], y[0]);\n            for (var i = 1; i < len; i++) {\n                ctx.lineTo(x[i], y[i]);\n                // this.moveTo(x[i], y[i]);\n            }\n\n            ctx.closePath();\n            if (stroke) {\n                ctx.stroke();\n            }\n            if (fill) {\n                ctx.fill();\n            }\n        }\n\n\n    }\n\n    function doPath(ctx, x, y) {\n\n\n        var i, len = x.length;\n        for (i = 0; i < len; i++) {\n            x[i] = Math.round(x[i]);\n            y[i] = Math.round(y[i]);\n        }\n\n        ctx.beginPath();\n        ctx.moveTo(x[0], y[0]);\n        for (i = 1; i < len; i++) {\n            ctx.lineTo(x[i], y[i]);\n        }\n        ctx.closePath();\n    }\n\n    return igv;\n})(igv || {});\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by turner on 2/24/14.\n */\nvar igv = (function (igv) {\n\n    igv.Color = {\n\n        rgbListFromHSV: () => {\n\n            let s = 1;\n            let accumulation = [];\n            for (let v = 1; v >= 0.5; v -= .1) {\n                for (let h = 0; h < 1; h += 1 / 28) {\n                    const r = \"rgb(\" + igv.Color.hsvToRgb(h, s, v).join(\",\") + \")\";\n                    accumulation.push(r);\n                }\n            }\n\n            // add black\n            accumulation.pop();\n            accumulation.push(igv.Color.rgbColor(16, 16, 16));\n\n            return accumulation;\n        },\n\n        rgbToHex: function (rgb) {\n            rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n            return (rgb && rgb.length === 4) ? \"#\" +\n                (\"0\" + parseInt(rgb[1], 10).toString(16)).slice(-2) +\n                (\"0\" + parseInt(rgb[2], 10).toString(16)).slice(-2) +\n                (\"0\" + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\n        },\n\n        hexToRgb: function (hex) {\n\n            var cooked = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n            if (null === cooked) {\n                return undefined;\n            }\n\n            return \"rgb(\" + parseInt(cooked[1], 16) + \",\" + parseInt(cooked[2], 16) + \",\" + parseInt(cooked[3], 16) + \")\";\n        },\n\n        /**\n         * Converts an HSV color value to RGB. Conversion formula\n         * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n         * Assumes h, s, and v are contained in the set [0, 1] and\n         * returns r, g, and b in the set [0, 255].\n         *\n         * Credit: https://gist.githubusercontent.com/mjackson/5311256\n         *\n         * @param   h       The hue\n         * @param   s       The saturation\n         * @param   v       The value\n         * @return  Array   The RGB representation\n         */\n        hsvToRgb: function (h, s, v) {\n            var r, g, b;\n\n            var i = Math.floor(h * 6);\n            var f = h * 6 - i;\n            var p = v * (1 - s);\n            var q = v * (1 - f * s);\n            var t = v * (1 - (1 - f) * s);\n\n            switch (i % 6) {\n                case 0:\n                    r = v, g = t, b = p;\n                    break;\n                case 1:\n                    r = q, g = v, b = p;\n                    break;\n                case 2:\n                    r = p, g = v, b = t;\n                    break;\n                case 3:\n                    r = p, g = q, b = v;\n                    break;\n                case 4:\n                    r = t, g = p, b = v;\n                    break;\n                case 5:\n                    r = v, g = p, b = q;\n                    break;\n            }\n\n            return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n        },\n\n        /**\n         * Converts an HSL color value to RGB. Conversion formula\n         * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n         * Assumes h, s, and l are contained in the set [0, 1] and\n         * returns r, g, and b in the set [0, 255].\n         *\n         * Credit: https://gist.githubusercontent.com/mjackson/5311256\n         *\n         * @param   h       The hue\n         * @param   s       The saturation\n         * @param   l       The lightness\n         * @return  Array   The RGB representation\n         */\n        hslToRgb: function (h, s, l) {\n            var r, g, b;\n\n            if (s === 0) {\n                r = g = b = l; // achromatic\n            } else {\n\n\n                var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                var p = 2 * l - q;\n\n                r = igv.Color.hue2rgb(p, q, h + 1 / 3);\n                g = igv.Color.hue2rgb(p, q, h);\n                b = igv.Color.hue2rgb(p, q, h - 1 / 3);\n            }\n\n            return [r * 255, g * 255, b * 255];\n        },\n\n        hue2rgb: (p, q, t) => {\n            if (t < 0) t += 1;\n            if (t > 1) t -= 1;\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\n            if (t < 1 / 2) return q;\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n            return p;\n        },\n\n        rgbaColor: function (r, g, b, a) {\n\n            r = igv.Math.clamp(r, 0, 255);\n            g = igv.Math.clamp(g, 0, 255);\n            b = igv.Math.clamp(b, 0, 255);\n            a = igv.Math.clamp(a, 0.0, 1.0);\n\n            return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\n        },\n\n        rgbColor: function (r, g, b) {\n\n            r = igv.Math.clamp(r, 0, 255);\n            g = igv.Math.clamp(g, 0, 255);\n            b = igv.Math.clamp(b, 0, 255);\n\n            return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n        },\n\n        greyScale: function (value) {\n\n            var grey = igv.Math.clamp(value, 0, 255);\n\n            return \"rgb(\" + grey + \",\" + grey + \",\" + grey + \")\";\n        },\n\n        randomGrey: function (min, max) {\n\n            min = igv.Math.clamp(min, 0, 255);\n            max = igv.Math.clamp(max, 0, 255);\n\n            var g = Math.round(igv.random(min, max)).toString(10);\n\n            return \"rgb(\" + g + \",\" + g + \",\" + g + \")\";\n        },\n\n        randomRGB: function (min, max) {\n\n            min = igv.Math.clamp(min, 0, 255);\n            max = igv.Math.clamp(max, 0, 255);\n\n            var r = Math.round(igv.random(min, max)).toString(10);\n            var g = Math.round(igv.random(min, max)).toString(10);\n            var b = Math.round(igv.random(min, max)).toString(10);\n\n            return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n        },\n\n        randomRGBConstantAlpha: function (min, max, alpha) {\n\n            min = igv.Math.clamp(min, 0, 255);\n            max = igv.Math.clamp(max, 0, 255);\n\n            var r = Math.round(igv.random(min, max)).toString(10);\n            var g = Math.round(igv.random(min, max)).toString(10);\n            var b = Math.round(igv.random(min, max)).toString(10);\n\n            return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + alpha + \")\";\n        },\n\n        addAlpha: function (color, alpha) {\n\n            var isHex = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(color);\n\n            if (color.startsWith(\"rgba\")) {\n                return color;   // TODO -- should replace current alpha with new one\n            }\n\n            if (isHex) {\n                color = igv.Color.hexToRgb(color);\n            }\n\n            if (color.startsWith(\"rgb\")) {\n                return color.replace(\"rgb\", \"rgba\").replace(\")\", \", \" + alpha + \")\");\n            } else {\n                console.log(color + \" is not an rgb style string\");\n                return color;\n            }\n        },\n\n\n        /**\n         *\n         * @param dest  RGB components as an array\n         * @param src  RGB components as an array\n         * @param alpha   alpha transparancy in the range 0-1\n         * @returns {}\n         */\n        getCompositeColor: function (dest, src, alpha) {\n\n            var r = Math.floor(alpha * src[0] + (1 - alpha) * dest[0]),\n                g = Math.floor(alpha * src[1] + (1 - alpha) * dest[1]),\n                b = Math.floor(alpha * src[2] + (1 - alpha) * dest[2]);\n\n            return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n\n        },\n\n\n        createColorString: function (token) {\n            if (token.includes(\",\")) {\n                return token.startsWith(\"rgb\") ? token : \"rgb(\" + token + \")\";\n            } else {\n                return token;\n            }\n        },\n\n        darkenLighten: function (color, amt) {\n\n            const src = color.startsWith('rgb(') ? color : igv.Color.hexToRgb(color);\n\n            const components = src.replace(\")\", \"\").substring(4).split(\",\");\n\n            const r = Math.max(0, Math.min(255, Number.parseInt(components[0].trim()) + amt));\n            const g = Math.max(0, Math.min(255, Number.parseInt(components[1].trim()) + amt));\n            const b = Math.max(0, Math.min(255, Number.parseInt(components[2].trim()) + amt));\n\n            return 'rgb(' + r.toString() + ',' + g.toString() + ',' + b.toString() + ')';\n\n        }\n    };\n\n    // Used to generate color list\n    // let hexs = [];\n    // for (let rgbList of Object.values(igv.colorPalettes)) {\n    //     for (let rgb of rgbList) {\n    //         let obj = {};\n    //         obj[ rgb ] = igv.Color.rgbToHex(rgb);\n    //         hexs.push(obj);\n    //     }\n    // }\n\n    igv.appleCrayonPalette =\n        {\n            licorice: \"#000000\",\n            lead: \"#1e1e1e\",\n            tungsten: \"#3a3a3a\",\n            iron: \"#545453\",\n            steel: \"#6e6e6e\",\n            tin: \"#878687\",\n            nickel: \"#888787\",\n            aluminum: \"#a09fa0\",\n            magnesium: \"#b8b8b8\",\n            silver: \"#d0d0d0\",\n            mercury: \"#e8e8e8\",\n            snow: \"white\",\n            //\n            cayenne: \"#891100\",\n            mocha: \"#894800\",\n            aspargus: \"#888501\",\n            fern: \"#458401\",\n            clover: \"#028401\",\n            moss: \"#018448\",\n            teal: \"#008688\",\n            ocean: \"#004a88\",\n            midnight: \"#001888\",\n            eggplant: \"#491a88\",\n            plum: \"#891e88\",\n            maroon: \"#891648\",\n            //\n            maraschino: \"#ff2101\",\n            tangerine: \"#ff8802\",\n            lemon: \"#fffa03\",\n            lime: \"#83f902\",\n            spring: \"#05f802\",\n            seam_foam: \"#03f987\",\n            turquoise: \"#00fdff\",\n            aqua: \"#008cff\",\n            blueberry: \"#002eff\",\n            grape: \"#8931ff\",\n            magenta: \"#ff39ff\",\n            strawberry: \"#ff2987\",\n            //\n            salmon: \"#ff726e\",\n            cantaloupe: \"#ffce6e\",\n            banana: \"#fffb6d\",\n            honeydew: \"#cefa6e\",\n            flora: \"#68f96e\",\n            spindrift: \"#68fbd0\",\n            ice: \"#68fdff\",\n            sky: \"#6acfff\",\n            orchid: \"#6e76ff\",\n            lavender: \"#d278ff\",\n            bubblegum: \"#ff7aff\",\n            carnation: \"#ff7fd3\"\n    };\n\n    igv.nucleotideColorComponents = {\n        \"A\": [0, 200, 0],\n        \"C\": [0, 0, 200],\n        \"T\": [255, 0, 0],\n        \"G\": [209, 113, 5],\n        \"a\": [0, 200, 0],\n        \"c\": [0, 0, 200],\n        \"t\": [255, 0, 0],\n        \"g\": [209, 113, 5],\n        \"N\": [80, 80, 80]\n    };\n\n    igv.nucleotideColors = {\n        \"A\": \"rgb(  0, 200,   0)\",\n        \"C\": \"rgb(  0,   0, 200)\",\n        \"T\": \"rgb(255,   0,   0)\",\n        \"G\": \"rgb(209, 113,   5)\",\n        \"a\": \"rgb(  0, 200,   0)\",\n        \"c\": \"rgb(  0,   0, 200)\",\n        \"t\": \"rgb(255,   0,   0)\",\n        \"g\": \"rgb(209, 113,   5)\",\n        \"N\": \"rgb(80, 80, 80)\"\n    };\n\n    let bootstrapPalette =\n        [\n            '#007bff',\n            '#17a2b8',\n            '#20c997',\n            '#28a745',\n            '#404EB0',\n            '#6610f2',\n            '#e83e8c',\n            '#dc3545',\n            '#fd7e14',\n            '#ffc107',\n            'white',\n            '#343a40',\n            '#6c757d'\n        ];\n\n    let colorPalettes_concat_RGB2Hex =\n        [\n            {\n                \"rgb(228,26,28)\": \"#e41a1c\"\n            },\n            {\n                \"rgb(55,126,184)\": \"#377eb8\"\n            },\n            {\n                \"rgb(77,175,74)\": \"#4daf4a\"\n            },\n            {\n                \"rgb(166,86,40)\": \"#a65628\"\n            },\n            {\n                \"rgb(152,78,163)\": \"#984ea3\"\n            },\n            {\n                \"rgb(255,127,0)\": \"#ff7f00\"\n            },\n            {\n                \"rgb(247,129,191)\": \"#f781bf\"\n            },\n            {\n                \"rgb(153,153,153)\": \"#999999\"\n            },\n            {\n                \"rgb(255,255,51)\": \"#ffff33\"\n            },\n            {\n                \"rgb(27,158,119)\": \"#1b9e77\"\n            },\n            {\n                \"rgb(217,95,2)\": \"#d95f02\"\n            },\n            {\n                \"rgb(117,112,179)\": \"#7570b3\"\n            },\n            {\n                \"rgb(231,41,138)\": \"#e7298a\"\n            },\n            {\n                \"rgb(102,166,30)\": \"#66a61e\"\n            },\n            {\n                \"rgb(230,171,2)\": \"#e6ab02\"\n            },\n            {\n                \"rgb(166,118,29)\": \"#a6761d\"\n            },\n            {\n                \"rgb(102,102,102)\": \"#666666\"\n            },\n            {\n                \"rgb(102, 194,165)\": \"#66c2a5\"\n            },\n            {\n                \"rgb(252,141,98)\": \"#fc8d62\"\n            },\n            {\n                \"rgb(141,160,203)\": \"#8da0cb\"\n            },\n            {\n                \"rgb(231,138,195)\": \"#e78ac3\"\n            },\n            {\n                \"rgb(166,216,84)\": \"#a6d854\"\n            },\n            {\n                \"rgb(255,217,47)\": \"#ffd92f\"\n            },\n            {\n                \"rgb(229,196,148)\": \"#e5c494\"\n            },\n            {\n                \"rgb(179,179,179)\": \"#b3b3b3\"\n            },\n            {\n                \"rgb(141,211,199)\": \"#8dd3c7\"\n            },\n            {\n                \"rgb(255,255,179)\": \"#ffffb3\"\n            },\n            {\n                \"rgb(190,186,218)\": \"#bebada\"\n            },\n            {\n                \"rgb(251,128,114)\": \"#fb8072\"\n            },\n            {\n                \"rgb(128,177,211)\": \"#80b1d3\"\n            },\n            {\n                \"rgb(253,180,98)\": \"#fdb462\"\n            },\n            {\n                \"rgb(179,222,105)\": \"#b3de69\"\n            },\n            {\n                \"rgb(252,205,229)\": \"#fccde5\"\n            },\n            {\n                \"rgb(217,217,217)\": \"#d9d9d9\"\n            },\n            {\n                \"rgb(188,128,189)\": \"#bc80bd\"\n            },\n            {\n                \"rgb(204,235,197)\": \"#ccebc5\"\n            },\n            {\n                \"rgb(255,237,111)\": \"#ffed6f\"\n            },\n            {\n                \"rgb(251,180,174)\": \"#fbb4ae\"\n            },\n            {\n                \"rgb(179,205,227)\": \"#b3cde3\"\n            },\n            {\n                \"rgb(204,235,197)\": \"#ccebc5\"\n            },\n            {\n                \"rgb(222,203,228)\": \"#decbe4\"\n            },\n            {\n                \"rgb(254,217,166)\": \"#fed9a6\"\n            },\n            {\n                \"rgb(255,255,204)\": \"#ffffcc\"\n            },\n            {\n                \"rgb(229,216,189)\": \"#e5d8bd\"\n            },\n            {\n                \"rgb(253,218,236)\": \"#fddaec\"\n            },\n            {\n                \"rgb(173,226,207)\": \"#ade2cf\"\n            },\n            {\n                \"rgb(253,205,172)\": \"#fdcdac\"\n            },\n            {\n                \"rgb(203,213,232)\": \"#cbd5e8\"\n            },\n            {\n                \"rgb(244,202,228)\": \"#f4cae4\"\n            },\n            {\n                \"rgb(230,245,201)\": \"#e6f5c9\"\n            },\n            {\n                \"rgb(255,242,174)\": \"#fff2ae\"\n            },\n            {\n                \"rgb(243,225,206)\": \"#f3e1ce\"\n            },\n            {\n                \"rgb(127,201,127)\": \"#7fc97f\"\n            },\n            {\n                \"rgb(190,174,212)\": \"#beaed4\"\n            },\n            {\n                \"rgb(253,192,134)\": \"#fdc086\"\n            },\n            {\n                \"rgb(255,255,153)\": \"#ffff99\"\n            },\n            {\n                \"rgb(56,108,176)\": \"#386cb0\"\n            },\n            {\n                \"rgb(240,2,127)\": \"#f0027f\"\n            },\n            {\n                \"rgb(191,91,23)\": \"#bf5b17\"\n            }\n        ];\n\n    igv.colorPalettes = {\n\n        Set1:\n            [\n                \"rgb(228,26,28)\",\n                \"rgb(55,126,184)\",\n                \"rgb(77,175,74)\",\n                \"rgb(166,86,40)\",\n                \"rgb(152,78,163)\",\n                \"rgb(255,127,0)\",\n                \"rgb(247,129,191)\",\n                \"rgb(153,153,153)\",\n                \"rgb(255,255,51)\"\n            ],\n\n        Dark2:\n            [\n                \"rgb(27,158,119)\",\n                \"rgb(217,95,2)\",\n                \"rgb(117,112,179)\",\n                \"rgb(231,41,138)\",\n                \"rgb(102,166,30)\",\n                \"rgb(230,171,2)\",\n                \"rgb(166,118,29)\",\n                \"rgb(102,102,102)\"\n            ],\n\n        Set2:\n            [\n                \"rgb(102, 194,165)\",\n                \"rgb(252,141,98)\",\n                \"rgb(141,160,203)\",\n                \"rgb(231,138,195)\",\n                \"rgb(166,216,84)\",\n                \"rgb(255,217,47)\",\n                \"rgb(229,196,148)\",\n                \"rgb(179,179,179)\"\n            ],\n\n        Set3:\n            [\n                \"rgb(141,211,199)\",\n                \"rgb(255,255,179)\",\n                \"rgb(190,186,218)\",\n                \"rgb(251,128,114)\",\n                \"rgb(128,177,211)\",\n                \"rgb(253,180,98)\",\n                \"rgb(179,222,105)\",\n                \"rgb(252,205,229)\",\n                \"rgb(217,217,217)\",\n                \"rgb(188,128,189)\",\n                \"rgb(204,235,197)\",\n                \"rgb(255,237,111)\"\n            ],\n\n        Pastel1:\n            [\n                \"rgb(251,180,174)\",\n                \"rgb(179,205,227)\",\n                \"rgb(204,235,197)\",\n                \"rgb(222,203,228)\",\n                \"rgb(254,217,166)\",\n                \"rgb(255,255,204)\",\n                \"rgb(229,216,189)\",\n                \"rgb(253,218,236)\"\n            ],\n\n        Pastel2:\n            [\n                \"rgb(173,226,207)\",\n                \"rgb(253,205,172)\",\n                \"rgb(203,213,232)\",\n                \"rgb(244,202,228)\",\n                \"rgb(230,245,201)\",\n                \"rgb(255,242,174)\",\n                \"rgb(243,225,206)\"\n            ],\n\n        Accent:\n            [\n                \"rgb(127,201,127)\",\n                \"rgb(190,174,212)\",\n                \"rgb(253,192,134)\",\n                \"rgb(255,255,153)\",\n                \"rgb(56,108,176)\",\n                \"rgb(240,2,127)\",\n                \"rgb(191,91,23)\"\n            ]\n    };\n\n    igv.PaletteColorTable = function (palette) {\n\n        this.colors = igv.colorPalettes[palette];\n\n        if (!Array.isArray(this.colors)) this.colors = [];\n        this.colorTable = {};\n        this.nextIdx = 0;\n        this.colorGenerator = new RandomColorGenerator();\n\n    };\n\n    igv.PaletteColorTable.prototype.getColor = function (key) {\n\n        if (!this.colorTable.hasOwnProperty(key)) {\n            if (this.nextIdx < this.colors.length) {\n                this.colorTable[key] = this.colors[this.nextIdx];\n            } else {\n                this.colorTable[key] = this.colorGenerator.get();\n            }\n            this.nextIdx++;\n        }\n        return this.colorTable[key];\n    };\n\n    // Random color generator from https://github.com/sterlingwes/RandomColor/blob/master/rcolor.js\n    // Free to use & distribute under the MIT license\n    // Wes Johnson (@SterlingWes)\n    //\n    // inspired by http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n    var RandomColorGenerator = function () {\n        this.hue = Math.random();\n        this.goldenRatio = 0.618033988749895;\n        this.hexwidth = 2;\n    };\n\n    RandomColorGenerator.prototype.hsvToRgb = function (h, s, v) {\n        var h_i = Math.floor(h * 6),\n            f = h * 6 - h_i,\n            p = v * (1 - s),\n            q = v * (1 - f * s),\n            t = v * (1 - (1 - f) * s),\n            r = 255,\n            g = 255,\n            b = 255;\n        switch (h_i) {\n            case 0:\n                r = v, g = t, b = p;\n                break;\n            case 1:\n                r = q, g = v, b = p;\n                break;\n            case 2:\n                r = p, g = v, b = t;\n                break;\n            case 3:\n                r = p, g = q, b = v;\n                break;\n            case 4:\n                r = t, g = p, b = v;\n                break;\n            case 5:\n                r = v, g = p, b = q;\n                break;\n        }\n        return [Math.floor(r * 256), Math.floor(g * 256), Math.floor(b * 256)];\n    };\n\n    RandomColorGenerator.prototype.padHex = function (str) {\n        if (str.length > this.hexwidth) return str;\n        return new Array(this.hexwidth - str.length + 1).join('0') + str;\n    };\n\n    RandomColorGenerator.prototype.get = function (saturation, value) {\n        this.hue += this.goldenRatio;\n        this.hue %= 1;\n        if (typeof saturation !== \"number\") saturation = 0.5;\n        if (typeof value !== \"number\") value = 0.95;\n        var rgb = this.hsvToRgb(this.hue, saturation, value);\n\n        return \"#\" + this.padHex(rgb[0].toString(16))\n            + this.padHex(rgb[1].toString(16))\n            + this.padHex(rgb[2].toString(16));\n\n    };\n\n\n    /**\n     *\n     * @param cs - object containing\n     * 1) array of threshold values defining bin boundaries in ascending order\n     * 2) array of colors for bins  (length == thresholds.length + 1)\n     * @constructor\n     */\n    igv.BinnedColorScale = function (cs) {\n        this.thresholds = cs.thresholds;\n        this.colors = cs.colors;\n    };\n\n    igv.BinnedColorScale.prototype.getColor = function (value) {\n\n        for (let threshold of this.thresholds) {\n            if (value < threshold) {\n                return this.colors[ this.thresholds.indexOf(threshold) ];\n            }\n        }\n\n        return this.colors[this.colors.length - 1];\n\n    };\n\n    /**\n     *\n     * @param scale - object with the following properties\n     *           low\n     *           lowR\n     *           lowG\n     *           lowB\n     *           high\n     *           highR\n     *           highG\n     *           highB\n     *\n     * @constructor\n     */\n    igv.GradientColorScale = function (scale) {\n\n        this.scale = scale;\n        this.lowColor = \"rgb(\" + scale.lowR + \",\" + scale.lowG + \",\" + scale.lowB + \")\";\n        this.highColor = \"rgb(\" + scale.highR + \",\" + scale.highG + \",\" + scale.highB + \")\";\n        this.diff = scale.high - scale.low;\n\n    }\n\n    igv.GradientColorScale.prototype.getColor = function (value) {\n\n        var scale = this.scale, r, g, b, frac;\n\n        if (value <= scale.low) return this.lowColor;\n        else if (value >= scale.high) return this.highColor;\n\n        frac = (value - scale.low) / this.diff;\n        r = Math.floor(scale.lowR + frac * (scale.highR - scale.lowR));\n        g = Math.floor(scale.lowG + frac * (scale.highG - scale.lowG));\n        b = Math.floor(scale.lowB + frac * (scale.highB - scale.lowB));\n\n        return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n\n    var igvjs_version = \"@VERSION\";\n    igv.version = igvjs_version;\n\n    let allBrowsers = [];\n\n    /**\n     * Create an igv.browser instance.  This object defines the public API for interacting with the genome browser.\n     *\n     * @param parentDiv - DOM tree root\n     * @param config - configuration options.\n     *\n     */\n    igv.createBrowser = function (parentDiv, config) {\n\n\n        if (undefined === config) config = {};\n\n        // Path to genomes.json file.   This is globally shared among all browser objects\n        igv.GenomeUtils.genomeList = config.genomeList || \"https://s3.amazonaws.com/igv.org.genomes/genomes.json\";\n\n        setDefaults(config);\n\n        // Explicit parameters have priority\n        if (config.queryParametersSupported !== false) {\n            extractQuery(config);\n        }\n\n        // Set track order explicitly. Otherwise they will be ordered randomly as each completes its async load\n        setTrackOrder(config);\n\n        const browser = new igv.Browser(config, $('<div class=\"igv-track-container-div\">')[0]);\n\n        // Backward compatibility -- globally visible.   This will be removed in a future release\n        if (!igv.browser) {\n            igv.browser = browser;\n        }\n\n        browser.parent = parentDiv;\n\n        $(parentDiv).append(browser.$root);\n\n        setControls(browser, config);\n\n        browser.$content = $('<div class=\"igv-content-div\">');\n        browser.$root.append(browser.$content);\n        browser.$contentHeader = $('<div>', {class: 'igv-content-header'});\n        browser.$content.append(browser.$contentHeader);\n        browser.$content.append(browser.trackContainerDiv);\n\n        // user feedback\n        browser.userFeedback = new igv.UserFeedback(browser.$content);\n        browser.userFeedback.hide();\n\n        // browser.popover = new igv.Popover(browser.$content, browser);\n\n        browser.alertDialog = new igv.AlertDialog(browser.$content, browser);\n\n        browser.inputDialog = new igv.InputDialog(browser.$root, browser);\n\n        browser.trackRemovalDialog = new igv.TrackRemovalDialog(browser.$root, browser);\n\n        browser.dataRangeDialog = new igv.DataRangeDialog(browser.$root, browser);\n\n        if (config.apiKey) {\n            igv.google.setApiKey(config.apiKey);\n        }\n\n        if (config.oauthToken) {\n            igv.oauth.setToken(config.oauthToken);\n        }\n\n        return loadSession(config)\n\n            .then(function (ignore) {\n\n                if (false === config.showTrackLabels) {\n                    browser.hideTrackLabels();\n                } else {\n                    browser.showTrackLabels();\n                    if (browser.trackLabelControl) {\n                        browser.trackLabelControl.setState(browser.trackLabelsVisible);\n                    }\n                }\n\n                if (false === config.showCursorTrackingGuide) {\n                    browser.cursorGuide.doHide();\n                } else {\n                    browser.cursorGuide.doShow();\n                }\n\n                if (false === config.showCenterGuide) {\n                    browser.centerGuide.doHide();\n                } else {\n                    browser.centerGuide.doShow();\n                }\n\n                const isWGV = browser.isMultiLocusWholeGenomeView() || igv.isWholeGenomeView(browser.genomicStateList[0].referenceFrame);\n\n                // multi-locus mode or isWGV\n                if (browser.isMultiLocusMode() || isWGV) {\n                    browser.centerGuide.forcedHide();\n                } else {\n                    browser.centerGuide.forcedShow();\n                }\n\n                igv.xhr.startup();\n\n                browser.navbarManager.navbarDidResize(browser.$navigation.width(), isWGV);\n\n                return browser;\n            })\n\n            .then(function (browser) {\n\n                allBrowsers.push(browser);\n\n                return browser;\n            })\n\n\n        function loadSession(config) {\n            if (config.sessionURL) {\n                return browser.loadSession({\n                    url: config.sessionURL\n                })\n            } else {\n                return browser.loadSessionObject(config)\n            }\n        }\n\n    };\n\n    igv.removeBrowser = function (browser) {\n\n        browser.dispose();\n\n        browser.$root.remove();\n\n        if (browser === igv.browser) {\n            igv.browser = undefined;\n        }\n\n        allBrowsers = allBrowsers.filter(item => item !== browser);\n\n    }\n\n\n    /**\n     * This function provided so clients can inform igv of a visibility change, typically when an igv instance is\n     * made visible from a tab, accordion, or similar widget.\n     */\n    igv.visibilityChange = function () {\n        allBrowsers.forEach(function (browser) {\n            browser.visibilityChange();\n        })\n    }\n\n\n    function setTrackOrder(conf) {\n\n        var trackOrder = 1;\n\n        if (conf.tracks) {\n            conf.tracks.forEach(function (track) {\n                if (track.order === undefined) {\n                    track.order = trackOrder++;\n                }\n            });\n        }\n\n    }\n\n    function setControls(browser, conf) {\n\n        var controlDiv;\n\n        // Create controls. Can be customized by passing in a creation function that returns a div containing the controls\n        controlDiv = conf.createControls ? conf.createControls(browser, conf) : createStandardControls(browser, conf);\n        browser.$root.append($(controlDiv));\n\n        if (false === conf.showControls) {\n            $(controlDiv).hide();\n        }\n\n    }\n\n    function createStandardControls(browser, config) {\n\n        var $div,\n            $igv_nav_bar_left_container,\n            $igv_nav_bar_right_container,\n            $genomic_location,\n            $locus_size_group,\n            $toggle_button_container,\n            logoDiv,\n            logoSvg,\n            $controls,\n            $navigation,\n            $searchContainer,\n            $faSearch;\n\n        $controls = $('<div>', {class: 'igvControlDiv'});\n\n        $navigation = $('<div>', {class: 'igv-navbar'});\n        $controls.append($navigation);\n        browser.$navigation = $navigation;\n        browser.navbarManager = new igv.NavbarManager(browser);\n\n        $igv_nav_bar_left_container = $('<div>', {class: 'igv-nav-bar-left-container'});\n        $navigation.append($igv_nav_bar_left_container);\n\n        // IGV logo\n        logoDiv = $('<div>', {class: 'igv-logo'});\n        logoSvg = logo();\n        logoSvg.css(\"width\", \"34px\");\n        logoSvg.css(\"height\", \"32px\");\n        logoDiv.append(logoSvg);\n        $igv_nav_bar_left_container.append(logoDiv);\n\n        // current genome\n        browser.$current_genome = $('<div>', {class: 'igv-current-genome'});\n        $igv_nav_bar_left_container.append(browser.$current_genome);\n        browser.$current_genome.text('');\n\n        //\n        $genomic_location = $('<div>', {class: 'igv-nav-bar-genomic-location'});\n        $igv_nav_bar_left_container.append($genomic_location);\n\n        // chromosome select widget\n        browser.chromosomeSelectWidget = new igv.ChromosomeSelectWidget(browser, $genomic_location);\n        if (undefined === config.showChromosomeWidget) {\n            config.showChromosomeWidget = true;   // Default to true\n        }\n        if (true === config.showChromosomeWidget) {\n            browser.chromosomeSelectWidget.$container.show();\n        } else {\n            browser.chromosomeSelectWidget.$container.hide();\n        }\n\n\n        $locus_size_group = $('<div>', {class: 'igv-locus-size-group'});\n        $genomic_location.append($locus_size_group);\n\n        // locus goto widget container\n        $searchContainer = $('<div>', {class: 'igv-search-container'});\n        $locus_size_group.append($searchContainer);\n\n        // locus goto input\n        browser.$searchInput = $('<input type=\"text\" placeholder=\"Locus Search\">');\n        $searchContainer.append(browser.$searchInput);\n\n        browser.$searchInput.change(function (e) {\n\n            browser.search($(this).val())\n\n                .catch(function (error) {\n                    browser.presentAlert(error);\n                });\n        });\n\n        // search icon container\n        $div = $('<div>');\n        $searchContainer.append($div);\n\n        // search icon svg\n        $div.append(igv.createIcon(\"search\"));\n\n        $div.click(function () {\n            browser.search(browser.$searchInput.val());\n        });\n\n        // $searchContainer.append($faSearch);\n\n        // TODO: Currently not used\n        // search results presented in table\n        // browser.$searchResults = $('<div class=\"igv-search-results\">');\n        // $searchContainer.append(browser.$searchResults.get(0));\n        // browser.$searchResultsTable = $('<table>');\n        // browser.$searchResults.append(browser.$searchResultsTable.get(0));\n        // browser.$searchResults.hide();\n\n        // window size display\n        browser.windowSizePanel = new igv.WindowSizePanel($locus_size_group, browser);\n\n\n        // cursor guide | center guide | track labels\n\n        $igv_nav_bar_right_container = $('<div class=\"igv-nav-bar-right-container\">');\n        $navigation.append($igv_nav_bar_right_container);\n\n        $toggle_button_container = $('<div class=\"igv-nav-bar-toggle-button-container\">');\n        $igv_nav_bar_right_container.append($toggle_button_container);\n        browser.$toggle_button_container = $toggle_button_container;\n\n        // cursor guide\n        browser.cursorGuide = new igv.CursorGuide($(browser.trackContainerDiv), $toggle_button_container, config, browser);\n\n        // center guide\n        browser.centerGuide = new igv.CenterGuide($(browser.trackContainerDiv), $toggle_button_container, config, browser);\n\n        // toggle track labels\n        if (true === config.showTrackLabelButton) {\n            browser.trackLabelControl = new igv.TrackLabelControl($toggle_button_container, browser);\n        }\n\n        // SVG save button\n        if (config.showSVGButton) {\n            browser.svgSaveControl = new igv.SVGSaveControl($toggle_button_container, browser);\n        }\n\n        // zoom widget\n        browser.zoomWidget = new igv.ZoomWidget(browser, $igv_nav_bar_right_container);\n\n        if (false === config.showNavigation) {\n            browser.$navigation.hide();\n        }\n\n        return $controls.get(0);\n    }\n\n\n    function setDefaults(config) {\n\n        if (undefined === config.visibilityWindow) {\n            config.visibilityWindow = -1;\n        }\n\n        if (undefined === config.promisified) {\n            config.promisified = false;\n        }\n\n        if (undefined === config.minimumBases) {\n            config.minimumBases = 40;\n        }\n\n        if (undefined === config.showIdeogram) {\n            config.showIdeogram = true;\n        }\n\n        if (undefined === config.showCursorTrackingGuideButton) {\n            config.showCursorTrackingGuideButton = true;\n        }\n\n        if (undefined === config.showCenterGuideButton) {\n            config.showCenterGuideButton = true;\n        }\n\n        if (undefined === config.showSVGButton) {\n            config.showSVGButton = true;\n        }\n\n        if (undefined === config.showTrackLabelButton) {\n            config.showTrackLabelButton = true;\n        }\n\n        if (undefined === config.showCursorTrackingGuide) {\n            config.showCursorTrackingGuide = false;\n        }\n\n        if (undefined === config.showCenterGuide) {\n            config.showCenterGuide = false;\n        }\n\n        if (undefined === config.showTrackLabels) {\n            config.showTrackLabels = true;\n        }\n\n        if (config.showControls === undefined) {\n            config.showControls = true;\n        }\n\n        if (config.showNavigation === undefined) {\n            config.showNavigation = true;\n        }\n\n        if (config.showRuler === undefined) {\n            config.showRuler = true;\n        }\n\n        if (config.showSequence === undefined) {\n            config.showSequence = true;\n        }\n\n        if (config.flanking === undefined) {\n            config.flanking = 1000;\n        }\n\n        if (config.pairsSupported === undefined) {\n            config.pairsSupported = true;\n        }\n\n        if (!config.tracks) {\n            config.tracks = [];\n        }\n\n        if (config.showSequence) {\n            config.tracks.push({type: \"sequence\", order: -Number.MAX_VALUE});\n        }\n    }\n\n\n    function extractQuery(config) {\n\n        var i1, i2, i, j, s, query, tokens, uri, key, value;\n\n        uri = window.location.href;\n\n        query = {};\n        i1 = uri.indexOf(\"?\");\n        i2 = uri.lastIndexOf(\"#\");\n\n        let files\n        let indexURLs\n        if (i1 >= 0) {\n            if (i2 < 0) i2 = uri.length;\n            for (i = i1 + 1; i < i2;) {\n                j = uri.indexOf(\"&\", i);\n                if (j < 0) j = i2;\n\n                s = uri.substring(i, j);\n                tokens = s.split(\"=\", 2);\n\n                if (tokens.length === 2) {\n                    key = tokens[0];\n                    value = decodeURIComponent(tokens[1]);\n\n                    if ('file' === key) {\n                        // IGV desktop style file parameter\n                        files = value.split(',')\n                    } else if ('index' === key) {\n                        // IGV desktop style index parameter\n                        indexURLs = value.split(',')\n                    } else {\n                        config[key] = value;\n                    }\n                    i = j + 1;\n                }\n            }\n        }\n\n        if (files) {\n\n            if (!config.tracks)\n                config.tracks = []\n            for (let i = 0; i < files.length; i++) {\n\n                if(files[i].endsWith(\".xml\") || files[i].endsWith(\".json\")) {\n                    config.sessionURL = files[i]\n                    break;\n                }\n\n                const trackConfig = {url: files[i]}\n                if (indexURLs && indexURLs.length > i) {\n                    trackConfig.indexURL = indexURLs[i]\n                }\n                config.tracks.push(trackConfig)\n            }\n        }\n\n        return query;\n    }\n\n    function logo() {\n\n        return $(\n            '<svg width=\"690px\" height=\"324px\" viewBox=\"0 0 690 324\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            '<title>IGV</title>' +\n            '<g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">' +\n            '<g id=\"IGV\" fill=\"#666666\">' +\n            '<polygon id=\"Path\" points=\"379.54574 8.00169252 455.581247 8.00169252 515.564813 188.87244 532.884012 253.529506 537.108207 253.529506 554.849825 188.87244 614.833392 8.00169252 689.60164 8.00169252 582.729511 320.722144 486.840288 320.722144\"></polygon>' +\n            '<path d=\"M261.482414,323.793286 C207.975678,323.793286 168.339046,310.552102 142.571329,284.069337 C116.803612,257.586572 103.919946,217.158702 103.919946,162.784513 C103.919946,108.410325 117.437235,67.8415913 144.472217,41.0770945 C171.507199,14.3125977 212.903894,0.930550071 268.663545,0.930550071 C283.025879,0.930550071 298.232828,1.84616386 314.284849,3.6774189 C330.33687,5.50867394 344.839793,7.97378798 357.794056,11.072835 L357.794056,68.968378 C339.48912,65.869331 323.578145,63.5450806 310.060654,61.9955571 C296.543163,60.4460336 284.574731,59.6712835 274.154998,59.6712835 C255.850062,59.6712835 240.502308,61.4320792 228.111274,64.9537236 C215.720241,68.4753679 205.793482,74.2507779 198.330701,82.2801269 C190.867919,90.309476 185.587729,100.87425 182.48997,113.974767 C179.392212,127.075284 177.843356,143.345037 177.843356,162.784513 C177.843356,181.942258 179.251407,198.000716 182.067551,210.960367 C184.883695,223.920018 189.671068,234.41436 196.429813,242.443709 C203.188559,250.473058 212.059279,256.178037 223.042241,259.558815 C234.025202,262.939594 247.683295,264.629958 264.01693,264.629958 C268.241146,264.629958 273.098922,264.489094 278.590403,264.207362 C284.081883,263.925631 289.643684,263.50304 295.275972,262.939577 L295.275972,159.826347 L361.595831,159.826347 L361.595831,308.579859 C344.698967,313.087564 327.239137,316.750019 309.215815,319.567334 C291.192494,322.38465 275.281519,323.793286 261.482414,323.793286 L261.482414,323.793286 L261.482414,323.793286 Z\" id=\"Path\"></path>;' +\n            '<polygon id=\"Path\" points=\"0.81355666 5.00169252 73.0472883 5.00169252 73.0472883 317.722144 0.81355666 317.722144\"></polygon>' +\n            '</g> </g> </svg>'\n        );\n    }\n\n\n    return igv;\n})\n(igv || {});\n\n\n\n\n\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n *\n * This class uses icons from Font Awesome\n * Font Awesome Free 5.0.8 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n */\n\n\nvar igv = (function (igv) {\n\n    igv.createWrappedIcon = function (name, color) {\n\n        let $svg = igv.createIcon(name, color);\n\n        let $wrapper = $('<i>');\n        $wrapper.append($svg);\n        return $wrapper;\n    };\n\n    igv.createCheckbox = function (name, initialState) {\n\n        let $container = $('<div>', { class: 'igv-trackgear-popover-check-container' });\n\n        let $div = $('<div>');\n        $container.append($div);\n\n        let $svg = iconMarkup('check', (true === initialState ? '#444' : 'transparent'));\n        $div.append($svg);\n\n        let $label = $('<div>'/*, { class: 'igv-some-label-class' }*/);\n        $label.text(name);\n        $container.append($label);\n\n        return $container;\n    };\n\n    igv.createIcon = function (name, color) {\n        return $(iconMarkup(name, color));\n    };\n\n    function iconMarkup(name, color) {\n\n        color = color || \"currentColor\";\n\n        let icon = icons[name];\n        let svg = '<svg ' + 'viewBox=\"0 0 ' + icon[ 0 ] + ' ' + icon[ 1 ] + '\">';\n        svg += '<path fill=\"' + color + '\" ' + 'd=\"' + icon[ 4 ] + '\">' + '</path>';\n        svg += '</svg>';\n\n        return svg;\n\n    }\n\n    var icons = {\n        \"address-book\": [448, 512, [], \"f2b9\", \"M436 160c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20V48c0-26.51-21.49-48-48-48H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h320c26.51 0 48-21.49 48-48v-48h20c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20v-64h20c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20v-64h20zm-74 304H54a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h308a6 6 0 0 1 6 6v404a6 6 0 0 1-6 6zM128 208c0-44.183 35.817-80 80-80s80 35.817 80 80-35.817 80-80 80-80-35.817-80-80zm208 133.477V360c0 13.255-10.745 24-24 24H104c-13.255 0-24-10.745-24-24v-18.523c0-22.026 14.99-41.225 36.358-46.567l35.657-8.914c29.101 20.932 74.509 26.945 111.97 0l35.657 8.914C321.01 300.252 336 319.452 336 341.477z\"],\n        \"address-card\": [512, 512, [], \"f2bb\", \"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zm-54-176H300c-6.627 0-12-5.373-12-12v-16c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v16c0 6.627-5.373 12-12 12zm0 72H300c-6.627 0-12-5.373-12-12v-16c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v16c0 6.627-5.373 12-12 12zM176 160c33.137 0 60 26.863 60 60s-26.863 60-60 60-60-26.863-60-60 26.863-60 60-60zm68.731 125.183l-26.742-6.686c-28.096 20.209-62.152 15.699-83.978 0l-26.742 6.686C91.243 289.189 80 303.589 80 320.108V334c0 9.941 8.059 18 18 18h156c9.941 0 18-8.059 18-18v-13.892c0-16.519-11.243-30.919-27.269-34.925z\"],\n        \"arrow-alt-circle-down\": [512, 512, [], \"f358\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z\"],\n        \"arrow-alt-circle-left\": [512, 512, [], \"f359\", \"M8 256c0 137 111 248 248 248s248-111 248-248S393 8 256 8 8 119 8 256zm448 0c0 110.5-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56s200 89.5 200 200zm-72-20v40c0 6.6-5.4 12-12 12H256v67c0 10.7-12.9 16-20.5 8.5l-99-99c-4.7-4.7-4.7-12.3 0-17l99-99c7.6-7.6 20.5-2.2 20.5 8.5v67h116c6.6 0 12 5.4 12 12z\"],\n        \"arrow-alt-circle-right\": [512, 512, [], \"f35a\", \"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm72 20v-40c0-6.6 5.4-12 12-12h116v-67c0-10.7 12.9-16 20.5-8.5l99 99c4.7 4.7 4.7 12.3 0 17l-99 99c-7.6 7.6-20.5 2.2-20.5-8.5v-67H140c-6.6 0-12-5.4-12-12z\"],\n        \"arrow-alt-circle-up\": [512, 512, [], \"f35b\", \"M256 504c137 0 248-111 248-248S393 8 256 8 8 119 8 256s111 248 248 248zm0-448c110.5 0 200 89.5 200 200s-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56zm20 328h-40c-6.6 0-12-5.4-12-12V256h-67c-10.7 0-16-12.9-8.5-20.5l99-99c4.7-4.7 12.3-4.7 17 0l99 99c7.6 7.6 2.2 20.5-8.5 20.5h-67v116c0 6.6-5.4 12-12 12z\"],\n        \"bell\": [448, 512, [], \"f0f3\", \"M425.403 330.939c-16.989-16.785-34.546-34.143-34.546-116.083 0-83.026-60.958-152.074-140.467-164.762A31.843 31.843 0 0 0 256 32c0-17.673-14.327-32-32-32s-32 14.327-32 32a31.848 31.848 0 0 0 5.609 18.095C118.101 62.783 57.143 131.831 57.143 214.857c0 81.933-17.551 99.292-34.543 116.078C-25.496 378.441 9.726 448 66.919 448H160c0 35.346 28.654 64 64 64 35.346 0 64-28.654 64-64h93.08c57.19 0 92.415-69.583 44.323-117.061zM224 472c-13.234 0-24-10.766-24-24h48c0 13.234-10.766 24-24 24zm157.092-72H66.9c-16.762 0-25.135-20.39-13.334-32.191 28.585-28.585 51.577-55.724 51.577-152.952C105.143 149.319 158.462 96 224 96s118.857 53.319 118.857 118.857c0 97.65 23.221 124.574 51.568 152.952C406.278 379.661 397.783 400 381.092 400z\"],\n        \"bell-slash\": [576, 512, [], \"f1f6\", \"M130.9 400c-16.762 0-25.135-20.39-13.334-32.191 25.226-25.226 46.094-49.338 50.649-121.48l-46.777-41.274a168.48 168.48 0 0 0-.296 9.802c0 81.933-17.551 99.292-34.543 116.078C38.504 378.441 73.726 448 130.919 448H224c0 35.346 28.654 64 64 64s64-28.654 64-64h44.777l-54.4-48H130.9zM288 472c-13.234 0-24-10.766-24-24h48c0 13.234-10.766 24-24 24zm283.867.553l-67.931-59.571c13.104-24.118 11.524-56.318-14.532-82.042-16.989-16.785-34.546-34.143-34.546-116.083 0-83.026-60.958-152.074-140.467-164.762A31.848 31.848 0 0 0 320 32c0-17.673-14.327-32-32-32s-32 14.327-32 32a31.848 31.848 0 0 0 5.609 18.095c-41.471 6.618-77.891 28.571-103.249 59.841L36.459 3.037c-5.058-4.436-12.777-3.956-17.24 1.071L3.056 22.313C-1.407 27.34-.925 35.012 4.134 39.447l535.408 469.516c5.058 4.436 12.777 3.956 17.24-1.071l16.163-18.205c4.462-5.027 3.98-12.699-1.078-17.134zM288 96c65.538 0 118.857 53.319 118.857 118.857 0 97.65 23.221 124.574 51.568 152.952 2.908 2.908 4.573 6.328 5.209 9.832L194.482 141.612C216.258 113.867 250.075 96 288 96z\"],\n        \"bookmark\": [384, 512, [], \"f02e\", \"M336 0H48C21.49 0 0 21.49 0 48v464l192-112 192 112V48c0-26.51-21.49-48-48-48zm0 428.43l-144-84-144 84V54a6 6 0 0 1 6-6h276c3.314 0 6 2.683 6 5.996V428.43z\"],\n        \"building\": [448, 512, [], \"f1ad\", \"M128 148v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12zm140 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-128 96h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm128 0h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-76 84v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm76 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm180 124v36H0v-36c0-6.6 5.4-12 12-12h19.5V24c0-13.3 10.7-24 24-24h337c13.3 0 24 10.7 24 24v440H436c6.6 0 12 5.4 12 12zM79.5 463H192v-67c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v67h112.5V49L80 48l-.5 415z\"],\n        \"calendar\": [448, 512, [], \"f133\", \"M400 64h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V160h352v298c0 3.3-2.7 6-6 6z\"],\n        \"calendar-alt\": [448, 512, [], \"f073\", \"M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"calendar-check\": [448, 512, [], \"f274\", \"M400 64h-48V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v52H160V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v52H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 400H54a6 6 0 0 1-6-6V160h352v298a6 6 0 0 1-6 6zm-52.849-200.65L198.842 404.519c-4.705 4.667-12.303 4.637-16.971-.068l-75.091-75.699c-4.667-4.705-4.637-12.303.068-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l44.104 44.461 111.072-110.181c4.705-4.667 12.303-4.637 16.971.068l22.536 22.718c4.667 4.705 4.636 12.303-.069 16.97z\"],\n        \"calendar-minus\": [448, 512, [], \"f272\", \"M124 328c-6.6 0-12-5.4-12-12v-24c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v24c0 6.6-5.4 12-12 12H124zm324-216v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"calendar-plus\": [448, 512, [], \"f271\", \"M336 292v24c0 6.6-5.4 12-12 12h-76v76c0 6.6-5.4 12-12 12h-24c-6.6 0-12-5.4-12-12v-76h-76c-6.6 0-12-5.4-12-12v-24c0-6.6 5.4-12 12-12h76v-76c0-6.6 5.4-12 12-12h24c6.6 0 12 5.4 12 12v76h76c6.6 0 12 5.4 12 12zm112-180v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"calendar-times\": [448, 512, [], \"f273\", \"M311.7 374.7l-17 17c-4.7 4.7-12.3 4.7-17 0L224 337.9l-53.7 53.7c-4.7 4.7-12.3 4.7-17 0l-17-17c-4.7-4.7-4.7-12.3 0-17l53.7-53.7-53.7-53.7c-4.7-4.7-4.7-12.3 0-17l17-17c4.7-4.7 12.3-4.7 17 0l53.7 53.7 53.7-53.7c4.7-4.7 12.3-4.7 17 0l17 17c4.7 4.7 4.7 12.3 0 17L257.9 304l53.7 53.7c4.8 4.7 4.8 12.3.1 17zM448 112v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"caret-square-down\": [448, 512, [], \"f150\", \"M125.1 208h197.8c10.7 0 16.1 13 8.5 20.5l-98.9 98.3c-4.7 4.7-12.2 4.7-16.9 0l-98.9-98.3c-7.7-7.5-2.3-20.5 8.4-20.5zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"caret-square-left\": [448, 512, [], \"f191\", \"M272 157.1v197.8c0 10.7-13 16.1-20.5 8.5l-98.3-98.9c-4.7-4.7-4.7-12.2 0-16.9l98.3-98.9c7.5-7.7 20.5-2.3 20.5 8.4zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"caret-square-right\": [448, 512, [], \"f152\", \"M176 354.9V157.1c0-10.7 13-16.1 20.5-8.5l98.3 98.9c4.7 4.7 4.7 12.2 0 16.9l-98.3 98.9c-7.5 7.7-20.5 2.3-20.5-8.4zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"caret-square-up\": [448, 512, [], \"f151\", \"M322.9 304H125.1c-10.7 0-16.1-13-8.5-20.5l98.9-98.3c4.7-4.7 12.2-4.7 16.9 0l98.9 98.3c7.7 7.5 2.3 20.5-8.4 20.5zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"chart-bar\": [512, 512, [], \"f080\", \"M500 400c6.6 0 12 5.4 12 12v24c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h24c6.6 0 12 5.4 12 12v324h452zm-356-60v-72c0-6.6-5.4-12-12-12h-24c-6.6 0-12 5.4-12 12v72c0 6.6 5.4 12 12 12h24c6.6 0 12-5.4 12-12zm96 0V140c0-6.6-5.4-12-12-12h-24c-6.6 0-12 5.4-12 12v200c0 6.6 5.4 12 12 12h24c6.6 0 12-5.4 12-12zm96 0V204c0-6.6-5.4-12-12-12h-24c-6.6 0-12 5.4-12 12v136c0 6.6 5.4 12 12 12h24c6.6 0 12-5.4 12-12zm96 0V108c0-6.6-5.4-12-12-12h-24c-6.6 0-12 5.4-12 12v232c0 6.6 5.4 12 12 12h24c6.6 0 12-5.4 12-12z\"],\n        \"check-circle\": [512, 512, [], \"f058\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 48c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m140.204 130.267l-22.536-22.718c-4.667-4.705-12.265-4.736-16.97-.068L215.346 303.697l-59.792-60.277c-4.667-4.705-12.265-4.736-16.97-.069l-22.719 22.536c-4.705 4.667-4.736 12.265-.068 16.971l90.781 91.516c4.667 4.705 12.265 4.736 16.97.068l172.589-171.204c4.704-4.668 4.734-12.266.067-16.971z\"],\n        \"check-square\": [448, 512, [], \"f14a\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z\"],\n        \"circle\": [512, 512, [], \"f111\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200z\"],\n        \"clipboard\": [384, 512, [], \"f328\", \"M336 64h-80c0-35.29-28.71-64-64-64s-64 28.71-64 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 400H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h42v36c0 6.627 5.373 12 12 12h168c6.627 0 12-5.373 12-12v-36h42a6 6 0 0 1 6 6v340a6 6 0 0 1-6 6zM192 40c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24\"],\n        \"clock\": [512, 512, [], \"f017\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z\"],\n        \"clone\": [512, 512, [], \"f24d\", \"M464 0H144c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h320c26.51 0 48-21.49 48-48v-48h48c26.51 0 48-21.49 48-48V48c0-26.51-21.49-48-48-48zM362 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h42v224c0 26.51 21.49 48 48 48h224v42a6 6 0 0 1-6 6zm96-96H150a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h308a6 6 0 0 1 6 6v308a6 6 0 0 1-6 6z\"],\n        \"closed-captioning\": [512, 512, [], \"f20a\", \"M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zm-6 336H54c-3.3 0-6-2.7-6-6V118c0-3.3 2.7-6 6-6h404c3.3 0 6 2.7 6 6v276c0 3.3-2.7 6-6 6zm-211.1-85.7c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.8-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7l-17.5 30.5c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6 2.8-2.5 7.1-2.1 9.2.9l19.6 27.7zm190.4 0c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.9-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7L420 220.2c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6 2.8-2.5 7.1-2.1 9.2.9l19.6 27.7z\"],\n        \"comment\": [576, 512, [], \"f075\", \"M288 32C129 32 0 125.1 0 240c0 49.3 23.7 94.5 63.3 130.2-8.7 23.3-22.1 32.7-37.1 43.1C15.1 421-6 433 1.6 456.5c5.1 15.4 20.9 24.7 38.1 23.3 57.7-4.6 111.2-19.2 157-42.5 28.7 6.9 59.4 10.7 91.2 10.7 159.1 0 288-93 288-208C576 125.1 447.1 32 288 32zm0 368c-32.5 0-65.4-4.4-97.3-14-32.3 19-78.7 46-134.7 54 32-24 56.8-61.6 61.2-88.4C79.1 325.6 48 286.7 48 240c0-70.9 86.3-160 240-160s240 89.1 240 160c0 71-86.3 160-240 160z\"],\n        \"comment-alt\": [576, 512, [], \"f27a\", \"M288 32C129 32 0 125.1 0 240c0 49.3 23.7 94.5 63.3 130.2-8.7 23.3-22.1 32.7-37.1 43.1C15.1 421-6 433 1.6 456.5c5.1 15.4 20.9 24.7 38.1 23.3 57.7-4.6 111.2-19.2 157-42.5 28.7 6.9 59.4 10.7 91.2 10.7 159.1 0 288-93 288-208C576 125.1 447.1 32 288 32zm0 368c-32.5 0-65.4-4.4-97.3-14-32.3 19-78.7 46-134.7 54 32-24 56.8-61.6 61.2-88.4C79.1 325.6 48 286.7 48 240c0-70.9 86.3-160 240-160s240 89.1 240 160c0 71-86.3 160-240 160zm-64-160c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm112 0c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm112 0c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48z\"],\n        \"comments\": [576, 512, [], \"f086\", \"M574.507 443.86c-5.421 21.261-24.57 36.14-46.511 36.14-32.246 0-66.511-9.99-102.1-29.734-50.64 11.626-109.151 7.877-157.96-13.437 41.144-2.919 80.361-12.339 116.331-28.705 16.322-1.22 32.674-4.32 48.631-9.593C454.404 412.365 490.663 432 527.996 432c-32-17.455-43.219-38.958-46.159-58.502 25.443-18.848 46.159-47.183 46.159-81.135 0-10.495-2.383-21.536-7.041-32.467 7.405-25.93 8.656-50.194 5.185-73.938 32.164 30.461 49.856 69.128 49.856 106.405 0 33.893-12.913 65.047-34.976 91.119 2.653 2.038 5.924 4.176 9.962 6.378 19.261 10.508 28.947 32.739 23.525 54zM240.002 80C117.068 80 48.004 152.877 48.004 210.909c0 38.196 24.859 70.072 55.391 91.276-3.527 21.988-16.991 46.179-55.391 65.815 44.8 0 88.31-22.089 114.119-37.653 25.52 7.906 51.883 11.471 77.879 11.471C362.998 341.818 432 268.976 432 210.909 432 152.882 362.943 80 240.002 80m0-48C390.193 32 480 126.026 480 210.909c0 22.745-6.506 46.394-18.816 68.391-11.878 21.226-28.539 40.294-49.523 56.674-21.593 16.857-46.798 30.045-74.913 39.197-29.855 9.719-62.405 14.646-96.746 14.646-24.449 0-48.34-2.687-71.292-8.004C126.311 404.512 85.785 416 48.004 416c-22.18 0-41.472-15.197-46.665-36.761-5.194-21.563 5.064-43.878 24.811-53.976 7.663-3.918 13.324-7.737 17.519-11.294-7.393-7.829-13.952-16.124-19.634-24.844C8.09 264.655.005 238.339.005 210.909.005 126.259 89.508 32 240.002 32z\"],\n        \"compass\": [512, 512, [], \"f14e\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 448c-110.532 0-200-89.451-200-200 0-110.531 89.451-200 200-200 110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200zm91.326-312.131l-33.359 137.779a24.005 24.005 0 0 1-6.772 11.729l-102.64 97.779c-17.104 16.293-45.56.434-39.88-23.024l33.359-137.779a23.997 23.997 0 0 1 6.772-11.729l102.642-97.779c17.285-16.47 45.494-.175 39.878 23.024zM256 224c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"],\n        \"copy\": [448, 512, [], \"f0c5\", \"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z\"],\n        \"copyright\": [512, 512, [], \"f1f9\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 448c-110.532 0-200-89.451-200-200 0-110.531 89.451-200 200-200 110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200zm107.351-101.064c-9.614 9.712-45.53 41.396-104.065 41.396-82.43 0-140.484-61.425-140.484-141.567 0-79.152 60.275-139.401 139.762-139.401 55.531 0 88.738 26.62 97.593 34.779a11.965 11.965 0 0 1 1.936 15.322l-18.155 28.113c-3.841 5.95-11.966 7.282-17.499 2.921-8.595-6.776-31.814-22.538-61.708-22.538-48.303 0-77.916 35.33-77.916 80.082 0 41.589 26.888 83.692 78.277 83.692 32.657 0 56.843-19.039 65.726-27.225 5.27-4.857 13.596-4.039 17.82 1.738l19.865 27.17a11.947 11.947 0 0 1-1.152 15.518z\"],\n        \"credit-card\": [576, 512, [], \"f09d\", \"M527.9 32H48.1C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48.1 48h479.8c26.6 0 48.1-21.5 48.1-48V80c0-26.5-21.5-48-48.1-48zM54.1 80h467.8c3.3 0 6 2.7 6 6v42H48.1V86c0-3.3 2.7-6 6-6zm467.8 352H54.1c-3.3 0-6-2.7-6-6V256h479.8v170c0 3.3-2.7 6-6 6zM192 332v40c0 6.6-5.4 12-12 12h-72c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12zm192 0v40c0 6.6-5.4 12-12 12H236c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12z\"],\n        \"dot-circle\": [512, 512, [], \"f192\", \"M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 168c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80z\"],\n        \"edit\": [576, 512, [], \"f044\", \"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"],\n        \"envelope\": [512, 512, [], \"f0e0\", \"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm0 48v40.805c-22.422 18.259-58.168 46.651-134.587 106.49-16.841 13.247-50.201 45.072-73.413 44.701-23.208.375-56.579-31.459-73.413-44.701C106.18 199.465 70.425 171.067 48 152.805V112h416zM48 400V214.398c22.914 18.251 55.409 43.862 104.938 82.646 21.857 17.205 60.134 55.186 103.062 54.955 42.717.231 80.509-37.199 103.053-54.947 49.528-38.783 82.032-64.401 104.947-82.653V400H48z\"],\n        \"envelope-open\": [512, 512, [], \"f2b6\", \"M494.586 164.516c-4.697-3.883-111.723-89.95-135.251-108.657C337.231 38.191 299.437 0 256 0c-43.205 0-80.636 37.717-103.335 55.859-24.463 19.45-131.07 105.195-135.15 108.549A48.004 48.004 0 0 0 0 201.485V464c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V201.509a48 48 0 0 0-17.414-36.993zM464 458a6 6 0 0 1-6 6H54a6 6 0 0 1-6-6V204.347c0-1.813.816-3.526 2.226-4.665 15.87-12.814 108.793-87.554 132.364-106.293C200.755 78.88 232.398 48 256 48c23.693 0 55.857 31.369 73.41 45.389 23.573 18.741 116.503 93.493 132.366 106.316a5.99 5.99 0 0 1 2.224 4.663V458zm-31.991-187.704c4.249 5.159 3.465 12.795-1.745 16.981-28.975 23.283-59.274 47.597-70.929 56.863C336.636 362.283 299.205 400 256 400c-43.452 0-81.287-38.237-103.335-55.86-11.279-8.967-41.744-33.413-70.927-56.865-5.21-4.187-5.993-11.822-1.745-16.981l15.258-18.528c4.178-5.073 11.657-5.843 16.779-1.726 28.618 23.001 58.566 47.035 70.56 56.571C200.143 320.631 232.307 352 256 352c23.602 0 55.246-30.88 73.41-45.389 11.994-9.535 41.944-33.57 70.563-56.568 5.122-4.116 12.601-3.346 16.778 1.727l15.258 18.526z\"],\n        \"eye-slash\": [576, 512, [], \"f070\", \"M272.702 359.139c-80.483-9.011-136.212-86.886-116.93-167.042l116.93 167.042zM288 392c-102.556 0-192.092-54.701-240-136 21.755-36.917 52.1-68.342 88.344-91.658l-27.541-39.343C67.001 152.234 31.921 188.741 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.004 376.006 168.14 440 288 440a332.89 332.89 0 0 0 39.648-2.367l-32.021-45.744A284.16 284.16 0 0 1 288 392zm281.354-111.631c-33.232 56.394-83.421 101.742-143.554 129.492l48.116 68.74c3.801 5.429 2.48 12.912-2.949 16.712L450.23 509.83c-5.429 3.801-12.912 2.48-16.712-2.949L102.084 33.399c-3.801-5.429-2.48-12.912 2.949-16.712L125.77 2.17c5.429-3.801 12.912-2.48 16.712 2.949l55.526 79.325C226.612 76.343 256.808 72 288 72c119.86 0 224.996 63.994 281.354 159.631a48.002 48.002 0 0 1 0 48.738zM528 256c-44.157-74.933-123.677-127.27-216.162-135.007C302.042 131.078 296 144.83 296 160c0 30.928 25.072 56 56 56s56-25.072 56-56l-.001-.042c30.632 57.277 16.739 130.26-36.928 171.719l26.695 38.135C452.626 346.551 498.308 306.386 528 256z\"],\n        \"file\": [384, 512, [], \"f15b\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48z\"],\n        \"file-alt\": [384, 512, [], \"f15c\", \"M288 248v28c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-28c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm-12 72H108c-6.6 0-12 5.4-12 12v28c0 6.6 5.4 12 12 12h168c6.6 0 12-5.4 12-12v-28c0-6.6-5.4-12-12-12zm108-188.1V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V48C0 21.5 21.5 0 48 0h204.1C264.8 0 277 5.1 286 14.1L369.9 98c9 8.9 14.1 21.2 14.1 33.9zm-128-80V128h76.1L256 51.9zM336 464V176H232c-13.3 0-24-10.7-24-24V48H48v416h288z\"],\n        \"file-archive\": [384, 512, [], \"f1c6\", \"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM256 51.882L332.118 128H256V51.882zM336 464H48V48h79.714v16h32V48H208v104c0 13.255 10.745 24 24 24h104v288zM192.27 96h-32V64h32v32zm-32 0v32h-32V96h32zm0 64v32h-32v-32h32zm32 0h-32v-32h32v32zm1.909 105.678A12 12 0 0 0 182.406 256H160.27v-32h-32v32l-19.69 97.106C101.989 385.611 126.834 416 160 416c33.052 0 57.871-30.192 51.476-62.62l-17.297-87.702zM160.27 390.073c-17.918 0-32.444-12.105-32.444-27.036 0-14.932 14.525-27.036 32.444-27.036s32.444 12.105 32.444 27.036c0 14.931-14.526 27.036-32.444 27.036zm32-166.073h-32v-32h32v32z\"],\n        \"file-audio\": [384, 512, [], \"f1c7\", \"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm144-76.024c0 10.691-12.926 16.045-20.485 8.485L136 360.486h-28c-6.627 0-12-5.373-12-12v-56c0-6.627 5.373-12 12-12h28l35.515-36.947c7.56-7.56 20.485-2.206 20.485 8.485v135.952zm41.201-47.13c9.051-9.297 9.06-24.133.001-33.439-22.149-22.752 12.235-56.246 34.395-33.481 27.198 27.94 27.212 72.444.001 100.401-21.793 22.386-56.947-10.315-34.397-33.481z\"],\n        \"file-code\": [384, 512, [], \"f1c9\", \"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm101.677-115.115L116.854 320l32.822-28.885a8.793 8.793 0 0 0 .605-12.624l-17.403-18.564c-3.384-3.613-8.964-3.662-12.438-.401L62.78 313.58c-3.703 3.474-3.704 9.367.001 12.84l57.659 54.055a8.738 8.738 0 0 0 6.012 2.381 8.746 8.746 0 0 0 6.427-2.782l17.403-18.563a8.795 8.795 0 0 0-.605-12.626zm84.284-127.85l-24.401-7.084a8.796 8.796 0 0 0-10.905 5.998L144.04 408.061c-1.353 4.66 1.338 9.552 5.998 10.905l24.403 7.084c4.68 1.355 9.557-1.354 10.905-5.998l54.612-188.112c1.354-4.66-1.337-9.552-5.997-10.905zm87.258 92.545l-57.658-54.055c-3.526-3.307-9.099-3.165-12.439.401l-17.403 18.563a8.795 8.795 0 0 0 .605 12.625L267.146 320l-32.822 28.885a8.793 8.793 0 0 0-.605 12.624l17.403 18.564a8.797 8.797 0 0 0 12.439.401h-.001l57.66-54.055c3.703-3.473 3.703-9.366-.001-12.839z\"],\n        \"file-excel\": [384, 512, [], \"f1c3\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm212-240h-28.8c-4.4 0-8.4 2.4-10.5 6.3-18 33.1-22.2 42.4-28.6 57.7-13.9-29.1-6.9-17.3-28.6-57.7-2.1-3.9-6.2-6.3-10.6-6.3H124c-9.3 0-15 10-10.4 18l46.3 78-46.3 78c-4.7 8 1.1 18 10.4 18h28.9c4.4 0 8.4-2.4 10.5-6.3 21.7-40 23-45 28.6-57.7 14.9 30.2 5.9 15.9 28.6 57.7 2.1 3.9 6.2 6.3 10.6 6.3H260c9.3 0 15-10 10.4-18L224 320c.7-1.1 30.3-50.5 46.3-78 4.7-8-1.1-18-10.3-18z\"],\n        \"file-image\": [384, 512, [], \"f1c5\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm32-48h224V288l-23.5-23.5c-4.7-4.7-12.3-4.7-17 0L176 352l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0L80 352v64zm48-240c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"],\n        \"file-pdf\": [384, 512, [], \"f1c1\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm250.2-143.7c-12.2-12-47-8.7-64.4-6.5-17.2-10.5-28.7-25-36.8-46.3 3.9-16.1 10.1-40.6 5.4-56-4.2-26.2-37.8-23.6-42.6-5.9-4.4 16.1-.4 38.5 7 67.1-10 23.9-24.9 56-35.4 74.4-20 10.3-47 26.2-51 46.2-3.3 15.8 26 55.2 76.1-31.2 22.4-7.4 46.8-16.5 68.4-20.1 18.9 10.2 41 17 55.8 17 25.5 0 28-28.2 17.5-38.7zm-198.1 77.8c5.1-13.7 24.5-29.5 30.4-35-19 30.3-30.4 35.7-30.4 35zm81.6-190.6c7.4 0 6.7 32.1 1.8 40.8-4.4-13.9-4.3-40.8-1.8-40.8zm-24.4 136.6c9.7-16.9 18-37 24.7-54.7 8.3 15.1 18.9 27.2 30.1 35.5-20.8 4.3-38.9 13.1-54.8 19.2zm131.6-5s-5 6-37.3-7.8c35.1-2.6 40.9 5.4 37.3 7.8z\"],\n        \"file-powerpoint\": [384, 512, [], \"f1c4\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm72-60V236c0-6.6 5.4-12 12-12h69.2c36.7 0 62.8 27 62.8 66.3 0 74.3-68.7 66.5-95.5 66.5V404c0 6.6-5.4 12-12 12H132c-6.6 0-12-5.4-12-12zm48.5-87.4h23c7.9 0 13.9-2.4 18.1-7.2 8.5-9.8 8.4-28.5.1-37.8-4.1-4.6-9.9-7-17.4-7h-23.9v52z\"],\n        \"file-video\": [384, 512, [], \"f1c8\", \"M369.941 97.941l-83.882-83.882A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V131.882a48 48 0 0 0-14.059-33.941zM332.118 128H256V51.882L332.118 128zM48 464V48h160v104c0 13.255 10.745 24 24 24h104v288H48zm228.687-211.303L224 305.374V268c0-11.046-8.954-20-20-20H100c-11.046 0-20 8.954-20 20v104c0 11.046 8.954 20 20 20h104c11.046 0 20-8.954 20-20v-37.374l52.687 52.674C286.704 397.318 304 390.28 304 375.986V264.011c0-14.311-17.309-21.319-27.313-11.314z\"],\n        \"file-word\": [384, 512, [], \"f1c2\", \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm220.1-208c-5.7 0-10.6 4-11.7 9.5-20.6 97.7-20.4 95.4-21 103.5-.2-1.2-.4-2.6-.7-4.3-.8-5.1.3.2-23.6-99.5-1.3-5.4-6.1-9.2-11.7-9.2h-13.3c-5.5 0-10.3 3.8-11.7 9.1-24.4 99-24 96.2-24.8 103.7-.1-1.1-.2-2.5-.5-4.2-.7-5.2-14.1-73.3-19.1-99-1.1-5.6-6-9.7-11.8-9.7h-16.8c-7.8 0-13.5 7.3-11.7 14.8 8 32.6 26.7 109.5 33.2 136 1.3 5.4 6.1 9.1 11.7 9.1h25.2c5.5 0 10.3-3.7 11.6-9.1l17.9-71.4c1.5-6.2 2.5-12 3-17.3l2.9 17.3c.1.4 12.6 50.5 17.9 71.4 1.3 5.3 6.1 9.1 11.6 9.1h24.7c5.5 0 10.3-3.7 11.6-9.1 20.8-81.9 30.2-119 34.5-136 1.9-7.6-3.8-14.9-11.6-14.9h-15.8z\"],\n        \"flag\": [512, 512, [], \"f024\", \"M336.174 80c-49.132 0-93.305-32-161.913-32-31.301 0-58.303 6.482-80.721 15.168a48.04 48.04 0 0 0 2.142-20.727C93.067 19.575 74.167 1.594 51.201.104 23.242-1.71 0 20.431 0 48c0 17.764 9.657 33.262 24 41.562V496c0 8.837 7.163 16 16 16h16c8.837 0 16-7.163 16-16v-83.443C109.869 395.28 143.259 384 199.826 384c49.132 0 93.305 32 161.913 32 58.479 0 101.972-22.617 128.548-39.981C503.846 367.161 512 352.051 512 335.855V95.937c0-34.459-35.264-57.768-66.904-44.117C409.193 67.309 371.641 80 336.174 80zM464 336c-21.783 15.412-60.824 32-102.261 32-59.945 0-102.002-32-161.913-32-43.361 0-96.379 9.403-127.826 24V128c21.784-15.412 60.824-32 102.261-32 59.945 0 102.002 32 161.913 32 43.271 0 96.32-17.366 127.826-32v240z\"],\n        \"folder\": [512, 512, [], \"f07b\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48zm-6 272H54c-3.314 0-6-2.678-6-5.992V117.992A5.993 5.993 0 0 1 54 112h134.118l64 64H458a6 6 0 0 1 6 6v212a6 6 0 0 1-6 6z\"],\n        \"folder-open\": [576, 512, [], \"f07c\", \"M527.943 224H480v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h400a48.001 48.001 0 0 0 40.704-22.56l79.942-128c19.948-31.917-3.038-73.44-40.703-73.44zM54 112h134.118l64 64H426a6 6 0 0 1 6 6v42H152a48 48 0 0 0-41.098 23.202L48 351.449V117.993A5.993 5.993 0 0 1 54 112zm394 288H72l77.234-128H528l-80 128z\"],\n        \"frown\": [512, 512, [], \"f119\", \"M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm64 136c-9.535 0-18.512 2.386-26.37 6.589h.017c12.735 0 23.059 10.324 23.059 23.059 0 12.735-10.324 23.059-23.059 23.059s-23.059-10.324-23.059-23.059v-.017C266.386 181.488 264 190.465 264 200c0 30.928 25.072 56 56 56s56-25.072 56-56-25.072-56-56-56zm-128 0c-9.535 0-18.512 2.386-26.37 6.589h.017c12.735 0 23.059 10.324 23.059 23.059 0 12.735-10.324 23.059-23.059 23.059-12.735 0-23.059-10.324-23.059-23.059v-.017C138.386 181.488 136 190.465 136 200c0 30.928 25.072 56 56 56s56-25.072 56-56-25.072-56-56-56zm171.547 201.782c-56.595-76.964-158.383-77.065-215.057-.001-18.82 25.593 19.858 54.018 38.67 28.438 37.511-51.01 100.365-50.796 137.717-.001 18.509 25.172 57.821-2.395 38.67-28.436z\"],\n        \"futbol\": [496, 512, [], \"f1e3\", \"M483.8 179.4C449.8 74.6 352.6 8 248.1 8c-25.4 0-51.2 3.9-76.7 12.2C41.2 62.5-30.1 202.4 12.2 332.6 46.2 437.4 143.4 504 247.9 504c25.4 0 51.2-3.9 76.7-12.2 130.2-42.3 201.5-182.2 159.2-312.4zm-74.5 193.7l-52.2 6.4-43.7-60.9 24.4-75.2 71.1-22.1 38.9 36.4c-.2 30.7-7.4 61.1-21.7 89.2-4.7 9.3-10.7 17.8-16.8 26.2zm0-235.4l-10.4 53.1-70.7 22-64.2-46.5V92.5l47.4-26.2c39.2 13 73.4 38 97.9 71.4zM184.9 66.4L232 92.5v73.8l-64.2 46.5-70.6-22-10.1-52.5c24.3-33.4 57.9-58.6 97.8-71.9zM139 379.5L85.9 373c-14.4-20.1-37.3-59.6-37.8-115.3l39-36.4 71.1 22.2 24.3 74.3-43.5 61.7zm48.2 67l-22.4-48.1 43.6-61.7H287l44.3 61.7-22.4 48.1c-6.2 1.8-57.6 20.4-121.7 0z\"],\n        \"gem\": [576, 512, [], \"f3a5\", \"M464 0H112c-4 0-7.8 2-10 5.4L2 152.6c-2.9 4.4-2.6 10.2.7 14.2l276 340.8c4.8 5.9 13.8 5.9 18.6 0l276-340.8c3.3-4.1 3.6-9.8.7-14.2L474.1 5.4C471.8 2 468.1 0 464 0zm-19.3 48l63.3 96h-68.4l-51.7-96h56.8zm-202.1 0h90.7l51.7 96H191l51.6-96zm-111.3 0h56.8l-51.7 96H68l63.3-96zm-43 144h51.4L208 352 88.3 192zm102.9 0h193.6L288 435.3 191.2 192zM368 352l68.2-160h51.4L368 352z\"],\n        \"hand-lizard\": [576, 512, [], \"f258\", \"M556.686 290.542L410.328 64.829C397.001 44.272 374.417 32 349.917 32H56C25.121 32 0 57.122 0 88v8c0 44.112 35.888 80 80 80h196.042l-18.333 48H144c-48.523 0-88 39.477-88 88 0 30.879 25.121 56 56 56h131.552c2.987 0 5.914.549 8.697 1.631L352 408.418V480h224V355.829c0-23.225-6.679-45.801-19.314-65.287zM528 432H400v-23.582c0-19.948-12.014-37.508-30.604-44.736l-99.751-38.788A71.733 71.733 0 0 0 243.552 320H112c-4.411 0-8-3.589-8-8 0-22.056 17.944-40 40-40h113.709c19.767 0 37.786-12.407 44.84-30.873l24.552-64.281c8.996-23.553-8.428-48.846-33.63-48.846H80c-17.645 0-32-14.355-32-32v-8c0-4.411 3.589-8 8-8h293.917c8.166 0 15.693 4.09 20.137 10.942l146.358 225.715A71.84 71.84 0 0 1 528 355.829V432z\"],\n        \"hand-paper\": [448, 512, [], \"f256\", \"M372.57 112.641v-10.825c0-43.612-40.52-76.691-83.039-65.546-25.629-49.5-94.09-47.45-117.982.747C130.269 26.456 89.144 57.945 89.144 102v126.13c-19.953-7.427-43.308-5.068-62.083 8.871-29.355 21.796-35.794 63.333-14.55 93.153L132.48 498.569a32 32 0 0 0 26.062 13.432h222.897c14.904 0 27.835-10.289 31.182-24.813l30.184-130.958A203.637 203.637 0 0 0 448 310.564V179c0-40.62-35.523-71.992-75.43-66.359zm27.427 197.922c0 11.731-1.334 23.469-3.965 34.886L368.707 464h-201.92L51.591 302.303c-14.439-20.27 15.023-42.776 29.394-22.605l27.128 38.079c8.995 12.626 29.031 6.287 29.031-9.283V102c0-25.645 36.571-24.81 36.571.691V256c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16V67c0-25.663 36.571-24.81 36.571.691V256c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16V101.125c0-25.672 36.57-24.81 36.57.691V256c0 8.837 7.163 16 16 16h6.857c8.837 0 16-7.163 16-16v-76.309c0-26.242 36.57-25.64 36.57-.691v131.563z\"],\n        \"hand-peace\": [448, 512, [], \"f25b\", \"M362.146 191.976c-13.71-21.649-38.761-34.016-65.006-30.341V74c0-40.804-32.811-74-73.141-74-40.33 0-73.14 33.196-73.14 74L160 168l-18.679-78.85C126.578 50.843 83.85 32.11 46.209 47.208 8.735 62.238-9.571 104.963 5.008 142.85l55.757 144.927c-30.557 24.956-43.994 57.809-24.733 92.218l54.853 97.999C102.625 498.97 124.73 512 148.575 512h205.702c30.744 0 57.558-21.44 64.555-51.797l27.427-118.999a67.801 67.801 0 0 0 1.729-15.203L448 256c0-44.956-43.263-77.343-85.854-64.024zM399.987 326c0 1.488-.169 2.977-.502 4.423l-27.427 119.001c-1.978 8.582-9.29 14.576-17.782 14.576H148.575c-6.486 0-12.542-3.621-15.805-9.449l-54.854-98c-4.557-8.141-2.619-18.668 4.508-24.488l26.647-21.764a16 16 0 0 0 4.812-18.139l-64.09-166.549C37.226 92.956 84.37 74.837 96.51 106.389l59.784 155.357A16 16 0 0 0 171.227 272h11.632c8.837 0 16-7.163 16-16V74c0-34.375 50.281-34.43 50.281 0v182c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16v-28c0-25.122 36.567-25.159 36.567 0v28c0 8.837 7.163 16 16 16h6.856c8.837 0 16-7.163 16-16 0-25.12 36.567-25.16 36.567 0v70z\"],\n        \"hand-point-down\": [448, 512, [], \"f0a7\", \"M188.8 512c45.616 0 83.2-37.765 83.2-83.2v-35.647a93.148 93.148 0 0 0 22.064-7.929c22.006 2.507 44.978-3.503 62.791-15.985C409.342 368.1 448 331.841 448 269.299V248c0-60.063-40-98.512-40-127.2v-2.679c4.952-5.747 8-13.536 8-22.12V32c0-17.673-12.894-32-28.8-32H156.8C140.894 0 128 14.327 128 32v64c0 8.584 3.048 16.373 8 22.12v2.679c0 6.964-6.193 14.862-23.668 30.183l-.148.129-.146.131c-9.937 8.856-20.841 18.116-33.253 25.851C48.537 195.798 0 207.486 0 252.8c0 56.928 35.286 92 83.2 92 8.026 0 15.489-.814 22.4-2.176V428.8c0 45.099 38.101 83.2 83.2 83.2zm0-48c-18.7 0-35.2-16.775-35.2-35.2V270.4c-17.325 0-35.2 26.4-70.4 26.4-26.4 0-35.2-20.625-35.2-44 0-8.794 32.712-20.445 56.1-34.926 14.575-9.074 27.225-19.524 39.875-30.799 18.374-16.109 36.633-33.836 39.596-59.075h176.752C364.087 170.79 400 202.509 400 248v21.299c0 40.524-22.197 57.124-61.325 50.601-8.001 14.612-33.979 24.151-53.625 12.925-18.225 19.365-46.381 17.787-61.05 4.95V428.8c0 18.975-16.225 35.2-35.2 35.2zM328 64c0-13.255 10.745-24 24-24s24 10.745 24 24-10.745 24-24 24-24-10.745-24-24z\"],\n        \"hand-point-left\": [512, 512, [], \"f0a5\", \"M0 220.8C0 266.416 37.765 304 83.2 304h35.647a93.148 93.148 0 0 0 7.929 22.064c-2.507 22.006 3.503 44.978 15.985 62.791C143.9 441.342 180.159 480 242.701 480H264c60.063 0 98.512-40 127.2-40h2.679c5.747 4.952 13.536 8 22.12 8h64c17.673 0 32-12.894 32-28.8V188.8c0-15.906-14.327-28.8-32-28.8h-64c-8.584 0-16.373 3.048-22.12 8H391.2c-6.964 0-14.862-6.193-30.183-23.668l-.129-.148-.131-.146c-8.856-9.937-18.116-20.841-25.851-33.253C316.202 80.537 304.514 32 259.2 32c-56.928 0-92 35.286-92 83.2 0 8.026.814 15.489 2.176 22.4H83.2C38.101 137.6 0 175.701 0 220.8zm48 0c0-18.7 16.775-35.2 35.2-35.2h158.4c0-17.325-26.4-35.2-26.4-70.4 0-26.4 20.625-35.2 44-35.2 8.794 0 20.445 32.712 34.926 56.1 9.074 14.575 19.524 27.225 30.799 39.875 16.109 18.374 33.836 36.633 59.075 39.596v176.752C341.21 396.087 309.491 432 264 432h-21.299c-40.524 0-57.124-22.197-50.601-61.325-14.612-8.001-24.151-33.979-12.925-53.625-19.365-18.225-17.787-46.381-4.95-61.05H83.2C64.225 256 48 239.775 48 220.8zM448 360c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24z\"],\n        \"hand-point-right\": [512, 512, [], \"f0a4\", \"M428.8 137.6h-86.177a115.52 115.52 0 0 0 2.176-22.4c0-47.914-35.072-83.2-92-83.2-45.314 0-57.002 48.537-75.707 78.784-7.735 12.413-16.994 23.317-25.851 33.253l-.131.146-.129.148C135.662 161.807 127.764 168 120.8 168h-2.679c-5.747-4.952-13.536-8-22.12-8H32c-17.673 0-32 12.894-32 28.8v230.4C0 435.106 14.327 448 32 448h64c8.584 0 16.373-3.048 22.12-8h2.679c28.688 0 67.137 40 127.2 40h21.299c62.542 0 98.8-38.658 99.94-91.145 12.482-17.813 18.491-40.785 15.985-62.791A93.148 93.148 0 0 0 393.152 304H428.8c45.435 0 83.2-37.584 83.2-83.2 0-45.099-38.101-83.2-83.2-83.2zm0 118.4h-91.026c12.837 14.669 14.415 42.825-4.95 61.05 11.227 19.646 1.687 45.624-12.925 53.625 6.524 39.128-10.076 61.325-50.6 61.325H248c-45.491 0-77.21-35.913-120-39.676V215.571c25.239-2.964 42.966-21.222 59.075-39.596 11.275-12.65 21.725-25.3 30.799-39.875C232.355 112.712 244.006 80 252.8 80c23.375 0 44 8.8 44 35.2 0 35.2-26.4 53.075-26.4 70.4h158.4c18.425 0 35.2 16.5 35.2 35.2 0 18.975-16.225 35.2-35.2 35.2zM88 384c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24z\"],\n        \"hand-point-up\": [448, 512, [], \"f0a6\", \"M105.6 83.2v86.177a115.52 115.52 0 0 0-22.4-2.176c-47.914 0-83.2 35.072-83.2 92 0 45.314 48.537 57.002 78.784 75.707 12.413 7.735 23.317 16.994 33.253 25.851l.146.131.148.129C129.807 376.338 136 384.236 136 391.2v2.679c-4.952 5.747-8 13.536-8 22.12v64c0 17.673 12.894 32 28.8 32h230.4c15.906 0 28.8-14.327 28.8-32v-64c0-8.584-3.048-16.373-8-22.12V391.2c0-28.688 40-67.137 40-127.2v-21.299c0-62.542-38.658-98.8-91.145-99.94-17.813-12.482-40.785-18.491-62.791-15.985A93.148 93.148 0 0 0 272 118.847V83.2C272 37.765 234.416 0 188.8 0c-45.099 0-83.2 38.101-83.2 83.2zm118.4 0v91.026c14.669-12.837 42.825-14.415 61.05 4.95 19.646-11.227 45.624-1.687 53.625 12.925 39.128-6.524 61.325 10.076 61.325 50.6V264c0 45.491-35.913 77.21-39.676 120H183.571c-2.964-25.239-21.222-42.966-39.596-59.075-12.65-11.275-25.3-21.725-39.875-30.799C80.712 279.645 48 267.994 48 259.2c0-23.375 8.8-44 35.2-44 35.2 0 53.075 26.4 70.4 26.4V83.2c0-18.425 16.5-35.2 35.2-35.2 18.975 0 35.2 16.225 35.2 35.2zM352 424c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24z\"],\n        \"hand-pointer\": [448, 512, [], \"f25a\", \"M358.182 179.361c-19.493-24.768-52.679-31.945-79.872-19.098-15.127-15.687-36.182-22.487-56.595-19.629V67c0-36.944-29.736-67-66.286-67S89.143 30.056 89.143 67v161.129c-19.909-7.41-43.272-5.094-62.083 8.872-29.355 21.795-35.793 63.333-14.55 93.152l109.699 154.001C134.632 501.59 154.741 512 176 512h178.286c30.802 0 57.574-21.5 64.557-51.797l27.429-118.999A67.873 67.873 0 0 0 448 326v-84c0-46.844-46.625-79.273-89.818-62.639zM80.985 279.697l27.126 38.079c8.995 12.626 29.031 6.287 29.031-9.283V67c0-25.12 36.571-25.16 36.571 0v175c0 8.836 7.163 16 16 16h6.857c8.837 0 16-7.164 16-16v-35c0-25.12 36.571-25.16 36.571 0v35c0 8.836 7.163 16 16 16H272c8.837 0 16-7.164 16-16v-21c0-25.12 36.571-25.16 36.571 0v21c0 8.836 7.163 16 16 16h6.857c8.837 0 16-7.164 16-16 0-25.121 36.571-25.16 36.571 0v84c0 1.488-.169 2.977-.502 4.423l-27.43 119.001c-1.978 8.582-9.29 14.576-17.782 14.576H176c-5.769 0-11.263-2.878-14.697-7.697l-109.712-154c-14.406-20.223 14.994-42.818 29.394-22.606zM176.143 400v-96c0-8.837 6.268-16 14-16h6c7.732 0 14 7.163 14 16v96c0 8.837-6.268 16-14 16h-6c-7.733 0-14-7.163-14-16zm75.428 0v-96c0-8.837 6.268-16 14-16h6c7.732 0 14 7.163 14 16v96c0 8.837-6.268 16-14 16h-6c-7.732 0-14-7.163-14-16zM327 400v-96c0-8.837 6.268-16 14-16h6c7.732 0 14 7.163 14 16v96c0 8.837-6.268 16-14 16h-6c-7.732 0-14-7.163-14-16z\"],\n        \"hand-rock\": [512, 512, [], \"f255\", \"M408.864 79.052c-22.401-33.898-66.108-42.273-98.813-23.588-29.474-31.469-79.145-31.093-108.334-.022-47.16-27.02-108.71 5.055-110.671 60.806C44.846 105.407 0 140.001 0 187.429v56.953c0 32.741 14.28 63.954 39.18 85.634l97.71 85.081c4.252 3.702 3.11 5.573 3.11 32.903 0 17.673 14.327 32 32 32h252c17.673 0 32-14.327 32-32 0-23.513-1.015-30.745 3.982-42.37l42.835-99.656c6.094-14.177 9.183-29.172 9.183-44.568V146.963c0-52.839-54.314-88.662-103.136-67.911zM464 261.406a64.505 64.505 0 0 1-5.282 25.613l-42.835 99.655c-5.23 12.171-7.883 25.04-7.883 38.25V432H188v-10.286c0-16.37-7.14-31.977-19.59-42.817l-97.71-85.08C56.274 281.255 48 263.236 48 244.381v-56.953c0-33.208 52-33.537 52 .677v41.228a16 16 0 0 0 5.493 12.067l7 6.095A16 16 0 0 0 139 235.429V118.857c0-33.097 52-33.725 52 .677v26.751c0 8.836 7.164 16 16 16h7c8.836 0 16-7.164 16-16v-41.143c0-33.134 52-33.675 52 .677v40.466c0 8.836 7.163 16 16 16h7c8.837 0 16-7.164 16-16v-27.429c0-33.03 52-33.78 52 .677v26.751c0 8.836 7.163 16 16 16h7c8.837 0 16-7.164 16-16 0-33.146 52-33.613 52 .677v114.445z\"],\n        \"hand-scissors\": [512, 512, [], \"f257\", \"M256 480l70-.013c5.114 0 10.231-.583 15.203-1.729l118.999-27.427C490.56 443.835 512 417.02 512 386.277V180.575c0-23.845-13.03-45.951-34.005-57.69l-97.999-54.853c-34.409-19.261-67.263-5.824-92.218 24.733L142.85 37.008c-37.887-14.579-80.612 3.727-95.642 41.201-15.098 37.642 3.635 80.37 41.942 95.112L168 192l-94-9.141c-40.804 0-74 32.811-74 73.14 0 40.33 33.196 73.141 74 73.141h87.635c-3.675 26.245 8.692 51.297 30.341 65.006C178.657 436.737 211.044 480 256 480zm0-48.013c-25.16 0-25.12-36.567 0-36.567 8.837 0 16-7.163 16-16v-6.856c0-8.837-7.163-16-16-16h-28c-25.159 0-25.122-36.567 0-36.567h28c8.837 0 16-7.163 16-16v-6.856c0-8.837-7.163-16-16-16H74c-34.43 0-34.375-50.281 0-50.281h182c8.837 0 16-7.163 16-16v-11.632a16 16 0 0 0-10.254-14.933L106.389 128.51c-31.552-12.14-13.432-59.283 19.222-46.717l166.549 64.091a16.001 16.001 0 0 0 18.139-4.812l21.764-26.647c5.82-7.127 16.348-9.064 24.488-4.508l98 54.854c5.828 3.263 9.449 9.318 9.449 15.805v205.701c0 8.491-5.994 15.804-14.576 17.782l-119.001 27.427a19.743 19.743 0 0 1-4.423.502h-70z\"],\n        \"hand-spock\": [512, 512, [], \"f259\", \"M21.096 381.79l129.092 121.513a32 32 0 0 0 21.932 8.698h237.6c14.17 0 26.653-9.319 30.68-22.904l31.815-107.313A115.955 115.955 0 0 0 477 348.811v-36.839c0-4.051.476-8.104 1.414-12.045l31.73-133.41c10.099-42.412-22.316-82.738-65.544-82.525-4.144-24.856-22.543-47.165-49.85-53.992-35.803-8.952-72.227 12.655-81.25 48.75L296.599 184 274.924 52.01c-8.286-36.07-44.303-58.572-80.304-50.296-29.616 6.804-50.138 32.389-51.882 61.295-42.637.831-73.455 40.563-64.071 81.844l31.04 136.508c-27.194-22.515-67.284-19.992-91.482 5.722-25.376 26.961-24.098 69.325 2.871 94.707zm32.068-61.811l.002-.001c7.219-7.672 19.241-7.98 26.856-.813l53.012 49.894C143.225 378.649 160 371.4 160 357.406v-69.479c0-1.193-.134-2.383-.397-3.546l-34.13-150.172c-5.596-24.617 31.502-32.86 37.054-8.421l30.399 133.757a16 16 0 0 0 15.603 12.454h8.604c10.276 0 17.894-9.567 15.594-19.583l-41.62-181.153c-5.623-24.469 31.39-33.076 37.035-8.508l45.22 196.828A16 16 0 0 0 288.956 272h13.217a16 16 0 0 0 15.522-12.119l42.372-169.49c6.104-24.422 42.962-15.159 36.865 9.217L358.805 252.12c-2.521 10.088 5.115 19.88 15.522 19.88h9.694a16 16 0 0 0 15.565-12.295L426.509 146.6c5.821-24.448 42.797-15.687 36.966 8.802L431.72 288.81a100.094 100.094 0 0 0-2.72 23.162v36.839c0 6.548-.943 13.051-2.805 19.328L397.775 464h-219.31L53.978 346.836c-7.629-7.18-7.994-19.229-.814-26.857z\"],\n        \"handshake\": [640, 512, [], \"f2b5\", \"M616 96h-48c-7.107 0-13.49 3.091-17.884 8H526.59l-31.13-36.3-.16-.18A103.974 103.974 0 0 0 417.03 32h-46.55c-17.75 0-34.9 4.94-49.69 14.01C304.33 36.93 285.67 32 266.62 32h-32.11c-28.903 0-57.599 11.219-79.2 32.8L116.12 104H89.884C85.49 99.091 79.107 96 72 96H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h48c10.449 0 19.334-6.68 22.629-16h18.801l75.35 67.57c25.542 26.45 59.925 44.43 96.58 44.43 16.39 0 32.28-3.85 46.1-10.93 24.936.496 51.101-10.368 69.07-31.41 19.684-5.579 37.503-17.426 50.72-34.6 20.989-4.401 40.728-16.492 53.42-35.06h40.701c3.295 9.32 12.18 16 22.629 16h48c13.255 0 24-10.745 24-24V120c0-13.255-10.745-24-24-24zM48 352c-8.837 0-16-7.163-16-16s7.163-16 16-16 16 7.163 16 16-7.163 16-16 16zm412.52-5.76c-15.35 14.295-36.884 11.328-39.95 8 1.414 13.382-18.257 41.043-49.08 38.88-5.541 18.523-28.218 33.826-51.49 25.75-8.89 8.89-22.46 13.13-34.64 13.13-24.95 0-47.77-14.54-63.14-30.91l-81.3-72.91a31.976 31.976 0 0 0-21.36-8.18H96V152h26.75c8.48 0 16.62-3.37 22.62-9.37l43.88-43.88A64.004 64.004 0 0 1 234.51 80h32.11c5.8 0 11.51.79 17 2.3l-43.27 50.49c-23.56 27.48-23.84 67.62-.66 95.44 32.388 38.866 91.378 39.228 124.48 1.98l25.98-30.08L462.59 296c13.44 14.6 10.95 38.13-2.07 50.24zM544 320h-24.458c.104-20.261-6.799-39.33-19.762-54.4L421.7 162.28c4.51-9.51 2.34-21.23-6.01-28.45-10.075-8.691-25.23-7.499-33.86 2.48l-53.63 62.12c-13.828 15.41-38.223 15.145-51.64-.93a25.857 25.857 0 0 1 .23-33.47l57.92-67.58A47.09 47.09 0 0 1 370.48 80h46.55c16.11 0 31.44 6.94 42.07 19.04L504.52 152H544v168zm48 32c-8.837 0-16-7.163-16-16s7.163-16 16-16 16 7.163 16 16-7.163 16-16 16z\"],\n        \"hdd\": [576, 512, [], \"f0a0\", \"M567.403 235.642L462.323 84.589A48 48 0 0 0 422.919 64H153.081a48 48 0 0 0-39.404 20.589L8.597 235.642A48.001 48.001 0 0 0 0 263.054V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V263.054c0-9.801-3-19.366-8.597-27.412zM153.081 112h269.838l77.913 112H75.168l77.913-112zM528 400H48V272h480v128zm-32-64c0 17.673-14.327 32-32 32s-32-14.327-32-32 14.327-32 32-32 32 14.327 32 32zm-96 0c0 17.673-14.327 32-32 32s-32-14.327-32-32 14.327-32 32-32 32 14.327 32 32z\"],\n        \"heart\": [576, 512, [], \"f004\", \"M257.3 475.4L92.5 313.6C85.4 307 24 248.1 24 174.8 24 84.1 80.8 24 176 24c41.4 0 80.6 22.8 112 49.8 31.3-27 70.6-49.8 112-49.8 91.7 0 152 56.5 152 150.8 0 52-31.8 103.5-68.1 138.7l-.4.4-164.8 161.5a43.7 43.7 0 0 1-61.4 0zM125.9 279.1L288 438.3l161.8-158.7c27.3-27 54.2-66.3 54.2-104.8C504 107.9 465.8 72 400 72c-47.2 0-92.8 49.3-112 68.4-17-17-64-68.4-112-68.4-65.9 0-104 35.9-104 102.8 0 37.3 26.7 78.9 53.9 104.3z\"],\n        \"hospital\": [448, 512, [], \"f0f8\", \"M128 244v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12zm140 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm-76 84v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm76 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm180 124v36H0v-36c0-6.627 5.373-12 12-12h19.5V85.035C31.5 73.418 42.245 64 55.5 64H144V24c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v40h88.5c13.255 0 24 9.418 24 21.035V464H436c6.627 0 12 5.373 12 12zM79.5 463H192v-67c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v67h112.5V112H304v24c0 13.255-10.745 24-24 24H168c-13.255 0-24-10.745-24-24v-24H79.5v351zM266 64h-26V38a6 6 0 0 0-6-6h-20a6 6 0 0 0-6 6v26h-26a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h26v26a6 6 0 0 0 6 6h20a6 6 0 0 0 6-6V96h26a6 6 0 0 0 6-6V70a6 6 0 0 0-6-6z\"],\n        \"hourglass\": [384, 512, [], \"f254\", \"M368 48h4c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12H12C5.373 0 0 5.373 0 12v24c0 6.627 5.373 12 12 12h4c0 80.564 32.188 165.807 97.18 208C47.899 298.381 16 383.9 16 464h-4c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h360c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12h-4c0-80.564-32.188-165.807-97.18-208C336.102 213.619 368 128.1 368 48zM64 48h256c0 101.62-57.307 184-128 184S64 149.621 64 48zm256 416H64c0-101.62 57.308-184 128-184s128 82.38 128 184z\"],\n        \"id-badge\": [384, 512, [], \"f2c1\", \"M0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V48c0-26.51-21.49-48-48-48H48C21.49 0 0 21.49 0 48zm336 32v378a6 6 0 0 1-6 6H54a6 6 0 0 1-6-6V80h288zm-144 80c38.66 0 70 31.34 70 70s-31.34 70-70 70-70-31.34-70-70 31.34-70 70-70zm80.187 146.047l-31.2-7.8c-32.779 23.577-72.51 18.316-97.974 0l-31.2 7.8C93.116 310.721 80 327.52 80 346.793V363c0 11.598 9.402 21 21 21h182c11.598 0 21-9.402 21-21v-16.207c0-19.273-13.116-36.072-31.813-40.746z\"],\n        \"id-card\": [512, 512, [], \"f2c2\", \"M404 256H300c-6.627 0-12-5.373-12-12v-16c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v16c0 6.627-5.373 12-12 12zm12 60v-16c0-6.627-5.373-12-12-12H300c-6.627 0-12 5.373-12 12v16c0 6.627 5.373 12 12 12h104c6.627 0 12-5.373 12-12zm96-204v288c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48zm-48 282V144H48v250a6 6 0 0 0 6 6h404a6 6 0 0 0 6-6zM176 192c27.614 0 50 22.386 50 50s-22.386 50-50 50-50-22.386-50-50 22.386-50 50-50zm57.276 104.319l-22.285-5.571c-23.413 16.841-51.793 13.083-69.981 0l-22.285 5.571C105.369 299.658 96 311.657 96 325.423V337c0 8.284 6.716 15 15 15h130c8.284 0 15-6.716 15-15v-11.577c0-13.766-9.369-25.765-22.724-29.104z\"],\n        \"image\": [512, 512, [], \"f03e\", \"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-6 336H54a6 6 0 0 1-6-6V118a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v276a6 6 0 0 1-6 6zM128 152c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zM96 352h320v-80l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L192 304l-39.515-39.515c-4.686-4.686-12.284-4.686-16.971 0L96 304v48z\"],\n        \"images\": [576, 512, [], \"f302\", \"M480 416v16c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v48H54a6 6 0 0 0-6 6v244a6 6 0 0 0 6 6h372a6 6 0 0 0 6-6v-10h48zm42-336H150a6 6 0 0 0-6 6v244a6 6 0 0 0 6 6h372a6 6 0 0 0 6-6V86a6 6 0 0 0-6-6zm6-48c26.51 0 48 21.49 48 48v256c0 26.51-21.49 48-48 48H144c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h384zM264 144c0 22.091-17.909 40-40 40s-40-17.909-40-40 17.909-40 40-40 40 17.909 40 40zm-72 96l39.515-39.515c4.686-4.686 12.284-4.686 16.971 0L288 240l103.515-103.515c4.686-4.686 12.284-4.686 16.971 0L480 208v80H192v-48z\"],\n        \"keyboard\": [576, 512, [], \"f11c\", \"M528 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm8 336c0 4.411-3.589 8-8 8H48c-4.411 0-8-3.589-8-8V112c0-4.411 3.589-8 8-8h480c4.411 0 8 3.589 8 8v288zM170 270v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm-336 82v-28c0-6.627-5.373-12-12-12H82c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm384 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zM122 188v-28c0-6.627-5.373-12-12-12H82c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm96 0v-28c0-6.627-5.373-12-12-12h-28c-6.627 0-12 5.373-12 12v28c0 6.627 5.373 12 12 12h28c6.627 0 12-5.373 12-12zm-98 158v-16c0-6.627-5.373-12-12-12H180c-6.627 0-12 5.373-12 12v16c0 6.627 5.373 12 12 12h216c6.627 0 12-5.373 12-12z\"],\n        \"lemon\": [512, 512, [], \"f094\", \"M484.112 27.889C455.989-.233 416.108-8.057 387.059 8.865 347.604 31.848 223.504-41.111 91.196 91.197-41.277 223.672 31.923 347.472 8.866 387.058c-16.922 29.051-9.1 68.932 19.022 97.054 28.135 28.135 68.011 35.938 97.057 19.021 39.423-22.97 163.557 49.969 295.858-82.329 132.474-132.477 59.273-256.277 82.331-295.861 16.922-29.05 9.1-68.931-19.022-97.054zm-22.405 72.894c-38.8 66.609 45.6 165.635-74.845 286.08-120.44 120.443-219.475 36.048-286.076 74.843-22.679 13.207-64.035-27.241-50.493-50.488 38.8-66.609-45.6-165.635 74.845-286.08C245.573 4.702 344.616 89.086 411.219 50.292c22.73-13.24 64.005 27.288 50.488 50.491zm-169.861 8.736c1.37 10.96-6.404 20.957-17.365 22.327-54.846 6.855-135.779 87.787-142.635 142.635-1.373 10.989-11.399 18.734-22.326 17.365-10.961-1.37-18.735-11.366-17.365-22.326 9.162-73.286 104.167-168.215 177.365-177.365 10.953-1.368 20.956 6.403 22.326 17.364z\"],\n        \"life-ring\": [512, 512, [], \"f1cd\", \"M256 504c136.967 0 248-111.033 248-248S392.967 8 256 8 8 119.033 8 256s111.033 248 248 248zm-103.398-76.72l53.411-53.411c31.806 13.506 68.128 13.522 99.974 0l53.411 53.411c-63.217 38.319-143.579 38.319-206.796 0zM336 256c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zm91.28 103.398l-53.411-53.411c13.505-31.806 13.522-68.128 0-99.974l53.411-53.411c38.319 63.217 38.319 143.579 0 206.796zM359.397 84.72l-53.411 53.411c-31.806-13.505-68.128-13.522-99.973 0L152.602 84.72c63.217-38.319 143.579-38.319 206.795 0zM84.72 152.602l53.411 53.411c-13.506 31.806-13.522 68.128 0 99.974L84.72 359.398c-38.319-63.217-38.319-143.579 0-206.796z\"],\n        \"lightbulb\": [384, 512, [], \"f0eb\", \"M272 428v28c0 10.449-6.68 19.334-16 22.629V488c0 13.255-10.745 24-24 24h-80c-13.255 0-24-10.745-24-24v-9.371c-9.32-3.295-16-12.18-16-22.629v-28c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12zM128 176c0-35.29 28.71-64 64-64 8.837 0 16-7.164 16-16s-7.163-16-16-16c-52.935 0-96 43.065-96 96 0 8.836 7.164 16 16 16s16-7.164 16-16zm64-128c70.734 0 128 57.254 128 128 0 77.602-37.383 60.477-80.98 160h-94.04C101.318 236.33 64 253.869 64 176c0-70.735 57.254-128 128-128m0-48C94.805 0 16 78.803 16 176c0 101.731 51.697 91.541 90.516 192.674 3.55 9.249 12.47 15.326 22.376 15.326h126.215c9.906 0 18.826-6.078 22.376-15.326C316.303 267.541 368 277.731 368 176 368 78.803 289.195 0 192 0z\"],\n        \"list-alt\": [512, 512, [], \"f022\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm-6 400H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h404a6 6 0 0 1 6 6v340a6 6 0 0 1-6 6zm-42-92v24c0 6.627-5.373 12-12 12H204c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h200c6.627 0 12 5.373 12 12zm0-96v24c0 6.627-5.373 12-12 12H204c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h200c6.627 0 12 5.373 12 12zm0-96v24c0 6.627-5.373 12-12 12H204c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h200c6.627 0 12 5.373 12 12zm-252 12c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36zm0 96c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36zm0 96c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36z\"],\n        \"map\": [576, 512, [], \"f279\", \"M508.505 36.17L381.517 92.576 207.179 34.463a47.992 47.992 0 0 0-34.674 1.674l-144 64A48 48 0 0 0 0 144v287.967c0 34.938 35.991 57.864 67.495 43.863l126.988-56.406 174.339 58.113a47.992 47.992 0 0 0 34.674-1.674l144-64A48 48 0 0 0 576 368V80.033c0-34.938-35.991-57.864-67.495-43.863zM360 424l-144-48V88l144 48v288zm-312 8V144l120-53.333v288L48 432zm480-64l-120 53.333v-288L528 80v288z\"],\n        \"meh\": [512, 512, [], \"f11a\", \"M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm64 136c-9.535 0-18.512 2.386-26.37 6.589h.017c12.735 0 23.059 10.324 23.059 23.059 0 12.735-10.324 23.059-23.059 23.059s-23.059-10.324-23.059-23.059v-.017C266.386 181.488 264 190.465 264 200c0 30.928 25.072 56 56 56s56-25.072 56-56-25.072-56-56-56zm-128 0c-9.535 0-18.512 2.386-26.37 6.589h.017c12.735 0 23.059 10.324 23.059 23.059 0 12.735-10.324 23.059-23.059 23.059-12.735 0-23.059-10.324-23.059-23.059v-.017C138.386 181.488 136 190.465 136 200c0 30.928 25.072 56 56 56s56-25.072 56-56-25.072-56-56-56zm136 184H184c-31.776 0-31.749 48 0 48h144c31.776 0 31.749-48 0-48z\"],\n        \"minus-square\": [448, 512, [], \"f146\", \"M108 284c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h232c6.6 0 12 5.4 12 12v32c0 6.6-5.4 12-12 12H108zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"money-bill-alt\": [640, 512, [], \"f3d1\", \"M320 144c-53.021 0-96 50.143-96 112 0 61.847 42.977 112 96 112 53 0 96-50.13 96-112 0-61.857-42.979-112-96-112zm48 164.428c0 7.477-3.917 11.572-11.572 11.572h-67.293c-7.656 0-11.573-4.095-11.573-11.572v-8.901c0-7.477 3.917-11.572 11.573-11.572h15.131v-39.878c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.939c4.449-4.095 8.366-5.697 14.42-5.697h12.105c7.656 0 11.75 3.916 11.75 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.902zM616 64H24C10.745 64 0 74.745 0 88v335c0 13.255 10.745 24 24 24h592c13.255 0 24-10.745 24-24V88c0-13.255-10.745-24-24-24zM512 400H128c0-44.183-35.817-80-80-80V192c44.183 0 80-35.817 80-80h384c0 44.183 35.817 80 80 80v128c-44.183 0-80 35.817-80 80z\"],\n        \"moon\": [512, 512, [], \"f186\", \"M279.135 512c78.756 0 150.982-35.804 198.844-94.775 28.27-34.831-2.558-85.722-46.249-77.401-82.348 15.683-158.272-47.268-158.272-130.792 0-48.424 26.06-92.292 67.434-115.836 38.745-22.05 28.999-80.788-15.022-88.919A257.936 257.936 0 0 0 279.135 0c-141.36 0-256 114.575-256 256 0 141.36 114.576 256 256 256zm0-464c12.985 0 25.689 1.201 38.016 3.478-54.76 31.163-91.693 90.042-91.693 157.554 0 113.848 103.641 199.2 215.252 177.944C402.574 433.964 344.366 464 279.135 464c-114.875 0-208-93.125-208-208s93.125-208 208-208z\"],\n        \"newspaper\": [576, 512, [], \"f1ea\", \"M552 64H112c-20.858 0-38.643 13.377-45.248 32H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h496c13.255 0 24-10.745 24-24V88c0-13.255-10.745-24-24-24zM48 392V144h16v248c0 4.411-3.589 8-8 8s-8-3.589-8-8zm480 8H111.422c.374-2.614.578-5.283.578-8V112h416v288zM172 280h136c6.627 0 12-5.373 12-12v-96c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v96c0 6.627 5.373 12 12 12zm28-80h80v40h-80v-40zm-40 140v-24c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H172c-6.627 0-12-5.373-12-12zm192 0v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12zm0-144v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12zm0 72v-24c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12H364c-6.627 0-12-5.373-12-12z\"],\n        \"object-group\": [512, 512, [], \"f247\", \"M500 128c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v256H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V128h12zm-52-64h32v32h-32V64zM32 64h32v32H32V64zm32 384H32v-32h32v32zm416 0h-32v-32h32v32zm-40-64h-12c-6.627 0-12 5.373-12 12v12H96v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h320v12c0 6.627 5.373 12 12 12h12v256zm-36-192h-84v-52c0-6.628-5.373-12-12-12H108c-6.627 0-12 5.372-12 12v168c0 6.628 5.373 12 12 12h84v52c0 6.628 5.373 12 12 12h200c6.627 0 12-5.372 12-12V204c0-6.628-5.373-12-12-12zm-268-24h144v112H136V168zm240 176H232v-24h76c6.627 0 12-5.372 12-12v-76h56v112z\"],\n        \"object-ungroup\": [576, 512, [], \"f248\", \"M564 224c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12h-88v-24h12c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v12H96V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v72c0 6.627 5.373 12 12 12h12v160H12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h88v24h-12c-6.627 0-12 5.373-12 12v72c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-12h224v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12V224h12zM352 64h32v32h-32V64zm0 256h32v32h-32v-32zM64 352H32v-32h32v32zm0-256H32V64h32v32zm32 216v-12c0-6.627-5.373-12-12-12H72V128h12c6.627 0 12-5.373 12-12v-12h224v12c0 6.627 5.373 12 12 12h12v160h-12c-6.627 0-12 5.373-12 12v12H96zm128 136h-32v-32h32v32zm280-64h-12c-6.627 0-12 5.373-12 12v12H256v-12c0-6.627-5.373-12-12-12h-12v-24h88v12c0 6.627 5.373 12 12 12h72c6.627 0 12-5.373 12-12v-72c0-6.627-5.373-12-12-12h-12v-88h88v12c0 6.627 5.373 12 12 12h12v160zm40 64h-32v-32h32v32zm0-256h-32v-32h32v32z\"],\n        \"paper-plane\": [512, 512, [], \"f1d8\", \"M440 6.5L24 246.4c-34.4 19.9-31.1 70.8 5.7 85.9L144 379.6V464c0 46.4 59.2 65.5 86.6 28.6l43.8-59.1 111.9 46.2c5.9 2.4 12.1 3.6 18.3 3.6 8.2 0 16.3-2.1 23.6-6.2 12.8-7.2 21.6-20 23.9-34.5l59.4-387.2c6.1-40.1-36.9-68.8-71.5-48.9zM192 464v-64.6l36.6 15.1L192 464zm212.6-28.7l-153.8-63.5L391 169.5c10.7-15.5-9.5-33.5-23.7-21.2L155.8 332.6 48 288 464 48l-59.4 387.3z\"],\n        \"pause-circle\": [512, 512, [], \"f28b\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm96-280v160c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16zm-112 0v160c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16z\"],\n        \"play-circle\": [512, 512, [], \"f144\", \"M371.7 238l-176-107c-15.8-8.8-35.7 2.5-35.7 21v208c0 18.4 19.8 29.8 35.7 21l176-101c16.4-9.1 16.4-32.8 0-42zM504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256z\"],\n        \"plus-square\": [448, 512, [], \"f0fe\", \"M352 240v32c0 6.6-5.4 12-12 12h-88v88c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-88h-88c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h88v-88c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v88h88c6.6 0 12 5.4 12 12zm96-160v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"],\n        \"question-circle\": [512, 512, [], \"f059\", \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z\"],\n        \"registered\": [512, 512, [], \"f25d\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 448c-110.532 0-200-89.451-200-200 0-110.531 89.451-200 200-200 110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200zm110.442-81.791c-53.046-96.284-50.25-91.468-53.271-96.085 24.267-13.879 39.482-41.563 39.482-73.176 0-52.503-30.247-85.252-101.498-85.252h-78.667c-6.617 0-12 5.383-12 12V380c0 6.617 5.383 12 12 12h38.568c6.617 0 12-5.383 12-12v-83.663h31.958l47.515 89.303a11.98 11.98 0 0 0 10.593 6.36h42.81c9.14 0 14.914-9.799 10.51-17.791zM256.933 239.906h-33.875v-64.14h27.377c32.417 0 38.929 12.133 38.929 31.709-.001 20.913-11.518 32.431-32.431 32.431z\"],\n        \"save\": [448, 512, [], \"f0c7\", \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 0 1 1.757 4.243V426a6 6 0 0 1-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z\"],\n        \"share-square\": [576, 512, [], \"f14d\", \"M561.938 158.06L417.94 14.092C387.926-15.922 336 5.097 336 48.032v57.198c-42.45 1.88-84.03 6.55-120.76 17.99-35.17 10.95-63.07 27.58-82.91 49.42C108.22 199.2 96 232.6 96 271.94c0 61.697 33.178 112.455 84.87 144.76 37.546 23.508 85.248-12.651 71.02-55.74-15.515-47.119-17.156-70.923 84.11-78.76V336c0 42.993 51.968 63.913 81.94 33.94l143.998-144c18.75-18.74 18.75-49.14 0-67.88zM384 336V232.16C255.309 234.082 166.492 255.35 206.31 376 176.79 357.55 144 324.08 144 271.94c0-109.334 129.14-118.947 240-119.85V48l144 144-144 144zm24.74 84.493a82.658 82.658 0 0 0 20.974-9.303c7.976-4.952 18.286.826 18.286 10.214V464c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h132c6.627 0 12 5.373 12 12v4.486c0 4.917-2.987 9.369-7.569 11.152-13.702 5.331-26.396 11.537-38.05 18.585a12.138 12.138 0 0 1-6.28 1.777H54a6 6 0 0 0-6 6v340a6 6 0 0 0 6 6h340a6 6 0 0 0 6-6v-25.966c0-5.37 3.579-10.059 8.74-11.541z\"],\n        \"smile\": [512, 512, [], \"f118\", \"M256 56c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m0-48C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm64 136c-9.535 0-18.512 2.386-26.37 6.589h.017c12.735 0 23.059 10.324 23.059 23.059 0 12.735-10.324 23.059-23.059 23.059s-23.059-10.324-23.059-23.059v-.017C266.386 181.488 264 190.465 264 200c0 30.928 25.072 56 56 56s56-25.072 56-56-25.072-56-56-56zm-128 0c-9.535 0-18.512 2.386-26.37 6.589h.017c12.735 0 23.059 10.324 23.059 23.059 0 12.735-10.324 23.059-23.059 23.059-12.735 0-23.059-10.324-23.059-23.059v-.017C138.386 181.488 136 190.465 136 200c0 30.928 25.072 56 56 56s56-25.072 56-56-25.072-56-56-56zm195.372 182.219c18.819-25.592-19.856-54.017-38.67-28.438-50.135 68.177-135.229 68.18-185.367 0-18.828-25.601-57.478 2.861-38.67 28.438 69.298 94.231 193.323 94.351 262.707 0z\"],\n        \"snowflake\": [448, 512, [], \"f2dc\", \"M438.237 355.927l-66.574-38.54 59.448-10.327c5.846-1.375 10.609-5.183 13.458-10.13 2.48-4.307 3.506-9.478 2.524-14.651-2.11-11.115-12.686-18.039-23.621-15.467l-85.423 31.115L255.914 256l82.136-41.926 85.423 31.115c10.936 2.572 21.512-4.352 23.621-15.467 2.111-11.115-5.046-22.209-15.981-24.781l-59.448-10.327 66.573-38.54c9.54-5.523 12.615-18.092 6.867-28.074-5.748-9.982-18.14-13.596-27.68-8.074l-66.574 38.54 20.805-56.787c3.246-10.782-2.758-22.542-13.413-26.268-10.654-3.725-21.922 1.997-25.168 12.779l-15.838 89.735-72.423 41.926V136l69.585-58.621c7.689-8.21 6.997-20.856-1.548-28.245-8.545-7.391-21.705-6.723-29.394 1.486l-38.644 46.46V20c0-11.046-9.318-20-20.813-20s-20.813 8.954-20.813 20v77.08l-38.644-46.46c-7.689-8.21-20.849-8.876-29.394-1.486-8.544 7.389-9.236 20.035-1.547 28.245L203.187 136v83.853l-72.423-41.926-15.838-89.736c-3.247-10.782-14.515-16.504-25.169-12.779-10.656 3.725-16.659 15.486-13.413 26.268l20.805 56.787-66.573-38.54c-9.54-5.523-21.933-1.908-27.68 8.074s-2.673 22.551 6.867 28.074l66.574 38.54-59.449 10.328C5.953 207.515-1.202 218.609.907 229.724c2.11 11.114 12.686 18.038 23.622 15.466l85.422-31.115L192.086 256l-82.136 41.926-85.423-31.115c-10.936-2.572-21.511 4.352-23.622 15.466-2.109 11.113 5.046 22.209 15.981 24.781l59.449 10.328-66.574 38.54C.223 361.449-2.852 374.018 2.896 384s18.14 13.597 27.68 8.074l66.574-38.54-20.805 56.786c-1.735 5.764-.828 11.805 2.02 16.751 2.48 4.307 6.433 7.784 11.392 9.517 10.655 3.725 21.923-1.997 25.169-12.779l15.838-89.736 72.423-41.926V376l-69.585 58.621c-7.69 8.21-6.997 20.855 1.547 28.245 8.544 7.388 21.705 6.723 29.394-1.487l38.644-46.46V492c0 11.046 9.318 20 20.813 20s20.813-8.954 20.813-20v-77.081l38.644 46.46c4.111 4.389 9.782 6.621 15.478 6.621 4.96 0 9.939-1.694 13.916-5.134 8.545-7.39 9.237-20.035 1.548-28.245L244.813 376v-83.853l72.423 41.926 15.838 89.736c3.246 10.782 14.514 16.504 25.168 12.779 10.653-3.726 16.659-15.487 13.412-26.268l-20.805-56.787 66.574 38.54c9.54 5.523 21.933 1.908 27.68-8.074 5.749-9.981 2.675-22.55-6.866-28.072z\"],\n        \"square\": [448, 512, [], \"f0c8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h340c3.3 0 6 2.7 6 6v340c0 3.3-2.7 6-6 6z\"],\n        \"star\": [576, 512, [], \"f005\", \"M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\"],\n        \"star-half\": [576, 512, [], \"f089\", \"M288 385.3l-124.3 65.4 23.7-138.4-100.6-98 139-20.2 62.2-126V0c-11.4 0-22.8 5.9-28.7 17.8L194 150.2 47.9 171.4c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.1 23 46 46.4 33.7L288 439.6v-54.3z\"],\n        \"sticky-note\": [448, 512, [], \"f249\", \"M448 348.106V80c0-26.51-21.49-48-48-48H48C21.49 32 0 53.49 0 80v351.988c0 26.51 21.49 48 48 48h268.118a48 48 0 0 0 33.941-14.059l83.882-83.882A48 48 0 0 0 448 348.106zm-128 80v-76.118h76.118L320 428.106zM400 80v223.988H296c-13.255 0-24 10.745-24 24v104H48V80h352z\"],\n        \"stop-circle\": [512, 512, [], \"f28d\", \"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm296-80v160c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16z\"],\n        \"sun\": [512, 512, [], \"f185\", \"M220.116 487.936l-20.213-49.425a3.992 3.992 0 0 0-5.808-1.886l-45.404 28.104c-29.466 18.24-66.295-8.519-58.054-42.179l12.699-51.865a3.993 3.993 0 0 0-3.59-4.941l-53.251-3.951c-34.554-2.562-48.632-45.855-22.174-68.247L65.08 259.05a3.992 3.992 0 0 0 0-6.106l-40.76-34.497c-26.45-22.384-12.39-65.682 22.174-68.246l53.251-3.951a3.993 3.993 0 0 0 3.59-4.941L90.637 89.443c-8.239-33.656 28.581-60.42 58.054-42.179l45.403 28.104a3.993 3.993 0 0 0 5.808-1.887l20.213-49.425c13.116-32.071 58.638-32.081 71.758 0l20.212 49.424a3.994 3.994 0 0 0 5.809 1.887l45.403-28.104c29.464-18.236 66.297 8.513 58.054 42.179l-12.699 51.865a3.995 3.995 0 0 0 3.59 4.941l53.251 3.951c34.553 2.563 48.633 45.854 22.175 68.246l-40.76 34.497a3.993 3.993 0 0 0 0 6.107l40.76 34.496c26.511 22.441 12.322 65.689-22.175 68.247l-53.251 3.951a3.993 3.993 0 0 0-3.589 4.942l12.698 51.864c8.241 33.658-28.583 60.421-58.054 42.18l-45.403-28.104a3.994 3.994 0 0 0-5.809 1.887l-20.212 49.424c-13.159 32.178-58.675 31.993-71.757 0zm16.814-64.568l19.064 46.616 19.064-46.615c10.308-25.2 40.778-35.066 63.892-20.759l42.822 26.507-11.976-48.919c-6.475-26.444 12.38-52.339 39.487-54.349l50.226-3.726-38.444-32.536c-20.782-17.591-20.747-49.621.001-67.18l38.442-32.536-50.225-3.727c-27.151-2.015-45.95-27.948-39.488-54.349l11.978-48.919-42.823 26.507c-23.151 14.327-53.603 4.4-63.892-20.76l-19.064-46.615-19.064 46.617c-10.305 25.198-40.778 35.066-63.891 20.76l-42.823-26.508 11.977 48.918c6.474 26.446-12.381 52.338-39.488 54.35l-50.224 3.726 38.443 32.537c20.782 17.588 20.747 49.619 0 67.178L52.48 322.123l50.226 3.726c27.151 2.014 45.95 27.947 39.487 54.349l-11.977 48.919 42.823-26.507c23.188-14.355 53.622-4.352 63.891 20.758zM256 384c-70.58 0-128-57.421-128-128 0-70.58 57.42-128 128-128 70.579 0 128 57.42 128 128 0 70.579-57.421 128-128 128zm0-208c-44.112 0-80 35.888-80 80s35.888 80 80 80 80-35.888 80-80-35.888-80-80-80z\"],\n        \"thumbs-down\": [512, 512, [], \"f165\", \"M466.27 225.31c4.674-22.647.864-44.538-8.99-62.99 2.958-23.868-4.021-48.565-17.34-66.99C438.986 39.423 404.117 0 327 0c-7 0-15 .01-22.22.01C201.195.01 168.997 40 128 40h-10.845c-5.64-4.975-13.042-8-21.155-8H32C14.327 32 0 46.327 0 64v240c0 17.673 14.327 32 32 32h64c11.842 0 22.175-6.438 27.708-16h7.052c19.146 16.953 46.013 60.653 68.76 83.4 13.667 13.667 10.153 108.6 71.76 108.6 57.58 0 95.27-31.936 95.27-104.73 0-18.41-3.93-33.73-8.85-46.54h36.48c48.602 0 85.82-41.565 85.82-85.58 0-19.15-4.96-34.99-13.73-49.84zM64 296c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zm330.18 16.73H290.19c0 37.82 28.36 55.37 28.36 94.54 0 23.75 0 56.73-47.27 56.73-18.91-18.91-9.46-66.18-37.82-94.54C206.9 342.89 167.28 272 138.92 272H128V85.83c53.611 0 100.001-37.82 171.64-37.82h37.82c35.512 0 60.82 17.12 53.12 65.9 15.2 8.16 26.5 36.44 13.94 57.57 21.581 20.384 18.699 51.065 5.21 65.62 9.45 0 22.36 18.91 22.27 37.81-.09 18.91-16.71 37.82-37.82 37.82z\"],\n        \"thumbs-up\": [512, 512, [], \"f164\", \"M466.27 286.69C475.04 271.84 480 256 480 236.85c0-44.015-37.218-85.58-85.82-85.58H357.7c4.92-12.81 8.85-28.13 8.85-46.54C366.55 31.936 328.86 0 271.28 0c-61.607 0-58.093 94.933-71.76 108.6-22.747 22.747-49.615 66.447-68.76 83.4H32c-17.673 0-32 14.327-32 32v240c0 17.673 14.327 32 32 32h64c14.893 0 27.408-10.174 30.978-23.95 44.509 1.001 75.06 39.94 177.802 39.94 7.22 0 15.22.01 22.22.01 77.117 0 111.986-39.423 112.94-95.33 13.319-18.425 20.299-43.122 17.34-66.99 9.854-18.452 13.664-40.343 8.99-62.99zm-61.75 53.83c12.56 21.13 1.26 49.41-13.94 57.57 7.7 48.78-17.608 65.9-53.12 65.9h-37.82c-71.639 0-118.029-37.82-171.64-37.82V240h10.92c28.36 0 67.98-70.89 94.54-97.46 28.36-28.36 18.91-75.63 37.82-94.54 47.27 0 47.27 32.98 47.27 56.73 0 39.17-28.36 56.72-28.36 94.54h103.99c21.11 0 37.73 18.91 37.82 37.82.09 18.9-12.82 37.81-22.27 37.81 13.489 14.555 16.371 45.236-5.21 65.62zM88 432c0 13.255-10.745 24-24 24s-24-10.745-24-24 10.745-24 24-24 24 10.745 24 24z\"],\n        \"times-circle\": [512, 512, [], \"f057\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"],\n        \"trash-alt\": [448, 512, [], \"f2ed\", \"M192 188v216c0 6.627-5.373 12-12 12h-24c-6.627 0-12-5.373-12-12V188c0-6.627 5.373-12 12-12h24c6.627 0 12 5.373 12 12zm100-12h-24c-6.627 0-12 5.373-12 12v216c0 6.627 5.373 12 12 12h24c6.627 0 12-5.373 12-12V188c0-6.627-5.373-12-12-12zm132-96c13.255 0 24 10.745 24 24v12c0 6.627-5.373 12-12 12h-20v336c0 26.51-21.49 48-48 48H80c-26.51 0-48-21.49-48-48V128H12c-6.627 0-12-5.373-12-12v-12c0-13.255 10.745-24 24-24h74.411l34.018-56.696A48 48 0 0 1 173.589 0h100.823a48 48 0 0 1 41.16 23.304L349.589 80H424zm-269.611 0h139.223L276.16 50.913A6 6 0 0 0 271.015 48h-94.028a6 6 0 0 0-5.145 2.913L154.389 80zM368 128H80v330a6 6 0 0 0 6 6h276a6 6 0 0 0 6-6V128z\"],\n        \"user\": [512, 512, [], \"f007\", \"M423.309 291.025L402.221 285C431.798 243.89 436 202.294 436 180 436 80.649 355.484 0 256 0 156.649 0 76 80.516 76 180c0 22.299 4.198 63.884 33.779 105l-21.088 6.025C21.28 310.285 0 371.59 0 408.605v25.681C0 477.138 34.862 512 77.714 512h356.571C477.138 512 512 477.138 512 434.286v-25.681c0-36.247-20.725-98.161-88.691-117.58zM256 48c72.902 0 132 59.099 132 132s-59.098 132-132 132-132-59.099-132-132S183.098 48 256 48zm208 386.286c0 16.41-13.304 29.714-29.714 29.714H77.714C61.304 464 48 450.696 48 434.286v-25.681c0-33.167 21.987-62.316 53.878-71.427l46.103-13.172C162.683 335.058 200.427 360 256 360s93.317-24.942 108.019-35.994l46.103 13.172C442.013 346.29 464 375.438 464 408.605v25.681z\"],\n        \"user-circle\": [512, 512, [], \"f2bd\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 48c110.457 0 200 89.543 200 200 0 36.982-10.049 71.611-27.548 101.328-7.072-25.444-25.663-54.208-63.93-65.374C377.207 271.782 384 248.414 384 224c0-70.689-57.189-128-128-128-70.689 0-128 57.19-128 128 0 24.414 6.793 47.783 19.478 67.954-38.299 11.175-56.876 39.913-63.938 65.362C66.046 327.601 56 292.976 56 256c0-110.457 89.543-200 200-200zm80 168c0 44.183-35.817 80-80 80s-80-35.817-80-80 35.817-80 80-80 80 35.817 80 80zM128 409.669v-27.758c0-20.41 13.53-38.348 33.156-43.955l24.476-6.993C206.342 344.648 230.605 352 256 352s49.658-7.352 70.369-21.038l24.476 6.993C370.47 343.563 384 361.5 384 381.911v27.758C349.315 438.592 304.693 456 256 456s-93.315-17.408-128-46.331z\"],\n        \"window-close\": [512, 512, [], \"f410\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h404c3.3 0 6 2.7 6 6v340zM356.5 194.6L295.1 256l61.4 61.4c4.6 4.6 4.6 12.1 0 16.8l-22.3 22.3c-4.6 4.6-12.1 4.6-16.8 0L256 295.1l-61.4 61.4c-4.6 4.6-12.1 4.6-16.8 0l-22.3-22.3c-4.6-4.6-4.6-12.1 0-16.8l61.4-61.4-61.4-61.4c-4.6-4.6-4.6-12.1 0-16.8l22.3-22.3c4.6-4.6 12.1-4.6 16.8 0l61.4 61.4 61.4-61.4c4.6-4.6 12.1-4.6 16.8 0l22.3 22.3c4.7 4.6 4.7 12.1 0 16.8z\"],\n        \"window-maximize\": [512, 512, [], \"f2d0\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm0 394c0 3.3-2.7 6-6 6H54c-3.3 0-6-2.7-6-6V192h416v234z\"],\n        \"window-minimize\": [512, 512, [], \"f2d1\", \"M480 480H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h448c17.7 0 32 14.3 32 32s-14.3 32-32 32z\"],\n        \"window-restore\": [512, 512, [], \"f2d2\", \"M464 0H144c-26.5 0-48 21.5-48 48v48H48c-26.5 0-48 21.5-48 48v320c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h48c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-96 464H48V256h320v208zm96-96h-48V144c0-26.5-21.5-48-48-48H144V48h320v320z\"],\n        \"address-book\": [448, 512, [], \"f2b9\", \"M436 160c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20V48c0-26.51-21.49-48-48-48H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h320c26.51 0 48-21.49 48-48v-48h20c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20v-64h20c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20v-64h20zm-228-32c44.183 0 80 35.817 80 80s-35.817 80-80 80-80-35.817-80-80 35.817-80 80-80zm128 232c0 13.255-10.745 24-24 24H104c-13.255 0-24-10.745-24-24v-18.523c0-22.026 14.99-41.225 36.358-46.567l35.657-8.914c29.101 20.932 74.509 26.945 111.97 0l35.657 8.914C321.01 300.252 336 319.452 336 341.477V360z\"],\n        \"address-card\": [512, 512, [], \"f2bb\", \"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zm-288 80c38.66 0 70 31.34 70 70s-31.34 70-70 70-70-31.34-70-70 31.34-70 70-70zm112 203c0 11.598-9.402 21-21 21H85c-11.598 0-21-9.402-21-21v-16.207c0-19.272 13.116-36.072 31.813-40.746l31.2-7.8c25.464 18.316 65.195 23.577 97.974 0l31.2 7.8C274.884 294.721 288 311.52 288 330.793V347zm160-39c0 6.627-5.373 12-12 12H332c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v8zm0-64c0 6.627-5.373 12-12 12H332c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v8zm0-64c0 6.627-5.373 12-12 12H332c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v8z\"],\n        \"adjust\": [512, 512, [], \"f042\", \"M8 256c0 136.966 111.033 248 248 248s248-111.034 248-248S392.966 8 256 8 8 119.033 8 256zm248 184V72c101.705 0 184 82.311 184 184 0 101.705-82.311 184-184 184z\"],\n        \"align-center\": [448, 512, [], \"f037\", \"M352 44v40c0 8.837-7.163 16-16 16H112c-8.837 0-16-7.163-16-16V44c0-8.837 7.163-16 16-16h224c8.837 0 16 7.163 16 16zM16 228h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm320-200H112c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16z\"],\n        \"align-justify\": [448, 512, [], \"f039\", \"M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm16 144h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0-128h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n        \"align-left\": [448, 512, [], \"f036\", \"M288 44v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V44c0-8.837 7.163-16 16-16h256c8.837 0 16 7.163 16 16zM0 172v40c0 8.837 7.163 16 16 16h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16zm16 312h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm256-200H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16z\"],\n        \"align-right\": [448, 512, [], \"f038\", \"M160 84V44c0-8.837 7.163-16 16-16h256c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H176c-8.837 0-16-7.163-16-16zM16 228h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 256h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm160-128h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n        \"ambulance\": [640, 512, [], \"f0f9\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm144-248c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48zm176 248c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"],\n        \"american-sign-language-interpreting\": [640, 512, [], \"f2a3\", \"M290.547 189.039c-20.295-10.149-44.147-11.199-64.739-3.89 42.606 0 71.208 20.475 85.578 50.576 8.576 17.899-5.148 38.071-23.617 38.071 18.429 0 32.211 20.136 23.617 38.071-14.725 30.846-46.123 50.854-80.298 50.854-.557 0-94.471-8.615-94.471-8.615l-66.406 33.347c-9.384 4.693-19.815.379-23.895-7.781L1.86 290.747c-4.167-8.615-1.111-18.897 6.946-23.621l58.072-33.069L108 159.861c6.39-57.245 34.731-109.767 79.743-146.726 11.391-9.448 28.341-7.781 37.51 3.613 9.446 11.394 7.78 28.067-3.612 37.516-12.503 10.559-23.618 22.509-32.509 35.57 21.672-14.729 46.679-24.732 74.186-28.067 14.725-1.945 28.063 8.336 29.73 23.065 1.945 14.728-8.336 28.067-23.062 29.734-16.116 1.945-31.12 7.503-44.178 15.284 26.114-5.713 58.712-3.138 88.079 11.115 13.336 6.669 18.893 22.509 12.224 35.848-6.389 13.06-22.504 18.617-35.564 12.226zm-27.229 69.472c-6.112-12.505-18.338-20.286-32.231-20.286a35.46 35.46 0 0 0-35.565 35.57c0 21.428 17.808 35.57 35.565 35.57 13.893 0 26.119-7.781 32.231-20.286 4.446-9.449 13.614-15.006 23.339-15.284-9.725-.277-18.893-5.835-23.339-15.284zm374.821-37.237c4.168 8.615 1.111 18.897-6.946 23.621l-58.071 33.069L532 352.16c-6.39 57.245-34.731 109.767-79.743 146.726-10.932 9.112-27.799 8.144-37.51-3.613-9.446-11.394-7.78-28.067 3.613-37.516 12.503-10.559 23.617-22.509 32.508-35.57-21.672 14.729-46.679 24.732-74.186 28.067-10.021 2.506-27.552-5.643-29.73-23.065-1.945-14.728 8.336-28.067 23.062-29.734 16.116-1.946 31.12-7.503 44.178-15.284-26.114 5.713-58.712 3.138-88.079-11.115-13.336-6.669-18.893-22.509-12.224-35.848 6.389-13.061 22.505-18.619 35.565-12.227 20.295 10.149 44.147 11.199 64.739 3.89-42.606 0-71.208-20.475-85.578-50.576-8.576-17.899 5.148-38.071 23.617-38.071-18.429 0-32.211-20.136-23.617-38.071 14.033-29.396 44.039-50.887 81.966-50.854l92.803 8.615 66.406-33.347c9.408-4.704 19.828-.354 23.894 7.781l44.455 88.926zm-229.227-18.618c-13.893 0-26.119 7.781-32.231 20.286-4.446 9.449-13.614 15.006-23.339 15.284 9.725.278 18.893 5.836 23.339 15.284 6.112 12.505 18.338 20.286 32.231 20.286a35.46 35.46 0 0 0 35.565-35.57c0-21.429-17.808-35.57-35.565-35.57z\"],\n        \"anchor\": [576, 512, [], \"f13d\", \"M12.971 352h32.394C67.172 454.735 181.944 512 288 512c106.229 0 220.853-57.38 242.635-160h32.394c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0l-67.029 67.029c-7.56 7.56-2.206 20.485 8.485 20.485h35.146c-20.29 54.317-84.963 86.588-144.117 94.015V256h52c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-52v-5.47c37.281-13.178 63.995-48.725 64-90.518C384.005 43.772 341.605.738 289.37.01 235.723-.739 192 42.525 192 96c0 41.798 26.716 77.35 64 90.53V192h-52c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v190.015c-58.936-7.399-123.82-39.679-144.117-94.015h35.146c10.691 0 16.045-12.926 8.485-20.485l-67.029-67.029c-4.686-4.686-12.284-4.686-16.971 0L4.485 331.515C-3.074 339.074 2.28 352 12.971 352zM288 64c17.645 0 32 14.355 32 32s-14.355 32-32 32-32-14.355-32-32 14.355-32 32-32z\"],\n        \"angle-double-down\": [320, 512, [], \"f103\", \"M143 256.3L7 120.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0L313 86.3c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.4 9.5-24.6 9.5-34 .1zm34 192l136-136c9.4-9.4 9.4-24.6 0-33.9l-22.6-22.6c-9.4-9.4-24.6-9.4-33.9 0L160 352.1l-96.4-96.4c-9.4-9.4-24.6-9.4-33.9 0L7 278.3c-9.4 9.4-9.4 24.6 0 33.9l136 136c9.4 9.5 24.6 9.5 34 .1z\"],\n        \"angle-double-left\": [448, 512, [], \"f100\", \"M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z\"],\n        \"angle-double-right\": [448, 512, [], \"f101\", \"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z\"],\n        \"angle-double-up\": [320, 512, [], \"f102\", \"M177 255.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 351.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 425.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1zm-34-192L7 199.7c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l96.4-96.4 96.4 96.4c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9l-136-136c-9.2-9.4-24.4-9.4-33.8 0z\"],\n        \"angle-down\": [320, 512, [], \"f107\", \"M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z\"],\n        \"angle-left\": [256, 512, [], \"f104\", \"M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z\"],\n        \"angle-right\": [256, 512, [], \"f105\", \"M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z\"],\n        \"angle-up\": [320, 512, [], \"f106\", \"M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z\"],\n        \"archive\": [512, 512, [], \"f187\", \"M488 128H24c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24h464c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24zm-8 328V184c0-13.255-10.745-24-24-24H56c-13.255 0-24 10.745-24 24v272c0 13.255 10.745 24 24 24h400c13.255 0 24-10.745 24-24zM308 256H204c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12z\"],\n        \"arrow-alt-circle-down\": [512, 512, [], \"f358\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM212 140v116h-70.9c-10.7 0-16.1 13-8.5 20.5l114.9 114.3c4.7 4.7 12.2 4.7 16.9 0l114.9-114.3c7.6-7.6 2.2-20.5-8.5-20.5H300V140c0-6.6-5.4-12-12-12h-64c-6.6 0-12 5.4-12 12z\"],\n        \"arrow-alt-circle-left\": [512, 512, [], \"f359\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm116-292H256v-70.9c0-10.7-13-16.1-20.5-8.5L121.2 247.5c-4.7 4.7-4.7 12.2 0 16.9l114.3 114.9c7.6 7.6 20.5 2.2 20.5-8.5V300h116c6.6 0 12-5.4 12-12v-64c0-6.6-5.4-12-12-12z\"],\n        \"arrow-alt-circle-right\": [512, 512, [], \"f35a\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zM140 300h116v70.9c0 10.7 13 16.1 20.5 8.5l114.3-114.9c4.7-4.7 4.7-12.2 0-16.9l-114.3-115c-7.6-7.6-20.5-2.2-20.5 8.5V212H140c-6.6 0-12 5.4-12 12v64c0 6.6 5.4 12 12 12z\"],\n        \"arrow-alt-circle-up\": [512, 512, [], \"f35b\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm292 116V256h70.9c10.7 0 16.1-13 8.5-20.5L264.5 121.2c-4.7-4.7-12.2-4.7-16.9 0l-115 114.3c-7.6 7.6-2.2 20.5 8.5 20.5H212v116c0 6.6 5.4 12 12 12h64c6.6 0 12-5.4 12-12z\"],\n        \"arrow-circle-down\": [512, 512, [], \"f0ab\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z\"],\n        \"arrow-circle-left\": [512, 512, [], \"f0a8\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zm28.9-143.6L209.4 288H392c13.3 0 24-10.7 24-24v-16c0-13.3-10.7-24-24-24H209.4l75.5-72.4c9.7-9.3 9.9-24.8.4-34.3l-11-10.9c-9.4-9.4-24.6-9.4-33.9 0L107.7 239c-9.4 9.4-9.4 24.6 0 33.9l132.7 132.7c9.4 9.4 24.6 9.4 33.9 0l11-10.9c9.5-9.5 9.3-25-.4-34.3z\"],\n        \"arrow-circle-right\": [512, 512, [], \"f0a9\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm-28.9 143.6l75.5 72.4H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h182.6l-75.5 72.4c-9.7 9.3-9.9 24.8-.4 34.3l11 10.9c9.4 9.4 24.6 9.4 33.9 0L404.3 273c9.4-9.4 9.4-24.6 0-33.9L271.6 106.3c-9.4-9.4-24.6-9.4-33.9 0l-11 10.9c-9.5 9.6-9.3 25.1.4 34.4z\"],\n        \"arrow-circle-up\": [512, 512, [], \"f0aa\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z\"],\n        \"arrow-down\": [448, 512, [], \"f063\", \"M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z\"],\n        \"arrow-left\": [448, 512, [], \"f060\", \"M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z\"],\n        \"arrow-right\": [448, 512, [], \"f061\", \"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z\"],\n        \"arrow-up\": [448, 512, [], \"f062\", \"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\"],\n        \"arrows-alt\": [512, 512, [], \"f0b2\", \"M352.201 425.775l-79.196 79.196c-9.373 9.373-24.568 9.373-33.941 0l-79.196-79.196c-15.119-15.119-4.411-40.971 16.971-40.97h51.162L228 284H127.196v51.162c0 21.382-25.851 32.09-40.971 16.971L7.029 272.937c-9.373-9.373-9.373-24.569 0-33.941L86.225 159.8c15.119-15.119 40.971-4.411 40.971 16.971V228H228V127.196h-51.23c-21.382 0-32.09-25.851-16.971-40.971l79.196-79.196c9.373-9.373 24.568-9.373 33.941 0l79.196 79.196c15.119 15.119 4.411 40.971-16.971 40.971h-51.162V228h100.804v-51.162c0-21.382 25.851-32.09 40.97-16.971l79.196 79.196c9.373 9.373 9.373 24.569 0 33.941L425.773 352.2c-15.119 15.119-40.971 4.411-40.97-16.971V284H284v100.804h51.23c21.382 0 32.09 25.851 16.971 40.971z\"],\n        \"arrows-alt-h\": [512, 512, [], \"f337\", \"M377.941 169.941V216H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.568 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296h243.882v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.568 0-33.941l-86.059-86.059c-15.119-15.12-40.971-4.412-40.971 16.97z\"],\n        \"arrows-alt-v\": [256, 512, [], \"f338\", \"M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z\"],\n        \"assistive-listening-systems\": [512, 512, [], \"f2a2\", \"M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm-80 236c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zM32 448c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm480-187.993c0-1.518-.012-3.025-.045-4.531C510.076 140.525 436.157 38.47 327.994 1.511c-14.633-4.998-30.549 2.809-35.55 17.442-5 14.633 2.81 30.549 17.442 35.55 85.906 29.354 144.61 110.513 146.077 201.953l.003.188c.026 1.118.033 2.236.033 3.363 0 15.464 12.536 28 28 28s28.001-12.536 28.001-28zM152.971 439.029l-80-80L39.03 392.97l80 80 33.941-33.941z\"],\n        \"asterisk\": [512, 512, [], \"f069\", \"M478.21 334.093L336 256l142.21-78.093c11.795-6.477 15.961-21.384 9.232-33.037l-19.48-33.741c-6.728-11.653-21.72-15.499-33.227-8.523L296 186.718l3.475-162.204C299.763 11.061 288.937 0 275.48 0h-38.96c-13.456 0-24.283 11.061-23.994 24.514L216 186.718 77.265 102.607c-11.506-6.976-26.499-3.13-33.227 8.523l-19.48 33.741c-6.728 11.653-2.562 26.56 9.233 33.037L176 256 33.79 334.093c-11.795 6.477-15.961 21.384-9.232 33.037l19.48 33.741c6.728 11.653 21.721 15.499 33.227 8.523L216 325.282l-3.475 162.204C212.237 500.939 223.064 512 236.52 512h38.961c13.456 0 24.283-11.061 23.995-24.514L296 325.282l138.735 84.111c11.506 6.976 26.499 3.13 33.227-8.523l19.48-33.741c6.728-11.653 2.563-26.559-9.232-33.036z\"],\n        \"at\": [512, 512, [], \"f1fa\", \"M256 8C118.941 8 8 118.919 8 256c0 137.059 110.919 248 248 248 48.154 0 95.342-14.14 135.408-40.223 12.005-7.815 14.625-24.288 5.552-35.372l-10.177-12.433c-7.671-9.371-21.179-11.667-31.373-5.129C325.92 429.757 291.314 440 256 440c-101.458 0-184-82.542-184-184S154.542 72 256 72c100.139 0 184 57.619 184 160 0 38.786-21.093 79.742-58.17 83.693-17.349-.454-16.91-12.857-13.476-30.024l23.433-121.11C394.653 149.75 383.308 136 368.225 136h-44.981a13.518 13.518 0 0 0-13.432 11.993l-.01.092c-14.697-17.901-40.448-21.775-59.971-21.775-74.58 0-137.831 62.234-137.831 151.46 0 65.303 36.785 105.87 96 105.87 26.984 0 57.369-15.637 74.991-38.333 9.522 34.104 40.613 34.103 70.71 34.103C462.609 379.41 504 307.798 504 232 504 95.653 394.023 8 256 8zm-21.68 304.43c-22.249 0-36.07-15.623-36.07-40.771 0-44.993 30.779-72.729 58.63-72.729 22.292 0 35.601 15.241 35.601 40.77 0 45.061-33.875 72.73-58.161 72.73z\"],\n        \"audio-description\": [512, 512, [], \"f29e\", \"M162.925 238.709l8.822 30.655h-25.606l9.041-30.652c1.277-4.421 2.651-9.994 3.872-15.245 1.22 5.251 2.594 10.823 3.871 15.242zm166.474-32.099h-14.523v98.781h14.523c29.776 0 46.175-17.678 46.175-49.776 0-32.239-17.49-49.005-46.175-49.005zM512 112v288c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48zM245.459 336.139l-57.097-168A12.001 12.001 0 0 0 177 160h-35.894a12.001 12.001 0 0 0-11.362 8.139l-57.097 168C70.003 343.922 75.789 352 84.009 352h29.133a12 12 0 0 0 11.535-8.693l8.574-29.906h51.367l8.793 29.977A12 12 0 0 0 204.926 352h29.172c8.22 0 14.006-8.078 11.361-15.861zm184.701-80.525c0-58.977-37.919-95.614-98.96-95.614h-57.366c-6.627 0-12 5.373-12 12v168c0 6.627 5.373 12 12 12H331.2c61.041 0 98.96-36.933 98.96-96.386z\"],\n        \"backward\": [512, 512, [], \"f04a\", \"M11.5 280.6l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2zm256 0l192 160c20.6 17.2 52.5 2.8 52.5-24.6V96c0-27.4-31.9-41.8-52.5-24.6l-192 160c-15.3 12.8-15.3 36.4 0 49.2z\"],\n        \"balance-scale\": [640, 512, [], \"f24e\", \"M352 448h168c13.255 0 24 10.745 24 24v16c0 13.255-10.745 24-24 24H120c-13.255 0-24-10.745-24-24v-16c0-13.255 10.745-24 24-24h168V153.324C264.469 143.04 246.836 121.778 241.603 96H120c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24h135.999C270.594 12.57 293.828 0 320 0s49.406 12.57 64.001 32H520c13.255 0 24 10.745 24 24v16c0 13.255-10.745 24-24 24H398.397c-5.233 25.778-22.866 47.04-46.397 57.324V448zm287.981-112c.001-16.182 1.342-8.726-85.048-181.506-17.647-35.294-68.186-35.358-85.865 0C381.94 328.75 384.019 320.331 384.019 336H384c0 44.183 57.308 80 128 80s128-35.817 128-80h-.019zM512 176l72 144H440l72-144zM255.981 336c.001-16.182 1.342-8.726-85.048-181.506-17.647-35.294-68.186-35.358-85.865 0C-2.06 328.75.019 320.331.019 336H0c0 44.183 57.308 80 128 80s128-35.817 128-80h-.019zM128 176l72 144H56l72-144z\"],\n        \"ban\": [512, 512, [], \"f05e\", \"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\"],\n        \"band-aid\": [640, 512, [], \"f462\", \"M0 160v192c0 35.3 28.7 64 64 64h96V96H64c-35.3 0-64 28.7-64 64zm576-64h-96v320h96c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64zM192 416h256V96H192v320zm176-232c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm-96-96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm0 96c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24z\"],\n        \"barcode\": [512, 512, [], \"f02a\", \"M0 448V64h18v384H0zm26.857-.273V64H36v383.727h-9.143zm27.143 0V64h8.857v383.727H54zm44.857 0V64h8.857v383.727h-8.857zm36 0V64h17.714v383.727h-17.714zm44.857 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm18 0V64h8.857v383.727h-8.857zm35.715 0V64h18v383.727h-18zm44.857 0V64h18v383.727h-18zm35.999 0V64h18.001v383.727h-18.001zm36.001 0V64h18.001v383.727h-18.001zm26.857 0V64h18v383.727h-18zm45.143 0V64h26.857v383.727h-26.857zm35.714 0V64h9.143v383.727H476zm18 .273V64h18v384h-18z\"],\n        \"bars\": [448, 512, [], \"f0c9\", \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n        \"baseball-ball\": [496, 512, [], \"f433\", \"M368.5 363.9l28.8-13.9c11.1 22.9 26 43.2 44.1 60.9 34-42.5 54.5-96.3 54.5-154.9 0-58.5-20.4-112.2-54.2-154.6-17.8 17.3-32.6 37.1-43.6 59.5l-28.7-14.1c12.8-26 30-49 50.8-69C375.6 34.7 315 8 248 8 181.1 8 120.5 34.6 75.9 77.7c20.7 19.9 37.9 42.9 50.7 68.8l-28.7 14.1c-11-22.3-25.7-42.1-43.5-59.4C20.4 143.7 0 197.4 0 256c0 58.6 20.4 112.3 54.4 154.7 18.2-17.7 33.2-38 44.3-61l28.8 13.9c-12.9 26.7-30.3 50.3-51.5 70.7 44.5 43.1 105.1 69.7 172 69.7 66.8 0 127.3-26.5 171.9-69.5-21.1-20.4-38.5-43.9-51.4-70.6zm-228.3-32l-30.5-9.8c14.9-46.4 12.7-93.8-.6-134l30.4-10c15 45.6 18 99.9.7 153.8zm216.3-153.4l30.4 10c-13.2 40.1-15.5 87.5-.6 134l-30.5 9.8c-17.3-54-14.3-108.3.7-153.8z\"],\n        \"basketball-ball\": [496, 512, [], \"f434\", \"M212.3 10.3c-43.8 6.3-86.2 24.1-122.2 53.8l77.4 77.4c27.8-35.8 43.3-81.2 44.8-131.2zM248 222L405.9 64.1c-42.4-35-93.6-53.5-145.5-56.1-1.2 63.9-21.5 122.3-58.7 167.7L248 222zM56.1 98.1c-29.7 36-47.5 78.4-53.8 122.2 50-1.5 95.5-17 131.2-44.8L56.1 98.1zm272.2 204.2c45.3-37.1 103.7-57.4 167.7-58.7-2.6-51.9-21.1-103.1-56.1-145.5L282 256l46.3 46.3zM248 290L90.1 447.9c42.4 34.9 93.6 53.5 145.5 56.1 1.3-64 21.6-122.4 58.7-167.7L248 290zm191.9 123.9c29.7-36 47.5-78.4 53.8-122.2-50.1 1.6-95.5 17.1-131.2 44.8l77.4 77.4zM167.7 209.7C122.3 246.9 63.9 267.3 0 268.4c2.6 51.9 21.1 103.1 56.1 145.5L214 256l-46.3-46.3zm116 292c43.8-6.3 86.2-24.1 122.2-53.8l-77.4-77.4c-27.7 35.7-43.2 81.2-44.8 131.2z\"],\n        \"bath\": [512, 512, [], \"f2cd\", \"M488 256H80V112c0-17.645 14.355-32 32-32 11.351 0 21.332 5.945 27.015 14.88-16.492 25.207-14.687 59.576 6.838 83.035-4.176 4.713-4.021 11.916.491 16.428l11.314 11.314c4.686 4.686 12.284 4.686 16.971 0l95.03-95.029c4.686-4.686 4.686-12.284 0-16.971l-11.314-11.314c-4.512-4.512-11.715-4.666-16.428-.491-17.949-16.469-42.294-21.429-64.178-15.365C163.281 45.667 139.212 32 112 32c-44.112 0-80 35.888-80 80v144h-8c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h8v32c0 28.43 12.362 53.969 32 71.547V456c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-8h256v8c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-32.453c19.638-17.578 32-43.117 32-71.547v-32h8c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z\"],\n        \"battery-empty\": [640, 512, [], \"f244\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48z\"],\n        \"battery-full\": [640, 512, [], \"f240\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-48 96H96v128h416V192z\"],\n        \"battery-half\": [640, 512, [], \"f242\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-240 96H96v128h224V192z\"],\n        \"battery-quarter\": [640, 512, [], \"f243\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-336 96H96v128h128V192z\"],\n        \"battery-three-quarters\": [640, 512, [], \"f241\", \"M544 160v64h32v64h-32v64H64V160h480m16-64H48c-26.51 0-48 21.49-48 48v224c0 26.51 21.49 48 48 48h512c26.51 0 48-21.49 48-48v-16h8c13.255 0 24-10.745 24-24V184c0-13.255-10.745-24-24-24h-8v-16c0-26.51-21.49-48-48-48zm-144 96H96v128h320V192z\"],\n        \"bed\": [576, 512, [], \"f236\", \"M552 288c13.255 0 24 10.745 24 24v136h-96v-64H96v64H0V88c0-13.255 10.745-24 24-24h48c13.255 0 24 10.745 24 24v200h456zM192 96c-44.183 0-80 35.817-80 80s35.817 80 80 80 80-35.817 80-80-35.817-80-80-80zm384 128c0-53.019-42.981-96-96-96H312c-13.255 0-24 10.745-24 24v104h288v-32z\"],\n        \"beer\": [448, 512, [], \"f0fc\", \"M368 96h-48V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24v-42.11l80.606-35.977C429.396 365.063 448 336.388 448 304.86V176c0-44.112-35.888-80-80-80zm16 208.86a16.018 16.018 0 0 1-9.479 14.611L320 343.805V160h48c8.822 0 16 7.178 16 16v128.86zM208 384c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16zm-96 0c-8.836 0-16-7.164-16-16V144c0-8.836 7.164-16 16-16s16 7.164 16 16v224c0 8.836-7.164 16-16 16z\"],\n        \"bell\": [448, 512, [], \"f0f3\", \"M433.884 366.059C411.634 343.809 384 316.118 384 208c0-79.394-57.831-145.269-133.663-157.83A31.845 31.845 0 0 0 256 32c0-17.673-14.327-32-32-32s-32 14.327-32 32c0 6.75 2.095 13.008 5.663 18.17C121.831 62.731 64 128.606 64 208c0 108.118-27.643 135.809-49.893 158.059C-16.042 396.208 5.325 448 48.048 448H160c0 35.346 28.654 64 64 64s64-28.654 64-64h111.943c42.638 0 64.151-51.731 33.941-81.941zM224 472a8 8 0 0 1 0 16c-22.056 0-40-17.944-40-40h16c0 13.234 10.766 24 24 24z\"],\n        \"bell-slash\": [576, 512, [], \"f1f6\", \"M78.107 366.059C47.958 396.208 69.325 448 112.048 448H224c0 35.346 28.654 64 64 64 35.346 0 64-28.654 64-64h32.685L127.848 221.379c-2.198 97.078-28.439 123.378-49.741 144.68zM264 448c0 13.234 10.766 24 24 24a8 8 0 0 1 0 16c-22.056 0-40-17.944-40-40h16zm305.896 43.733l-10.762 12.086c-8.915 10.012-24.333 10.967-34.437 2.133L8.256 54.393C-1.848 45.558-2.811 30.28 6.104 20.267L16.865 8.181C25.781-1.831 41.199-2.786 51.303 6.049l113.81 99.512c24.017-28.778 57.946-48.996 96.55-55.39A31.85 31.85 0 0 1 256 32c0-17.673 14.327-32 32-32s32 14.327 32 32c0 6.75-2.095 13.008-5.663 18.17C390.169 62.731 448 128.606 448 208c0 108.118 27.634 135.809 49.884 158.059 12.149 12.149 15.923 27.776 13.33 42.121l56.53 49.427c10.104 8.835 11.067 24.113 2.152 34.126z\"],\n        \"bicycle\": [640, 512, [], \"f206\", \"M512.509 192.001c-16.373-.064-32.03 2.955-46.436 8.495l-77.68-125.153A24 24 0 0 0 368.001 64h-64c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h50.649l14.896 24H256.002v-16c0-8.837-7.163-16-16-16h-87.459c-13.441 0-24.777 10.999-24.536 24.437.232 13.044 10.876 23.563 23.995 23.563h48.726l-29.417 47.52c-13.433-4.83-27.904-7.483-42.992-7.52C58.094 191.83.412 249.012.002 319.236-.413 390.279 57.055 448 128.002 448c59.642 0 109.758-40.793 123.967-96h52.033a24 24 0 0 0 20.406-11.367L410.37 201.77l14.938 24.067c-25.455 23.448-41.385 57.081-41.307 94.437.145 68.833 57.899 127.051 126.729 127.719 70.606.685 128.181-55.803 129.255-125.996 1.086-70.941-56.526-129.72-127.476-129.996zM186.75 265.772c9.727 10.529 16.673 23.661 19.642 38.228h-43.306l23.664-38.228zM128.002 400c-44.112 0-80-35.888-80-80s35.888-80 80-80c5.869 0 11.586.653 17.099 1.859l-45.505 73.509C89.715 331.327 101.213 352 120.002 352h81.3c-12.37 28.225-40.562 48-73.3 48zm162.63-96h-35.624c-3.96-31.756-19.556-59.894-42.383-80.026L237.371 184h127.547l-74.286 120zm217.057 95.886c-41.036-2.165-74.049-35.692-75.627-76.755-.812-21.121 6.633-40.518 19.335-55.263l44.433 71.586c4.66 7.508 14.524 9.816 22.032 5.156l13.594-8.437c7.508-4.66 9.817-14.524 5.156-22.032l-44.468-71.643a79.901 79.901 0 0 1 19.858-2.497c44.112 0 80 35.888 80 80-.001 45.54-38.252 82.316-84.313 79.885z\"],\n        \"binoculars\": [512, 512, [], \"f1e5\", \"M192 104H96V56c0-13.255 10.745-24 24-24h48c13.255 0 24 10.745 24 24v48zm224-48c0-13.255-10.745-24-24-24h-48c-13.255 0-24 10.745-24 24v48h96V56zM0 456c0 13.255 10.745 24 24 24h120c13.255 0 24-10.745 24-24v-16H0v16zm88-328c-13.255 0-24 10.745-24 24C64 256 0 272 0 416h168V312c0-13.255 10.745-24 24-24V128H88zm256 328c0 13.255 10.745 24 24 24h120c13.255 0 24-10.745 24-24v-16H344v16zM216 128v160h80V128h-80zm128 288h168c0-144-64-160-64-264 0-13.255-10.745-24-24-24H320v160c13.255 0 24 10.745 24 24v104z\"],\n        \"birthday-cake\": [448, 512, [], \"f1fd\", \"M448 384c-28.02 0-31.26-32-74.5-32-43.43 0-46.825 32-74.75 32-27.695 0-31.454-32-74.75-32-42.842 0-47.218 32-74.5 32-28.148 0-31.202-32-74.75-32-43.547 0-46.653 32-74.75 32v-80c0-26.5 21.5-48 48-48h16V112h64v144h64V112h64v144h64V112h64v144h16c26.5 0 48 21.5 48 48v80zm0 128H0v-96c43.356 0 46.767-32 74.75-32 27.951 0 31.253 32 74.75 32 42.843 0 47.217-32 74.5-32 28.148 0 31.201 32 74.75 32 43.357 0 46.767-32 74.75-32 27.488 0 31.252 32 74.5 32v96zM96 96c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40zm128 0c-17.75 0-32-14.25-32-32 0-31 32-23 32-64 12 0 32 29.5 32 56s-14.25 40-32 40z\"],\n        \"blind\": [384, 512, [], \"f29d\", \"M380.15 510.837a8 8 0 0 1-10.989-2.687l-125.33-206.427a31.923 31.923 0 0 0 12.958-9.485l126.048 207.608a8 8 0 0 1-2.687 10.991zM142.803 314.338l-32.54 89.485 36.12 88.285c6.693 16.36 25.377 24.192 41.733 17.501 16.357-6.692 24.193-25.376 17.501-41.734l-62.814-153.537zM96 88c24.301 0 44-19.699 44-44S120.301 0 96 0 52 19.699 52 44s19.699 44 44 44zm154.837 169.128l-120-152c-4.733-5.995-11.75-9.108-18.837-9.112V96H80v.026c-7.146.003-14.217 3.161-18.944 9.24L0 183.766v95.694c0 13.455 11.011 24.791 24.464 24.536C37.505 303.748 48 293.1 48 280v-79.766l16-20.571v140.698L9.927 469.055c-6.04 16.609 2.528 34.969 19.138 41.009 16.602 6.039 34.968-2.524 41.009-19.138L136 309.638V202.441l-31.406-39.816a4 4 0 1 1 6.269-4.971l102.3 129.217c9.145 11.584 24.368 11.339 33.708 3.965 10.41-8.216 12.159-23.334 3.966-33.708z\"],\n        \"bold\": [384, 512, [], \"f032\", \"M304.793 243.891c33.639-18.537 53.657-54.16 53.657-95.693 0-48.236-26.25-87.626-68.626-104.179C265.138 34.01 240.849 32 209.661 32H24c-8.837 0-16 7.163-16 16v33.049c0 8.837 7.163 16 16 16h33.113v318.53H24c-8.837 0-16 7.163-16 16V464c0 8.837 7.163 16 16 16h195.69c24.203 0 44.834-1.289 66.866-7.584C337.52 457.193 376 410.647 376 350.014c0-52.168-26.573-91.684-71.207-106.123zM142.217 100.809h67.444c16.294 0 27.536 2.019 37.525 6.717 15.828 8.479 24.906 26.502 24.906 49.446 0 35.029-20.32 56.79-53.029 56.79h-76.846V100.809zm112.642 305.475c-10.14 4.056-22.677 4.907-31.409 4.907h-81.233V281.943h84.367c39.645 0 63.057 25.38 63.057 63.057.001 28.425-13.66 52.483-34.782 61.284z\"],\n        \"bolt\": [320, 512, [], \"f0e7\", \"M295.973 160H180.572L215.19 30.184C219.25 14.956 207.756 0 192 0H56C43.971 0 33.8 8.905 32.211 20.828l-31.996 240C-1.704 275.217 9.504 288 24.004 288h118.701L96.646 482.466C93.05 497.649 104.659 512 119.992 512c8.35 0 16.376-4.374 20.778-11.978l175.973-303.997c9.244-15.967-2.288-36.025-20.77-36.025z\"],\n        \"bomb\": [512, 512, [], \"f1e2\", \"M440.5 88.5l-52 52L415 167c9.4 9.4 9.4 24.6 0 33.9l-17.4 17.4c11.8 26.1 18.4 55.1 18.4 85.6 0 114.9-93.1 208-208 208S0 418.9 0 304 93.1 96 208 96c30.5 0 59.5 6.6 85.6 18.4L311 97c9.4-9.4 24.6-9.4 33.9 0l26.5 26.5 52-52 17.1 17zM500 60h-24c-6.6 0-12 5.4-12 12s5.4 12 12 12h24c6.6 0 12-5.4 12-12s-5.4-12-12-12zM440 0c-6.6 0-12 5.4-12 12v24c0 6.6 5.4 12 12 12s12-5.4 12-12V12c0-6.6-5.4-12-12-12zm33.9 55l17-17c4.7-4.7 4.7-12.3 0-17-4.7-4.7-12.3-4.7-17 0l-17 17c-4.7 4.7-4.7 12.3 0 17 4.8 4.7 12.4 4.7 17 0zm-67.8 0c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17zm67.8 34c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17zM112 272c0-35.3 28.7-64 64-64 8.8 0 16-7.2 16-16s-7.2-16-16-16c-52.9 0-96 43.1-96 96 0 8.8 7.2 16 16 16s16-7.2 16-16z\"],\n        \"book\": [448, 512, [], \"f02d\", \"M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z\"],\n        \"bookmark\": [384, 512, [], \"f02e\", \"M0 512V48C0 21.49 21.49 0 48 0h288c26.51 0 48 21.49 48 48v464L192 400 0 512z\"],\n        \"bowling-ball\": [496, 512, [], \"f436\", \"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zM120 192c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm64-96c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm48 144c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n        \"box\": [512, 512, [], \"f466\", \"M509.5 184.6L458.9 32.8C452.4 13.2 434.1 0 413.4 0H272v192h238.7c-.4-2.5-.4-5-1.2-7.4zM240 0H98.6c-20.7 0-39 13.2-45.5 32.8L2.5 184.6c-.8 2.4-.8 4.9-1.2 7.4H240V0zM0 224v240c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V224H0z\"],\n        \"boxes\": [576, 512, [], \"f468\", \"M560 288h-80v96l-32-21.3-32 21.3v-96h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16zm-384-64h224c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16h-80v96l-32-21.3L256 96V0h-80c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16zm64 64h-80v96l-32-21.3L96 384v-96H16c-8.8 0-16 7.2-16 16v192c0 8.8 7.2 16 16 16h224c8.8 0 16-7.2 16-16V304c0-8.8-7.2-16-16-16z\"],\n        \"braille\": [640, 512, [], \"f2a1\", \"M128 256c0 35.346-28.654 64-64 64S0 291.346 0 256s28.654-64 64-64 64 28.654 64 64zM64 384c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352C28.654 32 0 60.654 0 96s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm224 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-352c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64zm160 192c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0 160c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm0-320c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"],\n        \"briefcase\": [512, 512, [], \"f0b1\", \"M320 288h192v144c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V288h192v20c0 6.627 5.373 12 12 12h104c6.627 0 12-5.373 12-12v-20zm192-112v80H0v-80c0-26.51 21.49-48 48-48h80V80c0-26.51 21.49-48 48-48h160c26.51 0 48 21.49 48 48v48h80c26.51 0 48 21.49 48 48zM320 96H192v32h128V96z\"],\n        \"bug\": [512, 512, [], \"f188\", \"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\"],\n        \"building\": [448, 512, [], \"f1ad\", \"M436 480h-20V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v456H12c-6.627 0-12 5.373-12 12v20h448v-20c0-6.627-5.373-12-12-12zM128 76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76zm0 96c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40zm52 148h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12zm76 160h-64v-84c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v84zm64-172c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40z\"],\n        \"bullhorn\": [576, 512, [], \"f0a1\", \"M576 224c0-20.896-13.36-38.666-32-45.258V64c0-35.346-28.654-64-64-64-64.985 56-142.031 128-272 128H48c-26.51 0-48 21.49-48 48v96c0 26.51 21.49 48 48 48h43.263c-18.742 64.65 2.479 116.379 18.814 167.44 1.702 5.32 5.203 9.893 9.922 12.88 20.78 13.155 68.355 15.657 93.773 5.151 16.046-6.633 19.96-27.423 7.522-39.537-18.508-18.026-30.136-36.91-19.795-60.858a12.278 12.278 0 0 0-1.045-11.673c-16.309-24.679-3.581-62.107 28.517-72.752C346.403 327.887 418.591 395.081 480 448c35.346 0 64-28.654 64-64V269.258c18.64-6.592 32-24.362 32-45.258zm-96 139.855c-54.609-44.979-125.033-92.94-224-104.982v-69.747c98.967-12.042 169.391-60.002 224-104.982v279.711z\"],\n        \"bullseye\": [512, 512, [], \"f140\", \"M256 72c101.689 0 184 82.295 184 184 0 101.689-82.295 184-184 184-101.689 0-184-82.295-184-184 0-101.689 82.295-184 184-184m0-64C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 184c35.29 0 64 28.71 64 64s-28.71 64-64 64-64-28.71-64-64 28.71-64 64-64m0-64c-70.692 0-128 57.308-128 128s57.308 128 128 128 128-57.308 128-128-57.308-128-128-128z\"],\n        \"bus\": [512, 512, [], \"f207\", \"M512 152v80c0 13.255-10.745 24-24 24h-8v168c0 13.255-10.745 24-24 24h-8v40c0 13.255-10.745 24-24 24h-48c-13.255 0-24-10.745-24-24v-40H160v40c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24v-40h-8c-13.255 0-24-10.745-24-24V256h-8c-13.255 0-24-10.745-24-24v-80c0-13.255 10.745-24 24-24h8V80C32 35.817 132.288 0 256 0s224 35.817 224 80v48h8c13.255 0 24 10.745 24 24zM112 320c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm288 0c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm32-56V120c0-13.255-10.745-24-24-24H104c-13.255 0-24 10.745-24 24v144c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z\"],\n        \"calculator\": [448, 512, [], \"f1ec\", \"M0 464V48C0 21.49 21.49 0 48 0h352c26.51 0 48 21.49 48 48v416c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48zm384-284V76c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v104c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12zM128 308v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm256 128V268c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v168c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-256 0v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm128-128v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm0 128v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\"],\n        \"calendar\": [448, 512, [], \"f133\", \"M12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm436-44v-36c0-26.5-21.5-48-48-48h-48V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H160V12c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v52H48C21.5 64 0 85.5 0 112v36c0 6.6 5.4 12 12 12h424c6.6 0 12-5.4 12-12z\"],\n        \"calendar-alt\": [448, 512, [], \"f073\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm116 204c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm128 128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40zm0-128c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-40z\"],\n        \"calendar-check\": [448, 512, [], \"f274\", \"M436 160H12c-6.627 0-12-5.373-12-12v-36c0-26.51 21.49-48 48-48h48V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h128V12c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v52h48c26.51 0 48 21.49 48 48v36c0 6.627-5.373 12-12 12zM12 192h424c6.627 0 12 5.373 12 12v260c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V204c0-6.627 5.373-12 12-12zm333.296 95.947l-28.169-28.398c-4.667-4.705-12.265-4.736-16.97-.068L194.12 364.665l-45.98-46.352c-4.667-4.705-12.266-4.736-16.971-.068l-28.397 28.17c-4.705 4.667-4.736 12.265-.068 16.97l82.601 83.269c4.667 4.705 12.265 4.736 16.97.068l142.953-141.805c4.705-4.667 4.736-12.265.068-16.97z\"],\n        \"calendar-minus\": [448, 512, [], \"f272\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm304 192c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H132c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h184z\"],\n        \"calendar-plus\": [448, 512, [], \"f271\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm316 140c0-6.6-5.4-12-12-12h-60v-60c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v60h-60c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h60v60c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-60h60c6.6 0 12-5.4 12-12v-40z\"],\n        \"calendar-times\": [448, 512, [], \"f273\", \"M436 160H12c-6.6 0-12-5.4-12-12v-36c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48v36c0 6.6-5.4 12-12 12zM12 192h424c6.6 0 12 5.4 12 12v260c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V204c0-6.6 5.4-12 12-12zm257.3 160l48.1-48.1c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0L224 306.7l-48.1-48.1c-4.7-4.7-12.3-4.7-17 0l-28.3 28.3c-4.7 4.7-4.7 12.3 0 17l48.1 48.1-48.1 48.1c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l48.1-48.1 48.1 48.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L269.3 352z\"],\n        \"camera\": [512, 512, [], \"f030\", \"M512 144v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V144c0-26.5 21.5-48 48-48h88l12.3-32.9c7-18.7 24.9-31.1 44.9-31.1h125.5c20 0 37.9 12.4 44.9 31.1L376 96h88c26.5 0 48 21.5 48 48zM376 288c0-66.2-53.8-120-120-120s-120 53.8-120 120 53.8 120 120 120 120-53.8 120-120zm-32 0c0 48.5-39.5 88-88 88s-88-39.5-88-88 39.5-88 88-88 88 39.5 88 88z\"],\n        \"camera-retro\": [512, 512, [], \"f083\", \"M48 32C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48H48zm0 32h106c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H38c-3.3 0-6-2.7-6-6V80c0-8.8 7.2-16 16-16zm426 96H38c-3.3 0-6-2.7-6-6v-36c0-3.3 2.7-6 6-6h138l30.2-45.3c1.1-1.7 3-2.7 5-2.7H464c8.8 0 16 7.2 16 16v74c0 3.3-2.7 6-6 6zM256 424c-66.2 0-120-53.8-120-120s53.8-120 120-120 120 53.8 120 120-53.8 120-120 120zm0-208c-48.5 0-88 39.5-88 88s39.5 88 88 88 88-39.5 88-88-39.5-88-88-88zm-48 104c-8.8 0-16-7.2-16-16 0-35.3 28.7-64 64-64 8.8 0 16 7.2 16 16s-7.2 16-16 16c-17.6 0-32 14.4-32 32 0 8.8-7.2 16-16 16z\"],\n        \"car\": [512, 512, [], \"f1b9\", \"M499.991 168h-54.815l-7.854-20.944c-9.192-24.513-25.425-45.351-46.942-60.263S343.651 64 317.472 64H194.528c-26.18 0-51.391 7.882-72.908 22.793-21.518 14.912-37.75 35.75-46.942 60.263L66.824 168H12.009c-8.191 0-13.974 8.024-11.384 15.795l8 24A12 12 0 0 0 20.009 216h28.815l-.052.14C29.222 227.093 16 247.997 16 272v48c0 16.225 6.049 31.029 16 42.309V424c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24v-40h256v40c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24v-61.691c9.951-11.281 16-26.085 16-42.309v-48c0-24.003-13.222-44.907-32.772-55.86l-.052-.14h28.815a12 12 0 0 0 11.384-8.205l8-24c2.59-7.771-3.193-15.795-11.384-15.795zm-365.388 1.528C143.918 144.689 168 128 194.528 128h122.944c26.528 0 50.61 16.689 59.925 41.528L391.824 208H120.176l14.427-38.472zM88 328c-17.673 0-32-14.327-32-32 0-17.673 14.327-32 32-32s48 30.327 48 48-30.327 16-48 16zm336 0c-17.673 0-48 1.673-48-16 0-17.673 30.327-48 48-48s32 14.327 32 32c0 17.673-14.327 32-32 32z\"],\n        \"caret-down\": [320, 512, [], \"f0d7\", \"M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z\"],\n        \"caret-left\": [192, 512, [], \"f0d9\", \"M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z\"],\n        \"caret-right\": [192, 512, [], \"f0da\", \"M0 384.662V127.338c0-17.818 21.543-26.741 34.142-14.142l128.662 128.662c7.81 7.81 7.81 20.474 0 28.284L34.142 398.804C21.543 411.404 0 402.48 0 384.662z\"],\n        \"caret-square-down\": [448, 512, [], \"f150\", \"M448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zM92.5 220.5l123 123c4.7 4.7 12.3 4.7 17 0l123-123c7.6-7.6 2.2-20.5-8.5-20.5H101c-10.7 0-16.1 12.9-8.5 20.5z\"],\n        \"caret-square-left\": [448, 512, [], \"f191\", \"M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM259.515 124.485l-123.03 123.03c-4.686 4.686-4.686 12.284 0 16.971l123.029 123.029c7.56 7.56 20.485 2.206 20.485-8.485V132.971c.001-10.691-12.925-16.045-20.484-8.486z\"],\n        \"caret-square-right\": [448, 512, [], \"f152\", \"M48 32h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48zm140.485 355.515l123.029-123.029c4.686-4.686 4.686-12.284 0-16.971l-123.029-123.03c-7.56-7.56-20.485-2.206-20.485 8.485v246.059c0 10.691 12.926 16.045 20.485 8.486z\"],\n        \"caret-square-up\": [448, 512, [], \"f151\", \"M0 432V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48zm355.515-140.485l-123.03-123.03c-4.686-4.686-12.284-4.686-16.971 0L92.485 291.515c-7.56 7.56-2.206 20.485 8.485 20.485h246.059c10.691 0 16.045-12.926 8.486-20.485z\"],\n        \"caret-up\": [320, 512, [], \"f0d8\", \"M288.662 352H31.338c-17.818 0-26.741-21.543-14.142-34.142l128.662-128.662c7.81-7.81 20.474-7.81 28.284 0l128.662 128.662c12.6 12.599 3.676 34.142-14.142 34.142z\"],\n        \"cart-arrow-down\": [576, 512, [], \"f218\", \"M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM403.029 192H360v-60c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v60h-43.029c-10.691 0-16.045 12.926-8.485 20.485l67.029 67.029c4.686 4.686 12.284 4.686 16.971 0l67.029-67.029c7.559-7.559 2.205-20.485-8.486-20.485z\"],\n        \"cart-plus\": [576, 512, [], \"f217\", \"M504.717 320H211.572l6.545 32h268.418c15.401 0 26.816 14.301 23.403 29.319l-5.517 24.276C523.112 414.668 536 433.828 536 456c0 31.202-25.519 56.444-56.824 55.994-29.823-.429-54.35-24.631-55.155-54.447-.44-16.287 6.085-31.049 16.803-41.548H231.176C241.553 426.165 248 440.326 248 456c0 31.813-26.528 57.431-58.67 55.938-28.54-1.325-51.751-24.385-53.251-52.917-1.158-22.034 10.436-41.455 28.051-51.586L93.883 64H24C10.745 64 0 53.255 0 40V24C0 10.745 10.745 0 24 0h102.529c11.401 0 21.228 8.021 23.513 19.19L159.208 64H551.99c15.401 0 26.816 14.301 23.403 29.319l-47.273 208C525.637 312.246 515.923 320 504.717 320zM408 168h-48v-40c0-8.837-7.163-16-16-16h-16c-8.837 0-16 7.163-16 16v40h-48c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h48v40c0 8.837 7.163 16 16 16h16c8.837 0 16-7.163 16-16v-40h48c8.837 0 16-7.163 16-16v-16c0-8.837-7.163-16-16-16z\"],\n        \"certificate\": [512, 512, [], \"f0a3\", \"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\"],\n        \"chart-area\": [512, 512, [], \"f1fe\", \"M500 384c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v308h436zM372.7 159.5L288 216l-85.3-113.7c-5.1-6.8-15.5-6.3-19.9 1L96 248v104h384l-89.9-187.8c-3.2-6.5-11.4-8.7-17.4-4.7z\"],\n        \"chart-bar\": [512, 512, [], \"f080\", \"M500 384c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v308h436zm-308-44v-72c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v72c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0V204c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v136c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v200c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0V108c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v232c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"],\n        \"chart-line\": [512, 512, [], \"f201\", \"M500 384c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v308h436zM456 96H344c-21.4 0-32.1 25.9-17 41l32.9 32.9-72 72.9-55.6-55.6c-4.7-4.7-12.2-4.7-16.9 0L96.4 305c-4.7 4.6-4.8 12.2-.2 16.9l28.5 29.4c4.7 4.8 12.4 4.9 17.1.1l82.1-82.1 55.5 55.5c4.7 4.7 12.3 4.7 17 0l109.2-109.2L439 249c15.1 15.1 41 4.4 41-17V120c0-13.3-10.7-24-24-24z\"],\n        \"chart-pie\": [576, 512, [], \"f200\", \"M288 12.3V240h227.7c6.9 0 12.3-5.8 12-12.7-6.4-122.4-104.5-220.6-227-227-6.9-.3-12.7 5.1-12.7 12zM552.7 288c6.9 0 12.3 5.8 12 12.7-2.8 53.2-23.2 105.6-61.2 147.8-4.6 5.1-12.6 5.4-17.5.5L325 288h227.7zM401 433c4.8 4.8 4.7 12.8-.4 17.3-42.6 38.4-99 61.7-160.8 61.7C107.6 511.9-.2 403.8 0 271.5.2 143.4 100.8 38.9 227.3 32.3c6.9-.4 12.7 5.1 12.7 12V272l161 161z\"],\n        \"check\": [512, 512, [], \"f00c\", \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"],\n        \"check-circle\": [512, 512, [], \"f058\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\"],\n        \"check-square\": [448, 512, [], \"f14a\", \"M400 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zm-204.686-98.059l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.248-16.379-6.249-22.628 0L184 302.745l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.25 16.379 6.25 22.628.001z\"],\n        \"chess\": [512, 512, [], \"f439\", \"M199.821 217.633a6 6 0 0 1 6 6l-.001 20.766a6 6 0 0 1-6 6h-25.805c0 31.715-2.153 96.201 17.398 153.229H64.597C84.54 345.452 82.02 279.245 82.02 250.399H56.183a6 6 0 0 1-6-6l.002-20.766a6 6 0 0 1 6-6h143.636zM41.554 115.088l34.58 95.071h103.734l34.572-95.072c2.846-7.826-2.95-16.101-11.278-16.101H152v-30.22h21.57a6 6 0 0 0 6-6V40.383a6 6 0 0 0-6-6h-28.367V6a6 6 0 0 0-6-6H116.82a6 6 0 0 0-6 6v28.383H82.421a6 6 0 0 0-6 6v22.383a6 6 0 0 0 6 6H104v30.219H52.831c-8.328.001-14.124 8.276-11.277 16.103zM222.678 445.17v-28.067a6 6 0 0 0-6-6H39.322a6 6 0 0 0-6 6v28.067l-22.148 14.164a6 6 0 0 0-2.767 5.055V506a6 6 0 0 0 6 6h227.187a6 6 0 0 0 6-6v-41.612a6 6 0 0 0-2.767-5.055l-22.149-14.163zm90.578-144.225l24.88 16.963c.09 18.124-.167 63.904-11.905 114.522h147.526c-11.713-50.475-11.969-96.324-11.882-114.537l24.859-16.949a3.856 3.856 0 0 0 1.684-3.187v-69.901a3.857 3.857 0 0 0-3.857-3.857h-27.655a3.857 3.857 0 0 0-3.857 3.857v31.514h-22.737v-31.514a3.857 3.857 0 0 0-3.858-3.857h-52.918a3.857 3.857 0 0 0-3.857 3.857v31.514h-22.737v-31.514a3.857 3.857 0 0 0-3.857-3.857H315.43a3.857 3.857 0 0 0-3.857 3.857v69.901a3.855 3.855 0 0 0 1.683 3.188zm71.585 51.906c0-8.372 6.787-15.158 15.159-15.158s15.158 6.787 15.158 15.158v30.318h-30.317v-30.318zM504.62 470.059l-13.664-10.639v-15.552a3.857 3.857 0 0 0-3.857-3.857H312.915a3.857 3.857 0 0 0-3.857 3.857v15.552l-13.677 10.639a3.857 3.857 0 0 0-1.488 3.044v35.039a3.857 3.857 0 0 0 3.857 3.857h204.5a3.857 3.857 0 0 0 3.857-3.857v-35.04a3.859 3.859 0 0 0-1.487-3.043z\"],\n        \"chess-bishop\": [320, 512, [], \"f43a\", \"M123.158 77.881C107.369 72.53 96 57.597 96 40c0-22.091 17.909-40 40-40h47.796c22.091 0 40 17.909 40 40 0 17.541-11.295 32.434-27.005 37.829 23.993 16.657 48.577 46.839 68.703 82.05L144.929 280.443a6 6 0 0 0 0 8.485l14.142 14.142a6 6 0 0 0 8.485 0L280.9 189.726c17.758 38.297 29.371 79.443 29.371 114.273 0 53.786-22.897 75.788-58.446 86.033V448H68.174v-57.97C32.631 379.784 9.739 357.781 9.739 304c0-78.029 58.281-187.766 113.419-226.119zM320 500v-24c0-6.627-5.373-12-12-12H12c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12z\"],\n        \"chess-board\": [512, 512, [], \"f43c\", \"M256 256v64h-64v-64h64zm0-256h-64v64h64V0zm0 256h64v-64h-64v64zM384 0h-64v64h64V0zm0 512h64v-64h-64v64zm128-64v-64h-64v64h64zm-384 64h64v-64h-64v64zm0-512H64v64h64V0zm384 192v-64h-64v64h64zm0 128v-64h-64v64h64zM0 512h64v-64H0v64zM0 64v64h64V64H0zm0 128v64h64v-64H0zm0 128v64h64v-64H0zm256 192h64v-64h-64v64zm-64-128v64h64v-64h-64zm64-192v-64h-64v64h64zM64 384v64h64v-64H64zm64-128H64v64h64v-64zm256 128h64v-64h-64v64zM512 0h-64v64h64V0zM384 256h64v-64h-64v64zm0-192v64h64V64h-64zm-64 320v64h64v-64h-64zm-192-64v64h64v-64h-64zm128 0v64h64v-64h-64zm-64-128h-64v64h64v-64zm-64-64H64v64h64v-64zm192 192h64v-64h-64v64zM192 128V64h-64v64h64zm128 0V64h-64v64h64zm0 64h64v-64h-64v64z\"],\n        \"chess-king\": [448, 512, [], \"f43f\", \"M416 476v24c0 6.627-5.373 12-12 12H44c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12zm-8.033-324H248v-48h50a6 6 0 0 0 6-6V62a6 6 0 0 0-6-6h-50V6a6 6 0 0 0-6-6h-36a6 6 0 0 0-6 6v50h-50a6 6 0 0 0-6 6v36a6 6 0 0 0 6 6h50v48H40.033c-27.574 0-46.879 27.244-37.738 53.259L87.582 448h272.836l85.287-242.741C454.846 179.244 435.541 152 407.967 152z\"],\n        \"chess-knight\": [384, 512, [], \"f441\", \"M352 224v224H32v-46.557c0-30.302 17.12-58.003 44.223-71.554l57.243-28.622A48 48 0 0 0 160 258.334V208l-22.127 11.063a23.996 23.996 0 0 0-12.55 15.645l-11.835 47.338a12 12 0 0 1-7.185 8.231l-29.601 11.84a11.998 11.998 0 0 1-9.33-.176L7.126 275.167A12 12 0 0 1 0 264.201v-158.26c0-6.365 2.529-12.47 7.03-16.971L16 80 1.789 51.578A16.937 16.937 0 0 1 0 44c0-6.627 5.373-12 12-12h148c106.039 0 192 85.961 192 192zm20 240H12c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h360c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12zM52 128c-11.046 0-20 8.954-20 20s8.954 20 20 20 20-8.954 20-20-8.954-20-20-20z\"],\n        \"chess-pawn\": [320, 512, [], \"f443\", \"M264 448H56s60-42.743 60-176H84c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h40.209C95.721 210.56 76 181.588 76 148c0-46.392 37.608-84 84-84s84 37.608 84 84c0 33.588-19.721 62.56-48.209 76H236c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12h-32c0 133.257 60 176 60 176zm28 16H28c-6.627 0-12 5.373-12 12v24c0 6.627 5.373 12 12 12h264c6.627 0 12-5.373 12-12v-24c0-6.627-5.373-12-12-12z\"],\n        \"chess-queen\": [512, 512, [], \"f445\", \"M436 512H76c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v24c0 6.627-5.373 12-12 12zM255.579 0c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zm204.568 154.634c-5.768-3.045-12.916-.932-16.082 4.77-8.616 15.516-22.747 37.801-44.065 37.801-28.714 0-30.625-19.804-31.686-57.542-.183-6.492-5.501-11.664-11.995-11.664h-41.006c-5.175 0-9.754 3.328-11.388 8.238-8.89 26.709-26.073 40.992-47.925 40.992s-39.034-14.283-47.925-40.992c-1.634-4.91-6.213-8.238-11.388-8.238h-41.005c-6.495 0-11.813 5.174-11.995 11.667-1.052 37.642-2.934 57.539-31.688 57.539-20.691 0-33.817-20.224-44.425-38.025-3.266-5.48-10.258-7.431-15.899-4.453l-39.179 20.679a12 12 0 0 0-5.51 15.145L112 448h288l105.014-257.448a12 12 0 0 0-5.51-15.145l-39.357-20.773z\"],\n        \"chess-rook\": [384, 512, [], \"f447\", \"M81.241 215.027C80.957 258.92 77.411 348.076 48 448h287.982c-29.4-99.604-32.936-188.912-33.221-232.975l45.418-42.312a11.998 11.998 0 0 0 3.82-8.78V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v44h-48V44c0-6.627-5.373-12-12-12h-72c-6.627 0-12 5.373-12 12v44H96V44c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v119.932c0 3.33 1.384 6.51 3.82 8.78l45.421 42.315zM160 256c0-17.673 14.327-32 32-32 17.673 0 32 14.327 32 32v64.004h-64V256zm224 220v24c0 6.627-5.373 12-12 12H12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12z\"],\n        \"chevron-circle-down\": [512, 512, [], \"f13a\", \"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zM273 369.9l135.5-135.5c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L256 285.1 154.4 183.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L239 369.9c9.4 9.4 24.6 9.4 34 0z\"],\n        \"chevron-circle-left\": [512, 512, [], \"f137\", \"M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zM142.1 273l135.5 135.5c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L226.9 256l101.6-101.6c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L142.1 239c-9.4 9.4-9.4 24.6 0 34z\"],\n        \"chevron-circle-right\": [512, 512, [], \"f138\", \"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm113.9 231L234.4 103.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L285.1 256 183.5 357.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L369.9 273c9.4-9.4 9.4-24.6 0-34z\"],\n        \"chevron-circle-up\": [512, 512, [], \"f139\", \"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm231-113.9L103.5 277.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L256 226.9l101.6 101.6c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L273 142.1c-9.4-9.4-24.6-9.4-34 0z\"],\n        \"chevron-down\": [448, 512, [], \"f078\", \"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"],\n        \"chevron-left\": [320, 512, [], \"f053\", \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\"],\n        \"chevron-right\": [320, 512, [], \"f054\", \"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"],\n        \"chevron-up\": [448, 512, [], \"f077\", \"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\"],\n        \"child\": [384, 512, [], \"f1ae\", \"M120 72c0-39.765 32.235-72 72-72s72 32.235 72 72c0 39.764-32.235 72-72 72s-72-32.236-72-72zm254.627 1.373c-12.496-12.497-32.758-12.497-45.254 0L242.745 160H141.254L54.627 73.373c-12.496-12.497-32.758-12.497-45.254 0-12.497 12.497-12.497 32.758 0 45.255L104 213.254V480c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V368h16v112c0 17.673 14.327 32 32 32h16c17.673 0 32-14.327 32-32V213.254l94.627-94.627c12.497-12.497 12.497-32.757 0-45.254z\"],\n        \"circle\": [512, 512, [], \"f111\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\"],\n        \"circle-notch\": [512, 512, [], \"f1ce\", \"M288 39.056v16.659c0 10.804 7.281 20.159 17.686 23.066C383.204 100.434 440 171.518 440 256c0 101.689-82.295 184-184 184-101.689 0-184-82.295-184-184 0-84.47 56.786-155.564 134.312-177.219C216.719 75.874 224 66.517 224 55.712V39.064c0-15.709-14.834-27.153-30.046-23.234C86.603 43.482 7.394 141.206 8.003 257.332c.72 137.052 111.477 246.956 248.531 246.667C393.255 503.711 504 392.788 504 256c0-115.633-79.14-212.779-186.211-240.236C302.678 11.889 288 23.456 288 39.056z\"],\n        \"clipboard\": [384, 512, [], \"f328\", \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\"],\n        \"clipboard-check\": [384, 512, [], \"f46c\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM192 40c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm121.2 231.8l-143 141.8c-4.7 4.7-12.3 4.6-17-.1l-82.6-83.3c-4.7-4.7-4.6-12.3.1-17L99.1 285c4.7-4.7 12.3-4.6 17 .1l46 46.4 106-105.2c4.7-4.7 12.3-4.6 17 .1l28.2 28.4c4.7 4.8 4.6 12.3-.1 17z\"],\n        \"clipboard-list\": [384, 512, [], \"f46d\", \"M336 64h-80c0-35.3-28.7-64-64-64s-64 28.7-64 64H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM96 424c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm0-96c-13.3 0-24-10.7-24-24s10.7-24 24-24 24 10.7 24 24-10.7 24-24 24zm96-192c13.3 0 24 10.7 24 24s-10.7 24-24 24-24-10.7-24-24 10.7-24 24-24zm128 368c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16zm0-96c0 4.4-3.6 8-8 8H168c-4.4 0-8-3.6-8-8v-16c0-4.4 3.6-8 8-8h144c4.4 0 8 3.6 8 8v16z\"],\n        \"clock\": [512, 512, [], \"f017\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm57.1 350.1L224.9 294c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v137.7l63.5 46.2c5.4 3.9 6.5 11.4 2.6 16.8l-28.2 38.8c-3.9 5.3-11.4 6.5-16.8 2.6z\"],\n        \"clone\": [512, 512, [], \"f24d\", \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\"],\n        \"closed-captioning\": [512, 512, [], \"f20a\", \"M464 64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48zM218.1 287.7c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.6 56.8-172.8 32.1-172.8-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7l-17.5 30.5c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2.1 48 51.1 70.5 92.3 32.6zm190.4 0c2.8-2.5 7.1-2.1 9.2.9l19.5 27.7c1.7 2.4 1.5 5.6-.5 7.7-53.5 56.9-172.7 32.1-172.7-67.9 0-97.3 121.7-119.5 172.5-70.1 2.1 2 2.5 3.2 1 5.7L420 222.2c-1.9 3.1-6.2 4-9.1 1.7-40.8-32-94.6-14.9-94.6 31.2 0 48 51 70.5 92.2 32.6z\"],\n        \"cloud\": [640, 512, [], \"f0c2\", \"M537.585 226.56C541.725 215.836 544 204.184 544 192c0-53.019-42.981-96-96-96-19.729 0-38.065 5.954-53.316 16.159C367.042 64.248 315.288 32 256 32c-88.366 0-160 71.634-160 160 0 2.728.07 5.439.204 8.133C40.171 219.845 0 273.227 0 336c0 79.529 64.471 144 144 144h368c70.692 0 128-57.308 128-128 0-61.93-43.983-113.586-102.415-125.44z\"],\n        \"cloud-download-alt\": [640, 512, [], \"f381\", \"M640 352c0 70.692-57.308 128-128 128H144C64.471 480 0 415.529 0 336c0-62.773 40.171-116.155 96.204-135.867A163.68 163.68 0 0 1 96 192c0-88.366 71.634-160 160-160 59.288 0 111.042 32.248 138.684 80.159C409.935 101.954 428.271 96 448 96c53.019 0 96 42.981 96 96 0 12.184-2.275 23.836-6.415 34.56C596.017 238.414 640 290.07 640 352zm-246.627-64H328V176c0-8.837-7.164-16-16-16h-48c-8.836 0-16 7.163-16 16v112h-65.373c-14.254 0-21.393 17.234-11.314 27.314l105.373 105.373c6.248 6.248 16.379 6.248 22.627 0l105.373-105.373c10.08-10.08 2.941-27.314-11.313-27.314z\"],\n        \"cloud-upload-alt\": [640, 512, [], \"f382\", \"M640 352c0 70.692-57.308 128-128 128H144C64.471 480 0 415.529 0 336c0-62.773 40.171-116.155 96.204-135.867A163.68 163.68 0 0 1 96 192c0-88.366 71.634-160 160-160 59.288 0 111.042 32.248 138.684 80.159C409.935 101.954 428.271 96 448 96c53.019 0 96 42.981 96 96 0 12.184-2.275 23.836-6.415 34.56C596.017 238.414 640 290.07 640 352zm-235.314-91.314L299.314 155.314c-6.248-6.248-16.379-6.248-22.627 0L171.314 260.686c-10.08 10.08-2.941 27.314 11.313 27.314H248v112c0 8.837 7.164 16 16 16h48c8.836 0 16-7.163 16-16V288h65.373c14.254 0 21.393-17.234 11.313-27.314z\"],\n        \"code\": [640, 512, [], \"f121\", \"M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z\"],\n        \"code-branch\": [384, 512, [], \"f126\", \"M384 144c0-44.2-35.8-80-80-80s-80 35.8-80 80c0 36.4 24.3 67.1 57.5 76.8-.6 16.1-4.2 28.5-11 36.9-15.4 19.2-49.3 22.4-85.2 25.7-28.2 2.6-57.4 5.4-81.3 16.9v-144c32.5-10.2 56-40.5 56-76.3 0-44.2-35.8-80-80-80S0 35.8 0 80c0 35.8 23.5 66.1 56 76.3v199.3C23.5 365.9 0 396.2 0 432c0 44.2 35.8 80 80 80s80-35.8 80-80c0-34-21.2-63.1-51.2-74.6 3.1-5.2 7.8-9.8 14.9-13.4 16.2-8.2 40.4-10.4 66.1-12.8 42.2-3.9 90-8.4 118.2-43.4 14-17.4 21.1-39.8 21.6-67.9 31.6-10.8 54.4-40.7 54.4-75.9zM80 64c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm0 384c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm224-320c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16z\"],\n        \"coffee\": [640, 512, [], \"f0f4\", \"M192 384h192c53 0 96-43 96-96h32c70.6 0 128-57.4 128-128S582.6 32 512 32H120c-13.3 0-24 10.7-24 24v232c0 53 43 96 96 96zM512 96c35.3 0 64 28.7 64 64s-28.7 64-64 64h-32V96h32zm47.7 384H48.3c-47.6 0-61-64-36-64h583.3c25 0 11.8 64-35.9 64z\"],\n        \"cog\": [512, 512, [], \"f013\", \"M444.788 291.1l42.616 24.599c4.867 2.809 7.126 8.618 5.459 13.985-11.07 35.642-29.97 67.842-54.689 94.586a12.016 12.016 0 0 1-14.832 2.254l-42.584-24.595a191.577 191.577 0 0 1-60.759 35.13v49.182a12.01 12.01 0 0 1-9.377 11.718c-34.956 7.85-72.499 8.256-109.219.007-5.49-1.233-9.403-6.096-9.403-11.723v-49.184a191.555 191.555 0 0 1-60.759-35.13l-42.584 24.595a12.016 12.016 0 0 1-14.832-2.254c-24.718-26.744-43.619-58.944-54.689-94.586-1.667-5.366.592-11.175 5.459-13.985L67.212 291.1a193.48 193.48 0 0 1 0-70.199l-42.616-24.599c-4.867-2.809-7.126-8.618-5.459-13.985 11.07-35.642 29.97-67.842 54.689-94.586a12.016 12.016 0 0 1 14.832-2.254l42.584 24.595a191.577 191.577 0 0 1 60.759-35.13V25.759a12.01 12.01 0 0 1 9.377-11.718c34.956-7.85 72.499-8.256 109.219-.007 5.49 1.233 9.403 6.096 9.403 11.723v49.184a191.555 191.555 0 0 1 60.759 35.13l42.584-24.595a12.016 12.016 0 0 1 14.832 2.254c24.718 26.744 43.619 58.944 54.689 94.586 1.667 5.366-.592 11.175-5.459 13.985L444.788 220.9a193.485 193.485 0 0 1 0 70.2zM336 256c0-44.112-35.888-80-80-80s-80 35.888-80 80 35.888 80 80 80 80-35.888 80-80z\"],\n        \"cogs\": [640, 512, [], \"f085\", \"M512.1 191l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0L552 6.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zm-10.5-58.8c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.7-82.4 14.3-52.8 52.8zM386.3 286.1l33.7 16.8c10.1 5.8 14.5 18.1 10.5 29.1-8.9 24.2-26.4 46.4-42.6 65.8-7.4 8.9-20.2 11.1-30.3 5.3l-29.1-16.8c-16 13.7-34.6 24.6-54.9 31.7v33.6c0 11.6-8.3 21.6-19.7 23.6-24.6 4.2-50.4 4.4-75.9 0-11.5-2-20-11.9-20-23.6V418c-20.3-7.2-38.9-18-54.9-31.7L74 403c-10 5.8-22.9 3.6-30.3-5.3-16.2-19.4-33.3-41.6-42.2-65.7-4-10.9.4-23.2 10.5-29.1l33.3-16.8c-3.9-20.9-3.9-42.4 0-63.4L12 205.8c-10.1-5.8-14.6-18.1-10.5-29 8.9-24.2 26-46.4 42.2-65.8 7.4-8.9 20.2-11.1 30.3-5.3l29.1 16.8c16-13.7 34.6-24.6 54.9-31.7V57.1c0-11.5 8.2-21.5 19.6-23.5 24.6-4.2 50.5-4.4 76-.1 11.5 2 20 11.9 20 23.6v33.6c20.3 7.2 38.9 18 54.9 31.7l29.1-16.8c10-5.8 22.9-3.6 30.3 5.3 16.2 19.4 33.2 41.6 42.1 65.8 4 10.9.1 23.2-10 29.1l-33.7 16.8c3.9 21 3.9 42.5 0 63.5zm-117.6 21.1c59.2-77-28.7-164.9-105.7-105.7-59.2 77 28.7 164.9 105.7 105.7zm243.4 182.7l-8.2 14.3c-3 5.3-9.4 7.5-15.1 5.4-11.8-4.4-22.6-10.7-32.1-18.6-4.6-3.8-5.8-10.5-2.8-15.7l8.2-14.3c-6.9-8-12.3-17.3-15.9-27.4h-16.5c-6 0-11.2-4.3-12.2-10.3-2-12-2.1-24.6 0-37.1 1-6 6.2-10.4 12.2-10.4h16.5c3.6-10.1 9-19.4 15.9-27.4l-8.2-14.3c-3-5.2-1.9-11.9 2.8-15.7 9.5-7.9 20.4-14.2 32.1-18.6 5.7-2.1 12.1.1 15.1 5.4l8.2 14.3c10.5-1.9 21.2-1.9 31.7 0l8.2-14.3c3-5.3 9.4-7.5 15.1-5.4 11.8 4.4 22.6 10.7 32.1 18.6 4.6 3.8 5.8 10.5 2.8 15.7l-8.2 14.3c6.9 8 12.3 17.3 15.9 27.4h16.5c6 0 11.2 4.3 12.2 10.3 2 12 2.1 24.6 0 37.1-1 6-6.2 10.4-12.2 10.4h-16.5c-3.6 10.1-9 19.4-15.9 27.4l8.2 14.3c3 5.2 1.9 11.9-2.8 15.7-9.5 7.9-20.4 14.2-32.1 18.6-5.7 2.1-12.1-.1-15.1-5.4l-8.2-14.3c-10.4 1.9-21.2 1.9-31.7 0zM501.6 431c38.5 29.6 82.4-14.3 52.8-52.8-38.5-29.6-82.4 14.3-52.8 52.8z\"],\n        \"columns\": [512, 512, [], \"f0db\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64V160h160v256zm224 0H288V160h160v256z\"],\n        \"comment\": [576, 512, [], \"f075\", \"M576 240c0 115-129 208-288 208-48.3 0-93.9-8.6-133.9-23.8-40.3 31.2-89.8 50.3-142.4 55.7-5.2.6-10.2-2.8-11.5-7.7-1.3-5 2.7-8.1 6.6-11.8 19.3-18.4 42.7-32.8 51.9-94.6C21.9 330.9 0 287.3 0 240 0 125.1 129 32 288 32s288 93.1 288 208z\"],\n        \"comment-alt\": [576, 512, [], \"f27a\", \"M576 240c0 115-129 208-288 208-48.3 0-93.9-8.6-133.9-23.8-40.3 31.2-89.8 50.3-142.4 55.7-5.2.6-10.2-2.8-11.5-7.7-1.3-5 2.7-8.1 6.6-11.8 19.3-18.4 42.7-32.8 51.9-94.6C21.9 330.9 0 287.3 0 240 0 125.1 129 32 288 32s288 93.1 288 208zm-416-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm128 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm128 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"],\n        \"comments\": [576, 512, [], \"f086\", \"M224 358.857c-37.599 0-73.027-6.763-104.143-18.7-31.375 24.549-69.869 39.508-110.764 43.796a8.632 8.632 0 0 1-.89.047c-3.736 0-7.111-2.498-8.017-6.061-.98-3.961 2.088-6.399 5.126-9.305 15.017-14.439 33.222-25.79 40.342-74.297C17.015 266.886 0 232.622 0 195.429 0 105.16 100.297 32 224 32s224 73.159 224 163.429c-.001 90.332-100.297 163.428-224 163.428zm347.067 107.174c-13.944-13.127-30.849-23.446-37.46-67.543 68.808-64.568 52.171-156.935-37.674-207.065.031 1.334.066 2.667.066 4.006 0 122.493-129.583 216.394-284.252 211.222 38.121 30.961 93.989 50.492 156.252 50.492 34.914 0 67.811-6.148 96.704-17 29.134 22.317 64.878 35.916 102.853 39.814 3.786.395 7.363-1.973 8.27-5.467.911-3.601-1.938-5.817-4.759-8.459z\"],\n        \"compass\": [512, 512, [], \"f14e\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM307.446 120.844l-102.642 97.779a23.997 23.997 0 0 0-6.772 11.729l-33.359 137.779c-5.68 23.459 22.777 39.318 39.88 23.024l102.64-97.779a23.99 23.99 0 0 0 6.772-11.729l33.359-137.779c5.618-23.198-22.591-39.493-39.878-23.024zM256 224c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"],\n        \"compress\": [448, 512, [], \"f066\", \"M436 192H312c-13.3 0-24-10.7-24-24V44c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v84h84c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm-276-24V44c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v84H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24zm0 300V344c0-13.3-10.7-24-24-24H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-84h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12H312c-13.3 0-24 10.7-24 24v124c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"],\n        \"copy\": [448, 512, [], \"f0c5\", \"M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z\"],\n        \"copyright\": [512, 512, [], \"f1f9\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm117.134 346.753c-1.592 1.867-39.776 45.731-109.851 45.731-84.692 0-144.484-63.26-144.484-145.567 0-81.303 62.004-143.401 143.762-143.401 66.957 0 101.965 37.315 103.422 38.904a12 12 0 0 1 1.238 14.623l-22.38 34.655c-4.049 6.267-12.774 7.351-18.234 2.295-.233-.214-26.529-23.88-61.88-23.88-46.116 0-73.916 33.575-73.916 76.082 0 39.602 25.514 79.692 74.277 79.692 38.697 0 65.28-28.338 65.544-28.625 5.132-5.565 14.059-5.033 18.508 1.053l24.547 33.572a12.001 12.001 0 0 1-.553 14.866z\"],\n        \"credit-card\": [576, 512, [], \"f09d\", \"M0 432c0 26.5 21.5 48 48 48h480c26.5 0 48-21.5 48-48V256H0v176zm192-68c0-6.6 5.4-12 12-12h136c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H204c-6.6 0-12-5.4-12-12v-40zm-128 0c0-6.6 5.4-12 12-12h72c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12v-40zM576 80v48H0V80c0-26.5 21.5-48 48-48h480c26.5 0 48 21.5 48 48z\"],\n        \"crop\": [512, 512, [], \"f125\", \"M488 352h-40V109.3l57-57c9.4-9.4 9.4-24.6 0-33.9L493.7 7c-9.4-9.4-24.6-9.4-33.9 0l-57 57H160V24c0-13.3-10.7-24-24-24H88C74.7 0 64 10.7 64 24v40H24C10.7 64 0 74.7 0 88v48c0 13.3 10.7 24 24 24h40v264c0 13.3 10.7 24 24 24h264v40c0 13.3 10.7 24 24 24h48c13.3 0 24-10.7 24-24v-40h40c13.3 0 24-10.7 24-24v-48c0-13.3-10.7-24-24-24zM306.7 160L160 306.7V160h146.7zM205.3 352L352 205.3V352H205.3z\"],\n        \"crosshairs\": [512, 512, [], \"f05b\", \"M500 224h-30.364C455.724 130.325 381.675 56.276 288 42.364V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v30.364C130.325 56.276 56.276 130.325 42.364 224H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h30.364C56.276 381.675 130.325 455.724 224 469.636V500c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-30.364C381.675 455.724 455.724 381.675 469.636 288H500c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zM288 404.634V364c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40.634C165.826 392.232 119.783 346.243 107.366 288H148c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40.634C119.768 165.826 165.757 119.783 224 107.366V148c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40.634C346.174 119.768 392.217 165.757 404.634 224H364c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40.634C392.232 346.174 346.243 392.217 288 404.634zM288 256c0 17.673-14.327 32-32 32s-32-14.327-32-32c0-17.673 14.327-32 32-32s32 14.327 32 32z\"],\n        \"cube\": [512, 512, [], \"f1b2\", \"M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z\"],\n        \"cubes\": [512, 512, [], \"f1b3\", \"M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z\"],\n        \"cut\": [448, 512, [], \"f0c4\", \"M444.485 422.426c4.689 4.689 4.684 12.287 0 16.971-32.804 32.804-85.991 32.804-118.795 0L210.176 323.883l-24.859 24.859C189.63 359.657 192 371.552 192 384c0 53.019-42.981 96-96 96S0 437.019 0 384s42.981-96 96-96c4.536 0 8.995.322 13.363.93l32.93-32.93-32.93-32.93c-4.368.608-8.827.93-13.363.93-53.019 0-96-42.981-96-96s42.981-96 96-96 96 42.981 96 96c0 12.448-2.37 24.343-6.682 35.258l24.859 24.859L325.69 72.603c32.804-32.804 85.991-32.804 118.795 0 4.684 4.684 4.689 12.282 0 16.971L278.059 256l166.426 166.426zM96 96c-17.645 0-32 14.355-32 32s14.355 32 32 32 32-14.355 32-32-14.355-32-32-32m0 256c-17.645 0-32 14.355-32 32s14.355 32 32 32 32-14.355 32-32-14.355-32-32-32m112-108c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12z\"],\n        \"database\": [448, 512, [], \"f1c0\", \"M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z\"],\n        \"deaf\": [512, 512, [], \"f2a4\", \"M216 260c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-44.112 35.888-80 80-80s80 35.888 80 80c0 15.464-12.536 28-28 28s-28-12.536-28-28c0-13.234-10.767-24-24-24s-24 10.766-24 24zm24-176c-97.047 0-176 78.953-176 176 0 15.464 12.536 28 28 28s28-12.536 28-28c0-66.168 53.832-120 120-120s120 53.832 120 120c0 75.164-71.009 70.311-71.997 143.622L288 404c0 28.673-23.327 52-52 52-15.464 0-28 12.536-28 28s12.536 28 28 28c59.475 0 107.876-48.328 108-107.774.595-34.428 72-48.24 72-144.226 0-97.047-78.953-176-176-176zm268.485-52.201L480.2 3.515c-4.687-4.686-12.284-4.686-16.971 0L376.2 90.544c-4.686 4.686-4.686 12.284 0 16.971l28.285 28.285c4.686 4.686 12.284 4.686 16.97 0l87.03-87.029c4.687-4.688 4.687-12.286 0-16.972zM168.97 314.745c-4.686-4.686-12.284-4.686-16.97 0L3.515 463.23c-4.686 4.686-4.686 12.284 0 16.971L31.8 508.485c4.687 4.686 12.284 4.686 16.971 0L197.256 360c4.686-4.686 4.686-12.284 0-16.971l-28.286-28.284z\"],\n        \"desktop\": [576, 512, [], \"f108\", \"M528 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h192l-16 48h-72c-13.3 0-24 10.7-24 24s10.7 24 24 24h272c13.3 0 24-10.7 24-24s-10.7-24-24-24h-72l-16-48h192c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h448v288z\"],\n        \"dna\": [448, 512, [], \"f471\", \"M447.9 17.9C449 8.4 441.6.1 432 .1L399.6 0c-8.1 0-14.9 5.9-16 13.9-.7 4.9-1.8 11.1-3.4 18.1H67.9c-1.6-6.9-2.9-13.2-3.5-18.1-1.1-8-7.9-14-16-13.9L16.1.1C6.5.1-1 8.4.1 17.9c4.6 37.9 25.6 129 118.9 207.7 17.6-12.4 37.1-24.2 58.5-35.4-6.2-4.6-11.4-9.4-17-14.2h127.6c-21.3 18.1-47 35.6-78.7 51.4C37.5 312.9 5.9 446.2.1 494.1c-1.1 9.5 6.3 17.8 15.9 17.8l32.3.1c8.1 0 14.9-5.9 16-13.9.7-4.9 1.8-11.1 3.4-18.1h312.4c1.6 7 2.7 13.1 3.4 18.1 1.1 8 7.9 14 16 13.9l32.3-.1c9.6 0 17.1-8.3 15.9-17.8-5-42.9-31.1-153.9-159.7-238.1C416.5 171.8 442.7 60.8 447.9 17.9zM224 292.4c25.1 13.7 46.4 28.4 64.3 43.6H159.7c17.9-15.2 39.2-30 64.3-43.6zM92.9 416c5.8-10.4 12.8-21.1 21-32h220c8.3 10.9 15.3 21.6 21 32h-262zM355.1 96c-5.8 10.4-12.8 21.1-21 32H114.6c-8.3-10.9-15.4-21.6-21.2-32h261.7z\"],\n        \"dollar-sign\": [320, 512, [], \"f155\", \"M113.411 169.375c0-23.337 21.536-38.417 54.865-38.417 26.726 0 54.116 12.263 76.461 28.333 5.88 4.229 14.13 2.354 17.575-4.017l23.552-43.549c2.649-4.898 1.596-10.991-2.575-14.68-24.281-21.477-59.135-34.09-91.289-37.806V12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v49.832c-58.627 13.29-97.299 55.917-97.299 108.639 0 123.533 184.765 110.81 184.765 169.414 0 19.823-16.311 41.158-52.124 41.158-30.751 0-62.932-15.88-87.848-35.887-5.31-4.264-13.082-3.315-17.159 2.14l-30.389 40.667c-3.627 4.854-3.075 11.657 1.302 15.847 24.049 23.02 59.249 41.255 98.751 47.973V500c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-47.438c65.72-10.215 106.176-59.186 106.176-116.516.001-119.688-184.764-103.707-184.764-166.671z\"],\n        \"dolly\": [576, 512, [], \"f472\", \"M294.2 277.7c18 5 34.7 13.4 49.5 24.7l161.5-53.8c8.4-2.8 12.9-11.9 10.1-20.2L454.9 47.2c-2.8-8.4-11.9-12.9-20.2-10.1l-61.1 20.4 33.1 99.4L346 177l-33.1-99.4-61.6 20.5c-8.4 2.8-12.9 11.9-10.1 20.2l53 159.4zm281 48.7L565 296c-2.8-8.4-11.9-12.9-20.2-10.1l-213.5 71.2c-17.2-22-43.6-36.4-73.5-37L158.4 21.9C154 8.8 141.8 0 128 0H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h88.9l92.2 276.7c-26.1 20.4-41.7 53.6-36 90.5 6.1 39.4 37.9 72.3 77.3 79.2 60.2 10.7 112.3-34.8 113.4-92.6l213.3-71.2c8.3-2.8 12.9-11.8 10.1-20.2zM256 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n        \"dolly-flatbed\": [640, 512, [], \"f474\", \"M208 320h384c8.8 0 16-7.2 16-16V48c0-8.8-7.2-16-16-16H448v128l-48-32-48 32V32H208c-8.8 0-16 7.2-16 16v256c0 8.8 7.2 16 16 16zm416 64H128V16c0-8.8-7.2-16-16-16H16C7.2 0 0 7.2 0 16v32c0 8.8 7.2 16 16 16h48v368c0 8.8 7.2 16 16 16h82.9c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H451c-1.8 5-2.9 10.4-2.9 16 0 26.5 21.5 48 48 48s48-21.5 48-48c0-5.6-1.2-11-2.9-16H624c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16z\"],\n        \"dot-circle\": [512, 512, [], \"f192\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm80 248c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80z\"],\n        \"download\": [512, 512, [], \"f019\", \"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"],\n        \"edit\": [576, 512, [], \"f044\", \"M402.6 83.2l90.2 90.2c3.8 3.8 3.8 10 0 13.8L274.4 405.6l-92.8 10.3c-12.4 1.4-22.9-9.1-21.5-21.5l10.3-92.8L388.8 83.2c3.8-3.8 10-3.8 13.8 0zm162-22.9l-48.8-48.8c-15.2-15.2-39.9-15.2-55.2 0l-35.4 35.4c-3.8 3.8-3.8 10 0 13.8l90.2 90.2c3.8 3.8 10 3.8 13.8 0l35.4-35.4c15.2-15.3 15.2-40 0-55.2zM384 346.2V448H64V128h229.8c3.2 0 6.2-1.3 8.5-3.5l40-40c7.6-7.6 2.2-20.5-8.5-20.5H48C21.5 64 0 85.5 0 112v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V306.2c0-10.7-12.9-16-20.5-8.5l-40 40c-2.2 2.3-3.5 5.3-3.5 8.5z\"],\n        \"eject\": [448, 512, [], \"f052\", \"M448 384v64c0 17.673-14.327 32-32 32H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h384c17.673 0 32 14.327 32 32zM48.053 320h351.886c41.651 0 63.581-49.674 35.383-80.435L259.383 47.558c-19.014-20.743-51.751-20.744-70.767 0L12.67 239.565C-15.475 270.268 6.324 320 48.053 320z\"],\n        \"ellipsis-h\": [512, 512, [], \"f141\", \"M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z\"],\n        \"ellipsis-v\": [192, 512, [], \"f142\", \"M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z\"],\n        \"envelope\": [512, 512, [], \"f0e0\", \"M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z\"],\n        \"envelope-open\": [512, 512, [], \"f2b6\", \"M512 464c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V200.724a48 48 0 0 1 18.387-37.776c24.913-19.529 45.501-35.365 164.2-121.511C199.412 29.17 232.797-.347 256 .003c23.198-.354 56.596 29.172 73.413 41.433 118.687 86.137 139.303 101.995 164.2 121.512A48 48 0 0 1 512 200.724V464zm-65.666-196.605c-2.563-3.728-7.7-4.595-11.339-1.907-22.845 16.873-55.462 40.705-105.582 77.079-16.825 12.266-50.21 41.781-73.413 41.43-23.211.344-56.559-29.143-73.413-41.43-50.114-36.37-82.734-60.204-105.582-77.079-3.639-2.688-8.776-1.821-11.339 1.907l-9.072 13.196a7.998 7.998 0 0 0 1.839 10.967c22.887 16.899 55.454 40.69 105.303 76.868 20.274 14.781 56.524 47.813 92.264 47.573 35.724.242 71.961-32.771 92.263-47.573 49.85-36.179 82.418-59.97 105.303-76.868a7.998 7.998 0 0 0 1.839-10.967l-9.071-13.196z\"],\n        \"envelope-square\": [448, 512, [], \"f199\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM178.117 262.104C87.429 196.287 88.353 196.121 64 177.167V152c0-13.255 10.745-24 24-24h272c13.255 0 24 10.745 24 24v25.167c-24.371 18.969-23.434 19.124-114.117 84.938-10.5 7.655-31.392 26.12-45.883 25.894-14.503.218-35.367-18.227-45.883-25.895zM384 217.775V360c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V217.775c13.958 10.794 33.329 25.236 95.303 70.214 14.162 10.341 37.975 32.145 64.694 32.01 26.887.134 51.037-22.041 64.72-32.025 61.958-44.965 81.325-59.406 95.283-70.199z\"],\n        \"eraser\": [512, 512, [], \"f12d\", \"M497.941 273.941c18.745-18.745 18.745-49.137 0-67.882l-160-160c-18.745-18.745-49.136-18.746-67.883 0l-256 256c-18.745 18.745-18.745 49.137 0 67.882l96 96A48.004 48.004 0 0 0 144 480h356c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H355.883l142.058-142.059zm-302.627-62.627l137.373 137.373L265.373 416H150.628l-80-80 124.686-124.686z\"],\n        \"euro-sign\": [320, 512, [], \"f153\", \"M310.706 413.765c-1.314-6.63-7.835-10.872-14.424-9.369-10.692 2.439-27.422 5.413-45.426 5.413-56.763 0-101.929-34.79-121.461-85.449h113.689a12 12 0 0 0 11.708-9.369l6.373-28.36c1.686-7.502-4.019-14.631-11.708-14.631H115.22c-1.21-14.328-1.414-28.287.137-42.245H261.95a12 12 0 0 0 11.723-9.434l6.512-29.755c1.638-7.484-4.061-14.566-11.723-14.566H130.184c20.633-44.991 62.69-75.03 117.619-75.03 14.486 0 28.564 2.25 37.851 4.145 6.216 1.268 12.347-2.498 14.002-8.623l11.991-44.368c1.822-6.741-2.465-13.616-9.326-14.917C290.217 34.912 270.71 32 249.635 32 152.451 32 74.03 92.252 45.075 176H12c-6.627 0-12 5.373-12 12v29.755c0 6.627 5.373 12 12 12h21.569c-1.009 13.607-1.181 29.287-.181 42.245H12c-6.627 0-12 5.373-12 12v28.36c0 6.627 5.373 12 12 12h30.114C67.139 414.692 145.264 480 249.635 480c26.301 0 48.562-4.544 61.101-7.788 6.167-1.595 10.027-7.708 8.788-13.957l-8.818-44.49z\"],\n        \"exchange-alt\": [512, 512, [], \"f362\", \"M0 168v-16c0-13.255 10.745-24 24-24h360V80c0-21.367 25.899-32.042 40.971-16.971l80 80c9.372 9.373 9.372 24.569 0 33.941l-80 80C409.956 271.982 384 261.456 384 240v-48H24c-13.255 0-24-10.745-24-24zm488 152H128v-48c0-21.314-25.862-32.08-40.971-16.971l-80 80c-9.372 9.373-9.372 24.569 0 33.941l80 80C102.057 463.997 128 453.437 128 432v-48h360c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24z\"],\n        \"exclamation\": [192, 512, [], \"f12a\", \"M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z\"],\n        \"exclamation-circle\": [512, 512, [], \"f06a\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n        \"exclamation-triangle\": [576, 512, [], \"f071\", \"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"],\n        \"expand\": [448, 512, [], \"f065\", \"M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z\"],\n        \"expand-arrows-alt\": [448, 512, [], \"f31e\", \"M448.1 344v112c0 13.3-10.7 24-24 24h-112c-21.4 0-32.1-25.9-17-41l36.2-36.2L224 295.6 116.8 402.9 153 439c15.1 15.1 4.4 41-17 41H24c-13.3 0-24-10.7-24-24V344c0-21.4 25.9-32.1 41-17l36.2 36.2L184.5 256 77.2 148.7 41 185c-15.1 15.1-41 4.4-41-17V56c0-13.3 10.7-24 24-24h112c21.4 0 32.1 25.9 17 41l-36.2 36.2L224 216.4l107.3-107.3L295.1 73c-15.1-15.1-4.4-41 17-41h112c13.3 0 24 10.7 24 24v112c0 21.4-25.9 32.1-41 17l-36.2-36.2L263.6 256l107.3 107.3 36.2-36.2c15.1-15.2 41-4.5 41 16.9z\"],\n        \"external-link-alt\": [576, 512, [], \"f35d\", \"M576 24v127.984c0 21.461-25.96 31.98-40.971 16.971l-35.707-35.709-243.523 243.523c-9.373 9.373-24.568 9.373-33.941 0l-22.627-22.627c-9.373-9.373-9.373-24.569 0-33.941L442.756 76.676l-35.703-35.705C391.982 25.9 402.656 0 424.024 0H552c13.255 0 24 10.745 24 24zM407.029 270.794l-16 16A23.999 23.999 0 0 0 384 303.765V448H64V128h264a24.003 24.003 0 0 0 16.97-7.029l16-16C376.089 89.851 365.381 64 344 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V287.764c0-21.382-25.852-32.09-40.971-16.97z\"],\n        \"external-link-square-alt\": [448, 512, [], \"f360\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-88 16H248.029c-21.313 0-32.08 25.861-16.971 40.971l31.984 31.987L67.515 364.485c-4.686 4.686-4.686 12.284 0 16.971l31.029 31.029c4.687 4.686 12.285 4.686 16.971 0l195.526-195.526 31.988 31.991C358.058 263.977 384 253.425 384 231.979V120c0-13.255-10.745-24-24-24z\"],\n        \"eye\": [576, 512, [], \"f06e\", \"M569.354 231.631C512.969 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-75.162 0-136-60.827-136-136 0-75.162 60.826-136 136-136 75.162 0 136 60.826 136 136 0 75.162-60.826 136-136 136zm104-136c0 57.438-46.562 104-104 104s-104-46.562-104-104c0-17.708 4.431-34.379 12.236-48.973l-.001.032c0 23.651 19.173 42.823 42.824 42.823s42.824-19.173 42.824-42.823c0-23.651-19.173-42.824-42.824-42.824l-.032.001C253.621 156.431 270.292 152 288 152c57.438 0 104 46.562 104 104z\"],\n        \"eye-dropper\": [512, 512, [], \"f1fb\", \"M177.38 206.64L39.03 344.97A24.01 24.01 0 0 0 32 361.94V424L0 480l32 32 56-32h62.06c6.36 0 12.47-2.53 16.97-7.03l138.35-138.33-128-128zm225.552 30.47l16.952 16.95c9.37 9.37 9.37 24.57 0 33.94l-40.973 40.97c-9.292 9.312-24.506 9.434-33.94 0L183.028 167.03c-9.37-9.37-9.37-24.57 0-33.94L224 92.12c9.289-9.309 24.502-9.438 33.94 0l16.992 16.99 82.606-82.601c35.19-35.19 92.5-35.5 128 0 40.49 48.08 29.66 98.34 0 128l-82.606 82.601z\"],\n        \"eye-slash\": [576, 512, [], \"f070\", \"M286.693 391.984l32.579 46.542A333.958 333.958 0 0 1 288 440C168.19 440 63.031 376.051 6.646 280.369a47.999 47.999 0 0 1 0-48.739c24.023-40.766 56.913-75.775 96.024-102.537l57.077 81.539C154.736 224.82 152 240.087 152 256c0 74.736 60.135 135.282 134.693 135.984zm282.661-111.615c-31.667 53.737-78.747 97.46-135.175 125.475l.011.015 41.47 59.2c7.6 10.86 4.96 25.82-5.9 33.42l-13.11 9.18c-10.86 7.6-25.82 4.96-33.42-5.9L100.34 46.94c-7.6-10.86-4.96-25.82 5.9-33.42l13.11-9.18c10.86-7.6 25.82-4.96 33.42 5.9l51.038 72.617C230.68 75.776 258.905 72 288 72c119.81 0 224.969 63.949 281.354 159.631a48.002 48.002 0 0 1 0 48.738zM424 256c0-75.174-60.838-136-136-136-17.939 0-35.056 3.473-50.729 9.772l19.299 27.058c25.869-8.171 55.044-6.163 80.4 7.41h-.03c-23.65 0-42.82 19.17-42.82 42.82 0 23.626 19.147 42.82 42.82 42.82 23.65 0 42.82-19.17 42.82-42.82v-.03c18.462 34.49 16.312 77.914-8.25 110.95v.01l19.314 27.061C411.496 321.2 424 290.074 424 256zM262.014 356.727l-77.53-110.757c-5.014 52.387 29.314 98.354 77.53 110.757z\"],\n        \"fast-backward\": [512, 512, [], \"f049\", \"M0 436V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v151.9L235.5 71.4C256.1 54.3 288 68.6 288 96v131.9L459.5 71.4C480.1 54.3 512 68.6 512 96v320c0 27.4-31.9 41.7-52.5 24.6L288 285.3V416c0 27.4-31.9 41.7-52.5 24.6L64 285.3V436c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12z\"],\n        \"fast-forward\": [512, 512, [], \"f050\", \"M512 76v360c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V284.1L276.5 440.6c-20.6 17.2-52.5 2.8-52.5-24.6V284.1L52.5 440.6C31.9 457.8 0 443.4 0 416V96c0-27.4 31.9-41.7 52.5-24.6L224 226.8V96c0-27.4 31.9-41.7 52.5-24.6L448 226.8V76c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12z\"],\n        \"fax\": [512, 512, [], \"f1ac\", \"M128 144v320c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V144c0-26.51 21.49-48 48-48h32c26.51 0 48 21.49 48 48zm384 64v256c0 26.51-21.49 48-48 48H192c-26.51 0-48-21.49-48-48V40c0-22.091 17.909-40 40-40h207.432a39.996 39.996 0 0 1 28.284 11.716l48.569 48.569A39.999 39.999 0 0 1 480 88.568v74.174c18.641 6.591 32 24.36 32 45.258zm-320-16h240V96h-24c-13.203 0-24-10.797-24-24V48H192v144zm96 204c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zm0-128c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zm128 128c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zm0-128c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40z\"],\n        \"female\": [256, 512, [], \"f182\", \"M128 0c35.346 0 64 28.654 64 64s-28.654 64-64 64c-35.346 0-64-28.654-64-64S92.654 0 128 0m119.283 354.179l-48-192A24 24 0 0 0 176 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H80a24 24 0 0 0-23.283 18.179l-48 192C4.935 369.305 16.383 384 32 384h56v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V384h56c15.591 0 27.071-14.671 23.283-29.821z\"],\n        \"fighter-jet\": [640, 512, [], \"f0fb\", \"M544 224l-128-16-48-16h-24L227.158 44h39.509C278.333 44 288 41.375 288 38s-9.667-6-21.333-6H152v12h16v164h-48l-66.667-80H18.667L8 138.667V208h8v16h48v2.666l-64 8v42.667l64 8V288H16v16H8v69.333L18.667 384h34.667L120 304h48v164h-16v12h114.667c11.667 0 21.333-2.625 21.333-6s-9.667-6-21.333-6h-39.509L344 320h24l48-16 128-16c96-21.333 96-26.583 96-32 0-5.417 0-10.667-96-32z\"],\n        \"file\": [384, 512, [], \"f15b\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm160-14.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n        \"file-alt\": [384, 512, [], \"f15c\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm64 236c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-64c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12v8zm0-72v8c0 6.6-5.4 12-12 12H108c-6.6 0-12-5.4-12-12v-8c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm96-114.1v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n        \"file-archive\": [384, 512, [], \"f1c6\", \"M224 136V0h-63.6v32h-32V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zM95.9 32h32v32h-32V32zm32.3 384c-33.2 0-58-30.4-51.4-62.9L96.4 256v-32h32v-32h-32v-32h32v-32h-32V96h32V64h32v32h-32v32h32v32h-32v32h32v32h-32v32h22.1c5.7 0 10.7 4.1 11.8 9.7l17.3 87.7c6.4 32.4-18.4 62.6-51.4 62.6zm32.7-53c0 14.9-14.5 27-32.4 27S96 378 96 363c0-14.9 14.5-27 32.4-27s32.5 12.1 32.5 27zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n        \"file-audio\": [384, 512, [], \"f1c7\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm-64 268c0 10.7-12.9 16-20.5 8.5L104 376H76c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h28l35.5-36.5c7.6-7.6 20.5-2.2 20.5 8.5v136zm33.2-47.6c9.1-9.3 9.1-24.1 0-33.4-22.1-22.8 12.2-56.2 34.4-33.5 27.2 27.9 27.2 72.4 0 100.4-21.8 22.3-56.9-10.4-34.4-33.5zm86-117.1c54.4 55.9 54.4 144.8 0 200.8-21.8 22.4-57-10.3-34.4-33.5 36.2-37.2 36.3-96.5 0-133.8-22.1-22.8 12.3-56.3 34.4-33.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n        \"file-code\": [384, 512, [], \"f1c9\", \"M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zM123.206 400.505a5.4 5.4 0 0 1-7.633.246l-64.866-60.812a5.4 5.4 0 0 1 0-7.879l64.866-60.812a5.4 5.4 0 0 1 7.633.246l19.579 20.885a5.4 5.4 0 0 1-.372 7.747L101.65 336l40.763 35.874a5.4 5.4 0 0 1 .372 7.747l-19.579 20.884zm51.295 50.479l-27.453-7.97a5.402 5.402 0 0 1-3.681-6.692l61.44-211.626a5.402 5.402 0 0 1 6.692-3.681l27.452 7.97a5.4 5.4 0 0 1 3.68 6.692l-61.44 211.626a5.397 5.397 0 0 1-6.69 3.681zm160.792-111.045l-64.866 60.812a5.4 5.4 0 0 1-7.633-.246l-19.58-20.885a5.4 5.4 0 0 1 .372-7.747L284.35 336l-40.763-35.874a5.4 5.4 0 0 1-.372-7.747l19.58-20.885a5.4 5.4 0 0 1 7.633-.246l64.866 60.812a5.4 5.4 0 0 1-.001 7.879z\"],\n        \"file-excel\": [384, 512, [], \"f1c3\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm60.1 106.5L224 336l60.1 93.5c5.1 8-.6 18.5-10.1 18.5h-34.9c-4.4 0-8.5-2.4-10.6-6.3C208.9 405.5 192 373 192 373c-6.4 14.8-10 20-36.6 68.8-2.1 3.9-6.1 6.3-10.5 6.3H110c-9.5 0-15.2-10.5-10.1-18.5l60.3-93.5-60.3-93.5c-5.2-8 .6-18.5 10.1-18.5h34.8c4.4 0 8.5 2.4 10.6 6.3 26.1 48.8 20 33.6 36.6 68.5 0 0 6.1-11.7 36.6-68.5 2.1-3.9 6.2-6.3 10.6-6.3H274c9.5-.1 15.2 10.4 10.1 18.4zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n        \"file-image\": [384, 512, [], \"f1c5\", \"M384 121.941V128H256V0h6.059a24 24 0 0 1 16.97 7.029l97.941 97.941a24.002 24.002 0 0 1 7.03 16.971zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zm-135.455 16c26.51 0 48 21.49 48 48s-21.49 48-48 48-48-21.49-48-48 21.491-48 48-48zm208 240h-256l.485-48.485L104.545 328c4.686-4.686 11.799-4.201 16.485.485L160.545 368 264.06 264.485c4.686-4.686 12.284-4.686 16.971 0L320.545 304v112z\"],\n        \"file-pdf\": [384, 512, [], \"f1c1\", \"M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z\"],\n        \"file-powerpoint\": [384, 512, [], \"f1c4\", \"M193.7 271.2c8.8 0 15.5 2.7 20.3 8.1 9.6 10.9 9.8 32.7-.2 44.1-4.9 5.6-11.9 8.5-21.1 8.5h-26.9v-60.7h27.9zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-153 31V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm53 165.2c0 90.3-88.8 77.6-111.1 77.6V436c0 6.6-5.4 12-12 12h-30.8c-6.6 0-12-5.4-12-12V236.2c0-6.6 5.4-12 12-12h81c44.5 0 72.9 32.8 72.9 77z\"],\n        \"file-video\": [384, 512, [], \"f1c8\", \"M384 121.941V128H256V0h6.059c6.365 0 12.47 2.529 16.971 7.029l97.941 97.941A24.005 24.005 0 0 1 384 121.941zM224 136V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248c-13.2 0-24-10.8-24-24zm96 144.016v111.963c0 21.445-25.943 31.998-40.971 16.971L224 353.941V392c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24V280c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v38.059l55.029-55.013c15.011-15.01 40.971-4.491 40.971 16.97z\"],\n        \"file-word\": [384, 512, [], \"f1c2\", \"M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm57.1 120H305c7.7 0 13.4 7.1 11.7 14.7l-38 168c-1.2 5.5-6.1 9.3-11.7 9.3h-38c-5.5 0-10.3-3.8-11.6-9.1-25.8-103.5-20.8-81.2-25.6-110.5h-.5c-1.1 14.3-2.4 17.4-25.6 110.5-1.3 5.3-6.1 9.1-11.6 9.1H117c-5.6 0-10.5-3.9-11.7-9.4l-37.8-168c-1.7-7.5 4-14.6 11.7-14.6h24.5c5.7 0 10.7 4 11.8 9.7 15.6 78 20.1 109.5 21 122.2 1.6-10.2 7.3-32.7 29.4-122.7 1.3-5.4 6.1-9.1 11.7-9.1h29.1c5.6 0 10.4 3.8 11.7 9.2 24 100.4 28.8 124 29.6 129.4-.2-11.2-2.6-17.8 21.6-129.2 1-5.6 5.9-9.5 11.5-9.5zM384 121.9v6.1H256V0h6.1c6.4 0 12.5 2.5 17 7l97.9 98c4.5 4.5 7 10.6 7 16.9z\"],\n        \"film\": [512, 512, [], \"f008\", \"M488 64h-8v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12V64H96v20c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12V64h-8C10.7 64 0 74.7 0 88v336c0 13.3 10.7 24 24 24h8v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h320v-20c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v20h8c13.3 0 24-10.7 24-24V88c0-13.3-10.7-24-24-24zM96 372c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12H44c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm272 208c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm0-168c0 6.6-5.4 12-12 12H156c-6.6 0-12-5.4-12-12v-96c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v96zm112 152c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40zm0-96c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40z\"],\n        \"filter\": [512, 512, [], \"f0b0\", \"M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z\"],\n        \"fire\": [384, 512, [], \"f06d\", \"M216 23.858c0-23.802-30.653-32.765-44.149-13.038C48 191.851 224 200 224 288c0 35.629-29.114 64.458-64.85 63.994C123.98 351.538 96 322.22 96 287.046v-85.51c0-21.703-26.471-32.225-41.432-16.504C27.801 213.158 0 261.332 0 320c0 105.869 86.131 192 192 192s192-86.131 192-192c0-170.29-168-193.003-168-296.142z\"],\n        \"fire-extinguisher\": [448, 512, [], \"f134\", \"M434.027 26.329l-168 28C254.693 56.218 256 67.8 256 72h-58.332C208.353 36.108 181.446 0 144 0c-39.435 0-66.368 39.676-52.228 76.203-52.039 13.051-75.381 54.213-90.049 90.884-4.923 12.307 1.063 26.274 13.37 31.197 12.317 4.926 26.279-1.075 31.196-13.37C75.058 112.99 106.964 120 168 120v27.076c-41.543 10.862-72 49.235-72 94.129V488c0 13.255 10.745 24 24 24h144c13.255 0 24-10.745 24-24V240c0-44.731-30.596-82.312-72-92.97V120h40c0 2.974-1.703 15.716 10.027 17.671l168 28C441.342 166.89 448 161.25 448 153.834V38.166c0-7.416-6.658-13.056-13.973-11.837zM144 72c-8.822 0-16-7.178-16-16s7.178-16 16-16 16 7.178 16 16-7.178 16-16 16z\"],\n        \"first-aid\": [576, 512, [], \"f479\", \"M0 80v352c0 26.5 21.5 48 48 48h48V32H48C21.5 32 0 53.5 0 80zm128 400h320V32H128v448zm64-248c0-4.4 3.6-8 8-8h56v-56c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v56h56c4.4 0 8 3.6 8 8v48c0 4.4-3.6 8-8 8h-56v56c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-56h-56c-4.4 0-8-3.6-8-8v-48zM528 32h-48v448h48c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n        \"flag\": [512, 512, [], \"f024\", \"M349.565 98.783C295.978 98.783 251.721 64 184.348 64c-24.955 0-47.309 4.384-68.045 12.013a55.947 55.947 0 0 0 3.586-23.562C118.117 24.015 94.806 1.206 66.338.048 34.345-1.254 8 24.296 8 56c0 19.026 9.497 35.825 24 45.945V488c0 13.255 10.745 24 24 24h16c13.255 0 24-10.745 24-24v-94.4c28.311-12.064 63.582-22.122 114.435-22.122 53.588 0 97.844 34.783 165.217 34.783 48.169 0 86.667-16.294 122.505-40.858C506.84 359.452 512 349.571 512 339.045v-243.1c0-23.393-24.269-38.87-45.485-29.016-34.338 15.948-76.454 31.854-116.95 31.854z\"],\n        \"flag-checkered\": [512, 512, [], \"f11e\", \"M466.515 66.928C487.731 57.074 512 72.551 512 95.944v243.1c0 10.526-5.161 20.407-13.843 26.358-35.837 24.564-74.335 40.858-122.505 40.858-67.373 0-111.63-34.783-165.217-34.783-50.853 0-86.124 10.058-114.435 22.122V488c0 13.255-10.745 24-24 24H56c-13.255 0-24-10.745-24-24V101.945C17.497 91.825 8 75.026 8 56 8 24.296 34.345-1.254 66.338.048c28.468 1.158 51.779 23.968 53.551 52.404.52 8.342-.81 16.31-3.586 23.562C137.039 68.384 159.393 64 184.348 64c67.373 0 111.63 34.783 165.217 34.783 40.496 0 82.612-15.906 116.95-31.855zM96 134.63v70.49c29-10.67 51.18-17.83 73.6-20.91v-71.57c-23.5 2.17-40.44 9.79-73.6 21.99zm220.8 9.19c-26.417-4.672-49.886-13.979-73.6-21.34v67.42c24.175 6.706 47.566 16.444 73.6 22.31v-68.39zm-147.2 40.39v70.04c32.796-2.978 53.91-.635 73.6 3.8V189.9c-25.247-7.035-46.581-9.423-73.6-5.69zm73.6 142.23c26.338 4.652 49.732 13.927 73.6 21.34v-67.41c-24.277-6.746-47.54-16.45-73.6-22.32v68.39zM96 342.1c23.62-8.39 47.79-13.84 73.6-16.56v-71.29c-26.11 2.35-47.36 8.04-73.6 17.36v70.49zm368-221.6c-21.3 8.85-46.59 17.64-73.6 22.47v71.91c27.31-4.36 50.03-14.1 73.6-23.89V120.5zm0 209.96v-70.49c-22.19 14.2-48.78 22.61-73.6 26.02v71.58c25.07-2.38 48.49-11.04 73.6-27.11zM316.8 212.21v68.16c25.664 7.134 46.616 9.342 73.6 5.62v-71.11c-25.999 4.187-49.943 2.676-73.6-2.67z\"],\n        \"flask\": [448, 512, [], \"f0c3\", \"M437.2 403.5L320 215V64h8c13.3 0 24-10.7 24-24V24c0-13.3-10.7-24-24-24H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h8v151L10.8 403.5C-18.5 450.6 15.3 512 70.9 512h306.2c55.7 0 89.4-61.5 60.1-108.5zM137.9 320l48.2-77.6c3.7-5.2 5.8-11.6 5.8-18.4V64h64v160c0 6.9 2.2 13.2 5.8 18.4l48.2 77.6h-172z\"],\n        \"folder\": [512, 512, [], \"f07b\", \"M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48z\"],\n        \"folder-open\": [576, 512, [], \"f07c\", \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\"],\n        \"font\": [448, 512, [], \"f031\", \"M152 416h-24.013l26.586-80.782H292.8L319.386 416H296c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h136c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-26.739L275.495 42.746A16 16 0 0 0 260.382 32h-72.766a16 16 0 0 0-15.113 10.746L42.739 416H16c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h136c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16zm64.353-271.778c4.348-15.216 6.61-28.156 7.586-34.644.839 6.521 2.939 19.476 7.727 34.706l41.335 124.006h-98.619l41.971-124.068z\"],\n        \"football-ball\": [496, 512, [], \"f44e\", \"M481.5 60.3c-4.8-18.2-19.1-32.5-37.3-37.4C420.3 16.5 383 8.9 339.4 8L496 164.8c-.8-43.5-8.2-80.6-14.5-104.5zm-467 391.4c4.8 18.2 19.1 32.5 37.3 37.4 23.9 6.4 61.2 14 104.8 14.9L0 347.2c.8 43.5 8.2 80.6 14.5 104.5zM4.2 283.4L220.4 500c132.5-19.4 248.8-118.7 271.5-271.4L275.6 12C143.1 31.4 26.8 130.7 4.2 283.4zm317.3-123.6c3.1-3.1 8.2-3.1 11.3 0l11.3 11.3c3.1 3.1 3.1 8.2 0 11.3l-28.3 28.3 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-22.6 22.7 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L248 278.6l-22.6 22.6 28.3 28.3c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-28.3-28.3-28.3 28.3c-3.1 3.1-8.2 3.1-11.3 0l-11.3-11.3c-3.1-3.1-3.1-8.2 0-11.3l28.3-28.3-28.3-28.2c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 22.6-22.6-28.3-28.3c-3.1-3.1-3.1-8.2 0-11.3l11.3-11.3c3.1-3.1 8.2-3.1 11.3 0l28.3 28.3 28.3-28.5z\"],\n        \"forward\": [512, 512, [], \"f04e\", \"M500.5 231.4l-192-160C287.9 54.3 256 68.6 256 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2zm-256 0l-192-160C31.9 54.3 0 68.6 0 96v320c0 27.4 31.9 41.8 52.5 24.6l192-160c15.3-12.8 15.3-36.4 0-49.2z\"],\n        \"frown\": [512, 512, [], \"f119\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-396-64c0 37.497 30.503 68 68 68s68-30.503 68-68-30.503-68-68-68-68 30.503-68 68zm160.5 0c0 37.221 30.279 67.5 67.5 67.5s67.5-30.279 67.5-67.5-30.279-67.5-67.5-67.5-67.5 30.279-67.5 67.5zm67.5-48a47.789 47.789 0 0 0-22.603 5.647h.015c10.916 0 19.765 8.849 19.765 19.765s-8.849 19.765-19.765 19.765-19.765-8.849-19.765-19.765v-.015A47.789 47.789 0 0 0 288 192c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48zm-160 0a47.789 47.789 0 0 0-22.603 5.647h.015c10.916 0 19.765 8.849 19.765 19.765s-8.849 19.765-19.765 19.765-19.765-8.849-19.765-19.765v-.015A47.789 47.789 0 0 0 128 192c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48zm192.551 212.66c-59.128-91.455-165.846-91.594-225.064 0-11.502 17.79 15.383 35.148 26.873 17.374 46.626-72.118 124.862-71.855 171.318 0 11.328 17.524 38.548.684 26.873-17.374z\"],\n        \"futbol\": [512, 512, [], \"f1e3\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-48 0l-.003-.282-26.064 22.741-62.679-58.5 16.454-84.355 34.303 3.072c-24.889-34.216-60.004-60.089-100.709-73.141l13.651 31.939L256 139l-74.953-41.525 13.651-31.939c-40.631 13.028-75.78 38.87-100.709 73.141l34.565-3.073 16.192 84.355-62.678 58.5-26.064-22.741-.003.282c0 43.015 13.497 83.952 38.472 117.991l7.704-33.897 85.138 10.447 36.301 77.826-29.902 17.786c40.202 13.122 84.29 13.148 124.572 0l-29.902-17.786 36.301-77.826 85.138-10.447 7.704 33.897C442.503 339.952 456 299.015 456 256zm-248.102 69.571l-29.894-91.312L256 177.732l77.996 56.527-29.622 91.312h-96.476z\"],\n        \"gamepad\": [640, 512, [], \"f11b\", \"M480 96H160C71.6 96 0 167.6 0 256s71.6 160 160 160c44.8 0 85.2-18.4 114.2-48h91.5c29 29.6 69.5 48 114.2 48 88.4 0 160-71.6 160-160S568.4 96 480 96zM256 276c0 6.6-5.4 12-12 12h-52v52c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-52H76c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h52v-52c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h52c6.6 0 12 5.4 12 12v40zm184 68c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-80c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n        \"gavel\": [512, 512, [], \"f0e3\", \"M504.971 199.362l-22.627-22.627c-9.373-9.373-24.569-9.373-33.941 0l-5.657 5.657L329.608 69.255l5.657-5.657c9.373-9.373 9.373-24.569 0-33.941L312.638 7.029c-9.373-9.373-24.569-9.373-33.941 0L154.246 131.48c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l5.657-5.657 39.598 39.598-81.04 81.04-5.657-5.657c-12.497-12.497-32.758-12.497-45.255 0L9.373 412.118c-12.497 12.497-12.497 32.758 0 45.255l45.255 45.255c12.497 12.497 32.758 12.497 45.255 0l114.745-114.745c12.497-12.497 12.497-32.758 0-45.255l-5.657-5.657 81.04-81.04 39.598 39.598-5.657 5.657c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l124.451-124.451c9.372-9.372 9.372-24.568 0-33.941z\"],\n        \"gem\": [576, 512, [], \"f3a5\", \"M485.5 0L576 160H474.9L405.7 0h79.8zm-128 0l69.2 160H149.3L218.5 0h139zm-267 0h79.8l-69.2 160H0L90.5 0zM0 192h100.7l123 251.7c1.5 3.1-2.7 5.9-5 3.3L0 192zm148.2 0h279.6l-137 318.2c-1 2.4-4.5 2.4-5.5 0L148.2 192zm204.1 251.7l123-251.7H576L357.3 446.9c-2.3 2.7-6.5-.1-5-3.2z\"],\n        \"genderless\": [288, 512, [], \"f22d\", \"M144 176c44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80 35.9-80 80-80m0-64C64.5 112 0 176.5 0 256s64.5 144 144 144 144-64.5 144-144-64.5-144-144-144z\"],\n        \"gift\": [512, 512, [], \"f06b\", \"M488 192h-64.512C438.72 175.003 448 152.566 448 128c0-52.935-43.065-96-96-96-41.997 0-68.742 20.693-95.992 54.15C226.671 50.192 199.613 32 160 32c-52.935 0-96 43.065-96 96 0 24.566 9.28 47.003 24.512 64H24c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h8v112c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V320h8c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24zm-208-32c24-56 55.324-64 72-64 17.645 0 32 14.355 32 32s-14.355 32-32 32h-72zM160 96c16.676 0 48 8 72 64h-72c-17.645 0-32-14.355-32-32s14.355-32 32-32zm48 128h96v184c0 13.255-10.745 24-24 24h-48c-13.255 0-24-10.745-24-24V224z\"],\n        \"glass-martini\": [512, 512, [], \"f000\", \"M507.3 27.3c10-10 2.9-27.3-11.3-27.3H16C1.8 0-5.4 17.2 4.7 27.3L216 238.6V472h-92c-15.5 0-28 12.5-28 28 0 6.6 5.4 12 12 12h296c6.6 0 12-5.4 12-12 0-15.5-12.5-28-28-28h-92V238.6L507.3 27.3z\"],\n        \"globe\": [512, 512, [], \"f0ac\", \"M364.215 192h131.43c5.439 20.419 8.354 41.868 8.354 64s-2.915 43.581-8.354 64h-131.43c5.154-43.049 4.939-86.746 0-128zM185.214 352c10.678 53.68 33.173 112.514 70.125 151.992.221.001.44.008.661.008s.44-.008.661-.008c37.012-39.543 59.467-98.414 70.125-151.992H185.214zm174.13-192h125.385C452.802 84.024 384.128 27.305 300.95 12.075c30.238 43.12 48.821 96.332 58.394 147.925zm-27.35 32H180.006c-5.339 41.914-5.345 86.037 0 128h151.989c5.339-41.915 5.345-86.037-.001-128zM152.656 352H27.271c31.926 75.976 100.6 132.695 183.778 147.925-30.246-43.136-48.823-96.35-58.393-147.925zm206.688 0c-9.575 51.605-28.163 104.814-58.394 147.925 83.178-15.23 151.852-71.949 183.778-147.925H359.344zm-32.558-192c-10.678-53.68-33.174-112.514-70.125-151.992-.221 0-.44-.008-.661-.008s-.44.008-.661.008C218.327 47.551 195.872 106.422 185.214 160h141.572zM16.355 192C10.915 212.419 8 233.868 8 256s2.915 43.581 8.355 64h131.43c-4.939-41.254-5.154-84.951 0-128H16.355zm136.301-32c9.575-51.602 28.161-104.81 58.394-147.925C127.872 27.305 59.198 84.024 27.271 160h125.385z\"],\n        \"golf-ball\": [416, 512, [], \"f450\", \"M96 416h224c0 17.7-14.3 32-32 32h-16c-17.7 0-32 14.3-32 32v20c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-20c0-17.7-14.3-32-32-32h-16c-17.7 0-32-14.3-32-32zm320-208c0 74.2-39 139.2-97.5 176h-221C39 347.2 0 282.2 0 208 0 93.1 93.1 0 208 0s208 93.1 208 208zm-180.1 43.9c18.3 0 33.1-14.8 33.1-33.1 0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1zm49.1 46.9c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1zm64-64c0-14.4-9.3-26.3-22.1-30.9 9.6 26.8-15.6 51.3-41.9 41.9 4.6 12.8 16.5 22.1 30.9 22.1 18.3 0 33.1-14.9 33.1-33.1z\"],\n        \"graduation-cap\": [640, 512, [], \"f19d\", \"M622.884 199.005l-275.817 85.1a96 96 0 0 1-54.134 0L92.398 222.232c-8.564 11.438-11.018 23.05-11.918 38.335C89.778 266.165 96 276.355 96 288c0 11.952-6.557 22.366-16.265 27.861l16.197 123.096c.63 4.786-3.1 9.043-7.932 9.043H40c-4.828 0-8.562-4.253-7.932-9.044L48.265 315.86C38.557 310.366 32 299.952 32 288c0-12.034 6.646-22.511 16.465-27.976.947-17.951 3.974-33.231 12.152-47.597l-43.502-13.422c-22.876-6.801-22.766-39.241 0-46.01l275.817-85.1a96 96 0 0 1 54.134 0l275.817 85.1c22.877 6.801 22.767 39.241.001 46.01zM356.503 314.682l-.207.064-.207.061a127.998 127.998 0 0 1-72.177 0l-.207-.061-.207-.064-150.914-46.57L120 352c0 35.346 89.543 64 200 64s200-28.654 200-64l-12.583-83.888-150.914 46.57z\"],\n        \"h-square\": [448, 512, [], \"f0fd\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-112 48h-32c-8.837 0-16 7.163-16 16v80H160v-80c0-8.837-7.163-16-16-16h-32c-8.837 0-16 7.163-16 16v224c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16v-80h128v80c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16V144c0-8.837-7.163-16-16-16z\"],\n        \"hand-lizard\": [576, 512, [], \"f258\", \"M384 480h192V363.778a95.998 95.998 0 0 0-14.833-51.263L398.127 54.368A48 48 0 0 0 357.544 32H24C10.745 32 0 42.745 0 56v16c0 30.928 25.072 56 56 56h229.981c12.844 0 21.556 13.067 16.615 24.923l-21.41 51.385A32 32 0 0 1 251.648 224H128c-35.346 0-64 28.654-64 64v8c0 13.255 10.745 24 24 24h147.406a47.995 47.995 0 0 1 25.692 7.455l111.748 70.811A24.001 24.001 0 0 1 384 418.539V480z\"],\n        \"hand-paper\": [448, 512, [], \"f256\", \"M408.781 128.007C386.356 127.578 368 146.36 368 168.79V256h-8V79.79c0-22.43-18.356-41.212-40.781-40.783C297.488 39.423 280 57.169 280 79v177h-8V40.79C272 18.36 253.644-.422 231.219.007 209.488.423 192 18.169 192 40v216h-8V80.79c0-22.43-18.356-41.212-40.781-40.783C121.488 40.423 104 58.169 104 80v235.992l-31.648-43.519c-12.993-17.866-38.009-21.817-55.877-8.823-17.865 12.994-21.815 38.01-8.822 55.877l125.601 172.705A48 48 0 0 0 172.073 512h197.59c22.274 0 41.622-15.324 46.724-37.006l26.508-112.66a192.011 192.011 0 0 0 5.104-43.975V168c.001-21.831-17.487-39.577-39.218-39.993z\"],\n        \"hand-peace\": [448, 512, [], \"f25b\", \"M408 216c-22.092 0-40 17.909-40 40h-8v-32c0-22.091-17.908-40-40-40s-40 17.909-40 40v32h-8V48c0-26.51-21.49-48-48-48s-48 21.49-48 48v208h-13.572L92.688 78.449C82.994 53.774 55.134 41.63 30.461 51.324 5.787 61.017-6.356 88.877 3.337 113.551l74.765 190.342-31.09 24.872c-15.381 12.306-19.515 33.978-9.741 51.081l64 112A39.998 39.998 0 0 0 136 512h240c18.562 0 34.686-12.77 38.937-30.838l32-136A39.97 39.97 0 0 0 448 336v-80c0-22.091-17.908-40-40-40z\"],\n        \"hand-point-down\": [384, 512, [], \"f0a7\", \"M91.826 467.2V317.966c-8.248 5.841-16.558 10.57-24.918 14.153C35.098 345.752-.014 322.222 0 288c.008-18.616 10.897-32.203 29.092-40 28.286-12.122 64.329-78.648 77.323-107.534 7.956-17.857 25.479-28.453 43.845-28.464l.001-.002h171.526c11.812 0 21.897 8.596 23.703 20.269 7.25 46.837 38.483 61.76 38.315 123.731-.007 2.724.195 13.254.195 16 0 50.654-22.122 81.574-71.263 72.6-9.297 18.597-39.486 30.738-62.315 16.45-21.177 24.645-53.896 22.639-70.944 6.299V467.2c0 24.15-20.201 44.8-43.826 44.8-23.283 0-43.826-21.35-43.826-44.8zM112 72V24c0-13.255 10.745-24 24-24h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24zm212-24c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z\"],\n        \"hand-point-left\": [512, 512, [], \"f0a5\", \"M44.8 155.826h149.234c-5.841-8.248-10.57-16.558-14.153-24.918C166.248 99.098 189.778 63.986 224 64c18.616.008 32.203 10.897 40 29.092 12.122 28.286 78.648 64.329 107.534 77.323 17.857 7.956 28.453 25.479 28.464 43.845l.002.001v171.526c0 11.812-8.596 21.897-20.269 23.703-46.837 7.25-61.76 38.483-123.731 38.315-2.724-.007-13.254.195-16 .195-50.654 0-81.574-22.122-72.6-71.263-18.597-9.297-30.738-39.486-16.45-62.315-24.645-21.177-22.639-53.896-6.299-70.944H44.8c-24.15 0-44.8-20.201-44.8-43.826 0-23.283 21.35-43.826 44.8-43.826zM440 176h48c13.255 0 24 10.745 24 24v192c0 13.255-10.745 24-24 24h-48c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24zm24 212c11.046 0 20-8.954 20-20s-8.954-20-20-20-20 8.954-20 20 8.954 20 20 20z\"],\n        \"hand-point-right\": [512, 512, [], \"f0a4\", \"M512 199.652c0 23.625-20.65 43.826-44.8 43.826h-99.851c16.34 17.048 18.346 49.766-6.299 70.944 14.288 22.829 2.147 53.017-16.45 62.315C353.574 425.878 322.654 448 272 448c-2.746 0-13.276-.203-16-.195-61.971.168-76.894-31.065-123.731-38.315C120.596 407.683 112 397.599 112 385.786V214.261l.002-.001c.011-18.366 10.607-35.889 28.464-43.845 28.886-12.994 95.413-49.038 107.534-77.323 7.797-18.194 21.384-29.084 40-29.092 34.222-.014 57.752 35.098 44.119 66.908-3.583 8.359-8.312 16.67-14.153 24.918H467.2c23.45 0 44.8 20.543 44.8 43.826zM96 200v192c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V200c0-13.255 10.745-24 24-24h48c13.255 0 24 10.745 24 24zM68 368c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z\"],\n        \"hand-point-up\": [384, 512, [], \"f0a6\", \"M135.652 0c23.625 0 43.826 20.65 43.826 44.8v99.851c17.048-16.34 49.766-18.346 70.944 6.299 22.829-14.288 53.017-2.147 62.315 16.45C361.878 158.426 384 189.346 384 240c0 2.746-.203 13.276-.195 16 .168 61.971-31.065 76.894-38.315 123.731C343.683 391.404 333.599 400 321.786 400H150.261l-.001-.002c-18.366-.011-35.889-10.607-43.845-28.464C93.421 342.648 57.377 276.122 29.092 264 10.897 256.203.008 242.616 0 224c-.014-34.222 35.098-57.752 66.908-44.119 8.359 3.583 16.67 8.312 24.918 14.153V44.8c0-23.45 20.543-44.8 43.826-44.8zM136 416h192c13.255 0 24 10.745 24 24v48c0 13.255-10.745 24-24 24H136c-13.255 0-24-10.745-24-24v-48c0-13.255 10.745-24 24-24zm168 28c-11.046 0-20 8.954-20 20s8.954 20 20 20 20-8.954 20-20-8.954-20-20-20z\"],\n        \"hand-pointer\": [448, 512, [], \"f25a\", \"M448 240v96c0 3.084-.356 6.159-1.063 9.162l-32 136C410.686 499.23 394.562 512 376 512H168a40.004 40.004 0 0 1-32.35-16.473l-127.997-176c-12.993-17.866-9.043-42.883 8.822-55.876 17.867-12.994 42.884-9.043 55.877 8.823L104 315.992V40c0-22.091 17.908-40 40-40s40 17.909 40 40v200h8v-40c0-22.091 17.908-40 40-40s40 17.909 40 40v40h8v-24c0-22.091 17.908-40 40-40s40 17.909 40 40v24h8c0-22.091 17.908-40 40-40s40 17.909 40 40zm-256 80h-8v96h8v-96zm88 0h-8v96h8v-96zm88 0h-8v96h8v-96z\"],\n        \"hand-rock\": [512, 512, [], \"f255\", \"M512 128.79c0-26.322-20.861-48.344-47.18-48.783C437.935 79.558 416 101.217 416 128h-8V96.79c0-26.322-20.861-48.344-47.18-48.783C333.935 47.558 312 69.217 312 96v32h-8V80.79c0-26.322-20.861-48.344-47.18-48.783C229.935 31.558 208 53.217 208 80v48h-8V96.79c0-26.322-20.861-48.344-47.18-48.783C125.935 47.558 104 69.217 104 96v136l-8-7.111V176.79c0-26.322-20.861-48.344-47.18-48.783C21.935 127.558 0 149.217 0 176v66.445a95.998 95.998 0 0 0 32.221 71.751l111.668 99.261A47.999 47.999 0 0 1 160 449.333V456c0 13.255 10.745 24 24 24h240c13.255 0 24-10.745 24-24v-2.921a96.01 96.01 0 0 1 7.523-37.254l48.954-116.265A96.002 96.002 0 0 0 512 262.306V128.79z\"],\n        \"hand-scissors\": [512, 512, [], \"f257\", \"M216 440c0-22.092 17.909-40 40-40v-8h-32c-22.091 0-40-17.908-40-40s17.909-40 40-40h32v-8H48c-26.51 0-48-21.49-48-48s21.49-48 48-48h208v-13.572l-177.551-69.74c-24.674-9.694-36.818-37.555-27.125-62.228 9.693-24.674 37.554-36.817 62.228-27.124l190.342 74.765 24.872-31.09c12.306-15.381 33.978-19.515 51.081-9.741l112 64A40.002 40.002 0 0 1 512 168v240c0 18.562-12.77 34.686-30.838 38.937l-136 32A39.982 39.982 0 0 1 336 480h-80c-22.091 0-40-17.908-40-40z\"],\n        \"hand-spock\": [512, 512, [], \"f259\", \"M10.872 316.585c15.139-16.086 40.454-16.854 56.543-1.713L128 371.893v-79.405L88.995 120.865c-4.896-21.542 8.598-42.974 30.14-47.87 21.549-4.894 42.975 8.599 47.87 30.141L201.747 256h9.833L164.016 48.966c-4.946-21.531 8.498-42.994 30.028-47.94 21.532-4.95 42.994 8.498 47.94 30.028L293.664 256h15.105l48.425-193.702c5.357-21.432 27.075-34.462 48.507-29.104 21.432 5.358 34.463 27.075 29.104 48.507L391.231 256h11.08l30.768-129.265c5.117-21.491 26.685-34.768 48.177-29.647 21.491 5.117 34.765 26.686 29.647 48.177l-36.292 152.467A96.024 96.024 0 0 0 472 319.967v42.102a96.002 96.002 0 0 1-3.96 27.287l-26.174 88.287C435.825 498.022 417.101 512 395.846 512H179.172a48.002 48.002 0 0 1-32.898-13.046L12.585 373.128c-16.087-15.141-16.853-40.456-1.713-56.543z\"],\n        \"handshake\": [640, 512, [], \"f2b5\", \"M72 112H24c-13.255 0-24 10.745-24 24v208c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24V136c0-13.255-10.745-24-24-24zM48 340c-11.046 0-20-8.954-20-20s8.954-20 20-20 20 8.954 20 20-8.954 20-20 20zm568-228h-48c-13.255 0-24 10.745-24 24v208c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24V136c0-13.255-10.745-24-24-24zm-24 228c-11.046 0-20-8.954-20-20s8.954-20 20-20 20 8.954 20 20-8.954 20-20 20zM485.94 92.67L528 140.74V320h-19.17c.56-14.96-4.38-28.98-14-39.71l-80.92-98.91c2.93-3.2 2.76-8.16-.38-11.16-2.82-2.7-7.08-2.92-10.14-.76-.42.3-60.35 62.93-60.35 62.93l-.2.21c-23.904 26.905-66.127 26.204-89.15-1.42-15.48-18.58-15.29-45.39.45-63.76l66.57-77.67C334.304 73.88 354.534 64 376.7 64h46.05a83.98 83.98 0 0 1 63.19 28.67zm-3.37 197.92c15.46 16.78 12.59 43.83-2.37 57.75-17.711 16.462-42.433 13.004-45.93 9.2 1.653 15.658-21.389 47.249-56.42 44.68-6.325 21.185-32.298 38.909-59.18 29.61-10.22 10.21-25.82 14.97-39.81 14.97-28.69 0-54.92-11.99-72.58-30.8L112 320V135.52l61.36-50.57A71.52 71.52 0 0 1 223.93 64h37.42c16.73 0 32.68 6.84 44.21 18.85l-63.57 74.16c-20.84 24.31-21.09 59.81-.59 84.42 29.375 35.247 83.007 35.853 113.31 1.92L402.82 193l79.75 97.59z\"],\n        \"hashtag\": [448, 512, [], \"f292\", \"M440.667 182.109l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l14.623-81.891C377.123 38.754 371.468 32 363.997 32h-40.632a12 12 0 0 0-11.813 9.891L296.175 128H197.54l14.623-81.891C213.477 38.754 207.822 32 200.35 32h-40.632a12 12 0 0 0-11.813 9.891L132.528 128H53.432a12 12 0 0 0-11.813 9.891l-7.143 40C33.163 185.246 38.818 192 46.289 192h74.81L98.242 320H19.146a12 12 0 0 0-11.813 9.891l-7.143 40C-1.123 377.246 4.532 384 12.003 384h74.81L72.19 465.891C70.877 473.246 76.532 480 84.003 480h40.632a12 12 0 0 0 11.813-9.891L151.826 384h98.634l-14.623 81.891C234.523 473.246 240.178 480 247.65 480h40.632a12 12 0 0 0 11.813-9.891L315.472 384h79.096a12 12 0 0 0 11.813-9.891l7.143-40c1.313-7.355-4.342-14.109-11.813-14.109h-74.81l22.857-128h79.096a12 12 0 0 0 11.813-9.891zM261.889 320h-98.634l22.857-128h98.634l-22.857 128z\"],\n        \"hdd\": [576, 512, [], \"f0a0\", \"M576 304v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48zm-48-80a79.557 79.557 0 0 1 30.777 6.165L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L17.223 230.165A79.557 79.557 0 0 1 48 224h480zm-48 96c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32zm-96 0c-17.673 0-32 14.327-32 32s14.327 32 32 32 32-14.327 32-32-14.327-32-32-32z\"],\n        \"heading\": [512, 512, [], \"f1dc\", \"M496 80V48c0-8.837-7.163-16-16-16H320c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h37.621v128H154.379V96H192c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H32c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h37.275v320H32c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h160c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-37.621V288H357.62v128H320c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h160c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16h-37.275V96H480c8.837 0 16-7.163 16-16z\"],\n        \"headphones\": [512, 512, [], \"f025\", \"M256 32C114.52 32 0 146.496 0 288v48a32 32 0 0 0 17.689 28.622l14.383 7.191C34.083 431.903 83.421 480 144 480h24c13.255 0 24-10.745 24-24V280c0-13.255-10.745-24-24-24h-24c-31.342 0-59.671 12.879-80 33.627V288c0-105.869 86.131-192 192-192s192 86.131 192 192v1.627C427.671 268.879 399.342 256 368 256h-24c-13.255 0-24 10.745-24 24v176c0 13.255 10.745 24 24 24h24c60.579 0 109.917-48.098 111.928-108.187l14.382-7.191A32 32 0 0 0 512 336v-48c0-141.479-114.496-256-256-256z\"],\n        \"heart\": [576, 512, [], \"f004\", \"M414.9 24C361.8 24 312 65.7 288 89.3 264 65.7 214.2 24 161.1 24 70.3 24 16 76.9 16 165.5c0 72.6 66.8 133.3 69.2 135.4l187 180.8c8.8 8.5 22.8 8.5 31.6 0l186.7-180.2c2.7-2.7 69.5-63.5 69.5-136C560 76.9 505.7 24 414.9 24z\"],\n        \"heartbeat\": [512, 512, [], \"f21e\", \"M320.2 243.8l-49.7 99.4c-6 12.1-23.4 11.7-28.9-.6l-56.9-126.3-30 71.7H60.6l182.5 186.5c7.1 7.3 18.6 7.3 25.7 0L451.4 288H342.3l-22.1-44.2zM473.7 73.9l-2.4-2.5c-51.5-52.6-135.8-52.6-187.4 0L256 100l-27.9-28.5c-51.5-52.7-135.9-52.7-187.4 0l-2.4 2.4C-10.4 123.7-12.5 203 31 256h102.4l35.9-86.2c5.4-12.9 23.6-13.2 29.4-.4l58.2 129.3 49-97.9c5.9-11.8 22.7-11.8 28.6 0l27.6 55.2H481c43.5-53 41.4-132.3-7.3-182.1z\"],\n        \"history\": [512, 512, [], \"f1da\", \"M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z\"],\n        \"hockey-puck\": [512, 512, [], \"f453\", \"M0 160c0-53 114.6-96 256-96s256 43 256 96-114.6 96-256 96S0 213 0 160zm0 82.2V352c0 53 114.6 96 256 96s256-43 256-96V242.2c-113.4 82.3-398.5 82.4-512 0z\"],\n        \"home\": [576, 512, [], \"f015\", \"M488 312.7V456c0 13.3-10.7 24-24 24H348c-6.6 0-12-5.4-12-12V356c0-6.6-5.4-12-12-12h-72c-6.6 0-12 5.4-12 12v112c0 6.6-5.4 12-12 12H112c-13.3 0-24-10.7-24-24V312.7c0-3.6 1.6-7 4.4-9.3l188-154.8c4.4-3.6 10.8-3.6 15.3 0l188 154.8c2.7 2.3 4.3 5.7 4.3 9.3zm83.6-60.9L488 182.9V44.4c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12V117l-89.5-73.7c-17.7-14.6-43.3-14.6-61 0L4.4 251.8c-5.1 4.2-5.8 11.8-1.6 16.9l25.5 31c4.2 5.1 11.8 5.8 16.9 1.6l235.2-193.7c4.4-3.6 10.8-3.6 15.3 0l235.2 193.7c5.1 4.2 12.7 3.5 16.9-1.6l25.5-31c4.2-5.2 3.4-12.7-1.7-16.9z\"],\n        \"hospital\": [448, 512, [], \"f0f8\", \"M448 492v20H0v-20c0-6.627 5.373-12 12-12h20V120c0-13.255 10.745-24 24-24h88V24c0-13.255 10.745-24 24-24h112c13.255 0 24 10.745 24 24v72h88c13.255 0 24 10.745 24 24v360h20c6.627 0 12 5.373 12 12zM308 192h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-168 64h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12zm104 128h-40c-6.627 0-12 5.373-12 12v84h64v-84c0-6.627-5.373-12-12-12zm64-96h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12zm-116 12c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40zM182 96h26v26a6 6 0 0 0 6 6h20a6 6 0 0 0 6-6V96h26a6 6 0 0 0 6-6V70a6 6 0 0 0-6-6h-26V38a6 6 0 0 0-6-6h-20a6 6 0 0 0-6 6v26h-26a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6z\"],\n        \"hospital-symbol\": [512, 512, [], \"f47e\", \"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm112 376c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-88h-96v88c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V136c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v88h96v-88c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v240z\"],\n        \"hourglass\": [384, 512, [], \"f254\", \"M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64z\"],\n        \"hourglass-end\": [384, 512, [], \"f253\", \"M360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64zM192 208c-57.787 0-104-66.518-104-144h208c0 77.945-46.51 144-104 144z\"],\n        \"hourglass-half\": [384, 512, [], \"f252\", \"M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-75.078 384H99.08c17.059-46.797 52.096-80 92.92-80 40.821 0 75.862 33.196 92.922 80zm.019-256H99.078C91.988 108.548 88 86.748 88 64h208c0 22.805-3.987 44.587-11.059 64z\"],\n        \"hourglass-start\": [384, 512, [], \"f251\", \"M360 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24 0 90.965 51.016 167.734 120.842 192C75.016 280.266 24 357.035 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24 0-90.965-51.016-167.734-120.842-192C308.984 231.734 360 154.965 360 64c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24zm-64 448H88c0-77.458 46.204-144 104-144 57.786 0 104 66.517 104 144z\"],\n        \"i-cursor\": [256, 512, [], \"f246\", \"M256 52.048V12.065C256 5.496 250.726.148 244.158.066 211.621-.344 166.469.011 128 37.959 90.266.736 46.979-.114 11.913.114 5.318.157 0 5.519 0 12.114v39.645c0 6.687 5.458 12.078 12.145 11.998C38.111 63.447 96 67.243 96 112.182V224H60c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h36v112c0 44.932-56.075 48.031-83.95 47.959C5.404 447.942 0 453.306 0 459.952v39.983c0 6.569 5.274 11.917 11.842 11.999 32.537.409 77.689.054 116.158-37.894 37.734 37.223 81.021 38.073 116.087 37.845 6.595-.043 11.913-5.405 11.913-12V460.24c0-6.687-5.458-12.078-12.145-11.998C217.889 448.553 160 444.939 160 400V288h36c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-36V112.182c0-44.932 56.075-48.213 83.95-48.142 6.646.018 12.05-5.346 12.05-11.992z\"],\n        \"id-badge\": [384, 512, [], \"f2c1\", \"M336 0H48C21.49 0 0 21.49 0 48v416c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48V48c0-26.51-21.49-48-48-48zM128 44c0-6.627 5.373-12 12-12h104c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12H140c-6.627 0-12-5.373-12-12v-8zm64 116c44.183 0 80 35.817 80 80s-35.817 80-80 80-80-35.817-80-80 35.817-80 80-80zm128 232c0 13.255-10.745 24-24 24H88c-13.255 0-24-10.745-24-24v-18.523c0-22.026 14.99-41.225 36.358-46.567l35.656-8.914c29.101 20.932 74.509 26.945 111.97 0l35.656 8.914c21.37 5.342 36.36 24.542 36.36 46.567V392z\"],\n        \"id-card\": [512, 512, [], \"f2c2\", \"M464 64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48zM256 350c0 9.941-8.059 18-18 18H82c-9.941 0-18-8.059-18-18v-13.892c0-16.519 11.243-30.919 27.269-34.925l26.742-6.686c21.826 15.699 55.882 20.209 83.978 0l26.743 6.686C244.757 305.189 256 319.589 256 336.108V350zM100 236c0-33.137 26.863-60 60-60s60 26.863 60 60-26.863 60-60 60-60-26.863-60-60zm348 104c0 6.627-5.373 12-12 12H300c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12v8zm0-64c0 6.627-5.373 12-12 12H300c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12v8zm0-64c0 6.627-5.373 12-12 12H300c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12v8zm32-96c0 6.627-5.373 12-12 12H44c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v8z\"],\n        \"image\": [512, 512, [], \"f03e\", \"M464 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM112 120c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56zM64 384h384V272l-87.515-87.515c-4.686-4.686-12.284-4.686-16.971 0L208 320l-55.515-55.515c-4.686-4.686-12.284-4.686-16.971 0L64 336v48z\"],\n        \"images\": [576, 512, [], \"f302\", \"M480 416v16c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v208c0 44.112 35.888 80 80 80h336zm96-80V80c0-26.51-21.49-48-48-48H144c-26.51 0-48 21.49-48 48v256c0 26.51 21.49 48 48 48h384c26.51 0 48-21.49 48-48zM256 128c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-96 144l55.515-55.515c4.686-4.686 12.284-4.686 16.971 0L272 256l135.515-135.515c4.686-4.686 12.284-4.686 16.971 0L512 208v112H160v-48z\"],\n        \"inbox\": [576, 512, [], \"f01c\", \"M567.938 243.908L462.25 85.374A48.003 48.003 0 0 0 422.311 64H153.689a48 48 0 0 0-39.938 21.374L8.062 243.908A47.994 47.994 0 0 0 0 270.533V400c0 26.51 21.49 48 48 48h480c26.51 0 48-21.49 48-48V270.533a47.994 47.994 0 0 0-8.062-26.625zM162.252 128h251.497l85.333 128H376l-32 64H232l-32-64H76.918l85.334-128z\"],\n        \"indent\": [448, 512, [], \"f03c\", \"M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm176 144h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 484h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm160-128h256c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H176c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm-52.687-111.313l-96-95.984C17.266 138.652 0 145.776 0 160.016v191.975c0 14.329 17.325 21.304 27.313 11.313l96-95.992c6.249-6.247 6.249-16.377 0-22.625z\"],\n        \"industry\": [512, 512, [], \"f275\", \"M475.115 163.781L336 252.309v-68.28c0-18.916-20.931-30.399-36.885-20.248L160 252.309V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56v400c0 13.255 10.745 24 24 24h464c13.255 0 24-10.745 24-24V184.029c0-18.917-20.931-30.399-36.885-20.248z\"],\n        \"info\": [192, 512, [], \"f129\", \"M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z\"],\n        \"info-circle\": [512, 512, [], \"f05a\", \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\"],\n        \"italic\": [320, 512, [], \"f033\", \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"],\n        \"key\": [512, 512, [], \"f084\", \"M512 176.001C512 273.203 433.202 352 336 352c-11.22 0-22.19-1.062-32.827-3.069l-24.012 27.014A23.999 23.999 0 0 1 261.223 384H224v40c0 13.255-10.745 24-24 24h-40v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-78.059c0-6.365 2.529-12.47 7.029-16.971l161.802-161.802C163.108 213.814 160 195.271 160 176 160 78.798 238.797.001 335.999 0 433.488-.001 512 78.511 512 176.001zM336 128c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48-48 21.49-48 48z\"],\n        \"keyboard\": [576, 512, [], \"f11c\", \"M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\"],\n        \"language\": [640, 512, [], \"f1ab\", \"M304 416H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h280v320zm-120.676-72.622A12 12 0 0 0 194.839 352h22.863c8.22 0 14.007-8.078 11.362-15.861L171.61 167.085a12 12 0 0 0-11.362-8.139h-32.489a12.001 12.001 0 0 0-11.362 8.139L58.942 336.139C56.297 343.922 62.084 352 70.304 352h22.805a12 12 0 0 0 11.535-8.693l9.118-31.807h60.211l9.351 31.878zm-39.051-140.42s4.32 21.061 7.83 33.21l10.8 37.531h-38.07l11.07-37.531c3.51-12.15 7.83-33.21 7.83-33.21h.54zM616 416H336V96h280c13.255 0 24 10.745 24 24v272c0 13.255-10.745 24-24 24zm-36-228h-64v-16c0-6.627-5.373-12-12-12h-16c-6.627 0-12 5.373-12 12v16h-64c-6.627 0-12 5.373-12 12v16c0 6.627 5.373 12 12 12h114.106c-6.263 14.299-16.518 28.972-30.023 43.206-6.56-6.898-12.397-13.91-17.365-20.933-3.639-5.144-10.585-6.675-15.995-3.446l-7.28 4.346-6.498 3.879c-5.956 3.556-7.693 11.421-3.735 17.117 6.065 8.729 13.098 17.336 20.984 25.726-8.122 6.226-16.841 12.244-26.103 17.964-5.521 3.41-7.381 10.556-4.162 16.19l7.941 13.896c3.362 5.883 10.935 7.826 16.706 4.276 12.732-7.831 24.571-16.175 35.443-24.891 10.917 8.761 22.766 17.102 35.396 24.881 5.774 3.556 13.353 1.618 16.717-4.27l7.944-13.903c3.213-5.623 1.37-12.76-4.135-16.171a312.737 312.737 0 0 1-26.06-18.019c21.024-22.425 35.768-46.289 42.713-69.85H580c6.627 0 12-5.373 12-12v-16c0-6.625-5.373-11.998-12-11.998z\"],\n        \"laptop\": [640, 512, [], \"f109\", \"M512 64v256H128V64h384m16-64H112C85.5 0 64 21.5 64 48v288c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm100 416H389.5c-3 0-5.5 2.1-5.9 5.1C381.2 436.3 368 448 352 448h-64c-16 0-29.2-11.7-31.6-26.9-.5-2.9-3-5.1-5.9-5.1H12c-6.6 0-12 5.4-12 12v36c0 26.5 21.5 48 48 48h544c26.5 0 48-21.5 48-48v-36c0-6.6-5.4-12-12-12z\"],\n        \"leaf\": [576, 512, [], \"f06c\", \"M395.4 420.8c-43.4 21.6-91.9 34.4-140.8 34.4-82.2 0-151.1-40.1-151.1-40.1-16.1 0-35.4 64.9-63.3 64.9-27 0-40.2-24-40.2-38.5 0-33.1 63.6-58.9 63.6-77.3 0 0-12.5-21.2-12.5-59.2 0-101.2 81.3-173.4 172.6-203.3 65.9-21.6 206 3.5 250.7-38.5C492.1 47 500.8 32 527.8 32c36.3 0 48.2 93.2 48.2 120.3 0 110.9-54.5 206.5-180.6 268.5zm-254.3-75.6c63.5-89.9 144.5-128.8 257.7-120 8.8.7 16.5-5.9 17.2-14.7.7-8.8-5.9-16.5-14.7-17.2-124-9.6-215.9 33.9-286.3 133.5-5.1 7.2-3.4 17.2 3.8 22.3 7.2 5.1 17.2 3.4 22.3-3.9z\"],\n        \"lemon\": [512, 512, [], \"f094\", \"M489.038 22.963C465.944-.13 434.648-5.93 413.947 6.129c-58.906 34.312-181.25-53.077-321.073 86.746S40.441 355.041 6.129 413.945c-12.059 20.702-6.26 51.999 16.833 75.093 23.095 23.095 54.392 28.891 75.095 16.832 58.901-34.31 181.246 53.079 321.068-86.743S471.56 156.96 505.871 98.056c12.059-20.702 6.261-51.999-16.833-75.093zM243.881 95.522c-58.189 14.547-133.808 90.155-148.358 148.358-1.817 7.27-8.342 12.124-15.511 12.124-1.284 0-2.59-.156-3.893-.481-8.572-2.144-13.784-10.83-11.642-19.403C81.901 166.427 166.316 81.93 236.119 64.478c8.575-2.143 17.261 3.069 19.403 11.642s-3.069 17.259-11.641 19.402z\"],\n        \"level-down-alt\": [320, 512, [], \"f3be\", \"M313.553 392.331L209.587 504.334c-9.485 10.214-25.676 10.229-35.174 0L70.438 392.331C56.232 377.031 67.062 352 88.025 352H152V80H68.024a11.996 11.996 0 0 1-8.485-3.515l-56-56C-4.021 12.926 1.333 0 12.024 0H208c13.255 0 24 10.745 24 24v328h63.966c20.878 0 31.851 24.969 17.587 40.331z\"],\n        \"level-up-alt\": [320, 512, [], \"f3bf\", \"M313.553 119.669L209.587 7.666c-9.485-10.214-25.676-10.229-35.174 0L70.438 119.669C56.232 134.969 67.062 160 88.025 160H152v272H68.024a11.996 11.996 0 0 0-8.485 3.515l-56 56C-4.021 499.074 1.333 512 12.024 512H208c13.255 0 24-10.745 24-24V160h63.966c20.878 0 31.851-24.969 17.587-40.331z\"],\n        \"life-ring\": [512, 512, [], \"f1cd\", \"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm173.696 119.559l-63.399 63.399c-10.987-18.559-26.67-34.252-45.255-45.255l63.399-63.399a218.396 218.396 0 0 1 45.255 45.255zM256 352c-53.019 0-96-42.981-96-96s42.981-96 96-96 96 42.981 96 96-42.981 96-96 96zM127.559 82.304l63.399 63.399c-18.559 10.987-34.252 26.67-45.255 45.255l-63.399-63.399a218.372 218.372 0 0 1 45.255-45.255zM82.304 384.441l63.399-63.399c10.987 18.559 26.67 34.252 45.255 45.255l-63.399 63.399a218.396 218.396 0 0 1-45.255-45.255zm302.137 45.255l-63.399-63.399c18.559-10.987 34.252-26.67 45.255-45.255l63.399 63.399a218.403 218.403 0 0 1-45.255 45.255z\"],\n        \"lightbulb\": [384, 512, [], \"f0eb\", \"M272 428v28c0 10.449-6.68 19.334-16 22.629V488c0 13.255-10.745 24-24 24h-80c-13.255 0-24-10.745-24-24v-9.371c-9.32-3.295-16-12.18-16-22.629v-28c0-6.627 5.373-12 12-12h136c6.627 0 12 5.373 12 12zm-143.107-44c-9.907 0-18.826-6.078-22.376-15.327C67.697 267.541 16 277.731 16 176 16 78.803 94.805 0 192 0s176 78.803 176 176c0 101.731-51.697 91.541-90.516 192.673-3.55 9.249-12.47 15.327-22.376 15.327H128.893zM112 176c0-44.112 35.888-80 80-80 8.837 0 16-7.164 16-16s-7.163-16-16-16c-61.757 0-112 50.243-112 112 0 8.836 7.164 16 16 16s16-7.164 16-16z\"],\n        \"link\": [512, 512, [], \"f0c1\", \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\"],\n        \"lira-sign\": [384, 512, [], \"f195\", \"M371.994 256h-48.019C317.64 256 312 260.912 312 267.246 312 368 230.179 416 144 416V256.781l134.603-29.912A12 12 0 0 0 288 215.155v-40.976c0-7.677-7.109-13.38-14.603-11.714L144 191.219V160.78l134.603-29.912A12 12 0 0 0 288 119.154V78.179c0-7.677-7.109-13.38-14.603-11.714L144 95.219V44c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v68.997L9.397 125.131A12 12 0 0 0 0 136.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 178.558v30.439L9.397 221.131A12 12 0 0 0 0 232.845v40.976c0 7.677 7.109 13.38 14.603 11.714L64 274.558V468c0 6.627 5.373 12 12 12h79.583c134.091 0 223.255-77.834 228.408-211.592.261-6.782-5.211-12.408-11.997-12.408z\"],\n        \"list\": [512, 512, [], \"f03a\", \"M128 116V76c0-8.837 7.163-16 16-16h352c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H144c-8.837 0-16-7.163-16-16zm16 176h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 144h64c8.837 0 16-7.163 16-16V64c0-8.837-7.163-16-16-16H16C7.163 48 0 55.163 0 64v64c0 8.837 7.163 16 16 16zm0 160h64c8.837 0 16-7.163 16-16v-64c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v64c0 8.837 7.163 16 16 16zm0 160h64c8.837 0 16-7.163 16-16v-64c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v64c0 8.837 7.163 16 16 16z\"],\n        \"list-alt\": [512, 512, [], \"f022\", \"M464 480H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h416c26.51 0 48 21.49 48 48v352c0 26.51-21.49 48-48 48zM128 120c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm0 96c-22.091 0-40 17.909-40 40s17.909 40 40 40 40-17.909 40-40-17.909-40-40-40zm288-136v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12zm0 96v-32c0-6.627-5.373-12-12-12H204c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h200c6.627 0 12-5.373 12-12z\"],\n        \"list-ol\": [512, 512, [], \"f0cb\", \"M3.263 139.527c0-7.477 3.917-11.572 11.573-11.572h15.131V88.078c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.938C32.815 33.602 36.732 32 42.785 32H54.89c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572H14.836c-7.656 0-11.573-4.095-11.573-11.572v-8.902zM2.211 304.591c0-47.278 50.955-56.383 50.955-69.165 0-7.18-5.954-8.755-9.28-8.755-3.153 0-6.479 1.051-9.455 3.852-5.079 4.903-10.507 7.004-16.111 2.451l-8.579-6.829c-5.779-4.553-7.18-9.805-2.803-15.409C13.592 201.981 26.025 192 47.387 192c19.437 0 44.476 10.506 44.476 39.573 0 38.347-46.753 46.402-48.679 56.909h39.049c7.529 0 11.557 4.027 11.557 11.382v8.755c0 7.354-4.028 11.382-11.557 11.382h-67.94c-7.005 0-12.083-4.028-12.083-11.382v-4.028zM5.654 454.61l5.603-9.28c3.853-6.654 9.105-7.004 15.584-3.152 4.903 2.101 9.63 3.152 14.359 3.152 10.155 0 14.358-3.502 14.358-8.23 0-6.654-5.604-9.106-15.934-9.106h-4.728c-5.954 0-9.28-2.101-12.258-7.88l-1.05-1.926c-2.451-4.728-1.226-9.806 2.801-14.884l5.604-7.004c6.829-8.405 12.257-13.483 12.257-13.483v-.35s-4.203 1.051-12.608 1.051H16.685c-7.53 0-11.383-4.028-11.383-11.382v-8.755c0-7.53 3.853-11.382 11.383-11.382h58.484c7.529 0 11.382 4.027 11.382 11.382v3.327c0 5.778-1.401 9.806-5.079 14.183l-17.509 20.137c19.611 5.078 28.716 20.487 28.716 34.845 0 21.363-14.358 44.126-48.503 44.126-16.636 0-28.192-4.728-35.896-9.455-5.779-4.202-6.304-9.805-2.626-15.934zM144 132h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n        \"list-ul\": [512, 512, [], \"f0ca\", \"M96 96c0 26.51-21.49 48-48 48S0 122.51 0 96s21.49-48 48-48 48 21.49 48 48zM48 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm0 160c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm96-236h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"],\n        \"location-arrow\": [512, 512, [], \"f124\", \"M443.683 4.529L27.818 196.418C-18.702 217.889-3.39 288 47.933 288H224v175.993c0 51.727 70.161 66.526 91.582 20.115L507.38 68.225c18.905-40.961-23.752-82.133-63.697-63.696z\"],\n        \"lock\": [448, 512, [], \"f023\", \"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\"],\n        \"lock-open\": [576, 512, [], \"f3c1\", \"M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z\"],\n        \"long-arrow-alt-down\": [256, 512, [], \"f309\", \"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"],\n        \"long-arrow-alt-left\": [448, 512, [], \"f30a\", \"M134.059 296H436c6.627 0 12-5.373 12-12v-56c0-6.627-5.373-12-12-12H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.569 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296z\"],\n        \"long-arrow-alt-right\": [448, 512, [], \"f30b\", \"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\"],\n        \"long-arrow-alt-up\": [256, 512, [], \"f30c\", \"M88 166.059V468c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12V166.059h46.059c21.382 0 32.09-25.851 16.971-40.971l-86.059-86.059c-9.373-9.373-24.569-9.373-33.941 0l-86.059 86.059c-15.119 15.119-4.411 40.971 16.971 40.971H88z\"],\n        \"low-vision\": [576, 512, [], \"f2a8\", \"M569.344 231.631C512.96 135.949 407.81 72 288 72c-28.468 0-56.102 3.619-82.451 10.409L152.778 10.24c-7.601-10.858-22.564-13.5-33.423-5.9l-13.114 9.178c-10.86 7.601-13.502 22.566-5.9 33.426l43.131 58.395C89.449 131.73 40.228 174.683 6.682 231.581c-.01.017-.023.033-.034.05-8.765 14.875-8.964 33.528 0 48.739 38.5 65.332 99.742 115.862 172.859 141.349L55.316 244.302A272.194 272.194 0 0 1 83.61 208.39l119.4 170.58h.01l40.63 58.04a330.055 330.055 0 0 0 78.94 1.17l-189.98-271.4a277.628 277.628 0 0 1 38.777-21.563l251.836 356.544c7.601 10.858 22.564 13.499 33.423 5.9l13.114-9.178c10.86-7.601 13.502-22.567 5.9-33.426l-43.12-58.377-.007-.009c57.161-27.978 104.835-72.04 136.81-126.301a47.938 47.938 0 0 0 .001-48.739zM390.026 345.94l-19.066-27.23c24.682-32.567 27.711-76.353 8.8-111.68v.03c0 23.65-19.17 42.82-42.82 42.82-23.828 0-42.82-19.349-42.82-42.82 0-23.65 19.17-42.82 42.82-42.82h.03c-24.75-13.249-53.522-15.643-79.51-7.68l-19.068-27.237C253.758 123.306 270.488 120 288 120c75.162 0 136 60.826 136 136 0 34.504-12.833 65.975-33.974 89.94z\"],\n        \"magic\": [512, 512, [], \"f0d0\", \"M101.1 505L7 410.9c-9.4-9.4-9.4-24.6 0-33.9L377 7c9.4-9.4 24.6-9.4 33.9 0l94.1 94.1c9.4 9.4 9.4 24.6 0 33.9L135 505c-9.3 9.3-24.5 9.3-33.9 0zM304 159.2l48.8 48.8 89.9-89.9-48.8-48.8-89.9 89.9zM138.9 39.3l-11.7 23.8-26.2 3.8c-4.7.7-6.6 6.5-3.2 9.8l19 18.5-4.5 26.1c-.8 4.7 4.1 8.3 8.3 6.1L144 115l23.4 12.3c4.2 2.2 9.1-1.4 8.3-6.1l-4.5-26.1 19-18.5c3.4-3.3 1.5-9.1-3.2-9.8L160.8 63l-11.7-23.8c-2-4.1-8.1-4.1-10.2.1zm97.7-20.7l-7.8 15.8-17.5 2.6c-3.1.5-4.4 4.3-2.1 6.5l12.6 12.3-3 17.4c-.5 3.1 2.8 5.5 5.6 4L240 69l15.6 8.2c2.8 1.5 6.1-.9 5.6-4l-3-17.4 12.6-12.3c2.3-2.2 1-6.1-2.1-6.5l-17.5-2.5-7.8-15.8c-1.4-3-5.4-3-6.8-.1zm-192 0l-7.8 15.8L19.3 37c-3.1.5-4.4 4.3-2.1 6.5l12.6 12.3-3 17.4c-.5 3.1 2.8 5.5 5.6 4L48 69l15.6 8.2c2.8 1.5 6.1-.9 5.6-4l-3-17.4 12.6-12.3c2.3-2.2 1-6.1-2.1-6.5l-17.5-2.5-7.8-15.8c-1.4-3-5.4-3-6.8-.1zm416 223.5l-7.8 15.8-17.5 2.5c-3.1.5-4.4 4.3-2.1 6.5l12.6 12.3-3 17.4c-.5 3.1 2.8 5.5 5.6 4l15.6-8.2 15.6 8.2c2.8 1.5 6.1-.9 5.6-4l-3-17.4 12.6-12.3c2.3-2.2 1-6.1-2.1-6.5l-17.5-2.5-7.8-15.8c-1.4-2.8-5.4-2.8-6.8 0z\"],\n        \"magnet\": [512, 512, [], \"f076\", \"M164.1 160H12c-6.6 0-12-5.4-12-12V68c0-19.9 16.1-36 36-36h104c19.9 0 36 16.1 36 36v80c.1 6.6-5.3 12-11.9 12zm348-12V67.9c0-19.9-16.1-36-36-36h-104c-19.9 0-36 16.1-36 36v80c0 6.6 5.4 12 12 12h152c6.6.1 12-5.3 12-11.9zm-164 44c-6.6 0-12 5.4-12 12v52c0 128.1-160 127.9-160 0v-52c0-6.6-5.4-12-12-12h-152c-6.7 0-12 5.4-12 12.1.1 21.4.6 40.3 0 53.3C.1 408 136.3 504 256.9 504 377.5 504 512 408 512 257.3c-.6-12.8-.2-33 0-53.2 0-6.7-5.3-12.1-12-12.1H348.1z\"],\n        \"male\": [192, 512, [], \"f183\", \"M96 0c35.346 0 64 28.654 64 64s-28.654 64-64 64-64-28.654-64-64S60.654 0 96 0m48 144h-11.36c-22.711 10.443-49.59 10.894-73.28 0H48c-26.51 0-48 21.49-48 48v136c0 13.255 10.745 24 24 24h16v136c0 13.255 10.745 24 24 24h64c13.255 0 24-10.745 24-24V352h16c13.255 0 24-10.745 24-24V192c0-26.51-21.49-48-48-48z\"],\n        \"map\": [576, 512, [], \"f279\", \"M576 56.015v335.97a23.998 23.998 0 0 1-13.267 21.466l-128 64C418.948 485.344 400 473.992 400 455.985v-335.97a23.998 23.998 0 0 1 13.267-21.466l128-64C557.052 26.656 576 38.008 576 56.015zm-206.253 42.07l-144-64c-15.751-7-33.747 4.461-33.747 21.932v335.967a24 24 0 0 0 14.253 21.931l144 64c15.751 7 33.747-4.461 33.747-21.931V120.017a24 24 0 0 0-14.253-21.932zm-228.48-63.536l-128 63.985A23.998 23.998 0 0 0 0 120v335.985c0 18.007 18.948 29.359 34.733 21.466l128-63.985A23.998 23.998 0 0 0 176 392V56.015c0-18.007-18.948-29.359-34.733-21.466z\"],\n        \"map-marker\": [384, 512, [], \"f041\", \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0z\"],\n        \"map-marker-alt\": [384, 512, [], \"f3c5\", \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\"],\n        \"map-pin\": [320, 512, [], \"f276\", \"M192 300.813v172.82l-22.015 33.023c-4.75 7.125-15.219 7.125-19.969 0L128 473.633v-172.82a162.221 162.221 0 0 0 64 0zM160 0c79.529 0 144 64.471 144 144s-64.471 144-144 144S16 223.529 16 144 80.471 0 160 0M80 136c0-39.701 32.299-72 72-72a8 8 0 0 0 0-16c-48.523 0-88 39.477-88 88a8 8 0 0 0 16 0z\"],\n        \"map-signs\": [512, 512, [], \"f277\", \"M487.515 104.485L439.03 152.97a23.998 23.998 0 0 1-16.97 7.029H56c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24h160v-8c0-13.255 10.745-24 24-24h32c13.255 0 24 10.745 24 24v8h126.059a24 24 0 0 1 16.97 7.029l48.485 48.485c4.687 4.687 4.687 12.285.001 16.971zM216 368v120c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V368h-80zm240-144H296v-48h-80v48H89.941a24 24 0 0 0-16.97 7.029l-48.485 48.485c-4.686 4.686-4.686 12.284 0 16.971l48.485 48.485a23.998 23.998 0 0 0 16.97 7.029H456c13.255 0 24-10.745 24-24v-80C480 234.745 469.255 224 456 224z\"],\n        \"mars\": [384, 512, [], \"f222\", \"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c0-6.6-5.4-12-12-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n        \"mars-double\": [512, 512, [], \"f227\", \"M340 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C198.5 72.1 172.2 64 144 64 64.5 64 0 128.5 0 208s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.5 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 288c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80zm356-128.1h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7c-18.2-11.4-39-18.9-61.5-21.3-2.1 21.8-8.2 43.3-18.4 63.3 1.1 0 2.2-.1 3.2-.1 44.1 0 80 35.9 80 80s-35.9 80-80 80-80-35.9-80-80c0-1.1 0-2.2.1-3.2-20 10.2-41.5 16.4-63.3 18.4C168.4 455.6 229.6 512 304 512c79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12v-79c0-6.7-5.4-12.1-12-12.1z\"],\n        \"mars-stroke\": [384, 512, [], \"f229\", \"M372 64h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-17.5 17.5-14.1-14.1c-4.7-4.7-12.3-4.7-17 0L224.5 133c-4.7 4.7-4.7 12.3 0 17l14.1 14.1-18 18c-22.2-14-48.5-22.1-76.7-22.1C64.5 160 0 224.5 0 304s64.5 144 144 144 144-64.5 144-144c0-28.2-8.1-54.5-22.1-76.7l18-18 14.1 14.1c4.7 4.7 12.3 4.7 17 0l28.3-28.3c4.7-4.7 4.7-12.3 0-17L329.2 164l17.5-17.5 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V76c-.1-6.6-5.5-12-12.1-12zM144 384c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n        \"mars-stroke-h\": [480, 512, [], \"f22b\", \"M476.2 247.5l-55.9-55.9c-7.6-7.6-20.5-2.2-20.5 8.5V224H376v-20c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v20h-27.6c-5.8-25.6-18.7-49.9-38.6-69.8C189.6 98 98.4 98 42.2 154.2c-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 19.9-19.9 32.8-44.2 38.6-69.8H312v20c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-20h23.9v23.9c0 10.7 12.9 16 20.5 8.5l55.9-55.9c4.6-4.7 4.6-12.3-.1-17zm-275.6 65.1c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z\"],\n        \"mars-stroke-v\": [288, 512, [], \"f22a\", \"M245.8 234.2c-19.9-19.9-44.2-32.8-69.8-38.6v-25.4h20c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-20V81.4h23.9c10.7 0 16-12.9 8.5-20.5L152.5 5.1c-4.7-4.7-12.3-4.7-17 0L79.6 61c-7.6 7.6-2.2 20.5 8.5 20.5H112v24.7H92c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h20v25.4c-25.6 5.8-49.9 18.7-69.8 38.6-56.2 56.2-56.2 147.4 0 203.6 56.2 56.2 147.4 56.2 203.6 0 56.3-56.2 56.3-147.4 0-203.6zm-45.2 158.4c-31.2 31.2-81.9 31.2-113.1 0-31.2-31.2-31.2-81.9 0-113.1 31.2-31.2 81.9-31.2 113.1 0 31.2 31.1 31.2 81.9 0 113.1z\"],\n        \"medkit\": [512, 512, [], \"f0fa\", \"M96 480h320V128h-32V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v48H96v352zm96-384h128v32H192V96zm320 80v256c0 26.51-21.49 48-48 48h-16V128h16c26.51 0 48 21.49 48 48zM64 480H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v352zm288-208v32c0 8.837-7.163 16-16 16h-48v48c0 8.837-7.163 16-16 16h-32c-8.837 0-16-7.163-16-16v-48h-48c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h48v-48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v48h48c8.837 0 16 7.163 16 16z\"],\n        \"meh\": [512, 512, [], \"f11a\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-396-64c0 37.497 30.503 68 68 68s68-30.503 68-68-30.503-68-68-68-68 30.503-68 68zm160.5 0c0 37.221 30.279 67.5 67.5 67.5s67.5-30.279 67.5-67.5-30.279-67.5-67.5-67.5-67.5 30.279-67.5 67.5zm67.5-48a47.789 47.789 0 0 0-22.603 5.647h.015c10.916 0 19.765 8.849 19.765 19.765s-8.849 19.765-19.765 19.765-19.765-8.849-19.765-19.765v-.015A47.789 47.789 0 0 0 288 192c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48zm-160 0a47.789 47.789 0 0 0-22.603 5.647h.015c10.916 0 19.765 8.849 19.765 19.765s-8.849 19.765-19.765 19.765-19.765-8.849-19.765-19.765v-.015A47.789 47.789 0 0 0 128 192c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48zm160 208H176c-21.178 0-21.169 32 0 32h160c21.178 0 21.169-32 0-32z\"],\n        \"mercury\": [288, 512, [], \"f223\", \"M288 208c0-44.2-19.9-83.7-51.2-110.1 2.5-1.8 4.9-3.8 7.2-5.8 24.7-21.2 39.8-48.8 43.2-78.8.9-7.1-4.7-13.3-11.9-13.3h-40.5C229 0 224.1 4.1 223 9.8c-2.4 12.5-9.6 24.3-20.7 33.8C187 56.8 166.3 64 144 64s-43-7.2-58.4-20.4C74.5 34.1 67.4 22.3 64.9 9.8 63.8 4.1 58.9 0 53.2 0H12.7C5.5 0-.1 6.2.8 13.3 4.2 43.4 19.2 71 44 92.2c2.3 2 4.7 3.9 7.2 5.8C19.9 124.3 0 163.8 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"],\n        \"microchip\": [512, 512, [], \"f2db\", \"M416 48v416c0 26.51-21.49 48-48 48H144c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h224c26.51 0 48 21.49 48 48zm96 58v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42V88h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zm0 96v12a6 6 0 0 1-6 6h-18v6a6 6 0 0 1-6 6h-42v-48h42a6 6 0 0 1 6 6v6h18a6 6 0 0 1 6 6zM30 376h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6zm0-96h42v48H30a6 6 0 0 1-6-6v-6H6a6 6 0 0 1-6-6v-12a6 6 0 0 1 6-6h18v-6a6 6 0 0 1 6-6z\"],\n        \"microphone\": [384, 512, [], \"f130\", \"M96 256V96c0-53.019 42.981-96 96-96s96 42.981 96 96v160c0 53.019-42.981 96-96 96s-96-42.981-96-96zm252-56h-24c-6.627 0-12 5.373-12 12v42.68c0 66.217-53.082 120.938-119.298 121.318C126.213 376.38 72 322.402 72 256v-44c0-6.627-5.373-12-12-12H36c-6.627 0-12 5.373-12 12v44c0 84.488 62.693 154.597 144 166.278V468h-68c-6.627 0-12 5.373-12 12v20c0 6.627 5.373 12 12 12h184c6.627 0 12-5.373 12-12v-20c0-6.627-5.373-12-12-12h-68v-45.722c81.307-11.681 144-81.79 144-166.278v-44c0-6.627-5.373-12-12-12z\"],\n        \"microphone-slash\": [512, 512, [], \"f131\", \"M421.45 285.195L376 239.746V212c0-6.627 5.373-12 12-12h24c6.627 0 12 5.373 12 12v44c0 9.957-.881 19.71-2.55 29.195zM352 96c0-53.019-42.981-96-96-96-32.574 0-61.354 16.227-78.71 41.035L352 215.746V96zm152.971 363.716L52.284 7.029c-9.373-9.373-24.569-9.373-33.941 0L7.029 18.343c-9.372 9.373-9.372 24.568 0 33.941L160 205.254v49.577c0 53.089 43.436 97.452 96.524 97.167 14.626-.078 28.471-3.44 40.854-9.366l17.746 17.746c-17.529 9.971-37.794 15.666-59.372 15.622C189.355 375.864 136 321.053 136 254.656V212c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v44c0 84.488 62.693 154.597 144 166.278V468h-68c-6.627 0-12 5.373-12 12v20c0 6.627 5.373 12 12 12h184c6.627 0 12-5.373 12-12v-20c0-6.627-5.373-12-12-12h-68v-45.722c25.625-3.682 49.396-13.172 69.942-27.083L459.717 504.97c9.373 9.373 24.569 9.373 33.941 0l11.313-11.313c9.372-9.373 9.372-24.568 0-33.941z\"],\n        \"minus\": [448, 512, [], \"f068\", \"M424 318.2c13.3 0 24-10.7 24-24v-76.4c0-13.3-10.7-24-24-24H24c-13.3 0-24 10.7-24 24v76.4c0 13.3 10.7 24 24 24h400z\"],\n        \"minus-circle\": [512, 512, [], \"f056\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z\"],\n        \"minus-square\": [448, 512, [], \"f146\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z\"],\n        \"mobile\": [320, 512, [], \"f10b\", \"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n        \"mobile-alt\": [320, 512, [], \"f3cd\", \"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm112-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v312z\"],\n        \"money-bill-alt\": [640, 512, [], \"f3d1\", \"M640 120v272c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h592c13.255 0 24 10.745 24 24zM96 384c0-35.346-28.654-64-64-64v64h64zm0-256H32v64c35.346 0 64-28.654 64-64zm304 128c0-53.021-35.816-96-80-96s-80 42.979-80 96c0 53.012 35.814 96 80 96 44.167 0 80-42.969 80-96zm208 64c-35.346 0-64 28.654-64 64h64v-64zm0-192h-64c0 35.346 28.654 64 64 64v-64zM277.563 299.527c0-7.477 3.917-11.572 11.573-11.572h15.131v-39.878c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.939c4.449-4.095 8.366-5.697 14.42-5.697h12.105c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572h-67.293c-7.656 0-11.573-4.095-11.573-11.572v-8.9z\"],\n        \"moon\": [512, 512, [], \"f186\", \"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"],\n        \"motorcycle\": [640, 512, [], \"f21c\", \"M512.949 192.003c-14.862-.108-29.14 2.322-42.434 6.874L437.589 144H520c13.255 0 24-10.745 24-24V88c0-13.255-10.745-24-24-24h-45.311a24 24 0 0 0-17.839 7.945l-37.496 41.663-22.774-37.956A24 24 0 0 0 376 64h-80c-8.837 0-16 7.163-16 16v16c0 8.837 7.163 16 16 16h66.411l19.2 32H227.904c-17.727-23.073-44.924-40-99.904-40H72.54c-13.455 0-24.791 11.011-24.536 24.464C48.252 141.505 58.9 152 72 152h56c24.504 0 38.686 10.919 47.787 24.769l-11.291 20.529c-13.006-3.865-26.871-5.736-41.251-5.21C55.857 194.549 1.565 249.605.034 317.021-1.603 389.076 56.317 448 128 448c59.642 0 109.744-40.794 123.953-96h84.236c13.673 0 24.589-11.421 23.976-25.077-2.118-47.12 17.522-93.665 56.185-125.026l12.485 20.808c-27.646 23.654-45.097 58.88-44.831 98.179.47 69.556 57.203 126.452 126.758 127.11 71.629.678 129.839-57.487 129.234-129.099-.588-69.591-57.455-126.386-127.047-126.892zM128 400c-44.112 0-80-35.888-80-80s35.888-80 80-80c4.242 0 8.405.341 12.469.982L98.97 316.434C90.187 332.407 101.762 352 120 352h81.297c-12.37 28.225-40.56 48-73.297 48zm388.351-.116C470.272 402.337 432 365.554 432 320c0-21.363 8.434-40.781 22.125-55.144l49.412 82.352c4.546 7.577 14.375 10.034 21.952 5.488l13.72-8.232c7.577-4.546 10.034-14.375 5.488-21.952l-48.556-80.927A80.005 80.005 0 0 1 512 240c45.554 0 82.338 38.273 79.884 84.352-2.16 40.558-34.974 73.372-75.533 75.532z\"],\n        \"mouse-pointer\": [320, 512, [], \"f245\", \"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\"],\n        \"music\": [512, 512, [], \"f001\", \"M470.4 1.5l-304 96C153.1 101.7 144 114 144 128v264.6c-14.1-5.4-30.5-8.6-48-8.6-53 0-96 28.7-96 64s43 64 96 64 96-28.7 96-64V220.5l272-85.9v194c-14.1-5.4-30.5-8.6-48-8.6-53 0-96 28.7-96 64s43 64 96 64 96-28.7 96-64V32c0-21.7-21.1-37-41.6-30.5z\"],\n        \"neuter\": [288, 512, [], \"f22c\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V468c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V316.4c64.1-14.5 112-71.9 112-140.4zm-144 80c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n        \"newspaper\": [576, 512, [], \"f1ea\", \"M552 64H88c-13.255 0-24 10.745-24 24v8H24c-13.255 0-24 10.745-24 24v272c0 30.928 25.072 56 56 56h472c26.51 0 48-21.49 48-48V88c0-13.255-10.745-24-24-24zM56 400a8 8 0 0 1-8-8V144h16v248a8 8 0 0 1-8 8zm236-16H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm-208-96H140c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm208 0H348c-6.627 0-12-5.373-12-12v-8c0-6.627 5.373-12 12-12h152c6.627 0 12 5.373 12 12v8c0 6.627-5.373 12-12 12zm0-96H140c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h360c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12z\"],\n        \"object-group\": [512, 512, [], \"f247\", \"M480 128V96h20c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v20H64V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v40c0 6.627 5.373 12 12 12h20v320H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-20h384v20c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-20V128zM96 276V140c0-6.627 5.373-12 12-12h168c6.627 0 12 5.373 12 12v136c0 6.627-5.373 12-12 12H108c-6.627 0-12-5.373-12-12zm320 96c0 6.627-5.373 12-12 12H236c-6.627 0-12-5.373-12-12v-52h72c13.255 0 24-10.745 24-24v-72h84c6.627 0 12 5.373 12 12v136z\"],\n        \"object-ungroup\": [576, 512, [], \"f248\", \"M64 320v26a6 6 0 0 1-6 6H6a6 6 0 0 1-6-6v-52a6 6 0 0 1 6-6h26V96H6a6 6 0 0 1-6-6V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v26h288V38a6 6 0 0 1 6-6h52a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-26v192h26a6 6 0 0 1 6 6v52a6 6 0 0 1-6 6h-52a6 6 0 0 1-6-6v-26H64zm480-64v-32h26a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-52a6 6 0 0 0-6 6v26H408v72h8c13.255 0 24 10.745 24 24v64c0 13.255-10.745 24-24 24h-64c-13.255 0-24-10.745-24-24v-8H192v72h-26a6 6 0 0 0-6 6v52a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-26h288v26a6 6 0 0 0 6 6h52a6 6 0 0 0 6-6v-52a6 6 0 0 0-6-6h-26V256z\"],\n        \"outdent\": [448, 512, [], \"f03b\", \"M0 84V44c0-8.837 7.163-16 16-16h416c8.837 0 16 7.163 16 16v40c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16zm208 144h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H208c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM16 484h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm192-128h224c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H208c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zM4.687 267.313l96 95.984C110.734 373.348 128 366.224 128 351.984V160.008c0-14.329-17.325-21.304-27.313-11.313l-96 95.992c-6.249 6.248-6.249 16.378 0 22.626z\"],\n        \"paint-brush\": [512, 512, [], \"f1fc\", \"M269.9 364.6c1.4 6.4 2.1 13 2.1 19.7 0 81.2-54.2 127.7-134.8 127.7C41.5 512 0 435.1 0 347.6c10.4 7.1 46.9 36.5 58.7 36.5 7 0 13-4 15.5-10.6 23.6-62.2 66.5-76.5 112.9-77.4 15.6 33.8 46.1 59.6 82.8 68.5zM460.6 0c-14.4 0-27.9 6.4-38.2 15.7C228.2 190 208 194.1 208 245.4c0 48.8 40.5 90.6 90.2 90.6 59 0 93.2-43.4 200.6-244.8 7-13.7 13.2-28.5 13.2-43.9C512 19.7 487.3 0 460.6 0z\"],\n        \"pallet\": [640, 512, [], \"f482\", \"M144 256h352c8.8 0 16-7.2 16-16V16c0-8.8-7.2-16-16-16H384v128l-64-32-64 32V0H144c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16zm480 128c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h48v64H16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h608c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16h-48v-64h48zm-336 64H128v-64h160v64zm224 0H352v-64h160v64z\"],\n        \"paper-plane\": [512, 512, [], \"f1d8\", \"M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z\"],\n        \"paperclip\": [448, 512, [], \"f0c6\", \"M43.246 466.142c-58.43-60.289-57.341-157.511 1.386-217.581L254.392 34c44.316-45.332 116.351-45.336 160.671 0 43.89 44.894 43.943 117.329 0 162.276L232.214 383.128c-29.855 30.537-78.633 30.111-107.982-.998-28.275-29.97-27.368-77.473 1.452-106.953l143.743-146.835c6.182-6.314 16.312-6.422 22.626-.241l22.861 22.379c6.315 6.182 6.422 16.312.241 22.626L171.427 319.927c-4.932 5.045-5.236 13.428-.648 18.292 4.372 4.634 11.245 4.711 15.688.165l182.849-186.851c19.613-20.062 19.613-52.725-.011-72.798-19.189-19.627-49.957-19.637-69.154 0L90.39 293.295c-34.763 35.56-35.299 93.12-1.191 128.313 34.01 35.093 88.985 35.137 123.058.286l172.06-175.999c6.177-6.319 16.307-6.433 22.626-.256l22.877 22.364c6.319 6.177 6.434 16.307.256 22.626l-172.06 175.998c-59.576 60.938-155.943 60.216-214.77-.485z\"],\n        \"paragraph\": [448, 512, [], \"f1dd\", \"M408 32H177.531C88.948 32 16.045 103.335 16 191.918 15.956 280.321 87.607 352 176 352v104c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V112h32v344c0 13.255 10.745 24 24 24h32c13.255 0 24-10.745 24-24V112h40c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24z\"],\n        \"paste\": [448, 512, [], \"f0ea\", \"M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z\"],\n        \"pause\": [448, 512, [], \"f04c\", \"M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z\"],\n        \"pause-circle\": [512, 512, [], \"f28b\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm-16 328c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160zm112 0c0 8.8-7.2 16-16 16h-48c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v160z\"],\n        \"paw\": [512, 512, [], \"f1b0\", \"M85.231 330.958C36 330.958 0 273.792 0 231.5c0-28.292 16-58.042 49.538-58.042 49.231 0 85.231 57.458 85.231 99.75 0 28.292-15.692 57.75-49.538 57.75zm348 106.167c0 37.042-32 42.875-63.385 42.875-41.231 0-74.462-26.25-113.846-26.25-41.231 0-76.308 25.958-120.923 25.958-29.847 0-56.308-9.625-56.308-42.583C78.769 368 180.616 265.333 256 265.333s177.231 102.959 177.231 171.792zM182.462 203.792c-49.847 0-80-59.5-80-100.333C102.462 70.792 120.308 32 160 32c50.154 0 80 59.5 80 100.333 0 32.667-17.846 71.459-57.538 71.459zM272 132.333C272 91.5 301.846 32 352 32c39.692 0 57.539 38.792 57.539 71.458 0 40.833-30.154 100.333-80.001 100.333C289.846 203.792 272 165 272 132.333zM512 231.5c0 42.292-36 99.458-85.231 99.458-33.847 0-49.538-29.458-49.538-57.75 0-42.291 35.999-99.75 85.231-99.75C496 173.458 512 203.208 512 231.5z\"],\n        \"pen-square\": [448, 512, [], \"f14b\", \"M400 480H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zM238.1 177.9L102.4 313.6l-6.3 57.1c-.8 7.6 5.6 14.1 13.3 13.3l57.1-6.3L302.2 242c2.3-2.3 2.3-6.1 0-8.5L246.7 178c-2.5-2.4-6.3-2.4-8.6-.1zM345 165.1L314.9 135c-9.4-9.4-24.6-9.4-33.9 0l-23.1 23.1c-2.3 2.3-2.3 6.1 0 8.5l55.5 55.5c2.3 2.3 6.1 2.3 8.5 0L345 199c9.3-9.3 9.3-24.5 0-33.9z\"],\n        \"pencil-alt\": [512, 512, [], \"f303\", \"M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z\"],\n        \"percent\": [448, 512, [], \"f295\", \"M112 224c61.9 0 112-50.1 112-112S173.9 0 112 0 0 50.1 0 112s50.1 112 112 112zm0-160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm224 224c-61.9 0-112 50.1-112 112s50.1 112 112 112 112-50.1 112-112-50.1-112-112-112zm0 160c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zM392.3.2l31.6-.1c19.4-.1 30.9 21.8 19.7 37.8L77.4 501.6a23.95 23.95 0 0 1-19.6 10.2l-33.4.1c-19.5 0-30.9-21.9-19.7-37.8l368-463.7C377.2 4 384.5.2 392.3.2z\"],\n        \"phone\": [512, 512, [], \"f095\", \"M493.397 24.615l-104-23.997c-11.314-2.611-22.879 3.252-27.456 13.931l-48 111.997a24 24 0 0 0 6.862 28.029l60.617 49.596c-35.973 76.675-98.938 140.508-177.249 177.248l-49.596-60.616a24 24 0 0 0-28.029-6.862l-111.997 48C3.873 366.516-1.994 378.08.618 389.397l23.997 104C27.109 504.204 36.748 512 48 512c256.087 0 464-207.532 464-464 0-11.176-7.714-20.873-18.603-23.385z\"],\n        \"phone-square\": [448, 512, [], \"f098\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM94 416c-7.033 0-13.057-4.873-14.616-11.627l-14.998-65a15 15 0 0 1 8.707-17.16l69.998-29.999a15 15 0 0 1 17.518 4.289l30.997 37.885c48.944-22.963 88.297-62.858 110.781-110.78l-37.886-30.997a15.001 15.001 0 0 1-4.289-17.518l30-69.998a15 15 0 0 1 17.16-8.707l65 14.998A14.997 14.997 0 0 1 384 126c0 160.292-129.945 290-290 290z\"],\n        \"phone-volume\": [384, 512, [], \"f2a0\", \"M97.333 506.966c-129.874-129.874-129.681-340.252 0-469.933 5.698-5.698 14.527-6.632 21.263-2.422l64.817 40.513a17.187 17.187 0 0 1 6.849 20.958l-32.408 81.021a17.188 17.188 0 0 1-17.669 10.719l-55.81-5.58c-21.051 58.261-20.612 122.471 0 179.515l55.811-5.581a17.188 17.188 0 0 1 17.669 10.719l32.408 81.022a17.188 17.188 0 0 1-6.849 20.958l-64.817 40.513a17.19 17.19 0 0 1-21.264-2.422zM247.126 95.473c11.832 20.047 11.832 45.008 0 65.055-3.95 6.693-13.108 7.959-18.718 2.581l-5.975-5.726c-3.911-3.748-4.793-9.622-2.261-14.41a32.063 32.063 0 0 0 0-29.945c-2.533-4.788-1.65-10.662 2.261-14.41l5.975-5.726c5.61-5.378 14.768-4.112 18.718 2.581zm91.787-91.187c60.14 71.604 60.092 175.882 0 247.428-4.474 5.327-12.53 5.746-17.552.933l-5.798-5.557c-4.56-4.371-4.977-11.529-.93-16.379 49.687-59.538 49.646-145.933 0-205.422-4.047-4.85-3.631-12.008.93-16.379l5.798-5.557c5.022-4.813 13.078-4.394 17.552.933zm-45.972 44.941c36.05 46.322 36.108 111.149 0 157.546-4.39 5.641-12.697 6.251-17.856 1.304l-5.818-5.579c-4.4-4.219-4.998-11.095-1.285-15.931 26.536-34.564 26.534-82.572 0-117.134-3.713-4.836-3.115-11.711 1.285-15.931l5.818-5.579c5.159-4.947 13.466-4.337 17.856 1.304z\"],\n        \"pills\": [576, 512, [], \"f484\", \"M112 32C50.1 32 0 82.1 0 144v224c0 61.9 50.1 112 112 112s112-50.1 112-112V144c0-61.9-50.1-112-112-112zm48 224H64V144c0-26.5 21.5-48 48-48s48 21.5 48 48v112zm139.7-29.7c-3.5-3.5-9.4-3.1-12.3.8-45.3 62.5-40.4 150.1 15.9 206.4 56.3 56.3 143.9 61.2 206.4 15.9 4-2.9 4.3-8.8.8-12.3L299.7 226.3zm229.8-19c-56.3-56.3-143.9-61.2-206.4-15.9-4 2.9-4.3 8.8-.8 12.3l210.8 210.8c3.5 3.5 9.4 3.1 12.3-.8 45.3-62.6 40.5-150.1-15.9-206.4z\"],\n        \"plane\": [576, 512, [], \"f072\", \"M472 200H360.211L256.013 5.711A12 12 0 0 0 245.793 0h-57.787c-7.85 0-13.586 7.413-11.616 15.011L209.624 200H99.766l-34.904-58.174A12 12 0 0 0 54.572 136H12.004c-7.572 0-13.252 6.928-11.767 14.353l21.129 105.648L.237 361.646c-1.485 7.426 4.195 14.354 11.768 14.353l42.568-.002c4.215 0 8.121-2.212 10.289-5.826L99.766 312h109.858L176.39 496.989c-1.97 7.599 3.766 15.011 11.616 15.011h57.787a12 12 0 0 0 10.22-5.711L360.212 312H472c57.438 0 104-25.072 104-56s-46.562-56-104-56z\"],\n        \"play\": [448, 512, [], \"f04b\", \"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\"],\n        \"play-circle\": [512, 512, [], \"f144\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\"],\n        \"plug\": [384, 512, [], \"f1e6\", \"M256 144V32c0-17.673 14.327-32 32-32s32 14.327 32 32v112h-64zm112 16H16c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16h16v32c0 77.406 54.969 141.971 128 156.796V512h64v-99.204c73.031-14.825 128-79.39 128-156.796v-32h16c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16zm-240-16V32c0-17.673-14.327-32-32-32S64 14.327 64 32v112h64z\"],\n        \"plus\": [448, 512, [], \"f067\", \"M448 294.2v-76.4c0-13.3-10.7-24-24-24H286.2V56c0-13.3-10.7-24-24-24h-76.4c-13.3 0-24 10.7-24 24v137.8H24c-13.3 0-24 10.7-24 24v76.4c0 13.3 10.7 24 24 24h137.8V456c0 13.3 10.7 24 24 24h76.4c13.3 0 24-10.7 24-24V318.2H424c13.3 0 24-10.7 24-24z\"],\n        \"plus-circle\": [512, 512, [], \"f055\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n        \"plus-square\": [448, 512, [], \"f0fe\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"],\n        \"podcast\": [448, 512, [], \"f2ce\", \"M267.429 488.563C262.286 507.573 242.858 512 224 512c-18.857 0-38.286-4.427-43.428-23.437C172.927 460.134 160 388.898 160 355.75c0-35.156 31.142-43.75 64-43.75s64 8.594 64 43.75c0 32.949-12.871 104.179-20.571 132.813zM156.867 288.554c-18.693-18.308-29.958-44.173-28.784-72.599 2.054-49.724 42.395-89.956 92.124-91.881C274.862 121.958 320 165.807 320 220c0 26.827-11.064 51.116-28.866 68.552-2.675 2.62-2.401 6.986.628 9.187 9.312 6.765 16.46 15.343 21.234 25.363 1.741 3.654 6.497 4.66 9.449 1.891 28.826-27.043 46.553-65.783 45.511-108.565-1.855-76.206-63.595-138.208-139.793-140.369C146.869 73.753 80 139.215 80 220c0 41.361 17.532 78.7 45.55 104.989 2.953 2.771 7.711 1.77 9.453-1.887 4.774-10.021 11.923-18.598 21.235-25.363 3.029-2.2 3.304-6.566.629-9.185zM224 0C100.204 0 0 100.185 0 224c0 89.992 52.602 165.647 125.739 201.408 4.333 2.118 9.267-1.544 8.535-6.31-2.382-15.512-4.342-30.946-5.406-44.339-.146-1.836-1.149-3.486-2.678-4.512-47.4-31.806-78.564-86.016-78.187-147.347.592-96.237 79.29-174.648 175.529-174.899C320.793 47.747 400 126.797 400 224c0 61.932-32.158 116.49-80.65 147.867-.999 14.037-3.069 30.588-5.624 47.23-.732 4.767 4.203 8.429 8.535 6.31C395.227 389.727 448 314.187 448 224 448 100.205 347.815 0 224 0zm0 160c-35.346 0-64 28.654-64 64s28.654 64 64 64 64-28.654 64-64-28.654-64-64-64z\"],\n        \"pound-sign\": [320, 512, [], \"f154\", \"M308 352h-45.495c-6.627 0-12 5.373-12 12v50.848H128V288h84c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-84v-63.556c0-32.266 24.562-57.086 61.792-57.086 23.658 0 45.878 11.505 57.652 18.849 5.151 3.213 11.888 2.051 15.688-2.685l28.493-35.513c4.233-5.276 3.279-13.005-2.119-17.081C273.124 54.56 236.576 32 187.931 32 106.026 32 48 84.742 48 157.961V224H20c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h28v128H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h296c6.627 0 12-5.373 12-12V364c0-6.627-5.373-12-12-12z\"],\n        \"power-off\": [512, 512, [], \"f011\", \"M400 54.1c63 45 104 118.6 104 201.9 0 136.8-110.8 247.7-247.5 248C120 504.3 8.2 393 8 256.4 7.9 173.1 48.9 99.3 111.8 54.2c11.7-8.3 28-4.8 35 7.7L162.6 90c5.9 10.5 3.1 23.8-6.6 31-41.5 30.8-68 79.6-68 134.9-.1 92.3 74.5 168.1 168 168.1 91.6 0 168.6-74.2 168-169.1-.3-51.8-24.7-101.8-68.1-134-9.7-7.2-12.4-20.5-6.5-30.9l15.8-28.1c7-12.4 23.2-16.1 34.8-7.8zM296 264V24c0-13.3-10.7-24-24-24h-32c-13.3 0-24 10.7-24 24v240c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24z\"],\n        \"print\": [512, 512, [], \"f02f\", \"M464 192h-16V81.941a24 24 0 0 0-7.029-16.97L383.029 7.029A24 24 0 0 0 366.059 0H88C74.745 0 64 10.745 64 24v168H48c-26.51 0-48 21.49-48 48v132c0 6.627 5.373 12 12 12h52v104c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V384h52c6.627 0 12-5.373 12-12V240c0-26.51-21.49-48-48-48zm-80 256H128v-96h256v96zM128 224V64h192v40c0 13.2 10.8 24 24 24h40v96H128zm304 72c-13.254 0-24-10.746-24-24s10.746-24 24-24 24 10.746 24 24-10.746 24-24 24z\"],\n        \"puzzle-piece\": [576, 512, [], \"f12e\", \"M519.442 288.651c-41.519 0-59.5 31.593-82.058 31.593C377.409 320.244 432 144 432 144s-196.288 80-196.288-3.297c0-35.827 36.288-46.25 36.288-85.985C272 19.216 243.885 0 210.539 0c-34.654 0-66.366 18.891-66.366 56.346 0 41.364 31.711 59.277 31.711 81.75C175.885 207.719 0 166.758 0 166.758v333.237s178.635 41.047 178.635-28.662c0-22.473-40-40.107-40-81.471 0-37.456 29.25-56.346 63.577-56.346 33.673 0 61.788 19.216 61.788 54.717 0 39.735-36.288 50.158-36.288 85.985 0 60.803 129.675 25.73 181.23 25.73 0 0-34.725-120.101 25.827-120.101 35.962 0 46.423 36.152 86.308 36.152C556.712 416 576 387.99 576 354.443c0-34.199-18.962-65.792-56.558-65.792z\"],\n        \"qrcode\": [448, 512, [], \"f029\", \"M0 224h192V32H0v192zM64 96h64v64H64V96zm192-64v192h192V32H256zm128 128h-64V96h64v64zM0 480h192V288H0v192zm64-128h64v64H64v-64zm352-64h32v128h-96v-32h-32v96h-64V288h96v32h64v-32zm0 160h32v32h-32v-32zm-64 0h32v32h-32v-32z\"],\n        \"question\": [384, 512, [], \"f128\", \"M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z\"],\n        \"question-circle\": [512, 512, [], \"f059\", \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\"],\n        \"quidditch\": [640, 512, [], \"f458\", \"M256.5 216.8L343.2 326s-16.6 102.4-76.6 150.1C206.7 523.8 0 510.2 0 510.2s3.8-23.1 11-55.4l94.6-112.2c4-4.7-.9-11.6-6.6-9.5l-60.4 22.1c14.4-41.7 32.7-80 54.6-97.5 59.9-47.8 163.3-40.9 163.3-40.9zm238 135c-44 0-79.8 35.8-79.8 79.9 0 44.1 35.7 79.9 79.8 79.9 44.1 0 79.8-35.8 79.8-79.9 0-44.2-35.8-79.9-79.8-79.9zM636.5 31L616.7 6c-5.5-6.9-15.5-8-22.4-2.6L361.8 181.3l-34.1-43c-5.1-6.4-15.1-5.2-18.6 2.2l-25.3 54.6 86.7 109.2 58.8-12.4c8-1.7 11.4-11.2 6.3-17.6l-34.1-42.9L634 53.5c6.9-5.5 8-15.6 2.5-22.5z\"],\n        \"quote-left\": [512, 512, [], \"f10d\", \"M0 432V304C0 166.982 63.772 67.676 193.827 32.828 209.052 28.748 224 40.265 224 56.027v33.895c0 10.057-6.228 19.133-15.687 22.55C142.316 136.312 104 181.946 104 256h72c26.51 0 48 21.49 48 48v128c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48zm336 48h128c26.51 0 48-21.49 48-48V304c0-26.51-21.49-48-48-48h-72c0-74.054 38.316-119.688 104.313-143.528C505.772 109.055 512 99.979 512 89.922V56.027c0-15.762-14.948-27.279-30.173-23.199C351.772 67.676 288 166.982 288 304v128c0 26.51 21.49 48 48 48z\"],\n        \"quote-right\": [512, 512, [], \"f10e\", \"M512 80v128c0 137.018-63.772 236.324-193.827 271.172-15.225 4.08-30.173-7.437-30.173-23.199v-33.895c0-10.057 6.228-19.133 15.687-22.55C369.684 375.688 408 330.054 408 256h-72c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h128c26.51 0 48 21.49 48 48zM176 32H48C21.49 32 0 53.49 0 80v128c0 26.51 21.49 48 48 48h72c0 74.054-38.316 119.688-104.313 143.528C6.228 402.945 0 412.021 0 422.078v33.895c0 15.762 14.948 27.279 30.173 23.199C160.228 444.324 224 345.018 224 208V80c0-26.51-21.49-48-48-48z\"],\n        \"random\": [512, 512, [], \"f074\", \"M504.971 359.029c9.373 9.373 9.373 24.569 0 33.941l-80 79.984c-15.01 15.01-40.971 4.49-40.971-16.971V416h-58.785a12.004 12.004 0 0 1-8.773-3.812l-70.556-75.596 53.333-57.143L352 336h32v-39.981c0-21.438 25.943-31.998 40.971-16.971l80 79.981zM12 176h84l52.781 56.551 53.333-57.143-70.556-75.596A11.999 11.999 0 0 0 122.785 96H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12zm372 0v39.984c0 21.46 25.961 31.98 40.971 16.971l80-79.984c9.373-9.373 9.373-24.569 0-33.941l-80-79.981C409.943 24.021 384 34.582 384 56.019V96h-58.785a12.004 12.004 0 0 0-8.773 3.812L96 336H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h110.785c3.326 0 6.503-1.381 8.773-3.812L352 176h32z\"],\n        \"recycle\": [512, 512, [], \"f1b8\", \"M184.561 261.903c3.232 13.997-12.123 24.635-24.068 17.168l-40.736-25.455-50.867 81.402C55.606 356.273 70.96 384 96.012 384H148c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12H96.115c-75.334 0-121.302-83.048-81.408-146.88l50.822-81.388-40.725-25.448c-12.081-7.547-8.966-25.961 4.879-29.158l110.237-25.45c8.611-1.988 17.201 3.381 19.189 11.99l25.452 110.237zm98.561-182.915l41.289 66.076-40.74 25.457c-12.051 7.528-9 25.953 4.879 29.158l110.237 25.45c8.672 1.999 17.215-3.438 19.189-11.99l25.45-110.237c3.197-13.844-11.99-24.719-24.068-17.168l-40.687 25.424-41.263-66.082c-37.521-60.033-125.209-60.171-162.816 0l-17.963 28.766c-3.51 5.62-1.8 13.021 3.82 16.533l33.919 21.195c5.62 3.512 13.024 1.803 16.536-3.817l17.961-28.743c12.712-20.341 41.973-19.676 54.257-.022zM497.288 301.12l-27.515-44.065c-3.511-5.623-10.916-7.334-16.538-3.821l-33.861 21.159c-5.62 3.512-7.33 10.915-3.818 16.536l27.564 44.112c13.257 21.211-2.057 48.96-27.136 48.96H320V336.02c0-14.213-17.242-21.383-27.313-11.313l-80 79.981c-6.249 6.248-6.249 16.379 0 22.627l80 79.989C302.689 517.308 320 510.3 320 495.989V448h95.88c75.274 0 121.335-82.997 81.408-146.88z\"],\n        \"redo\": [512, 512, [], \"f01e\", \"M500.333 0h-47.411c-6.853 0-12.314 5.729-11.986 12.574l3.966 82.759C399.416 41.899 331.672 8 256.001 8 119.34 8 7.899 119.526 8 256.187 8.101 393.068 119.096 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-33.971-33.971c-4.466-4.466-11.64-4.717-16.38-.543C341.308 415.448 300.606 432 256 432c-97.267 0-176-78.716-176-176 0-97.267 78.716-176 176-176 60.892 0 114.506 30.858 146.099 77.8l-101.525-4.865c-6.845-.328-12.574 5.133-12.574 11.986v47.411c0 6.627 5.373 12 12 12h200.333c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12z\"],\n        \"redo-alt\": [512, 512, [], \"f2f9\", \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\"],\n        \"registered\": [512, 512, [], \"f25d\", \"M285.363 207.475c0 18.6-9.831 28.431-28.431 28.431h-29.876v-56.14h23.378c28.668 0 34.929 8.773 34.929 27.709zM504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM363.411 360.414c-46.729-84.825-43.299-78.636-44.702-80.98 23.432-15.172 37.945-42.979 37.945-74.486 0-54.244-31.5-89.252-105.498-89.252h-70.667c-13.255 0-24 10.745-24 24V372c0 13.255 10.745 24 24 24h22.567c13.255 0 24-10.745 24-24v-71.663h25.556l44.129 82.937a24.001 24.001 0 0 0 21.188 12.727h24.464c18.261-.001 29.829-19.591 21.018-35.587z\"],\n        \"reply\": [512, 512, [], \"f3e5\", \"M8.309 189.836L184.313 37.851C199.719 24.546 224 35.347 224 56.015v80.053c160.629 1.839 288 34.032 288 186.258 0 61.441-39.581 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 45.344-145.012-21.507-183.51-176.59-185.742V360c0 20.7-24.3 31.453-39.687 18.164l-176.004-152c-11.071-9.562-11.086-26.753 0-36.328z\"],\n        \"reply-all\": [576, 512, [], \"f122\", \"M136.309 189.836L312.313 37.851C327.72 24.546 352 35.348 352 56.015v82.763c129.182 10.231 224 52.212 224 183.548 0 61.441-39.582 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 38.512-123.162-3.922-169.482-112.59-182.015v84.175c0 20.701-24.3 31.453-39.687 18.164L136.309 226.164c-11.071-9.561-11.086-26.753 0-36.328zm-128 36.328L184.313 378.15C199.7 391.439 224 380.687 224 359.986v-15.818l-108.606-93.785A55.96 55.96 0 0 1 96 207.998a55.953 55.953 0 0 1 19.393-42.38L224 71.832V56.015c0-20.667-24.28-31.469-39.687-18.164L8.309 189.836c-11.086 9.575-11.071 26.767 0 36.328z\"],\n        \"retweet\": [640, 512, [], \"f079\", \"M629.657 343.598L528.971 444.284c-9.373 9.372-24.568 9.372-33.941 0L394.343 343.598c-9.373-9.373-9.373-24.569 0-33.941l10.823-10.823c9.562-9.562 25.133-9.34 34.419.492L480 342.118V160H292.451a24.005 24.005 0 0 1-16.971-7.029l-16-16C244.361 121.851 255.069 96 276.451 96H520c13.255 0 24 10.745 24 24v222.118l40.416-42.792c9.285-9.831 24.856-10.054 34.419-.492l10.823 10.823c9.372 9.372 9.372 24.569-.001 33.941zm-265.138 15.431A23.999 23.999 0 0 0 347.548 352H160V169.881l40.416 42.792c9.286 9.831 24.856 10.054 34.419.491l10.822-10.822c9.373-9.373 9.373-24.569 0-33.941L144.971 67.716c-9.373-9.373-24.569-9.373-33.941 0L10.343 168.402c-9.373 9.373-9.373 24.569 0 33.941l10.822 10.822c9.562 9.562 25.133 9.34 34.419-.491L96 169.881V392c0 13.255 10.745 24 24 24h243.549c21.382 0 32.09-25.851 16.971-40.971l-16.001-16z\"],\n        \"road\": [576, 512, [], \"f018\", \"M567.3 383.6L429.9 78.2C426 69.5 417.4 64 408 64h-96.1l1.9 18.8c.7 7.1-4.8 13.2-11.9 13.2H274c-7.1 0-12.7-6.2-11.9-13.2L264 64h-96c-9.4 0-18 5.5-21.9 14.2L8.7 383.6C3.2 395.8 0 409.6 0 424c0 13.3 10.7 24 24 24h213.6c-7.1 0-12.7-6.2-11.9-13.2l10.8-104c.6-6.1 5.8-10.8 11.9-10.8h79.2c6.1 0 11.3 4.6 11.9 10.8l10.8 104c.7 7.1-4.8 13.2-11.9 13.2H552c13.2 0 24-10.7 24-24 0-13.9-3-27.7-8.7-40.4zM254.7 154.8l3.3-32c.6-6.1 5.8-10.8 11.9-10.8h36.2c6.1 0 11.3 4.6 11.9 10.8l3.3 32c.7 7.1-4.8 13.2-11.9 13.2h-42.8c-7.1 0-12.7-6.2-11.9-13.2zM321.8 288h-67.6c-7.1 0-12.7-6.2-11.9-13.2l7.4-72c.6-6.1 5.8-10.8 11.9-10.8h52.7c6.1 0 11.3 4.6 11.9 10.8l7.4 72c.9 7-4.7 13.2-11.8 13.2z\"],\n        \"rocket\": [512, 512, [], \"f135\", \"M505.1 19.1C503.8 13 499 8.2 492.9 6.9 460.7 0 435.5 0 410.4 0 307.2 0 245.3 55.2 199.1 128H94.9c-18.2 0-34.8 10.3-42.9 26.5L2.6 253.3c-8 16 3.6 34.7 21.5 34.7h95.1c-5.9 12.8-11.9 25.5-18 37.7-3.1 6.2-1.9 13.6 3 18.5l63.6 63.6c4.9 4.9 12.3 6.1 18.5 3 12.2-6.1 24.9-12 37.7-17.9V488c0 17.8 18.8 29.4 34.7 21.5l98.7-49.4c16.3-8.1 26.5-24.8 26.5-42.9V312.8c72.6-46.3 128-108.4 128-211.1.1-25.2.1-50.4-6.8-82.6zM400 160c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"],\n        \"rss\": [448, 512, [], \"f09e\", \"M128.081 415.959c0 35.369-28.672 64.041-64.041 64.041S0 451.328 0 415.959s28.672-64.041 64.041-64.041 64.04 28.673 64.04 64.041zm175.66 47.25c-8.354-154.6-132.185-278.587-286.95-286.95C7.656 175.765 0 183.105 0 192.253v48.069c0 8.415 6.49 15.472 14.887 16.018 111.832 7.284 201.473 96.702 208.772 208.772.547 8.397 7.604 14.887 16.018 14.887h48.069c9.149.001 16.489-7.655 15.995-16.79zm144.249.288C439.596 229.677 251.465 40.445 16.503 32.01 7.473 31.686 0 38.981 0 48.016v48.068c0 8.625 6.835 15.645 15.453 15.999 191.179 7.839 344.627 161.316 352.465 352.465.353 8.618 7.373 15.453 15.999 15.453h48.068c9.034-.001 16.329-7.474 16.005-16.504z\"],\n        \"rss-square\": [448, 512, [], \"f143\", \"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM112 416c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm157.533 0h-34.335c-6.011 0-11.051-4.636-11.442-10.634-5.214-80.05-69.243-143.92-149.123-149.123-5.997-.39-10.633-5.431-10.633-11.441v-34.335c0-6.535 5.468-11.777 11.994-11.425 110.546 5.974 198.997 94.536 204.964 204.964.352 6.526-4.89 11.994-11.425 11.994zm103.027 0h-34.334c-6.161 0-11.175-4.882-11.427-11.038-5.598-136.535-115.204-246.161-251.76-251.76C68.882 152.949 64 147.935 64 141.774V107.44c0-6.454 5.338-11.664 11.787-11.432 167.83 6.025 302.21 141.191 308.205 308.205.232 6.449-4.978 11.787-11.432 11.787z\"],\n        \"ruble-sign\": [384, 512, [], \"f158\", \"M239.36 320C324.48 320 384 260.542 384 175.071S324.48 32 239.36 32H76c-6.627 0-12 5.373-12 12v206.632H12c-6.627 0-12 5.373-12 12V308c0 6.627 5.373 12 12 12h52v32H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h52v52c0 6.627 5.373 12 12 12h58.56c6.627 0 12-5.373 12-12v-52H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12H146.56v-32h92.8zm-92.8-219.252h78.72c46.72 0 74.88 29.11 74.88 74.323 0 45.832-28.16 75.561-76.16 75.561h-77.44V100.748z\"],\n        \"rupee-sign\": [320, 512, [], \"f156\", \"M308 96c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12H12C5.373 32 0 37.373 0 44v44.748c0 6.627 5.373 12 12 12h85.28c27.308 0 48.261 9.958 60.97 27.252H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h158.757c-6.217 36.086-32.961 58.632-74.757 58.632H12c-6.627 0-12 5.373-12 12v53.012c0 3.349 1.4 6.546 3.861 8.818l165.052 152.356a12.001 12.001 0 0 0 8.139 3.182h82.562c10.924 0 16.166-13.408 8.139-20.818L116.871 319.906c76.499-2.34 131.144-53.395 138.318-127.906H308c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-58.69c-3.486-11.541-8.28-22.246-14.252-32H308z\"],\n        \"save\": [448, 512, [], \"f0c7\", \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\"],\n        \"search\": [512, 512, [], \"f002\", \"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"],\n        \"search-minus\": [512, 512, [], \"f010\", \"M304 192v32c0 6.6-5.4 12-12 12H124c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h168c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z\"],\n        \"search-plus\": [512, 512, [], \"f00e\", \"M304 192v32c0 6.6-5.4 12-12 12h-56v56c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-56h-56c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h56v-56c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v56h56c6.6 0 12 5.4 12 12zm201 284.7L476.7 505c-9.4 9.4-24.6 9.4-33.9 0L343 405.3c-4.5-4.5-7-10.6-7-17V372c-35.3 27.6-79.7 44-128 44C93.1 416 0 322.9 0 208S93.1 0 208 0s208 93.1 208 208c0 48.3-16.4 92.7-44 128h16.3c6.4 0 12.5 2.5 17 7l99.7 99.7c9.3 9.4 9.3 24.6 0 34zM344 208c0-75.2-60.8-136-136-136S72 132.8 72 208s60.8 136 136 136 136-60.8 136-136z\"],\n        \"server\": [512, 512, [], \"f233\", \"M480 160H32c-17.673 0-32-14.327-32-32V64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm112 248H32c-17.673 0-32-14.327-32-32v-64c0-17.673 14.327-32 32-32h448c17.673 0 32 14.327 32 32v64c0 17.673-14.327 32-32 32zm-48-88c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24zm-64 0c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24z\"],\n        \"share\": [512, 512, [], \"f064\", \"M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z\"],\n        \"share-alt\": [448, 512, [], \"f1e0\", \"M352 320c-22.608 0-43.387 7.819-59.79 20.895l-102.486-64.054a96.551 96.551 0 0 0 0-41.683l102.486-64.054C308.613 184.181 329.392 192 352 192c53.019 0 96-42.981 96-96S405.019 0 352 0s-96 42.981-96 96c0 7.158.79 14.13 2.276 20.841L155.79 180.895C139.387 167.819 118.608 160 96 160c-53.019 0-96 42.981-96 96s42.981 96 96 96c22.608 0 43.387-7.819 59.79-20.895l102.486 64.054A96.301 96.301 0 0 0 256 416c0 53.019 42.981 96 96 96s96-42.981 96-96-42.981-96-96-96z\"],\n        \"share-alt-square\": [448, 512, [], \"f1e1\", \"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zM304 296c-14.562 0-27.823 5.561-37.783 14.671l-67.958-40.775a56.339 56.339 0 0 0 0-27.793l67.958-40.775C276.177 210.439 289.438 216 304 216c30.928 0 56-25.072 56-56s-25.072-56-56-56-56 25.072-56 56c0 4.797.605 9.453 1.74 13.897l-67.958 40.775C171.823 205.561 158.562 200 144 200c-30.928 0-56 25.072-56 56s25.072 56 56 56c14.562 0 27.823-5.561 37.783-14.671l67.958 40.775a56.088 56.088 0 0 0-1.74 13.897c0 30.928 25.072 56 56 56s56-25.072 56-56C360 321.072 334.928 296 304 296z\"],\n        \"share-square\": [576, 512, [], \"f14d\", \"M568.482 177.448L424.479 313.433C409.3 327.768 384 317.14 384 295.985v-71.963c-144.575.97-205.566 35.113-164.775 171.353 4.483 14.973-12.846 26.567-25.006 17.33C155.252 383.105 120 326.488 120 269.339c0-143.937 117.599-172.5 264-173.312V24.012c0-21.174 25.317-31.768 40.479-17.448l144.003 135.988c10.02 9.463 10.028 25.425 0 34.896zM384 379.128V448H64V128h50.916a11.99 11.99 0 0 0 8.648-3.693c14.953-15.568 32.237-27.89 51.014-37.676C185.708 80.83 181.584 64 169.033 64H48C21.49 64 0 85.49 0 112v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48v-88.806c0-8.288-8.197-14.066-16.011-11.302a71.83 71.83 0 0 1-34.189 3.377c-7.27-1.046-13.8 4.514-13.8 11.859z\"],\n        \"shekel-sign\": [448, 512, [], \"f20b\", \"M170.12 96H80v372c0 6.627-5.373 12-12 12H12c-6.627 0-12-5.373-12-12V44c0-6.627 5.373-12 12-12h168.36C265.48 32 325 89.6 325 175.071V359c0 6.627-5.373 12-12 12h-44c-13.255 0-24-10.745-24-24V170.323C245 125.11 216.839 96 170.12 96zM436 32h-56c-6.627 0-12 5.373-12 12v372h-90.12c-46.72 0-74.88-29.11-74.88-74.323V165c0-13.255-10.745-24-24-24h-44c-6.627 0-12 5.373-12 12v183.929C123 422.4 182.52 480 267.64 480H436c6.627 0 12-5.373 12-12V44c0-6.627-5.373-12-12-12z\"],\n        \"shield-alt\": [512, 512, [], \"f3ed\", \"M496 128c0 221.282-135.934 344.645-221.539 380.308a48 48 0 0 1-36.923 0C130.495 463.713 16 326.487 16 128a48 48 0 0 1 29.539-44.308l192-80a48 48 0 0 1 36.923 0l192 80A48 48 0 0 1 496 128zM256 446.313l.066.034c93.735-46.689 172.497-156.308 175.817-307.729L256 65.333v380.98z\"],\n        \"ship\": [640, 512, [], \"f21a\", \"M496.616 372.639l70.012-70.012c16.899-16.9 9.942-45.771-12.836-53.092L512 236.102V96c0-17.673-14.327-32-32-32h-64V24c0-13.255-10.745-24-24-24H248c-13.255 0-24 10.745-24 24v40h-64c-17.673 0-32 14.327-32 32v140.102l-41.792 13.433c-22.753 7.313-29.754 36.173-12.836 53.092l70.012 70.012C125.828 416.287 85.587 448 24 448c-13.255 0-24 10.745-24 24v16c0 13.255 10.745 24 24 24 61.023 0 107.499-20.61 143.258-59.396C181.677 487.432 216.021 512 256 512h128c39.979 0 74.323-24.568 88.742-59.396C508.495 491.384 554.968 512 616 512c13.255 0 24-10.745 24-24v-16c0-13.255-10.745-24-24-24-60.817 0-101.542-31.001-119.384-75.361zM192 128h256v87.531l-118.208-37.995a31.995 31.995 0 0 0-19.584 0L192 215.531V128z\"],\n        \"shipping-fast\": [640, 512, [], \"f48b\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H112C85.5 0 64 21.5 64 48v48H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h272c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H40c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H8c-4.4 0-8 3.6-8 8v16c0 4.4 3.6 8 8 8h208c4.4 0 8 3.6 8 8v16c0 4.4-3.6 8-8 8H64v128c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"],\n        \"shopping-bag\": [448, 512, [], \"f290\", \"M352 160v-32C352 57.42 294.579 0 224 0 153.42 0 96 57.42 96 128v32H0v272c0 44.183 35.817 80 80 80h288c44.183 0 80-35.817 80-80V160h-96zm-192-32c0-35.29 28.71-64 64-64s64 28.71 64 64v32H160v-32zm160 120c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zm-192 0c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24z\"],\n        \"shopping-basket\": [576, 512, [], \"f291\", \"M576 216v16c0 13.255-10.745 24-24 24h-8l-26.113 182.788C514.509 462.435 494.257 480 470.37 480H105.63c-23.887 0-44.139-17.565-47.518-41.212L32 256h-8c-13.255 0-24-10.745-24-24v-16c0-13.255 10.745-24 24-24h67.341l106.78-146.821c10.395-14.292 30.407-17.453 44.701-7.058 14.293 10.395 17.453 30.408 7.058 44.701L170.477 192h235.046L326.12 82.821c-10.395-14.292-7.234-34.306 7.059-44.701 14.291-10.395 34.306-7.235 44.701 7.058L484.659 192H552c13.255 0 24 10.745 24 24zM312 392V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm112 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24zm-224 0V280c0-13.255-10.745-24-24-24s-24 10.745-24 24v112c0 13.255 10.745 24 24 24s24-10.745 24-24z\"],\n        \"shopping-cart\": [576, 512, [], \"f07a\", \"M528.12 301.319l47.273-208C578.806 78.301 567.391 64 551.99 64H159.208l-9.166-44.81C147.758 8.021 137.93 0 126.529 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24h69.883l70.248 343.435C147.325 417.1 136 435.222 136 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-15.674-6.447-29.835-16.824-40h209.647C430.447 426.165 424 440.326 424 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-22.172-12.888-41.332-31.579-50.405l5.517-24.276c3.413-15.018-8.002-29.319-23.403-29.319H218.117l-6.545-32h293.145c11.206 0 20.92-7.754 23.403-18.681z\"],\n        \"shower\": [512, 512, [], \"f2cc\", \"M389.66 135.6L231.6 293.66c-9.37 9.37-24.57 9.37-33.94 0l-11.32-11.32c-9.37-9.37-9.37-24.57 0-33.94l.11-.11c-34.03-40.21-35.16-98.94-3.39-140.38-11.97-7.55-26.14-11.91-41.3-11.91C98.88 96 64 130.88 64 173.76V480H0V173.76C0 95.59 63.59 32 141.76 32c36.93 0 70.61 14.2 95.86 37.42 35.9-11.51 76.5-4.5 106.67 21.03l.11-.11c9.37-9.37 24.57-9.37 33.94 0l11.32 11.32c9.37 9.37 9.37 24.57 0 33.94zM384 208c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm32 0c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-160 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm48-16c8.837 0 16 7.163 16 16s-7.163 16-16 16-16-7.163-16-16 7.163-16 16-16zm80 16c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-160 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm32 0c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-128 32c0-8.837 7.163-16 16-16s16 7.163 16 16-7.163 16-16 16-16-7.163-16-16zm96 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-96 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm64 0c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-32 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16zm-32 32c0 8.837-7.163 16-16 16s-16-7.163-16-16 7.163-16 16-16 16 7.163 16 16z\"],\n        \"sign-in-alt\": [512, 512, [], \"f2f6\", \"M416 448h-84c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h84c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zm-47-201L201 79c-15-15-41-4.5-41 17v96H24c-13.3 0-24 10.7-24 24v96c0 13.3 10.7 24 24 24h136v96c0 21.5 26 32 41 17l168-168c9.3-9.4 9.3-24.6 0-34z\"],\n        \"sign-language\": [448, 512, [], \"f2a7\", \"M91.434 483.987c-.307-16.018 13.109-29.129 29.13-29.129h62.293v-5.714H56.993c-16.021 0-29.437-13.111-29.13-29.129C28.16 404.491 40.835 392 56.428 392h126.429v-5.714H29.136c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h154.286v-5.714H57.707c-16.021 0-29.437-13.111-29.13-29.129.297-15.522 12.973-28.013 28.566-28.013h168.566l-31.085-22.606c-12.762-9.281-15.583-27.149-6.302-39.912 9.281-12.761 27.15-15.582 39.912-6.302l123.361 89.715a34.287 34.287 0 0 1 14.12 27.728v141.136c0 15.91-10.946 29.73-26.433 33.374l-80.471 18.934a137.16 137.16 0 0 1-31.411 3.646H120c-15.593-.001-28.269-12.492-28.566-28.014zm73.249-225.701h36.423l-11.187-8.136c-18.579-13.511-20.313-40.887-3.17-56.536l-13.004-16.7c-9.843-12.641-28.43-15.171-40.88-5.088-12.065 9.771-14.133 27.447-4.553 39.75l36.371 46.71zm283.298-2.103l-5.003-152.452c-.518-15.771-13.722-28.136-29.493-27.619-15.773.518-28.137 13.722-27.619 29.493l1.262 38.415L283.565 11.019c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l76.889 98.745-4.509 3.511-94.79-121.734c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l94.443 121.288-4.509 3.511-77.675-99.754c-9.58-12.303-27.223-14.63-39.653-5.328-12.827 9.599-14.929 28.24-5.086 40.881l52.053 66.849c12.497-8.257 29.055-8.285 41.69.904l123.36 89.714c10.904 7.93 17.415 20.715 17.415 34.198v16.999l61.064-47.549a34.285 34.285 0 0 0 13.202-28.177z\"],\n        \"sign-out-alt\": [512, 512, [], \"f2f5\", \"M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z\"],\n        \"signal\": [640, 512, [], \"f012\", \"M36 384h56c6.6 0 12 5.4 12 12v104c0 6.6-5.4 12-12 12H36c-6.6 0-12-5.4-12-12V396c0-6.6 5.4-12 12-12zm116-36v152c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V348c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12zm128-80v232c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V268c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12zm128-112v344c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V156c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12zM536 12v488c0 6.6 5.4 12 12 12h56c6.6 0 12-5.4 12-12V12c0-6.6-5.4-12-12-12h-56c-6.6 0-12 5.4-12 12z\"],\n        \"sitemap\": [640, 512, [], \"f0e8\", \"M616 320h-48v-48c0-22.056-17.944-40-40-40H344v-40h48c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H248c-13.255 0-24 10.745-24 24v144c0 13.255 10.745 24 24 24h48v40H112c-22.056 0-40 17.944-40 40v48H24c-13.255 0-24 10.745-24 24v144c0 13.255 10.745 24 24 24h144c13.255 0 24-10.745 24-24V344c0-13.255-10.745-24-24-24h-48v-40h176v40h-48c-13.255 0-24 10.745-24 24v144c0 13.255 10.745 24 24 24h144c13.255 0 24-10.745 24-24V344c0-13.255-10.745-24-24-24h-48v-40h176v40h-48c-13.255 0-24 10.745-24 24v144c0 13.255 10.745 24 24 24h144c13.255 0 24-10.745 24-24V344c0-13.255-10.745-24-24-24z\"],\n        \"sliders-h\": [576, 512, [], \"f1de\", \"M576 80v40c0 6.6-5.4 12-12 12H160v8c0 13.3-10.7 24-24 24h-16c-13.3 0-24-10.7-24-24v-8H12c-6.6 0-12-5.4-12-12V80c0-6.6 5.4-12 12-12h84v-8c0-13.3 10.7-24 24-24h16c13.3 0 24 10.7 24 24v8h404c6.6 0 12 5.4 12 12zm-12 148h-84v-8c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v8H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h404v8c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24v-8h84c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12zm0 160H288v-8c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v8H12c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h212v8c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24v-8h276c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12z\"],\n        \"smile\": [512, 512, [], \"f118\", \"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zm-122.526 75.34c11.479-17.755-15.349-35.194-26.873-17.374-53.418 82.627-143.71 82.681-197.164 0-11.502-17.79-38.364-.401-26.873 17.374 66.014 102.107 184.795 102.265 250.91 0zM108 192c0 37.497 30.503 68 68 68s68-30.503 68-68-30.503-68-68-68-68 30.503-68 68zm160.5 0c0 37.221 30.279 67.5 67.5 67.5s67.5-30.279 67.5-67.5-30.279-67.5-67.5-67.5-67.5 30.279-67.5 67.5zm67.5-48a47.789 47.789 0 0 0-22.603 5.647h.015c10.916 0 19.765 8.849 19.765 19.765s-8.849 19.765-19.765 19.765-19.765-8.849-19.765-19.765v-.015A47.789 47.789 0 0 0 288 192c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48zm-160 0a47.789 47.789 0 0 0-22.603 5.647h.015c10.916 0 19.765 8.849 19.765 19.765s-8.849 19.765-19.765 19.765-19.765-8.849-19.765-19.765v-.015A47.789 47.789 0 0 0 128 192c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48z\"],\n        \"snowflake\": [448, 512, [], \"f2dc\", \"M444.816 301.639a24.12 24.12 0 0 0 2.661-16.978c-2.725-12.966-15.339-21.245-28.174-18.492l-87.407 25.046L264 256l67.896-35.215 87.407 25.046c12.835 2.753 25.449-5.526 28.174-18.492 2.725-12.966-5.471-25.708-18.305-28.461l-47.477-7.137 53.077-30.956c11.363-6.627 15.257-21.306 8.696-32.785-6.561-11.479-21.091-15.412-32.454-8.785l-53.077 30.956 17.621-45.104c4.057-12.606-2.768-26.146-15.247-30.245-12.478-4.099-25.883 2.797-29.94 15.402l-22.232 88.99-60.38 35.215V144l65.175-63.945c8.778-9.852 7.987-25.027-1.766-33.894-9.753-8.867-24.775-8.068-33.552 1.784l-29.857 37.967V24c0-13.255-10.637-24-23.758-24s-23.758 10.745-23.758 24v61.912l-29.857-37.967c-8.779-9.852-23.799-10.652-33.552-1.784-9.753 8.867-10.543 24.042-1.766 33.894L200.242 144v70.431l-60.38-35.215-22.232-88.99c-4.057-12.605-17.462-19.501-29.94-15.402-12.478 4.099-19.304 17.64-15.247 30.245l17.62 45.104-53.077-30.956c-11.363-6.627-25.893-2.694-32.454 8.785s-2.667 26.157 8.696 32.785l53.077 30.956-47.477 7.137C5.993 201.634-2.203 214.375.523 227.341c2.725 12.965 15.339 21.245 28.174 18.492l87.407-25.046L184 256l-67.896 35.215-87.406-25.045c-12.835-2.753-25.449 5.526-28.174 18.492-2.725 12.967 5.47 25.708 18.305 28.461l47.477 7.137-53.077 30.956C1.866 357.843-2.027 372.521 4.533 384s21.091 15.412 32.454 8.785l53.077-30.956-17.62 45.104a24.157 24.157 0 0 0 2.022 19.428c2.831 4.953 7.416 8.909 13.224 10.816 12.478 4.099 25.883-2.797 29.94-15.402l22.232-88.99 60.38-35.215V368l-65.175 63.945c-8.778 9.852-7.987 25.027 1.766 33.894 9.754 8.868 24.774 8.068 33.552-1.784l29.857-37.967V488c0 13.255 10.637 24 23.758 24s23.758-10.745 23.758-24v-61.912l29.857 37.967A23.59 23.59 0 0 0 295.282 472a23.534 23.534 0 0 0 15.885-6.161c9.753-8.867 10.544-24.042 1.766-33.894L247.758 368v-70.431l60.38 35.215 22.232 88.99c4.057 12.605 17.462 19.501 29.94 15.402 12.479-4.099 19.304-17.64 15.247-30.245l-17.621-45.104 53.077 30.956c11.363 6.627 25.893 2.694 32.454-8.785s2.667-26.157-8.696-32.785l-53.077-30.956 47.477-7.137c6.86-1.469 12.394-5.793 15.645-11.481z\"],\n        \"sort\": [320, 512, [], \"f0dc\", \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z\"],\n        \"sort-alpha-down\": [448, 512, [], \"f15d\", \"M187.298 395.314l-79.984 80.002c-6.248 6.247-16.383 6.245-22.627 0L4.705 395.314C-5.365 385.244 1.807 368 16.019 368H64V48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v320h47.984c14.241 0 21.363 17.264 11.314 27.314zm119.075-180.007A12 12 0 0 1 294.838 224h-35.717c-8.22 0-14.007-8.078-11.362-15.861l57.096-168A12 12 0 0 1 316.217 32h39.566c5.139 0 9.708 3.273 11.362 8.139l57.096 168C426.886 215.922 421.1 224 412.879 224h-35.735a12 12 0 0 1-11.515-8.622l-8.301-28.299h-42.863l-8.092 28.228zm22.857-78.697h13.367l-6.6-22.937-6.767 22.937zm12.575 287.323l67.451-95.698a12 12 0 0 0 2.192-6.913V300c0-6.627-5.373-12-12-12H274.522c-6.627 0-12 5.373-12 12v28.93c0 6.627 5.373 12 12 12h56.469c-.739.991-1.497 2.036-2.27 3.133l-67.203 95.205a12.001 12.001 0 0 0-2.196 6.92V468c0 6.627 5.373 12 12 12h129.355c6.627 0 12-5.373 12-12v-28.93c0-6.627-5.373-12-12-12h-61.146c.74-.993 1.5-2.039 2.274-3.137z\"],\n        \"sort-alpha-up\": [448, 512, [], \"f15e\", \"M4.702 116.686l79.984-80.002c6.248-6.247 16.383-6.245 22.627 0l79.981 80.002c10.07 10.07 2.899 27.314-11.314 27.314H128v320c0 8.837-7.163 16-16 16H80c-8.837 0-16-7.163-16-16V144H16.016c-14.241 0-21.363-17.264-11.314-27.314zm301.671 98.621A12 12 0 0 1 294.838 224h-35.717c-8.22 0-14.007-8.078-11.362-15.861l57.096-168A12 12 0 0 1 316.217 32h39.566c5.139 0 9.708 3.273 11.362 8.139l57.096 168C426.886 215.922 421.1 224 412.879 224h-35.735a12 12 0 0 1-11.515-8.622l-8.301-28.299h-42.863l-8.092 28.228zm22.857-78.697h13.367l-6.6-22.937-6.767 22.937zm12.575 287.323l67.451-95.698a12 12 0 0 0 2.192-6.913V300c0-6.627-5.373-12-12-12H274.522c-6.627 0-12 5.373-12 12v28.93c0 6.627 5.373 12 12 12h56.469c-.739.991-1.497 2.036-2.27 3.133l-67.203 95.205a12.001 12.001 0 0 0-2.196 6.92V468c0 6.627 5.373 12 12 12h129.355c6.627 0 12-5.373 12-12v-28.93c0-6.627-5.373-12-12-12h-61.146c.74-.993 1.5-2.039 2.274-3.137z\"],\n        \"sort-amount-down\": [512, 512, [], \"f160\", \"M187.298 395.314l-79.984 80.002c-6.248 6.247-16.383 6.245-22.627 0L4.705 395.314C-5.365 385.244 1.807 368 16.019 368H64V48c0-8.837 7.163-16 16-16h32c8.837 0 16 7.163 16 16v320h47.984c14.241 0 21.363 17.264 11.314 27.314zM240 96h256c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H240c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16zm-16 112v-32c0-8.837 7.163-16 16-16h192c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16zm0 256v-32c0-8.837 7.163-16 16-16h64c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-64c-8.837 0-16-7.163-16-16zm0-128v-32c0-8.837 7.163-16 16-16h128c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16z\"],\n        \"sort-amount-up\": [512, 512, [], \"f161\", \"M4.702 116.686l79.984-80.002c6.248-6.247 16.383-6.245 22.627 0l79.981 80.002c10.07 10.07 2.899 27.314-11.314 27.314H128v320c0 8.837-7.163 16-16 16H80c-8.837 0-16-7.163-16-16V144H16.016c-14.241 0-21.363-17.264-11.314-27.314zM240 96h256c8.837 0 16-7.163 16-16V48c0-8.837-7.163-16-16-16H240c-8.837 0-16 7.163-16 16v32c0 8.837 7.163 16 16 16zm-16 112v-32c0-8.837 7.163-16 16-16h192c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16zm0 256v-32c0-8.837 7.163-16 16-16h64c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-64c-8.837 0-16-7.163-16-16zm0-128v-32c0-8.837 7.163-16 16-16h128c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H240c-8.837 0-16-7.163-16-16z\"],\n        \"sort-down\": [320, 512, [], \"f0dd\", \"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z\"],\n        \"sort-numeric-down\": [448, 512, [], \"f162\", \"M308.811 113.787l-19.448-20.795c-4.522-4.836-4.274-12.421.556-16.95l43.443-40.741a11.999 11.999 0 0 1 8.209-3.247h31.591c6.627 0 12 5.373 12 12v127.07h25.66c6.627 0 12 5.373 12 12v28.93c0 6.627-5.373 12-12 12H301.649c-6.627 0-12-5.373-12-12v-28.93c0-6.627 5.373-12 12-12h25.414v-57.938c-7.254 6.58-14.211 4.921-18.252.601zm-30.57 238.569c0-32.653 23.865-67.356 68.094-67.356 38.253 0 79.424 28.861 79.424 92.228 0 51.276-32.237 105.772-91.983 105.772-17.836 0-30.546-3.557-38.548-6.781-5.79-2.333-8.789-8.746-6.922-14.703l9.237-29.48c2.035-6.496 9.049-9.983 15.467-7.716 13.029 4.602 27.878 5.275 38.103-4.138-38.742 5.072-72.872-25.36-72.872-67.826zm92.273 19.338c0-22.285-15.302-36.505-25.835-36.505-8.642 0-13.164 7.965-13.164 15.832 0 5.669 1.815 24.168 25.168 24.168 9.973 0 13.377-2.154 13.744-2.731.021-.046.087-.291.087-.764zM175.984 368H128V48c0-8.837-7.163-16-16-16H80c-8.837 0-16 7.163-16 16v320H16.019c-14.212 0-21.384 17.244-11.314 27.314l79.981 80.002c6.245 6.245 16.38 6.247 22.627 0l79.984-80.002c10.05-10.05 2.928-27.314-11.313-27.314z\"],\n        \"sort-numeric-up\": [448, 512, [], \"f163\", \"M308.811 113.787l-19.448-20.795c-4.522-4.836-4.274-12.421.556-16.95l43.443-40.741a11.999 11.999 0 0 1 8.209-3.247h31.591c6.627 0 12 5.373 12 12v127.07h25.66c6.627 0 12 5.373 12 12v28.93c0 6.627-5.373 12-12 12H301.649c-6.627 0-12-5.373-12-12v-28.93c0-6.627 5.373-12 12-12h25.414v-57.938c-7.254 6.58-14.211 4.921-18.252.601zm-30.57 238.569c0-32.653 23.865-67.356 68.094-67.356 38.253 0 79.424 28.861 79.424 92.228 0 51.276-32.237 105.772-91.983 105.772-17.836 0-30.546-3.557-38.548-6.781-5.79-2.333-8.789-8.746-6.922-14.703l9.237-29.48c2.035-6.496 9.049-9.983 15.467-7.716 13.029 4.602 27.878 5.275 38.103-4.138-38.742 5.072-72.872-25.36-72.872-67.826zm92.273 19.338c0-22.285-15.302-36.505-25.835-36.505-8.642 0-13.164 7.965-13.164 15.832 0 5.669 1.815 24.168 25.168 24.168 9.973 0 13.377-2.154 13.744-2.731.021-.046.087-.291.087-.764zM16.016 144H64v320c0 8.837 7.163 16 16 16h32c8.837 0 16-7.163 16-16V144h47.981c14.212 0 21.384-17.244 11.314-27.314l-79.981-80.002c-6.245-6.245-16.38-6.247-22.627 0L4.702 116.686C-5.347 126.736 1.775 144 16.016 144z\"],\n        \"sort-up\": [320, 512, [], \"f0de\", \"M279 224H41c-21.4 0-32.1-25.9-17-41L143 64c9.4-9.4 24.6-9.4 33.9 0l119 119c15.2 15.1 4.5 41-16.9 41z\"],\n        \"space-shuttle\": [640, 512, [], \"f197\", \"M592.604 208.244C559.735 192.836 515.777 184 472 184H186.327c-4.952-6.555-10.585-11.978-16.72-16H376C229.157 137.747 219.403 32 96.003 32H96v128H80V32c-26.51 0-48 28.654-48 64v64c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v16c-23.197 0-32 10.032-32 24v40c0 13.983 8.819 24 32 24v64c0 35.346 21.49 64 48 64V352h16v128h.003c123.4 0 133.154-105.747 279.997-136H169.606c6.135-4.022 11.768-9.445 16.72-16H472c43.777 0 87.735-8.836 120.604-24.244C622.282 289.845 640 271.992 640 256s-17.718-33.845-47.396-47.756zM488 296a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8c31.909 0 31.942 80 0 80z\"],\n        \"spinner\": [512, 512, [], \"f110\", \"M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z\"],\n        \"square\": [448, 512, [], \"f0c8\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n        \"square-full\": [512, 512, [], \"f45c\", \"M512 512H0V0h512v512z\"],\n        \"star\": [576, 512, [], \"f005\", \"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\"],\n        \"star-half\": [576, 512, [], \"f089\", \"M288 0c-11.4 0-22.8 5.9-28.7 17.8L194 150.2 47.9 171.4c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.1 23 46 46.4 33.7L288 439.6V0z\"],\n        \"step-backward\": [448, 512, [], \"f048\", \"M64 468V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v176.4l195.5-181C352.1 22.3 384 36.6 384 64v384c0 27.4-31.9 41.7-52.5 24.6L136 292.7V468c0 6.6-5.4 12-12 12H76c-6.6 0-12-5.4-12-12z\"],\n        \"step-forward\": [448, 512, [], \"f051\", \"M384 44v424c0 6.6-5.4 12-12 12h-48c-6.6 0-12-5.4-12-12V291.6l-195.5 181C95.9 489.7 64 475.4 64 448V64c0-27.4 31.9-41.7 52.5-24.6L312 219.3V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12z\"],\n        \"stethoscope\": [512, 512, [], \"f0f1\", \"M447.1 112c-34.2.5-62.3 28.4-63 62.6-.5 24.3 12.5 45.6 32 56.8V344c0 57.3-50.2 104-112 104-60 0-109.2-44.1-111.9-99.2C265 333.8 320 269.2 320 192V36.6c0-11.4-8.1-21.3-19.3-23.5L237.8.5c-13-2.6-25.6 5.8-28.2 18.8L206.4 35c-2.6 13 5.8 25.6 18.8 28.2l30.7 6.1v121.4c0 52.9-42.2 96.7-95.1 97.2-53.4.5-96.9-42.7-96.9-96V69.4l30.7-6.1c13-2.6 21.4-15.2 18.8-28.2l-3.1-15.7C107.7 6.4 95.1-2 82.1.6L19.3 13C8.1 15.3 0 25.1 0 36.6V192c0 77.3 55.1 142 128.1 156.8C130.7 439.2 208.6 512 304 512c97 0 176-75.4 176-168V231.4c19.1-11.1 32-31.7 32-55.4 0-35.7-29.2-64.5-64.9-64zm.9 80c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z\"],\n        \"sticky-note\": [448, 512, [], \"f249\", \"M312 320h136V56c0-13.3-10.7-24-24-24H24C10.7 32 0 42.7 0 56v400c0 13.3 10.7 24 24 24h264V344c0-13.2 10.8-24 24-24zm129 55l-98 98c-4.5 4.5-10.6 7-17 7h-6V352h128v6.1c0 6.3-2.5 12.4-7 16.9z\"],\n        \"stop\": [448, 512, [], \"f04d\", \"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\"],\n        \"stop-circle\": [512, 512, [], \"f28d\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\"],\n        \"stopwatch\": [448, 512, [], \"f2f2\", \"M432 304c0 114.9-93.1 208-208 208S16 418.9 16 304c0-104 76.3-190.2 176-205.5V64h-28c-6.6 0-12-5.4-12-12V12c0-6.6 5.4-12 12-12h120c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-28v34.5c37.5 5.8 71.7 21.6 99.7 44.6l27.5-27.5c4.7-4.7 12.3-4.7 17 0l28.3 28.3c4.7 4.7 4.7 12.3 0 17l-29.4 29.4-.6.6C419.7 223.3 432 262.2 432 304zm-176 36V188.5c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12V340c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12z\"],\n        \"street-view\": [512, 512, [], \"f21d\", \"M192 64c0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64s-64-28.654-64-64zm112 80h-11.36c-22.711 10.443-49.59 10.894-73.28 0H208c-26.51 0-48 21.49-48 48v104c0 13.255 10.745 24 24 24h16v104c0 13.255 10.745 24 24 24h64c13.255 0 24-10.745 24-24V320h16c13.255 0 24-10.745 24-24V192c0-26.51-21.49-48-48-48zm85.642 189.152a72.503 72.503 0 0 1-29.01 27.009C391.133 365.251 480 385.854 480 416c0 46.304-167.656 64-224 64-70.303 0-224-20.859-224-64 0-30.123 88.361-50.665 119.367-55.839a72.516 72.516 0 0 1-29.01-27.009C74.959 343.395 0 367.599 0 416c0 77.111 178.658 96 256 96 77.249 0 256-18.865 256-96 0-48.403-74.967-72.606-122.358-82.848z\"],\n        \"strikethrough\": [512, 512, [], \"f0cc\", \"M496 288H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h480c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16zm-214.666 16c27.258 12.937 46.524 28.683 46.524 56.243 0 33.108-28.977 53.676-75.621 53.676-32.325 0-76.874-12.08-76.874-44.271V368c0-8.837-7.164-16-16-16H113.75c-8.836 0-16 7.163-16 16v19.204c0 66.845 77.717 101.82 154.487 101.82 88.578 0 162.013-45.438 162.013-134.424 0-19.815-3.618-36.417-10.143-50.6H281.334zm-30.952-96c-32.422-13.505-56.836-28.946-56.836-59.683 0-33.92 30.901-47.406 64.962-47.406 42.647 0 64.962 16.593 64.962 32.985V136c0 8.837 7.164 16 16 16h45.613c8.836 0 16-7.163 16-16v-30.318c0-52.438-71.725-79.875-142.575-79.875-85.203 0-150.726 40.972-150.726 125.646 0 22.71 4.665 41.176 12.777 56.547h129.823z\"],\n        \"subscript\": [512, 512, [], \"f12c\", \"M395.198 416c3.461-10.526 18.796-21.28 36.265-32.425 16.625-10.605 35.467-22.626 50.341-38.862 17.458-19.054 25.944-40.175 25.944-64.567 0-60.562-50.702-88.146-97.81-88.146-42.491 0-76.378 22.016-94.432 50.447-4.654 7.329-2.592 17.036 4.623 21.865l30.328 20.296c7.032 4.706 16.46 3.084 21.63-3.614 8.022-10.394 18.818-18.225 31.667-18.225 19.387 0 26.266 12.901 26.266 23.948 0 36.159-119.437 57.023-119.437 160.024 0 6.654.561 13.014 1.415 19.331 1.076 7.964 7.834 13.928 15.87 13.928H496c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16H395.198zM272 256c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-62.399a16 16 0 0 1-13.541-7.478l-45.701-72.615c-2.297-3.352-4.422-6.969-6.195-10.209-1.65 3.244-3.647 6.937-5.874 10.582l-44.712 72.147a15.999 15.999 0 0 1-13.6 7.572H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h26.325l56.552-82.709L46.111 96H16C7.163 96 0 88.837 0 80V48c0-8.837 7.163-16 16-16h68.806a16 16 0 0 1 13.645 7.644l39.882 65.126c2.072 3.523 4.053 7.171 5.727 10.37 1.777-3.244 3.92-6.954 6.237-10.537l40.332-65.035A15.999 15.999 0 0 1 204.226 32H272c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-27.979l-52.69 75.671L249.974 256H272z\"],\n        \"subway\": [448, 512, [], \"f239\", \"M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zM200 232V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm200 0V120c0-13.255-10.745-24-24-24H272c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h104c13.255 0 24-10.745 24-24zm-48 56c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm-256 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z\"],\n        \"suitcase\": [512, 512, [], \"f0f2\", \"M96 480h320V128h-32V80c0-26.51-21.49-48-48-48H176c-26.51 0-48 21.49-48 48v48H96v352zm96-384h128v32H192V96zm320 80v256c0 26.51-21.49 48-48 48h-16V128h16c26.51 0 48 21.49 48 48zM64 480H48c-26.51 0-48-21.49-48-48V176c0-26.51 21.49-48 48-48h16v352z\"],\n        \"sun\": [512, 512, [], \"f185\", \"M274.835 12.646l25.516 62.393c4.213 10.301 16.671 14.349 26.134 8.492l57.316-35.479c15.49-9.588 34.808 4.447 30.475 22.142l-16.03 65.475c-2.647 10.81 5.053 21.408 16.152 22.231l67.224 4.987c18.167 1.348 25.546 24.057 11.641 35.826L441.81 242.26c-8.495 7.19-8.495 20.289 0 27.479l51.454 43.548c13.906 11.769 6.527 34.478-11.641 35.826l-67.224 4.987c-11.099.823-18.799 11.421-16.152 22.231l16.03 65.475c4.332 17.695-14.986 31.73-30.475 22.142l-57.316-35.479c-9.463-5.858-21.922-1.81-26.134 8.492l-25.516 62.393c-6.896 16.862-30.774 16.862-37.67 0l-25.516-62.393c-4.213-10.301-16.671-14.349-26.134-8.492l-57.317 35.479c-15.49 9.588-34.808-4.447-30.475-22.142l16.03-65.475c2.647-10.81-5.053-21.408-16.152-22.231l-67.224-4.987c-18.167-1.348-25.546-24.057-11.641-35.826L70.19 269.74c8.495-7.19 8.495-20.289 0-27.479l-51.454-43.548c-13.906-11.769-6.527-34.478 11.641-35.826l67.224-4.987c11.099-.823 18.799-11.421 16.152-22.231l-16.03-65.475c-4.332-17.695 14.986-31.73 30.475-22.142l57.317 35.479c9.463 5.858 21.921 1.81 26.134-8.492l25.516-62.393c6.896-16.861 30.774-16.861 37.67 0zM392 256c0-74.991-61.01-136-136-136-74.991 0-136 61.009-136 136s61.009 136 136 136c74.99 0 136-61.009 136-136zm-32 0c0 57.346-46.654 104-104 104s-104-46.654-104-104 46.654-104 104-104 104 46.654 104 104z\"],\n        \"superscript\": [512, 512, [], \"f12b\", \"M395.198 256c3.461-10.526 18.796-21.28 36.265-32.425 16.625-10.605 35.467-22.626 50.341-38.862 17.458-19.054 25.944-40.175 25.944-64.567 0-60.562-50.702-88.146-97.81-88.146-42.491 0-76.378 22.016-94.432 50.447-4.654 7.329-2.592 17.036 4.623 21.865l30.328 20.296c7.032 4.706 16.46 3.084 21.63-3.614 8.022-10.394 18.818-18.225 31.667-18.225 19.387 0 26.266 12.901 26.266 23.948 0 36.159-119.437 57.023-119.437 160.024 0 6.654.561 13.014 1.415 19.331 1.076 7.964 7.834 13.928 15.87 13.928H496c8.837 0 16-7.163 16-16v-32c0-8.837-7.163-16-16-16H395.198zM272 416c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-62.399a16 16 0 0 1-13.541-7.478l-45.701-72.615c-2.297-3.352-4.422-6.969-6.195-10.209-1.65 3.244-3.647 6.937-5.874 10.582l-44.712 72.147a15.999 15.999 0 0 1-13.6 7.572H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h26.325l56.552-82.709L46.111 256H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h68.806a16 16 0 0 1 13.645 7.644l39.882 65.126c2.072 3.523 4.053 7.171 5.727 10.37 1.777-3.244 3.92-6.954 6.237-10.537l40.332-65.035a16 16 0 0 1 13.598-7.567H272c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-27.979l-52.69 75.671L249.974 416H272z\"],\n        \"sync\": [512, 512, [], \"f021\", \"M440.935 12.574l3.966 82.766C399.416 41.904 331.674 8 256 8 134.813 8 33.933 94.924 12.296 209.824 10.908 217.193 16.604 224 24.103 224h49.084c5.57 0 10.377-3.842 11.676-9.259C103.407 137.408 172.931 80 256 80c60.893 0 114.512 30.856 146.104 77.801l-101.53-4.865c-6.845-.328-12.574 5.133-12.574 11.986v47.411c0 6.627 5.373 12 12 12h200.333c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12h-47.411c-6.853 0-12.315 5.729-11.987 12.574zM256 432c-60.895 0-114.517-30.858-146.109-77.805l101.868 4.871c6.845.327 12.573-5.134 12.573-11.986v-47.412c0-6.627-5.373-12-12-12H12c-6.627 0-12 5.373-12 12V500c0 6.627 5.373 12 12 12h47.385c6.863 0 12.328-5.745 11.985-12.599l-4.129-82.575C112.725 470.166 180.405 504 256 504c121.187 0 222.067-86.924 243.704-201.824 1.388-7.369-4.308-14.176-11.807-14.176h-49.084c-5.57 0-10.377 3.842-11.676 9.259C408.593 374.592 339.069 432 256 432z\"],\n        \"sync-alt\": [512, 512, [], \"f2f1\", \"M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z\"],\n        \"syringe\": [512, 512, [], \"f48e\", \"M201.5 174.8l55.7 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-55.7-55.8-45.3 45.3 55.8 55.8c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L111 265.2l-26.4 26.4c-17.3 17.3-25.6 41.1-23 65.4l7.1 63.6L2.3 487c-3.1 3.1-3.1 8.2 0 11.3l11.3 11.3c3.1 3.1 8.2 3.1 11.3 0l66.3-66.3 63.6 7.1c23.9 2.6 47.9-5.4 65.4-23l181.9-181.9-135.7-135.7-64.9 65zm308.2-93.3L430.5 2.3c-3.1-3.1-8.2-3.1-11.3 0l-11.3 11.3c-3.1 3.1-3.1 8.2 0 11.3l28.3 28.3-45.3 45.3-56.6-56.6-17-17c-3.1-3.1-8.2-3.1-11.3 0l-33.9 33.9c-3.1 3.1-3.1 8.2 0 11.3l17 17L424.8 223l17 17c3.1 3.1 8.2 3.1 11.3 0l33.9-34c3.1-3.1 3.1-8.2 0-11.3l-73.5-73.5 45.3-45.3 28.3 28.3c3.1 3.1 8.2 3.1 11.3 0l11.3-11.3c3.1-3.2 3.1-8.2 0-11.4z\"],\n        \"table\": [512, 512, [], \"f0ce\", \"M464 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zM224 416H64v-96h160v96zm0-160H64v-96h160v96zm224 160H288v-96h160v96zm0-160H288v-96h160v96z\"],\n        \"table-tennis\": [512, 512, [], \"f45d\", \"M496.2 296.5C527.7 218.7 512 126.2 449 63.1 365.1-21 229-21 145.1 63.1l-56 56.1 211.5 211.5c46.1-62.1 131.5-77.4 195.6-34.2zm-217.9 79.7L57.9 155.9c-27.3 45.3-21.7 105 17.3 144.1l34.5 34.6L6.7 424c-8.6 7.5-9.1 20.7-1 28.8l53.4 53.5c8 8.1 21.2 7.6 28.7-1L177.1 402l35.7 35.7c19.7 19.7 44.6 30.5 70.3 33.3-7.1-17-11-35.6-11-55.1-.1-13.8 2.5-27 6.2-39.7zM416 320c-53 0-96 43-96 96s43 96 96 96 96-43 96-96-43-96-96-96z\"],\n        \"tablet\": [448, 512, [], \"f10a\", \"M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\"],\n        \"tablet-alt\": [448, 512, [], \"f3fa\", \"M400 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM224 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm176-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h328c6.6 0 12 5.4 12 12v312z\"],\n        \"tachometer-alt\": [576, 512, [], \"f3fd\", \"M75.694 480a48.02 48.02 0 0 1-42.448-25.571C12.023 414.3 0 368.556 0 320 0 160.942 128.942 32 288 32s288 128.942 288 288c0 48.556-12.023 94.3-33.246 134.429A48.018 48.018 0 0 1 500.306 480H75.694zM512 288c-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32s32-14.327 32-32c0-17.673-14.327-32-32-32zM288 128c17.673 0 32-14.327 32-32 0-17.673-14.327-32-32-32s-32 14.327-32 32c0 17.673 14.327 32 32 32zM64 288c-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32s32-14.327 32-32c0-17.673-14.327-32-32-32zm65.608-158.392c-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32s32-14.327 32-32c0-17.673-14.327-32-32-32zm316.784 0c-17.673 0-32 14.327-32 32 0 17.673 14.327 32 32 32s32-14.327 32-32c0-17.673-14.327-32-32-32zm-87.078 31.534c-12.627-4.04-26.133 2.92-30.173 15.544l-45.923 143.511C250.108 322.645 224 350.264 224 384c0 35.346 28.654 64 64 64 35.346 0 64-28.654 64-64 0-19.773-8.971-37.447-23.061-49.187l45.919-143.498c4.039-12.625-2.92-26.133-15.544-30.173z\"],\n        \"tag\": [512, 512, [], \"f02b\", \"M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z\"],\n        \"tags\": [640, 512, [], \"f02c\", \"M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z\"],\n        \"tasks\": [512, 512, [], \"f0ae\", \"M208 132h288c8.8 0 16-7.2 16-16V76c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zM64 368c-26.5 0-48.6 21.5-48.6 48s22.1 48 48.6 48 48-21.5 48-48-21.5-48-48-48zm92.5-299l-72.2 72.2-15.6 15.6c-4.7 4.7-12.9 4.7-17.6 0L3.5 109.4c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.3c4.7-4.7 12.3-4.7 17 0l17 16.5c4.6 4.7 4.6 12.3-.1 17zm0 159.6l-72.2 72.2-15.7 15.7c-4.7 4.7-12.9 4.7-17.6 0L3.5 269c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.7c4.7-4.7 12.3-4.7 17 0l17 17c4.6 4.6 4.6 12.2-.1 16.9z\"],\n        \"taxi\": [512, 512, [], \"f1ba\", \"M461.951 243.865l-21.816-87.268A79.885 79.885 0 0 0 362.522 96H352V56c0-13.255-10.745-24-24-24H184c-13.255 0-24 10.745-24 24v40h-10.522a79.885 79.885 0 0 0-77.612 60.597L50.05 243.865C25.515 252.823 8 276.366 8 304v48c0 20.207 9.374 38.214 24 49.943V456c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24v-40h256v40c0 13.255 10.745 24 24 24h48c13.255 0 24-10.745 24-24v-54.057c14.626-11.729 24-29.737 24-49.943v-48c0-27.634-17.515-51.177-42.049-60.135zM149.478 160h213.045a15.975 15.975 0 0 1 15.522 12.12l16.97 67.88h-278.03l16.97-67.881A15.976 15.976 0 0 1 149.478 160zM132 336c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36zm320 0c0 19.882-16.118 36-36 36s-36-16.118-36-36 16.118-36 36-36 36 16.118 36 36z\"],\n        \"terminal\": [640, 512, [], \"f120\", \"M257.981 272.971L63.638 467.314c-9.373 9.373-24.569 9.373-33.941 0L7.029 444.647c-9.357-9.357-9.375-24.522-.04-33.901L161.011 256 6.99 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L257.981 239.03c9.373 9.372 9.373 24.568 0 33.941zM640 456v-32c0-13.255-10.745-24-24-24H312c-13.255 0-24 10.745-24 24v32c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24z\"],\n        \"text-height\": [576, 512, [], \"f034\", \"M16 32h288c8.837 0 16 7.163 16 16v96c0 8.837-7.163 16-16 16h-35.496c-8.837 0-16-7.163-16-16V96h-54.761v320H232c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H88c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h34.257V96H67.496v48c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16zm475.308 4.685l79.995 80.001C581.309 126.693 574.297 144 559.99 144H512v224h48c15.639 0 20.635 17.991 11.313 27.314l-79.995 80.001c-6.247 6.247-16.381 6.245-22.626 0l-79.995-80.001C378.691 385.307 385.703 368 400.01 368H448V144h-48c-15.639 0-20.635-17.991-11.313-27.314l79.995-80.001c6.247-6.248 16.381-6.245 22.626 0z\"],\n        \"text-width\": [448, 512, [], \"f035\", \"M16 32h416c8.837 0 16 7.163 16 16v96c0 8.837-7.163 16-16 16h-35.496c-8.837 0-16-7.163-16-16V96H261.743v128H296c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H152c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h34.257V96H67.496v48c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16V48c0-8.837 7.163-16 16-16zm427.315 340.682l-80.001-79.995C353.991 283.365 336 288.362 336 304v48H112v-47.99c0-14.307-17.307-21.319-27.314-11.313L4.685 372.692c-6.245 6.245-6.247 16.379 0 22.626l80.001 79.995C94.009 484.635 112 479.638 112 464v-48h224v47.99c0 14.307 17.307 21.319 27.314 11.313l80.001-79.995c6.245-6.245 6.248-16.379 0-22.626z\"],\n        \"th\": [512, 512, [], \"f00a\", \"M149.333 56v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zm181.334 240v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm32-240v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24zm-32 80V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.256 0 24.001-10.745 24.001-24zm-205.334 56H24c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm386.667-56H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm0 160H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H386.667c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zM181.333 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24z\"],\n        \"th-large\": [512, 512, [], \"f009\", \"M296 32h192c13.255 0 24 10.745 24 24v160c0 13.255-10.745 24-24 24H296c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24zm-80 0H24C10.745 32 0 42.745 0 56v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zM0 296v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm296 184h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H296c-13.255 0-24 10.745-24 24v160c0 13.255 10.745 24 24 24z\"],\n        \"th-list\": [512, 512, [], \"f00b\", \"M149.333 216v80c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-80c0-13.255 10.745-24 24-24h101.333c13.255 0 24 10.745 24 24zM0 376v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zM125.333 32H24C10.745 32 0 42.745 0 56v80c0 13.255 10.745 24 24 24h101.333c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zm80 448H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24zm-24-424v80c0 13.255 10.745 24 24 24H488c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24zm24 264H488c13.255 0 24-10.745 24-24v-80c0-13.255-10.745-24-24-24H205.333c-13.255 0-24 10.745-24 24v80c0 13.255 10.745 24 24 24z\"],\n        \"thermometer\": [512, 512, [], \"f491\", \"M476.8 20.4c-37.5-30.7-95.5-26.3-131.9 10.2l-45.7 46 50.5 50.5c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.4-50.5-45.1 45.4 50.3 50.4c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0L209 167.4l-45.1 45.4L214 263c3.1 3.1 3.1 8.2 0 11.3l-11.3 11.3c-3.1 3.1-8.2 3.1-11.3 0l-50.1-50.2L96 281.1V382L7 471c-9.4 9.4-9.4 24.6 0 33.9 9.4 9.4 24.6 9.4 33.9 0l89-89h99.9L484 162.6c34.9-34.9 42.2-101.5-7.2-142.2z\"],\n        \"thermometer-empty\": [256, 512, [], \"f2cb\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n        \"thermometer-full\": [256, 512, [], \"f2c7\", \"M224 96c0-53.019-42.981-96-96-96S32 42.981 32 96v203.347C12.225 321.756.166 351.136.002 383.333c-.359 70.303 56.787 128.176 127.089 128.664.299.002.61.003.909.003 70.698 0 128-57.304 128-128 0-32.459-12.088-62.09-32-84.653V96zm-96 368l-.576-.002c-43.86-.304-79.647-36.544-79.423-80.42.173-33.98 19.266-51.652 31.999-66.08V96c0-26.467 21.533-48 48-48s48 21.533 48 48v221.498c12.63 14.312 32 32.164 32 66.502 0 44.112-35.888 80-80 80zm64-80c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V96c0-17.673 14.327-32 32-32s32 14.327 32 32v232.583c19.124 11.068 32 31.732 32 55.417z\"],\n        \"thermometer-half\": [256, 512, [], \"f2c9\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V224c0-17.673 14.327-32 32-32s32 14.327 32 32v104.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n        \"thermometer-quarter\": [256, 512, [], \"f2ca\", \"M192 384c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-23.685 12.876-44.349 32-55.417V288c0-17.673 14.327-32 32-32s32 14.327 32 32v40.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n        \"thermometer-three-quarters\": [256, 512, [], \"f2c8\", \"M192 384c0 35.346-28.654 64-64 64-35.346 0-64-28.654-64-64 0-23.685 12.876-44.349 32-55.417V160c0-17.673 14.327-32 32-32s32 14.327 32 32v168.583c19.124 11.068 32 31.732 32 55.417zm32-84.653c19.912 22.563 32 52.194 32 84.653 0 70.696-57.303 128-128 128-.299 0-.609-.001-.909-.003C56.789 511.509-.357 453.636.002 383.333.166 351.135 12.225 321.755 32 299.347V96c0-53.019 42.981-96 96-96s96 42.981 96 96v203.347zM208 384c0-34.339-19.37-52.19-32-66.502V96c0-26.467-21.533-48-48-48S80 69.533 80 96v221.498c-12.732 14.428-31.825 32.1-31.999 66.08-.224 43.876 35.563 80.116 79.423 80.42L128 464c44.112 0 80-35.888 80-80z\"],\n        \"thumbs-down\": [512, 512, [], \"f165\", \"M0 56v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24H24C10.745 32 0 42.745 0 56zm40 200c0-13.255 10.745-24 24-24s24 10.745 24 24-10.745 24-24 24-24-10.745-24-24zm272 256c-20.183 0-29.485-39.293-33.931-57.795-5.206-21.666-10.589-44.07-25.393-58.902-32.469-32.524-49.503-73.967-89.117-113.111a11.98 11.98 0 0 1-3.558-8.521V59.901c0-6.541 5.243-11.878 11.783-11.998 15.831-.29 36.694-9.079 52.651-16.178C256.189 17.598 295.709.017 343.995 0h2.844c42.777 0 93.363.413 113.774 29.737 8.392 12.057 10.446 27.034 6.148 44.632 16.312 17.053 25.063 48.863 16.382 74.757 17.544 23.432 19.143 56.132 9.308 79.469l.11.11c11.893 11.949 19.523 31.259 19.439 49.197-.156 30.352-26.157 58.098-59.553 58.098H350.723C358.03 364.34 384 388.132 384 430.548 384 504 336 512 312 512z\"],\n        \"thumbs-up\": [512, 512, [], \"f164\", \"M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24 24 10.745 24 24-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469 8.681 25.895-.069 57.704-16.382 74.757 4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725-15.957-7.099-36.821-15.887-52.651-16.178-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521 39.614-39.144 56.648-80.587 89.117-113.111 14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z\"],\n        \"thumbtack\": [384, 512, [], \"f08d\", \"M298.028 214.267L285.793 96H328c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v48c0 13.255 10.745 24 24 24h42.207L85.972 214.267C37.465 236.82 0 277.261 0 328c0 13.255 10.745 24 24 24h136v104.007c0 1.242.289 2.467.845 3.578l24 48c2.941 5.882 11.364 5.893 14.311 0l24-48a8.008 8.008 0 0 0 .845-3.578V352h136c13.255 0 24-10.745 24-24-.001-51.183-37.983-91.42-85.973-113.733z\"],\n        \"ticket-alt\": [576, 512, [], \"f3ff\", \"M128 160h320v192H128V160zm400 96c0 26.51 21.49 48 48 48v96c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48v-96c26.51 0 48-21.49 48-48s-21.49-48-48-48v-96c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v96c-26.51 0-48 21.49-48 48zm-48-104c0-13.255-10.745-24-24-24H120c-13.255 0-24 10.745-24 24v208c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V152z\"],\n        \"times\": [384, 512, [], \"f00d\", \"M323.1 441l53.9-53.9c9.4-9.4 9.4-24.5 0-33.9L279.8 256l97.2-97.2c9.4-9.4 9.4-24.5 0-33.9L323.1 71c-9.4-9.4-24.5-9.4-33.9 0L192 168.2 94.8 71c-9.4-9.4-24.5-9.4-33.9 0L7 124.9c-9.4 9.4-9.4 24.5 0 33.9l97.2 97.2L7 353.2c-9.4 9.4-9.4 24.5 0 33.9L60.9 441c9.4 9.4 24.5 9.4 33.9 0l97.2-97.2 97.2 97.2c9.3 9.3 24.5 9.3 33.9 0z\"],\n        \"times-circle\": [512, 512, [], \"f057\", \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"],\n        \"tint\": [384, 512, [], \"f043\", \"M192 512c-98.435 0-178.087-79.652-178.087-178.087 0-111.196 101.194-154.065 148.522-311.825 9.104-30.116 51.099-28.778 59.13 0 47.546 158.486 148.522 200.069 148.522 311.825C370.087 432.348 290.435 512 192 512zm-42.522-171.826c-1.509-5.533-9.447-5.532-10.956 0-9.223 29.425-27.913 37.645-27.913 58.435C110.609 417.13 125.478 432 144 432s33.391-14.87 33.391-33.391c0-20.839-18.673-28.956-27.913-58.435z\"],\n        \"toggle-off\": [576, 512, [], \"f204\", \"M384 64H192C85.961 64 0 149.961 0 256s85.961 192 192 192h192c106.039 0 192-85.961 192-192S490.039 64 384 64zM64 256c0-70.741 57.249-128 128-128 70.741 0 128 57.249 128 128 0 70.741-57.249 128-128 128-70.741 0-128-57.249-128-128zm320 128h-48.905c65.217-72.858 65.236-183.12 0-256H384c70.741 0 128 57.249 128 128 0 70.74-57.249 128-128 128z\"],\n        \"toggle-on\": [576, 512, [], \"f205\", \"M576 256c0 106.039-85.961 192-192 192H192C85.961 448 0 362.039 0 256S85.961 64 192 64h192c106.039 0 192 85.961 192 192zM384 128c-70.741 0-128 57.249-128 128 0 70.741 57.249 128 128 128 70.741 0 128-57.249 128-128 0-70.741-57.249-128-128-128\"],\n        \"trademark\": [640, 512, [], \"f25c\", \"M97.119 163.133H12c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h248.559c6.627 0 12 5.373 12 12v43.133c0 6.627-5.373 12-12 12H175.44V404c0 6.627-5.373 12-12 12h-54.322c-6.627 0-12-5.373-12-12V163.133zM329.825 96h65.425a12 12 0 0 1 11.346 8.093l43.759 127.068c7.161 20.588 16.111 52.812 16.111 52.812h.896s8.95-32.224 16.111-52.812l43.758-127.068A12 12 0 0 1 538.577 96h65.41a12 12 0 0 1 11.961 11.03l24.012 296c.567 6.987-4.951 12.97-11.961 12.97h-54.101a12 12 0 0 1-11.972-11.182l-9.082-132.93c-1.79-24.168 0-53.706 0-53.706h-.896s-10.741 33.566-17.902 53.706l-30.7 84.731a12 12 0 0 1-11.282 7.912h-50.302a12 12 0 0 1-11.282-7.912l-30.7-84.731c-7.161-20.14-17.903-53.706-17.903-53.706h-.895s1.79 29.538 0 53.706l-9.082 132.93c-.428 6.295-5.66 11.182-11.97 11.182H305.4c-7.017 0-12.536-5.994-11.959-12.987l24.425-296A11.999 11.999 0 0 1 329.825 96z\"],\n        \"train\": [448, 512, [], \"f238\", \"M448 96v256c0 51.815-61.624 96-130.022 96l62.98 49.721C386.905 502.417 383.562 512 376 512H72c-7.578 0-10.892-9.594-4.957-14.279L130.022 448C61.82 448 0 403.954 0 352V96C0 42.981 64 0 128 0h192c65 0 128 42.981 128 96zm-48 136V120c0-13.255-10.745-24-24-24H72c-13.255 0-24 10.745-24 24v112c0 13.255 10.745 24 24 24h304c13.255 0 24-10.745 24-24zm-176 64c-30.928 0-56 25.072-56 56s25.072 56 56 56 56-25.072 56-56-25.072-56-56-56z\"],\n        \"transgender\": [384, 512, [], \"f224\", \"M372 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C198.5 104.1 172.2 96 144 96 64.5 96 0 160.5 0 240c0 68.5 47.9 125.9 112 140.4V408H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM144 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n        \"transgender-alt\": [480, 512, [], \"f225\", \"M468 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-80.7 80.7C294.5 104.1 268.2 96 240 96c-28.2 0-54.5 8.1-76.7 22.1l-16.5-16.5 19.8-19.8c4.7-4.7 4.7-12.3 0-17l-28.3-28.3c-4.7-4.7-12.3-4.7-17 0l-19.8 19.8-19-19 16.9-16.9C107.1 12.9 101.7 0 91 0H12C5.4 0 0 5.4 0 12v79c0 10.7 12.9 16 20.5 8.5l16.9-16.9 19 19-19.8 19.8c-4.7 4.7-4.7 12.3 0 17l28.3 28.3c4.7 4.7 12.3 4.7 17 0l19.8-19.8 16.5 16.5C104.1 185.5 96 211.8 96 240c0 68.5 47.9 125.9 112 140.4V408h-36c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v28c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-28h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-27.6c64.1-14.6 112-71.9 112-140.4 0-28.2-8.1-54.5-22.1-76.7l80.7-80.7 16.9 16.9c7.6 7.6 20.5 2.2 20.5-8.5V12c0-6.6-5.4-12-12-12zM240 320c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n        \"trash\": [448, 512, [], \"f1f8\", \"M0 84V56c0-13.3 10.7-24 24-24h112l9.4-18.7c4-8.2 12.3-13.3 21.4-13.3h114.3c9.1 0 17.4 5.1 21.5 13.3L312 32h112c13.3 0 24 10.7 24 24v28c0 6.6-5.4 12-12 12H12C5.4 96 0 90.6 0 84zm415.2 56.7L394.8 467c-1.6 25.3-22.6 45-47.9 45H101.1c-25.3 0-46.3-19.7-47.9-45L32.8 140.7c-.4-6.9 5.1-12.7 12-12.7h358.5c6.8 0 12.3 5.8 11.9 12.7z\"],\n        \"trash-alt\": [448, 512, [], \"f2ed\", \"M0 84V56c0-13.3 10.7-24 24-24h112l9.4-18.7c4-8.2 12.3-13.3 21.4-13.3h114.3c9.1 0 17.4 5.1 21.5 13.3L312 32h112c13.3 0 24 10.7 24 24v28c0 6.6-5.4 12-12 12H12C5.4 96 0 90.6 0 84zm416 56v324c0 26.5-21.5 48-48 48H80c-26.5 0-48-21.5-48-48V140c0-6.6 5.4-12 12-12h360c6.6 0 12 5.4 12 12zm-272 68c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208zm96 0c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208zm96 0c0-8.8-7.2-16-16-16s-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208z\"],\n        \"tree\": [384, 512, [], \"f1bb\", \"M377.33 375.429L293.906 288H328c21.017 0 31.872-25.207 17.448-40.479L262.79 160H296c20.878 0 31.851-24.969 17.587-40.331l-104-112.003c-9.485-10.214-25.676-10.229-35.174 0l-104 112.003C56.206 134.969 67.037 160 88 160h33.21l-82.659 87.521C24.121 262.801 34.993 288 56 288h34.094L6.665 375.429C-7.869 390.655 2.925 416 24.025 416H144c0 32.781-11.188 49.26-33.995 67.506C98.225 492.93 104.914 512 120 512h144c15.086 0 21.776-19.069 9.995-28.494-19.768-15.814-33.992-31.665-33.995-67.496V416h119.97c21.05 0 31.929-25.309 17.36-40.571z\"],\n        \"trophy\": [576, 512, [], \"f091\", \"M552 64H448V24c0-13.3-10.7-24-24-24H152c-13.3 0-24 10.7-24 24v40H24C10.7 64 0 74.7 0 88v56c0 35.7 22.5 72.4 61.9 100.7 31.5 22.7 69.8 37.1 110 41.7C203.3 338.5 240 360 240 360v72h-48c-35.3 0-64 20.7-64 56v12c0 6.6 5.4 12 12 12h296c6.6 0 12-5.4 12-12v-12c0-35.3-28.7-56-64-56h-48v-72s36.7-21.5 68.1-73.6c40.3-4.6 78.6-19 110-41.7 39.3-28.3 61.9-65 61.9-100.7V88c0-13.3-10.7-24-24-24zM99.3 192.8C74.9 175.2 64 155.6 64 144v-16h64.2c1 32.6 5.8 61.2 12.8 86.2-15.1-5.2-29.2-12.4-41.7-21.4zM512 144c0 16.1-17.7 36.1-35.3 48.8-12.5 9-26.7 16.2-41.8 21.4 7-25 11.8-53.6 12.8-86.2H512v16z\"],\n        \"truck\": [640, 512, [], \"f0d1\", \"M624 352h-16V243.9c0-12.7-5.1-24.9-14.1-33.9L494 110.1c-9-9-21.2-14.1-33.9-14.1H416V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h16c0 53 43 96 96 96s96-43 96-96h128c0 53 43 96 96 96s96-43 96-96h48c8.8 0 16-7.2 16-16v-32c0-8.8-7.2-16-16-16zM160 464c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm320 0c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm80-208H416V144h44.1l99.9 99.9V256z\"],\n        \"tty\": [512, 512, [], \"f1e4\", \"M5.37 103.822c138.532-138.532 362.936-138.326 501.262 0 6.078 6.078 7.074 15.496 2.583 22.681l-43.214 69.138a18.332 18.332 0 0 1-22.356 7.305l-86.422-34.569a18.335 18.335 0 0 1-11.434-18.846L351.741 90c-62.145-22.454-130.636-21.986-191.483 0l5.953 59.532a18.331 18.331 0 0 1-11.434 18.846l-86.423 34.568a18.334 18.334 0 0 1-22.356-7.305L2.787 126.502a18.333 18.333 0 0 1 2.583-22.68zM96 308v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H92c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zM96 500v-40c0-6.627-5.373-12-12-12H44c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H140c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\"],\n        \"tv\": [640, 512, [], \"f26c\", \"M592 0H48C21.5 0 0 21.5 0 48v320c0 26.5 21.5 48 48 48h245.1v32h-160c-17.7 0-32 14.3-32 32s14.3 32 32 32h384c17.7 0 32-14.3 32-32s-14.3-32-32-32h-160v-32H592c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zm-16 352H64V64h512v288z\"],\n        \"umbrella\": [576, 512, [], \"f0e9\", \"M557.011 267.631c-51.432-45.217-107.572-43.698-158.567 30.731-5.298 7.861-14.906 7.165-19.736 0-2.483-3.624-32.218-60.808-90.708-60.808-45.766 0-70.542 31.378-90.709 60.808-4.829 7.165-14.436 7.861-19.734 0-50.904-74.285-106.613-76.406-158.567-30.731-10.21 8.264-20.912-1.109-18.696-9.481C32.146 134.573 158.516 64.612 288.001 64.612c128.793 0 256.546 69.961 287.706 193.538 2.206 8.322-8.426 17.793-18.696 9.481zM256 261.001V416c0 17.645-14.355 32-32 32s-32-14.355-32-32c0-17.673-14.327-32-32-32s-32 14.327-32 32c0 52.935 43.065 96 96 96s96-43.065 96-96V261.288c-21.836-10.806-45.425-9.737-64-.287zm64-211.007V32c0-17.673-14.327-32-32-32s-32 14.327-32 32v17.987a372.105 372.105 0 0 1 64 .007z\"],\n        \"underline\": [448, 512, [], \"f0cd\", \"M224.264 388.24c-91.669 0-156.603-51.165-156.603-151.392V64H39.37c-8.837 0-16-7.163-16-16V16c0-8.837 7.163-16 16-16h137.39c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-28.813v172.848c0 53.699 28.314 79.444 76.317 79.444 46.966 0 75.796-25.434 75.796-79.965V64h-28.291c-8.837 0-16-7.163-16-16V16c0-8.837 7.163-16 16-16h136.868c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16h-28.291v172.848c0 99.405-64.881 151.392-156.082 151.392zM16 448h416c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16z\"],\n        \"undo\": [512, 512, [], \"f0e2\", \"M212.333 224.333H12c-6.627 0-12-5.373-12-12V12C0 5.373 5.373 0 12 0h48c6.627 0 12 5.373 12 12v78.112C117.773 39.279 184.26 7.47 258.175 8.007c136.906.994 246.448 111.623 246.157 248.532C504.041 393.258 393.12 504 256.333 504c-64.089 0-122.496-24.313-166.51-64.215-5.099-4.622-5.334-12.554-.467-17.42l33.967-33.967c4.474-4.474 11.662-4.717 16.401-.525C170.76 415.336 211.58 432 256.333 432c97.268 0 176-78.716 176-176 0-97.267-78.716-176-176-176-58.496 0-110.28 28.476-142.274 72.333h98.274c6.627 0 12 5.373 12 12v48c0 6.627-5.373 12-12 12z\"],\n        \"undo-alt\": [512, 512, [], \"f2ea\", \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\"],\n        \"universal-access\": [512, 512, [], \"f29a\", \"M256 48c114.953 0 208 93.029 208 208 0 114.953-93.029 208-208 208-114.953 0-208-93.029-208-208 0-114.953 93.029-208 208-208m0-40C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 56C149.961 64 64 149.961 64 256s85.961 192 192 192 192-85.961 192-192S362.039 64 256 64zm0 44c19.882 0 36 16.118 36 36s-16.118 36-36 36-36-16.118-36-36 16.118-36 36-36zm117.741 98.023c-28.712 6.779-55.511 12.748-82.14 15.807.851 101.023 12.306 123.052 25.037 155.621 3.617 9.26-.957 19.698-10.217 23.315-9.261 3.617-19.699-.957-23.316-10.217-8.705-22.308-17.086-40.636-22.261-78.549h-9.686c-5.167 37.851-13.534 56.208-22.262 78.549-3.615 9.255-14.05 13.836-23.315 10.217-9.26-3.617-13.834-14.056-10.217-23.315 12.713-32.541 24.185-54.541 25.037-155.621-26.629-3.058-53.428-9.027-82.141-15.807-8.6-2.031-13.926-10.648-11.895-19.249s10.647-13.926 19.249-11.895c96.686 22.829 124.283 22.783 220.775 0 8.599-2.03 17.218 3.294 19.249 11.895 2.029 8.601-3.297 17.219-11.897 19.249z\"],\n        \"university\": [512, 512, [], \"f19c\", \"M496 128v16a8 8 0 0 1-8 8h-24v12c0 6.627-5.373 12-12 12H60c-6.627 0-12-5.373-12-12v-12H24a8 8 0 0 1-8-8v-16a8 8 0 0 1 4.941-7.392l232-88a7.996 7.996 0 0 1 6.118 0l232 88A8 8 0 0 1 496 128zm-24 304H40c-13.255 0-24 10.745-24 24v16a8 8 0 0 0 8 8h464a8 8 0 0 0 8-8v-16c0-13.255-10.745-24-24-24zM96 192v192H60c-6.627 0-12 5.373-12 12v20h416v-20c0-6.627-5.373-12-12-12h-36V192h-64v192h-64V192h-64v192h-64V192H96z\"],\n        \"unlink\": [512, 512, [], \"f127\", \"M304.083 405.907c4.686 4.686 4.686 12.284 0 16.971l-44.674 44.674c-59.263 59.262-155.693 59.266-214.961 0-59.264-59.265-59.264-155.696 0-214.96l44.675-44.675c4.686-4.686 12.284-4.686 16.971 0l39.598 39.598c4.686 4.686 4.686 12.284 0 16.971l-44.675 44.674c-28.072 28.073-28.072 73.75 0 101.823 28.072 28.072 73.75 28.073 101.824 0l44.674-44.674c4.686-4.686 12.284-4.686 16.971 0l39.597 39.598zm-56.568-260.216c4.686 4.686 12.284 4.686 16.971 0l44.674-44.674c28.072-28.075 73.75-28.073 101.824 0 28.072 28.073 28.072 73.75 0 101.823l-44.675 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.598 39.598c4.686 4.686 12.284 4.686 16.971 0l44.675-44.675c59.265-59.265 59.265-155.695 0-214.96-59.266-59.264-155.695-59.264-214.961 0l-44.674 44.674c-4.686 4.686-4.686 12.284 0 16.971l39.597 39.598zm234.828 359.28l22.627-22.627c9.373-9.373 9.373-24.569 0-33.941L63.598 7.029c-9.373-9.373-24.569-9.373-33.941 0L7.029 29.657c-9.373 9.373-9.373 24.569 0 33.941l441.373 441.373c9.373 9.372 24.569 9.372 33.941 0z\"],\n        \"unlock\": [448, 512, [], \"f09c\", \"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"],\n        \"unlock-alt\": [448, 512, [], \"f13e\", \"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48zM264 408c0 22.1-17.9 40-40 40s-40-17.9-40-40v-48c0-22.1 17.9-40 40-40s40 17.9 40 40v48z\"],\n        \"upload\": [512, 512, [], \"f093\", \"M296 384h-80c-13.3 0-24-10.7-24-24V192h-87.7c-17.8 0-26.7-21.5-14.1-34.1L242.3 5.7c7.5-7.5 19.8-7.5 27.3 0l152.2 152.2c12.6 12.6 3.7 34.1-14.1 34.1H320v168c0 13.3-10.7 24-24 24zm216-8v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h136v8c0 30.9 25.1 56 56 56h80c30.9 0 56-25.1 56-56v-8h136c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\"],\n        \"user\": [512, 512, [], \"f007\", \"M256 0c88.366 0 160 71.634 160 160s-71.634 160-160 160S96 248.366 96 160 167.634 0 256 0zm183.283 333.821l-71.313-17.828c-74.923 53.89-165.738 41.864-223.94 0l-71.313 17.828C29.981 344.505 0 382.903 0 426.955V464c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48v-37.045c0-44.052-29.981-82.45-72.717-93.134z\"],\n        \"user-circle\": [512, 512, [], \"f2bd\", \"M8 256C8 119.033 119.033 8 256 8s248 111.033 248 248-111.033 248-248 248S8 392.967 8 256zm72.455 125.868C119.657 436.446 183.673 472 256 472s136.343-35.554 175.545-90.132c-3.141-26.99-22.667-49.648-49.538-56.366l-32.374-8.093C323.565 339.79 290.722 352 256 352s-67.565-12.21-93.634-34.591l-32.374 8.093c-26.87 6.718-46.396 29.376-49.537 56.366zM144 208c0 61.856 50.144 112 112 112s112-50.144 112-112S317.856 96 256 96s-112 50.144-112 112z\"],\n        \"user-md\": [448, 512, [], \"f0f0\", \"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zM104 424c0 13.3 10.7 24 24 24s24-10.7 24-24-10.7-24-24-24-24 10.7-24 24zm250.4-151.6l-34.4-5.7v55c36.5 7.4 64 39.8 64 78.4v56c0 7.6-5.4 14.2-12.9 15.7l-32.2 6.4c-4.3.9-8.5-1.9-9.4-6.3l-3.1-15.7c-.9-4.3 1.9-8.6 6.3-9.4l19.3-3.9V400c0-29.6-26.9-53-57.6-47.1-22.8 4.4-38.4 25.8-38.4 49v41l19.3 3.9c4.3.9 7.1 5.1 6.3 9.4l-3.1 15.7c-.9 4.3-5.1 7.1-9.4 6.3l-31.2-4.2c-7.9-1.1-13.8-7.8-13.8-15.9v-58c0-38.6 27.5-70.9 64-78.4v-47.2c-19.6 8.6-41.2 13.6-64 13.6-29.3 0-56.4-8.5-80-22.3v104.9c23.1 6.9 40 28.1 40 53.4 0 30.9-25.1 56-56 56s-56-25.1-56-56c0-25.3 16.9-46.5 40-53.4V269.3l-18.4 3.1c-54 9-93.6 55.7-93.6 110.5V480c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32v-97.1c-.1-54.8-39.7-101.5-93.7-110.5z\"],\n        \"user-plus\": [640, 512, [], \"f234\", \"M224 32c77.32 0 140 62.68 140 140s-62.68 140-140 140S84 249.32 84 172 146.68 32 224 32zm160.373 292.093l-62.399-15.6c-65.557 47.154-145.021 36.631-195.948 0l-62.399 15.6C26.233 333.442 0 367.04 0 405.585V438c0 23.196 18.804 42 42 42h364c23.196 0 42-18.804 42-42v-32.415c0-38.545-26.233-72.143-63.627-81.492zM628 224.889h-68.889V156c0-6.627-5.373-12-12-12h-38.222c-6.627 0-12 5.373-12 12l-.002 68.887-68.887.002c-6.627 0-12 5.373-12 12v38.222c0 6.627 5.373 12 12 12l68.887.002.002 68.887c0 6.627 5.373 12 12 12h38.222c6.627 0 12-5.373 12-12l.002-68.887 68.887-.002c6.627 0 12-5.373 12-12v-38.222c0-6.627-5.373-12-12-12z\"],\n        \"user-secret\": [448, 512, [], \"f21b\", \"M388.829 295.324l20.972-55.052c2.992-7.854-2.809-16.272-11.214-16.272H340.39c7.45-16.236 11.61-34.297 11.61-53.333 0-3.631-.16-7.224-.456-10.778C391.083 152.074 416 140.684 416 128c0-13.263-27.231-25.112-69.947-32.937-9.185-32.805-27.178-65.797-40.714-82.85-9.452-11.908-25.873-15.634-39.471-8.834l-27.557 13.779a31.997 31.997 0 0 1-28.622 0l-27.557-13.78c-13.599-6.799-30.02-3.074-39.471 8.834-13.536 17.053-31.529 50.045-40.714 82.85C59.231 102.888 32 114.737 32 128c0 12.684 24.917 24.074 64.456 31.889A129.362 129.362 0 0 0 96 170.667c0 19.037 4.159 37.098 11.608 53.333h-57.41c-8.615 0-14.423 8.808-11.029 16.727l22.906 53.447C25.799 307.882 0 342.925 0 384v80c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48v-80c0-39.97-24.43-74.231-59.171-88.676zM184 488l-48-192 48 24 24 40-24 128zm80 0l-24-128 24-40 48-24-48 192zm54.778-303.746c-.008.043-4.299 3.231-5.125 5.771-3.861 11.864-7.026 24.572-16.514 33.359-10.071 9.327-47.957 22.405-63.996-25.029-2.837-8.395-15.447-8.398-18.285 0-16.963 50.168-56.019 32.417-63.996 25.029-9.488-8.786-12.653-21.495-16.514-33.359-.826-2.54-5.118-5.728-5.125-5.771-.554-2.925-.981-5.884-1.22-8.85-.309-3.848 10.078-3.658 11.078-3.747 26.303-2.326 52.303-.579 78.023 5.497 2.563.606 11.553.529 13.793 0 25.72-6.076 51.72-7.824 78.023-5.497 1.002.089 11.387-.102 11.078 3.747-.239 2.966-.666 5.925-1.22 8.85z\"],\n        \"user-times\": [640, 512, [], \"f235\", \"M224 32c77.32 0 140 62.68 140 140s-62.68 140-140 140S84 249.32 84 172 146.68 32 224 32zm160.373 292.093l-62.399-15.6c-65.557 47.154-145.021 36.631-195.948 0l-62.399 15.6C26.233 333.442 0 367.04 0 405.585V438c0 23.196 18.804 42 42 42h364c23.196 0 42-18.804 42-42v-32.415c0-38.545-26.233-72.143-63.627-81.492zM587.897 256l48.596-48.598c4.675-4.675 4.675-12.256 0-16.931l-26.964-26.964c-4.675-4.675-12.256-4.675-16.931 0L544 212.105l-48.598-48.598c-4.675-4.675-12.256-4.675-16.931 0l-26.964 26.964c-4.675 4.675-4.675 12.256 0 16.931L500.103 256l-48.596 48.598c-4.675 4.675-4.675 12.256 0 16.931l26.964 26.964c4.675 4.675 12.256 4.675 16.931 0L544 299.897l48.598 48.596c4.675 4.675 12.256 4.675 16.931 0l26.964-26.964c4.675-4.675 4.675-12.256 0-16.931L587.897 256z\"],\n        \"users\": [640, 512, [], \"f0c0\", \"M320 64c57.99 0 105 47.01 105 105s-47.01 105-105 105-105-47.01-105-105S262.01 64 320 64zm113.463 217.366l-39.982-9.996c-49.168 35.365-108.766 27.473-146.961 0l-39.982 9.996C174.485 289.379 152 318.177 152 351.216V412c0 19.882 16.118 36 36 36h264c19.882 0 36-16.118 36-36v-60.784c0-33.039-22.485-61.837-54.537-69.85zM528 300c38.66 0 70-31.34 70-70s-31.34-70-70-70-70 31.34-70 70 31.34 70 70 70zm-416 0c38.66 0 70-31.34 70-70s-31.34-70-70-70-70 31.34-70 70 31.34 70 70 70zm24 112v-60.784c0-16.551 4.593-32.204 12.703-45.599-29.988 14.72-63.336 8.708-85.69-7.37l-26.655 6.664C14.99 310.252 0 329.452 0 351.477V392c0 13.255 10.745 24 24 24h112.169a52.417 52.417 0 0 1-.169-4zm467.642-107.09l-26.655-6.664c-27.925 20.086-60.89 19.233-85.786 7.218C499.369 318.893 504 334.601 504 351.216V412c0 1.347-.068 2.678-.169 4H616c13.255 0 24-10.745 24-24v-40.523c0-22.025-14.99-41.225-36.358-46.567z\"],\n        \"utensil-spoon\": [512, 512, [], \"f2e5\", \"M480.1 31.9c-55-55.1-164.9-34.5-227.8 28.5-49.3 49.3-55.1 110-28.8 160.4L9 413.2c-11.6 10.5-12.1 28.5-1 39.5L59.3 504c11 11 29.1 10.5 39.5-1.1l192.4-214.4c50.4 26.3 111.1 20.5 160.4-28.8 63-62.9 83.6-172.8 28.5-227.8z\"],\n        \"utensils\": [416, 512, [], \"f2e7\", \"M207.9 15.2c.8 4.7 16.1 94.5 16.1 128.8 0 52.3-27.8 89.6-68.9 104.6L168 486.7c.7 13.7-10.2 25.3-24 25.3H80c-13.7 0-24.7-11.5-24-25.3l12.9-238.1C27.7 233.6 0 196.2 0 144 0 109.6 15.3 19.9 16.1 15.2 19.3-5.1 61.4-5.4 64 16.3v141.2c1.3 3.4 15.1 3.2 16 0 1.4-25.3 7.9-139.2 8-141.8 3.3-20.8 44.7-20.8 47.9 0 .2 2.7 6.6 116.5 8 141.8.9 3.2 14.8 3.4 16 0V16.3c2.6-21.6 44.8-21.4 48-1.1zm119.2 285.7l-15 185.1c-1.2 14 9.9 26 23.9 26h56c13.3 0 24-10.7 24-24V24c0-13.2-10.7-24-24-24-82.5 0-221.4 178.5-64.9 300.9z\"],\n        \"venus\": [288, 512, [], \"f221\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80z\"],\n        \"venus-double\": [512, 512, [], \"f226\", \"M288 176c0-79.5-64.5-144-144-144S0 96.5 0 176c0 68.5 47.9 125.9 112 140.4V368H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.5 112-71.9 112-140.4zm-224 0c0-44.1 35.9-80 80-80s80 35.9 80 80-35.9 80-80 80-80-35.9-80-80zm336 140.4V368h36c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-36v36c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12v-36h-36c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h36v-51.6c-21.2-4.8-40.6-14.3-57.2-27.3 14-16.7 25-36 32.1-57.1 14.5 14.8 34.7 24 57.1 24 44.1 0 80-35.9 80-80s-35.9-80-80-80c-22.3 0-42.6 9.2-57.1 24-7.1-21.1-18-40.4-32.1-57.1C303.4 43.6 334.3 32 368 32c79.5 0 144 64.5 144 144 0 68.5-47.9 125.9-112 140.4z\"],\n        \"venus-mars\": [576, 512, [], \"f228\", \"M564 0h-79c-10.7 0-16 12.9-8.5 20.5l16.9 16.9-48.7 48.7C422.5 72.1 396.2 64 368 64c-33.7 0-64.6 11.6-89.2 30.9 14 16.7 25 36 32.1 57.1 14.5-14.8 34.7-24 57.1-24 44.1 0 80 35.9 80 80s-35.9 80-80 80c-22.3 0-42.6-9.2-57.1-24-7.1 21.1-18 40.4-32.1 57.1 24.5 19.4 55.5 30.9 89.2 30.9 79.5 0 144-64.5 144-144 0-28.2-8.1-54.5-22.1-76.7l48.7-48.7 16.9 16.9c2.4 2.4 5.4 3.5 8.4 3.5 6.2 0 12.1-4.8 12.1-12V12c0-6.6-5.4-12-12-12zM144 64C64.5 64 0 128.5 0 208c0 68.5 47.9 125.9 112 140.4V400H76c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h36v36c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12v-36h36c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-36v-51.6c64.1-14.6 112-71.9 112-140.4 0-79.5-64.5-144-144-144zm0 224c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\"],\n        \"video\": [576, 512, [], \"f03d\", \"M528 64h-12.118a48 48 0 0 0-33.941 14.059L384 176v-64c0-26.51-21.49-48-48-48H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-64l97.941 97.941A48 48 0 0 0 515.882 448H528c26.51 0 48-21.49 48-48V112c0-26.51-21.49-48-48-48z\"],\n        \"volleyball-ball\": [495, 512, [], \"f45f\", \"M223.3 243.4c-.9-37-8.6-72.8-22.7-105.7-90.8 42.4-157.5 122.4-180.3 216.8 13.4 30.8 32.9 58.3 56.9 81.1 22.7-79.2 74.2-147.8 146.1-192.2zM186.4 109c-15-26.4-34.5-50.1-57.4-70.7C38 88.1-15.8 191.2 4 300.5c33.4-83.1 98.4-152 182.4-191.5zM374 274.1c8.6-99.8-27.3-197.5-97.5-264.4-14.7-1.7-51.6-5.5-98.9 8.5 57.3 59.3 91 138.2 93.5 222.7 32.5 17.7 67.3 29 102.9 33.2zm-124.7 9.5c-31.6 19.3-58.7 43.9-80.2 72.6 82 57.3 184.5 75.1 277.5 47.8 19.7-26.4 34.2-56.8 42.2-89.9-26.6 6.6-53.7 10.4-80.9 10.4-54.6-.1-108.9-14.1-158.6-40.9zM151 383.3c-15.2 26-25.7 54.4-32.1 84.2 37.6 23 81.7 36.5 129.1 36.5 61 0 116.7-22.1 159.9-58.6C295 461.5 204.6 420.6 151 383.3zM331.3 22.7c55.3 70.4 82.5 161.2 74.6 253.6 30.3.2 60.5-4.8 89.7-14.2 0-2 .3-4 .3-6 0-107.8-68.7-199.1-164.6-233.4z\"],\n        \"volume-down\": [384, 512, [], \"f027\", \"M256 88.017v335.964c0 21.438-25.943 31.998-40.971 16.971L126.059 352H24c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h102.059l88.971-88.954c15.01-15.01 40.97-4.49 40.97 16.971zM384 256c0-33.717-17.186-64.35-45.972-81.944-15.079-9.214-34.775-4.463-43.992 10.616s-4.464 34.775 10.615 43.992C314.263 234.538 320 244.757 320 256a32.056 32.056 0 0 1-13.802 26.332c-14.524 10.069-18.136 30.006-8.067 44.53 10.07 14.525 30.008 18.136 44.53 8.067C368.546 316.983 384 287.478 384 256z\"],\n        \"volume-off\": [256, 512, [], \"f026\", \"M256 88.017v335.964c0 21.438-25.943 31.998-40.971 16.971L126.059 352H24c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h102.059l88.971-88.954c15.01-15.01 40.97-4.49 40.97 16.971z\"],\n        \"volume-up\": [576, 512, [], \"f028\", \"M256 88.017v335.964c0 21.438-25.943 31.998-40.971 16.971L126.059 352H24c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h102.059l88.971-88.954c15.01-15.01 40.97-4.49 40.97 16.971zm182.056-77.876C422.982.92 403.283 5.668 394.061 20.745c-9.221 15.077-4.473 34.774 10.604 43.995C468.967 104.063 512 174.983 512 256c0 73.431-36.077 142.292-96.507 184.206-14.522 10.072-18.129 30.01-8.057 44.532 10.076 14.528 30.016 18.126 44.531 8.057C529.633 438.927 576 350.406 576 256c0-103.244-54.579-194.877-137.944-245.859zM480 256c0-68.547-36.15-129.777-91.957-163.901-15.076-9.22-34.774-4.471-43.994 10.607-9.22 15.078-4.471 34.774 10.607 43.994C393.067 170.188 416 211.048 416 256c0 41.964-20.62 81.319-55.158 105.276-14.521 10.073-18.128 30.01-8.056 44.532 6.216 8.96 16.185 13.765 26.322 13.765a31.862 31.862 0 0 0 18.21-5.709C449.091 377.953 480 318.938 480 256zm-96 0c0-33.717-17.186-64.35-45.972-81.944-15.079-9.214-34.775-4.463-43.992 10.616s-4.464 34.775 10.615 43.992C314.263 234.538 320 244.757 320 256a32.056 32.056 0 0 1-13.802 26.332c-14.524 10.069-18.136 30.006-8.067 44.53 10.07 14.525 30.008 18.136 44.53 8.067C368.546 316.983 384 287.478 384 256z\"],\n        \"warehouse\": [640, 512, [], \"f494\", \"M504 352H136.4c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0 96H136.1c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm0-192H136.6c-4.4 0-8 3.6-8 8l-.1 48c0 4.4 3.6 8 8 8H504c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zm106.5-139L338.4 3.7a48.15 48.15 0 0 0-36.9 0L29.5 117C11.7 124.5 0 141.9 0 161.3V504c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V256c0-17.6 14.6-32 32.6-32h382.8c18 0 32.6 14.4 32.6 32v248c0 4.4 3.6 8 8 8h80c4.4 0 8-3.6 8-8V161.3c0-19.4-11.7-36.8-29.5-44.3z\"],\n        \"weight\": [512, 512, [], \"f496\", \"M448 64h-26c16.4 28.3 26 61 26 96 0 105.9-86.1 192-192 192S64 265.9 64 160c0-35 9.6-67.7 26-96H64C28.7 64 0 92.7 0 128v320c0 35.3 28.7 64 64 64h384c35.3 0 64-28.7 64-64V128c0-35.3-28.7-64-64-64zM256 320c88.4 0 160-71.6 160-160S344.4 0 256 0 96 71.6 96 160s71.6 160 160 160zm-.3-151.9l33.6-78.4c3.5-8.2 12.9-11.9 21-8.4s11.9 12.9 8.4 21L285 180.9c6.7 7.1 10.9 16.6 10.9 27.1 0 22.1-17.9 40-40 40s-40-17.9-40-40c.1-22 17.9-39.8 39.8-39.9z\"],\n        \"wheelchair\": [512, 512, [], \"f193\", \"M496.101 385.669l14.227 28.663c3.929 7.915.697 17.516-7.218 21.445l-65.465 32.886c-16.049 7.967-35.556 1.194-43.189-15.055L331.679 320H192c-15.925 0-29.426-11.71-31.679-27.475C126.433 55.308 128.38 70.044 128 64c0-36.358 30.318-65.635 67.052-63.929 33.271 1.545 60.048 28.905 60.925 62.201.868 32.933-23.152 60.423-54.608 65.039l4.67 32.69H336c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16H215.182l4.572 32H352a32 32 0 0 1 28.962 18.392L438.477 396.8l36.178-18.349c7.915-3.929 17.517-.697 21.446 7.218zM311.358 352h-24.506c-7.788 54.204-54.528 96-110.852 96-61.757 0-112-50.243-112-112 0-41.505 22.694-77.809 56.324-97.156-3.712-25.965-6.844-47.86-9.488-66.333C45.956 198.464 0 261.963 0 336c0 97.047 78.953 176 176 176 71.87 0 133.806-43.308 161.11-105.192L311.358 352z\"],\n        \"wifi\": [640, 512, [], \"f1eb\", \"M384 416c0 35.346-28.654 64-64 64s-64-28.654-64-64c0-35.346 28.654-64 64-64s64 28.654 64 64zm136.659-124.443c6.465-6.465 6.245-17.065-.564-23.167-113.793-101.985-286.526-101.869-400.19 0-6.809 6.102-7.029 16.702-.564 23.167l34.006 34.006c5.927 5.927 15.464 6.32 21.769.796 82.88-72.609 207.074-72.447 289.768 0 6.305 5.524 15.842 5.132 21.769-.796l34.006-34.006zm112.11-113.718c6.385-6.385 6.254-16.816-.35-22.973-175.768-163.86-449.134-163.8-624.837 0-6.604 6.157-6.735 16.589-.35 22.973l33.966 33.966c6.095 6.095 15.891 6.231 22.224.383 144.763-133.668 368.356-133.702 513.156 0 6.333 5.848 16.129 5.712 22.224-.383l33.967-33.966z\"],\n        \"window-close\": [512, 512, [], \"f410\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z\"],\n        \"window-maximize\": [512, 512, [], \"f2d0\", \"M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-16 160H64v-84c0-6.6 5.4-12 12-12h360c6.6 0 12 5.4 12 12v84z\"],\n        \"window-minimize\": [512, 512, [], \"f2d1\", \"M464 352H48c-26.5 0-48 21.5-48 48v32c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-32c0-26.5-21.5-48-48-48z\"],\n        \"window-restore\": [512, 512, [], \"f2d2\", \"M512 48v288c0 26.5-21.5 48-48 48h-48V176c0-44.1-35.9-80-80-80H128V48c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zM384 176v288c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V176c0-26.5 21.5-48 48-48h288c26.5 0 48 21.5 48 48zm-68 28c0-6.6-5.4-12-12-12H76c-6.6 0-12 5.4-12 12v52h252v-52z\"],\n        \"won-sign\": [576, 512, [], \"f159\", \"M564 192c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-48.028l18.572-80.61c1.732-7.518-3.978-14.694-11.693-14.694h-46.107a11.998 11.998 0 0 0-11.736 9.5L450.73 128H340.839l-19.725-85.987a12 12 0 0 0-11.696-9.317H265.43a12 12 0 0 0-11.687 9.277L233.696 128H124.975L107.5 42.299a12 12 0 0 0-11.758-9.602H53.628c-7.686 0-13.39 7.124-11.709 14.624L60 128H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h62.342l7.171 32H12c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h83.856l40.927 182.624A12 12 0 0 0 148.492 480h56.767c5.583 0 10.428-3.85 11.689-9.288L259.335 288h55.086l42.386 182.712A12 12 0 0 0 368.496 480h56.826a12 12 0 0 0 11.694-9.306L479.108 288H564c6.627 0 12-5.373 12-12v-40c0-6.627-5.373-12-12-12h-70.146l7.373-32H564zm-425.976 0h80.757l-7.457 32h-66.776l-6.524-32zm45.796 150.029c-6.194 25.831-6.758 47.25-7.321 47.25h-1.126s-1.689-22.05-6.758-47.25L157.599 288h38.812l-12.591 54.029zM274.182 224l1.996-8.602c1.856-7.962 3.457-15.968 4.803-23.398h11.794c1.347 7.43 2.947 15.436 4.803 23.398l1.996 8.602h-25.392zm130.959 118.029c-5.068 25.2-6.758 47.25-6.758 47.25h-1.126c-.563 0-1.126-21.42-7.321-47.25L377.542 288h39.107l-11.508 54.029zM430.281 224h-67.42l-7.34-32h81.577l-6.817 32z\"],\n        \"wrench\": [512, 512, [], \"f0ad\", \"M481.156 200c9.3 0 15.12 10.155 10.325 18.124C466.295 259.992 420.419 288 368 288c-79.222 0-143.501-63.974-143.997-143.079C223.505 65.469 288.548-.001 368.002 0c52.362.001 98.196 27.949 123.4 69.743C496.24 77.766 490.523 88 481.154 88H376l-40 56 40 56h105.156zm-171.649 93.003L109.255 493.255c-24.994 24.993-65.515 24.994-90.51 0-24.993-24.994-24.993-65.516 0-90.51L218.991 202.5c16.16 41.197 49.303 74.335 90.516 90.503zM104 432c0-13.255-10.745-24-24-24s-24 10.745-24 24 10.745 24 24 24 24-10.745 24-24z\"],\n        \"yen-sign\": [384, 512, [], \"f157\", \"M351.208 32h-65.277a12 12 0 0 0-10.778 6.724l-55.39 113.163c-14.513 34.704-27.133 71.932-27.133 71.932h-1.262s-12.62-37.228-27.133-71.932l-55.39-113.163A11.997 11.997 0 0 0 98.068 32H32.792c-9.057 0-14.85 9.65-10.59 17.643L102.322 200H44c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h88.162L152 293.228V320H44c-6.627 0-12 5.373-12 12v32c0 6.627 5.373 12 12 12h108v92c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-92h108c6.627 0 12-5.373 12-12v-32c0-6.627-5.373-12-12-12H232v-26.772L251.838 256H340c6.627 0 12-5.373 12-12v-32c0-6.627-5.373-12-12-12h-58.322l80.12-150.357C366.058 41.65 360.266 32 351.208 32z\"]\n    };\n\n    return igv\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar igv = (function (igv) {\n\n    igv.Math = {\n\n        lerp: (v0, v1, t) => {\n            return (1 - t) * v0 + t * v1;\n        },\n\n        mean: function (array) {\n\n            var t = 0, n = 0,\n                i;\n            for (i = 0; i < array.length; i++) {\n                if (!isNaN(array[i])) {\n                    t += array[i];\n                    n++;\n                }\n            }\n            return n > 0 ? t / n : 0;\n        },\n\n        meanAndStdev: function (array) {\n\n            var v, t = 0, t2 = 0, n = 0, i;\n\n            for (i = 0; i < array.length; i++) {\n\n                v = array[i];\n\n                if (!isNaN(v)) {\n                    t += v;\n                    t2 += v * v;\n                    n++;\n                }\n            }\n            return n > 0 ? {mean: t / n, stdev: Math.sqrt(t2 - t * t / n)} : {mean: 0, stdev: 0};\n        },\n\n        median: function (numbers) {\n            // median of [3, 5, 4, 4, 1, 1, 2, 3] = 3\n            var median = 0, numsLen = numbers.length;\n            numbers.sort();\n\n            if (\n                numsLen % 2 === 0 // is even\n            ) {\n                // average of two middle numbers\n                median = (numbers[numsLen / 2 - 1] + numbers[numsLen / 2]) / 2;\n            } else { // is odd\n                // middle number only\n                median = numbers[(numsLen - 1) / 2];\n            }\n\n            return median;\n        },\n\n        // Fast percentile function for \"p\" near edges.  This needs profiled for p in middle (e.g. median)\n        percentile: function (array, p) {\n\n            if (array.length === 0) return undefined;\n\n            var k = Math.floor(array.length * ((100 - p) / 100));\n            if (k === 0) {\n                array.sort(function (a, b) {\n                    return b - a\n                });\n                return array[k];\n            }\n            else {\n                return selectElement(array, k);\n            }\n\n        },\n\n\n        clamp: function (value, min, max) {\n            return Math.min(Math.max(value, min), max);\n        },\n\n        log2: function (x) {\n            return Math.log(x) / Math.LN2;\n        }\n\n    };\n\n    igv.Rect = {\n\n        make: function (x, y, width, height) {\n            var r;\n\n            r = this.makeRectZero();\n\n            r.origin.x = x;\n            r.origin.y = y;\n\n            r.size.width = width;\n            r.size.height = height;\n\n            return r;\n        },\n\n        makeRectZero: function () {\n            return {origin: {x: 0, y: 0}, size: {width: 0, height: 0}};\n        },\n\n        makeWithCenterAndSize: function (center, size) {\n            var halfSize,\n                r;\n\n            halfSize = this.makeSize(size.width / 2.0, size.height / 2.0);\n\n            r = this.make(center.x - halfSize.width, center.y - halfSize.height, size.width, size.height);\n\n            return r;\n        },\n\n        makePoint: function (x, y) {\n            return {x: x, y: y};\n        },\n\n        makeSize: function (width, height) {\n            return {width: width, height: height};\n        }\n\n    };\n\n    function selectElement(array, k) {\n\n        // Credit Steve Hanov http://stevehanov.ca/blog/index.php?id=122\n        var heap = new BinaryHeap(),\n            i;\n\n        for (i = 0; i < array.length; i++) {\n\n            var item = array[i];\n\n            // If we have not yet found k items, or the current item is larger than\n            // the smallest item on the heap, add current item\n            if (heap.content.length < k || item > heap.content[0]) {\n                // If the heap is full, remove the smallest element on the heap.\n                if (heap.content.length === k) {\n                    var r = heap.pop();\n                }\n                heap.push(item)\n            }\n        }\n\n        return heap.content[0];\n    }\n\n\n    function BinaryHeap() {\n        this.content = [];\n    }\n\n    BinaryHeap.prototype = {\n        push: function (element) {\n            // Add the new element to the end of the array.\n            this.content.push(element);\n            // Allow it to bubble up.\n            this.bubbleUp(this.content.length - 1);\n        },\n\n        pop: function () {\n            // Store the first element so we can return it later.\n            var result = this.content[0];\n            // Get the element at the end of the array.\n            var end = this.content.pop();\n            // If there are any elements left, put the end element at the\n            // start, and let it sink down.\n            if (this.content.length > 0) {\n                this.content[0] = end;\n                this.sinkDown(0);\n            }\n            return result;\n        },\n\n        remove: function (node) {\n            var length = this.content.length;\n            // To remove a value, we must search through the array to find\n            // it.\n            for (var i = 0; i < length; i++) {\n                if (this.content[i] != node) continue;\n                // When it is found, the process seen in 'pop' is repeated\n                // to fill up the hole.\n                var end = this.content.pop();\n                // If the element we popped was the one we needed to remove,\n                // we're done.\n                if (i == length - 1) break;\n                // Otherwise, we replace the removed element with the popped\n                // one, and allow it to float up or sink down as appropriate.\n                this.content[i] = end;\n                this.bubbleUp(i);\n                this.sinkDown(i);\n                break;\n            }\n        },\n\n        size: function () {\n            return this.content.length;\n        },\n\n        bubbleUp: function (n) {\n            // Fetch the element that has to be moved.\n            var element = this.content[n], score = element;\n            // When at 0, an element can not go up any further.\n            while (n > 0) {\n                // Compute the parent element's index, and fetch it.\n                var parentN = Math.floor((n + 1) / 2) - 1,\n                    parent = this.content[parentN];\n                // If the parent has a lesser score, things are in order and we\n                // are done.\n                if (score >= parent)\n                    break;\n\n                // Otherwise, swap the parent with the current element and\n                // continue.\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                n = parentN;\n            }\n        },\n\n        sinkDown: function (n) {\n            // Look up the target element and its score.\n            var length = this.content.length,\n                element = this.content[n],\n                elemScore = element;\n\n            while (true) {\n                // Compute the indices of the child elements.\n                var child2N = (n + 1) * 2, child1N = child2N - 1;\n                // This is used to store the new position of the element,\n                // if any.\n                var swap = null;\n                // If the first child exists (is inside the array)...\n                if (child1N < length) {\n                    // Look it up and compute its score.\n                    var child1 = this.content[child1N],\n                        child1Score = child1;\n                    // If the score is less than our element's, we need to swap.\n                    if (child1Score < elemScore)\n                        swap = child1N;\n                }\n                // Do the same checks for the other child.\n                if (child2N < length) {\n                    var child2 = this.content[child2N],\n                        child2Score = child2;\n                    if (child2Score < (swap == null ? elemScore : child1Score))\n                        swap = child2N;\n                }\n\n                // No need to swap further, we are done.\n                if (swap == null) break;\n\n                // Otherwise, swap and continue.\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            }\n        }\n    };\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    igv.getMouseXY = function(domElement, event) {\n\n        // a DOMRect object with eight properties: left, top, right, bottom, x, y, width, height\n        const dr = domElement.getBoundingClientRect();\n\n        const xy =\n            {\n                x: event.clientX - dr.left,\n                y: event.clientY - dr.top,\n                xNormalized: (event.clientX - dr.left)/dr.width,\n                yNormalized: (event.clientY - dr.top)/dr.height,\n                width: dr.width,\n                height: dr.height\n            };\n\n        return xy;\n    };\n\n    igv.getExtension = function (config) {\n        var path,\n            filename,\n            index;\n\n        if (undefined === config.url) {\n            return undefined;\n        }\n\n        path = igv.isFilePath(config.url) ? config.url.name : config.url;\n        filename = path.toLowerCase();\n\n        //Strip parameters -- handle local files later\n        index = filename.indexOf(\"?\");\n        if (index > 0) {\n            filename = filename.substr(0, index);\n        }\n\n        //Strip aux extensions .gz, .tab, and .txt\n        if (filename.endsWith(\".gz\")) {\n            filename = filename.substr(0, filename.length - 3);\n        } else if (filename.endsWith(\".txt\") || filename.endsWith(\".tab\")) {\n            filename = filename.substr(0, filename.length - 4);\n        }\n\n        index = filename.lastIndexOf(\".\");\n\n        return index < 0 ? filename : filename.substr(1 + index);\n    };\n\n    /**\n     * Return the filename from the path.   Example\n     *   https://foo.com/bar.bed?param=2   => bar.bed\n     * @param path\n     */\n    igv.getFilename = function (path) {\n\n        var index, filename;\n\n        if (path instanceof File) {\n            return path.name;\n        }\n        else {\n            index = path.lastIndexOf(\"/\");\n            filename = index < 0 ? path : path.substr(index + 1);\n\n            //Strip parameters -- handle local files later\n            index = filename.indexOf(\"?\");\n            if (index > 0) {\n                filename = filename.substr(0, index);\n            }\n\n            return filename;\n        }\n    }\n\n    igv.filenameOrURLHasSuffix = function (fileOrURL, suffix) {\n        var str = (fileOrURL instanceof File) ? fileOrURL.name : igv.getFilename(fileOrURL);\n        return str.toLowerCase().endsWith(suffix)\n    };\n\n    igv.isFilePath = function (path) {\n        return (path instanceof File);\n    };\n\n    igv.makeToggleButton = function (label, configurationKey, get$Target, continuation) {\n\n        var $button;\n\n        $button = $('<div class=\"igv-nav-bar-button\">');\n        $button.text(label);\n\n        $button.click(function () {\n\n            var $target = get$Target();\n\n            $target.toggle();\n\n            if (continuation) {\n                continuation();\n            }\n        });\n\n\n        return $button;\n    };\n\n    igv.attachDialogCloseHandlerWithParent = function ($parent, closeHandler) {\n\n        var $container = $('<div>');\n        $parent.append($container);\n\n        $container.append(igv.createIcon(\"times\"));\n\n        $container.on('click', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            closeHandler()\n        });\n\n        // $container.on('touchend', function (e) {\n        //     e.preventDefault();\n        //     e.stopPropagation();\n        //     closeHandler()\n        // });\n        //\n        // $container.on('mousedown', function (e) {\n        //     e.preventDefault();\n        //     e.stopPropagation();\n        // });\n        //\n        // $container.on('mouseup', function (e) {\n        //     e.preventDefault();\n        //     e.stopPropagation();\n        // });\n        //\n        // $container.on('touchstart', function (e) {\n        //     e.preventDefault();\n        //     e.stopPropagation();\n        // });\n\n    };\n\n    /**\n     * Find spinner\n     */\n    igv.getSpinnerObjectWithParentElement = function (parentElement) {\n        return $(parentElement).find(\"div.igv-spinner-container\");\n    };\n\n    /**\n     * Start the spinner for the parent element, if it has one\n     */\n    igv.startSpinnerAtParentElement = function (parentElement) {\n\n        var spinnerObject = igv.getSpinnerObjectWithParentElement(parentElement);\n\n        if (spinnerObject) {\n            spinnerObject.show();\n        }\n\n    };\n\n    /**\n     * Stop the spinner for the parent element, if it has one\n     * @param parentElement\n     */\n    igv.stopSpinnerAtParentElement = function (parentElement) {\n\n        var spinnerObject = igv.getSpinnerObjectWithParentElement(parentElement);\n\n        if (spinnerObject) {\n            spinnerObject.hide();\n        }\n\n    };\n\n    igv.parseUri = function (str) {\n\n        var o = igv.parseUri.options,\n            m = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str),\n            uri = {},\n            i = 14;\n\n        while (i--) uri[o.key[i]] = m[i] || \"\";\n\n        uri[o.q.name] = {};\n        uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n            if ($1) uri[o.q.name][$1] = $2;\n        });\n\n        return uri;\n    };\n\n    igv.parseUri.options = {\n        strictMode: false,\n        key: [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"],\n        q: {\n            name: \"queryKey\",\n            parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n        },\n        parser: {\n            strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n            loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n        }\n    };\n\n    igv.splitLines = function (string) {\n        return string.split(/\\n|\\r\\n|\\r/g);\n    }\n\n\n    igv.domElementRectAsString = function (element) {\n        return \" x \" + element.clientLeft + \" y \" + element.clientTop + \" w \" + element.clientWidth + \" h \" + element.clientHeight;\n    };\n\n    igv.isNumber = function (n) {\n\n        if (\"\" === n) {\n\n            return false\n        } else if (undefined === n) {\n\n            return false;\n        } else {\n\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        }\n\n    };\n\n    igv.guid = function () {\n        return (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n    };\n\n    // Returns a random number between min (inclusive) and max (exclusive)\n    igv.random = function (min, max) {\n        return Math.random() * (max - min) + min;\n    };\n\n    igv.prettyBasePairNumber = function (raw) {\n\n        var denom,\n            units,\n            value,\n            floored;\n\n        if (raw > 1e7) {\n            denom = 1e6;\n            units = \" mb\";\n        } else if (raw > 1e4) {\n\n            denom = 1e3;\n            units = \" kb\";\n\n            value = raw / denom;\n            floored = Math.floor(value);\n            return igv.numberFormatter(floored) + units;\n        } else {\n            return igv.numberFormatter(raw) + \" bp\";\n        }\n\n        value = raw / denom;\n        floored = Math.floor(value);\n\n        return floored.toString() + units;\n    };\n\n    // StackOverflow: http://stackoverflow.com/a/10810674/116169\n    igv.numberFormatter = function (rawNumber) {\n\n        var dec = String(rawNumber).split(/[.,]/),\n            sep = ',',\n            decsep = '.';\n\n        return dec[0].split('').reverse().reduce(function (prev, now, i) {\n            return i % 3 === 0 ? prev + sep + now : prev + now;\n        }).split('').reverse().join('') + (dec[1] ? decsep + dec[1] : '');\n    };\n\n    igv.numberUnFormatter = function (formatedNumber) {\n\n        return formatedNumber.split(\",\").join().replace(\",\", \"\", \"g\");\n    };\n\n    /**\n     * Translate the mouse coordinates for the event to the coordinates for the given target element\n     * @param e\n     * @param target\n     * @returns {{x: number, y: number}}\n     */\n    igv.translateMouseCoordinates = function (e, target) {\n\n        var $target = $(target),\n            posx,\n            posy;\n\n        if (undefined === $target.offset()) {\n            console.log('igv.translateMouseCoordinates - $target.offset() is undefined.');\n        }\n\n        const pageCoordinates = igv.pageCoordinates(e);\n\n        posx = pageCoordinates.x - $target.offset().left;\n        posy = pageCoordinates.y - $target.offset().top;\n\n        return {x: posx, y: posy}\n    };\n\n    igv.pageCoordinates = function (e) {\n\n        if (e.type.startsWith(\"touch\")) {\n            const touch = e.touches[0];\n            return {x: touch.pageX, y: touch.pageY};\n        }\n        else {\n            return {x: e.pageX, y: e.pageY}\n        }\n\n    }\n\n    igv.splitStringRespectingQuotes = function (string, delim) {\n\n        var tokens = [],\n            len = string.length,\n            i,\n            n = 0,\n            quote = false,\n            c;\n\n        if (len > 0) {\n\n            tokens[n] = string.charAt(0);\n            for (i = 1; i < len; i++) {\n                c = string.charAt(i);\n                if (c === '\"') {\n                    quote = !quote;\n                }\n                else if (!quote && c === delim) {\n                    n++;\n                    tokens[n] = \"\";\n                }\n                else {\n                    tokens[n] += c;\n                }\n            }\n        }\n        return tokens;\n    };\n\n    /**\n     * Extend jQuery's ajax function to handle binary requests.   Credit to Henry Algus:\n     *\n     * http://www.henryalgus.com/reading-binary-files-using-jquery-ajax/\n     */\n    igv.addAjaxExtensions = function () {\n\n        // use this transport for \"binary\" data type\n        $.ajaxTransport(\"+binary\", function (options, originalOptions, jqXHR) {\n\n            return {\n                // create new XMLHttpRequest\n                send: function (_, callback) {\n                    // setup all variables\n                    var xhr = new XMLHttpRequest(),\n                        url = options.url,\n                        type = options.type,\n                        responseType = \"arraybuffer\",\n                        data = options.data || null;\n\n                    xhr.addEventListener('load', function () {\n                        var data = {};\n                        data[options.dataType] = xhr.response;\n                        // make callback and send data\n                        callback(xhr.status, xhr.statusText, data, xhr.getAllResponseHeaders());\n                    });\n\n                    xhr.open(type, url);\n                    xhr.responseType = responseType;\n\n                    if (options.headers) {\n                        for (var prop in options.headers) {\n                            if (options.headers.hasOwnProperty(prop)) {\n                                xhr.setRequestHeader(prop, options.headers[prop]);\n                            }\n                        }\n                    }\n\n                    // TODO -- set any other options values\n                },\n                abort: function () {\n                    jqXHR.abort();\n                }\n            };\n\n        });\n    };\n\n    /**\n     * Test if the given value is a string or number.  Not using typeof as it fails on boxed primitives.\n     *\n     * @param value\n     * @returns boolean\n     */\n    const simpleTypes = new Set([\"boolean\", \"number\", \"string\", \"symbol\"]);\n    igv.isSimpleType = function (value) {\n\n        const valueType = typeof value;\n\n        return (value != undefined && (simpleTypes.has(valueType) || value.substring || value.toFixed))\n    };\n\n    igv.constrainBBox = function ($child, $parent) {\n\n        var delta,\n            topLeft,\n            bboxChild = {},\n            bboxParent = {};\n\n        bboxParent.left = bboxParent.top = 0;\n        bboxParent.right = $parent.outerWidth();\n        bboxParent.bottom = $parent.outerHeight();\n\n        topLeft = $child.offset();\n\n        bboxChild.left = topLeft.left - $parent.offset().left;\n        bboxChild.top = topLeft.top - $parent.offset().top;\n        bboxChild.right = bboxChild.left + $child.outerWidth();\n        bboxChild.bottom = bboxChild.top + $child.outerHeight();\n\n        delta = bboxChild.bottom - bboxParent.bottom;\n        if (delta > 0) {\n\n            // clamp to trackContainer bottom\n            topLeft.top -= delta;\n\n            bboxChild.top -= delta;\n            bboxChild.bottom -= delta;\n\n            delta = bboxChild.top - bboxParent.top;\n            if (delta < 0) {\n                topLeft.top -= delta;\n            }\n\n        }\n\n        return topLeft;\n\n    };\n\n    igv.log = function (message) {\n        if (igv.enableLogging && console && console.log) {\n            console.log(message);\n        }\n    };\n\n    igv.buildOptions = function (config, options) {\n\n        var defaultOptions = {\n            oauthToken: config.oauthToken,\n            headers: config.headers,\n            withCredentials: config.withCredentials,\n            filename: config.filename\n        };\n\n        return Object.assign(defaultOptions, options);\n    };\n\n    /**\n     * Parse a locus string and return a range object.  Locus string is of the form chr:start-end.  End is optional\n     *\n     */\n    igv.parseLocusString = function (string) {\n\n        const t1 = string.split(\":\");\n        const t2 = t1[1].split(\"-\");\n\n        const range = {\n            chr: t1[0],\n            start: Number.parseInt(t2[0]) - 1\n        };\n\n        if (t2.length > 1) {\n            range.end = Number.parseInt(t2[1]);\n        }\n        else {\n            range.end = range.start + 1;\n        }\n\n        return range;\n\n    }\n\n\n    igv.download = function (filename, data) {\n\n        const element = document.createElement('a');\n        element.setAttribute('href', data);\n        element.setAttribute('download', filename);\n        element.style.display = 'none';\n        document.body.appendChild(element);\n        element.click();\n        document.body.removeChild(element);\n    }\n\n\n    /**\n     * Covers string literals and String objects\n     * @param x\n     * @returns {boolean}\n     */\n    igv.isString = function (x) {\n        return typeof x === \"string\" || x instanceof String\n    }\n\n\n    /**\n     * isMobile test from http://detectmobilebrowsers.com\n     * TODO -- improve UI design so this isn't neccessary\n     * @returns {boolean}\n     */\n\n    igv.isMobile = function () {\n\n        const a = (navigator.userAgent || navigator.vendor || window.opera);\n        return (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4)))\n\n    }\n\n    igv.doAutoscale = function (features) {\n        var min, max;\n\n        if (features.length > 0) {\n            min = Number.MAX_VALUE;\n            max = -Number.MAX_VALUE;\n\n            features.forEach(function (f) {\n                if (!Number.isNaN(f.value)) {\n                    min = Math.min(min, f.value);\n                    max = Math.max(max, f.value);\n                }\n            });\n\n            // Insure we have a zero baseline\n            if (max > 0) min = Math.min(0, min);\n            if (max < 0) max = 0;\n        }\n        else {\n            // No features -- default\n            min = 0;\n            max = 100;\n        }\n\n        return {min: min, max: max};\n    }\n\n    igv.getGlobalObject = function () {\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        if (typeof global !== 'undefined') {\n            return global;\n        }\n        else {\n            return window;\n        }\n    }\n\n    /**\n     * @param dataURI\n     * @returns {Array<number>|Uint8Array}\n     */\n    igv.decodeDataURI = function (dataURI) {\n\n        const split = dataURI.split(',');\n        const info = split[0].split(':')[1];\n        let dataString = split[1];\n\n        if (info.indexOf('base64') >= 0) {\n            dataString = atob(dataString);\n        } else {\n            dataString = decodeURI(dataString);      // URL encoded string -- not currently used of tested\n        }\n        const bytes = new Uint8Array(dataString.length);\n        for (let i = 0; i < dataString.length; i++) {\n            bytes[i] = dataString.charCodeAt(i);\n        }\n\n        let plain\n        if(info.indexOf('gzip') > 0) {\n            const inflate = new Zlib.Gunzip(bytes)\n            plain = inflate.decompress()\n        } else {\n            plain = bytes      // This option (uncompressed) is currently not used of tested\n        }\n        return plain\n\n    }\n\n\n    return igv;\n\n})(igv || {});\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    var NONE = 0;\n    var GZIP = 1;\n    var BGZF = 2;\n    var UNKNOWN = 3;\n    var loginTried = false;\n\n    class RateLimiter {\n\n        constructor(wait) {\n            this.wait = wait === undefined ? 100 : wait\n            this.isCalled = false\n            this.calls = [];\n        }\n\n\n        limiter(fn) {\n\n            const self = this\n\n            let caller = function () {\n                if (self.calls.length && !self.isCalled) {\n                    self.isCalled = true;\n                    self.calls.shift().call();\n                    setTimeout(function () {\n                        self.isCalled = false;\n                        caller();\n                    }, self.wait);\n                }\n            };\n\n            return function () {\n                self.calls.push(fn.bind(this, ...arguments));\n                caller();\n            };\n        }\n\n    }\n\n    const rateLimiter = new RateLimiter(100)\n\n\n    igv.xhr = {\n\n\n        load: async function (url, options) {\n\n            options = options || {};\n\n            if (url instanceof File) {\n                return loadFileSlice(url, options);\n            } else {\n                if (url.startsWith(\"data:\")) {\n                    return igv.decodeDataURI(url)\n                } else {\n\n                    if (isGoogleDrive(url)) {\n\n                        return new Promise(function (fulfill, reject) {\n                            rateLimiter.limiter(async function (url, options) {\n                                try {\n                                    const result = loadURL(url, options)\n                                    fulfill(result)\n                                } catch (e) {\n                                    reject(e)\n                                }\n                            })(url, options)\n                        })\n                    } else {\n                        return loadURL(url, options);\n                    }\n                }\n            }\n\n            async function loadURL(url, options) {\n\n                url = mapUrl(url);\n\n                options = options || {};\n\n                let oauthToken = options.oauthToken;\n                if (!oauthToken) {\n                    oauthToken = getOauthToken(url);\n                }\n                if (oauthToken) {\n                    let token = (typeof oauthToken === 'function') ? oauthToken() : oauthToken;\n                    if (token.then && (typeof token.then === 'function')) {\n                        return token.then(applyOauthToken);\n                    } else {\n                        return applyOauthToken(token);\n                    }\n                } else {\n                    return getLoadPromise(url, options);\n                }\n\n\n                function applyOauthToken(token) {\n                    if (token) {\n                        options.token = token;\n                    }\n                    return getLoadPromise(url, options);\n                }\n\n                async function getLoadPromise(url, options) {\n\n                    return new Promise(async function (fullfill, reject) {\n\n                        // Various Google tansformations\n                        if (igv.google.isGoogleURL(url)) {\n                            if (url.startsWith(\"gs://\")) {\n                                url = igv.google.translateGoogleCloudURL(url)\n                            } else if (igv.google.isGoogleStorageURL(url)) {\n                                if (!url.includes(\"altMedia=\")) {\n                                    url += (url.includes(\"?\") ? \"&altMedia=true\" : \"?altMedia=true\")\n                                }\n                            }\n                            url = igv.google.addApiKey(url);\n                        }\n\n\n                        const headers = options.headers || {};\n                        if (options.token) {\n                            addOauthHeaders(headers, options.token);\n                        }\n                        const range = options.range;\n                        const isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n                        const isSafari = navigator.vendor.indexOf(\"Apple\") == 0 && /\\sSafari\\//.test(navigator.userAgent);\n\n                        if (range && isChrome && !isAmazonV4Signed(url)) {\n                            // Hack to prevent caching for byte-ranges. Attempt to fix net:err-cache errors in Chrome\n                            url += url.includes(\"?\") ? \"&\" : \"?\";\n                            url += \"someRandomSeed=\" + Math.random().toString(36);\n                        }\n\n                        const xhr = new XMLHttpRequest();\n                        const sendData = options.sendData || options.body;\n                        const method = options.method || (sendData ? \"POST\" : \"GET\");\n                        const responseType = options.responseType;\n                        const contentType = options.contentType;\n                        const mimeType = options.mimeType;\n\n                        xhr.open(method, url);\n\n                        if (range) {\n                            var rangeEnd = range.size ? range.start + range.size - 1 : \"\";\n                            xhr.setRequestHeader(\"Range\", \"bytes=\" + range.start + \"-\" + rangeEnd);\n                            //      xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");    <= This can cause CORS issues, disabled for now\n                        }\n                        if (contentType) {\n                            xhr.setRequestHeader(\"Content-Type\", contentType);\n                        }\n                        if (mimeType) {\n                            xhr.overrideMimeType(mimeType);\n                        }\n                        if (responseType) {\n                            xhr.responseType = responseType;\n                        }\n                        if (headers) {\n                            for (let key of Object.keys(headers)) {\n                                const value = headers[key];\n                                xhr.setRequestHeader(key, value);\n                            }\n                        }\n\n                        // NOTE: using withCredentials with servers that return \"*\" for access-allowed-origin will fail\n                        if (options.withCredentials === true) {\n                            xhr.withCredentials = true;\n                        }\n\n                        xhr.onload = function (event) {\n                            // when the url points to a local file, the status is 0 but that is no error\n                            if (xhr.status == 0 || (xhr.status >= 200 && xhr.status <= 300)) {\n                                if (range && xhr.status != 206 && range.start !== 0) {\n                                    // For small files a range starting at 0 can return the whole file => 200\n                                    handleError(\"ERROR: range-byte header was ignored for url: \" + url);\n                                } else {\n                                    fullfill(xhr.response);\n                                }\n                            } else if ((typeof gapi !== \"undefined\") &&\n                                ((xhr.status === 404 || xhr.status === 401) &&\n                                    igv.google.isGoogleURL(url)) &&\n                                !options.retries) {\n\n                                options.retries = 1;\n\n                                return getGoogleAccessToken()\n\n                                    .then(function (accessToken) {\n\n                                        options.oauthToken = accessToken;\n\n                                        igv.xhr.load(url, options)\n                                            .then(function (response) {\n                                                fullfill(response);\n                                            })\n                                            .catch(function (error) {\n                                                if (reject) {\n                                                    reject(error);\n                                                } else {\n                                                    throw(error);\n                                                }\n                                            })\n                                    })\n\n\n                            } else {\n\n                                //\n                                if (xhr.status === 403) {\n                                    handleError(\"Access forbidden\")\n                                } else if (xhr.status === 416) {\n                                    //  Tried to read off the end of the file.   This shouldn't happen, but if it does return an\n                                    handleError(\"Unsatisfiable range\");\n                                } else {// TODO -- better error handling\n                                    handleError(xhr.status);\n                                }\n                            }\n                        };\n\n                        xhr.onerror = function (event) {\n                            handleError(\"Error accessing resource: \" + url + \" Status: \" + xhr.status);\n                        }\n\n\n                        xhr.ontimeout = function (event) {\n                            handleError(\"Timed out\");\n                        };\n\n                        xhr.onabort = function (event) {\n                            console.log(\"Aborted\");\n                            reject(event);\n                        };\n\n                        try {\n                            xhr.send(sendData);\n                        } catch (e) {\n                            reject(e);\n                        }\n\n\n                        function handleError(message) {\n                            if (reject) {\n                                reject(new Error(message));\n                            } else {\n                                throw new Error(message);\n                            }\n                        }\n                    });\n                }\n            };\n        },\n\n        loadArrayBuffer: function (url, options) {\n\n            options = options || {};\n            options.responseType = \"arraybuffer\";\n\n            if (url instanceof File) {\n                return loadFileSlice(url, options);\n            } else {\n\n                return igv.xhr.load(url, options);\n            }\n\n        },\n\n        loadJson: function (url, options) {\n\n            options = options || {};\n\n            var method = options.method || (options.sendData ? \"POST\" : \"GET\");\n\n            if (method == \"POST\") options.contentType = \"application/json\";\n\n            return igv.xhr.load(url, options)\n\n                .then(function (result) {\n\n                    if (result) {\n                        return JSON.parse(result);\n                    } else {\n                        return result;\n                    }\n                })\n\n        },\n\n        loadString: function (path, options) {\n\n            options = options || {};\n\n            if (path instanceof File) {\n                return loadStringFromFile(path, options);\n            } else {\n                return loadStringFromUrl(path, options);\n            }\n        },\n\n        startup: startup\n    }\n\n\n    function loadFileSlice(localfile, options) {\n\n        return new Promise(function (fullfill, reject) {\n\n            var fileReader,\n                blob,\n                rangeEnd;\n\n            fileReader = new FileReader();\n\n            fileReader.onload = function (e) {\n\n                fullfill(fileReader.result);\n\n            };\n\n            fileReader.onerror = function (e) {\n                console.log(\"reject uploading local file \" + localfile.name);\n                reject(null, fileReader);\n            };\n\n            if (options.range) {\n                rangeEnd = options.range.start + options.range.size - 1;\n                blob = localfile.slice(options.range.start, rangeEnd + 1);\n                if (\"arraybuffer\" === options.responseType) {\n                    fileReader.readAsArrayBuffer(blob);\n                } else {\n                    fileReader.readAsBinaryString(blob);\n                }\n            } else {\n                if (\"arraybuffer\" === options.responseType) {\n                    fileReader.readAsArrayBuffer(localfile);\n                } else {\n                    fileReader.readAsBinaryString(localfile);\n                }\n            }\n\n        });\n\n    }\n\n    function loadStringFromFile(localfile, options) {\n\n        return new Promise(function (fullfill, reject) {\n\n            var fileReader = new FileReader();\n            var compression;\n\n            if (options.bgz) {\n                compression = BGZF;\n            } else if (localfile.name.endsWith(\".gz\")) {\n                compression = GZIP;\n            } else {\n                compression = NONE;\n            }\n\n            fileReader.onload = function (e) {\n\n                if (compression === NONE) {\n                    return fullfill(fileReader.result);\n                } else {\n                    return fullfill(arrayBufferToString(fileReader.result, compression));\n                }\n            };\n\n            fileReader.onerror = function (e) {\n                console.log(\"reject uploading local file \" + localfile.name);\n                reject(null, fileReader);\n            };\n\n            if (compression === NONE) {\n                fileReader.readAsText(localfile);\n            } else {\n                fileReader.readAsArrayBuffer(localfile);\n            }\n\n        });\n\n    }\n\n    function loadStringFromUrl(url, options) {\n\n        var compression,\n            fn,\n            idx;\n\n        if (options === undefined) options = {};\n\n        fn = options.filename || igv.getFilename(url);\n\n        if (options.bgz) {\n            compression = BGZF;\n        } else if (fn.endsWith(\".gz\")) {\n            compression = GZIP;\n        } else {\n            compression = UNKNOWN;\n        }\n\n        options.responseType = \"arraybuffer\";\n        return igv.xhr.load(url, options)\n            .then(function (data) {\n                return arrayBufferToString(data, compression);\n            })\n\n\n        function getFilename(url, options) {\n\n            if (options.filename) {\n                return Promise.resolve(options.filename);\n            }\n        }\n\n    }\n\n    function isAmazonV4Signed(url) {\n        return url.indexOf(\"X-Amz-Signature\") > -1;\n    }\n\n    function getOauthToken(url) {\n\n        if (igv) {\n            const host = igv.parseUri(url).host;\n            let token = igv.oauth.getToken(host);\n            if (!token && igv.google.isGoogleURL(url)) {\n                token = igv.oauth.google.access_token;\n            }\n            return token;\n        } else {\n            return undefined;\n        }\n    }\n\n    function addOauthHeaders(headers, acToken) {\n        {\n            if (acToken) {\n                headers[\"Cache-Control\"] = \"no-cache\";\n                headers[\"Authorization\"] = \"Bearer \" + acToken;\n            }\n            return headers;\n        }\n    }\n\n    /**\n     * Perform some well-known url mappings.  For now just handles dropbox urls\n     * @param url\n     */\n    function mapUrl(url) {\n\n        if (url.includes(\"//www.dropbox.com\")) {\n            return url.replace(\"//www.dropbox.com\", \"//dl.dropboxusercontent.com\");\n        } else if (url.includes(\"//drive.google.com\")) {\n            return igv.google.driveDownloadURL(url);\n        } else if (url.includes(\"//www.broadinstitute.org/igvdata\")) {\n            return url.replace(\"//www.broadinstitute.org/igvdata\", \"//data.broadinstitute.org/igvdata\");\n        } else if (url.includes(\"//igvdata.broadinstitute.org\")) {\n            return url.replace(\"//igvdata.broadinstitute.org\", \"https://dn7ywbm9isq8j.cloudfront.net\")\n        } else {\n            return url;\n        }\n    }\n\n\n    function arrayBufferToString(arraybuffer, compression) {\n\n        var plain, inflate;\n\n        if (compression === UNKNOWN && arraybuffer.byteLength > 2) {\n\n            const m = new Uint8Array(arraybuffer, 0, 2)\n            if (m[0] === 31 && m[1] === 139) {\n                compression = GZIP\n            }\n        }\n\n        if (compression === GZIP) {\n            inflate = new Zlib.Gunzip(new Uint8Array(arraybuffer));\n            plain = inflate.decompress();\n        } else if (compression === BGZF) {\n            plain = new Uint8Array(igv.unbgzf(arraybuffer));\n        } else {\n            plain = new Uint8Array(arraybuffer);\n        }\n\n        if ('TextDecoder' in igv.getGlobalObject()) {\n            return new TextDecoder().decode(plain);\n        } else {\n            return decodeUTF8(plain);\n        }\n\n    };\n\n    function isGoogleDrive(url) {\n        return url.indexOf(\"drive.google.com\") >= 0 || url.indexOf(\"www.googleapis.com/drive\") > 0\n    }\n\n\n    /**\n     * There can be only 1 oAuth promise executing at a time.\n     */\n    let oauthPromise;\n\n    async function getGoogleAccessToken() {\n        if (igv.oauth.google.access_token) {\n            return Promise.resolve(igv.oauth.google.access_token);\n        } else if (oauthPromise) {\n            return oauthPromise\n        }\n        else {\n            const authInstance = gapi.auth2.getAuthInstance();\n            if (!authInstance) {\n                igv.browser.presentAlert(\"Authorization is required, but Google oAuth has not been initalized.  Contact your site administrator for assistance.\")\n                return undefined;\n            } else {\n                const scope = \"https://www.googleapis.com/auth/devstorage.read_only https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/drive.readonly\";\n                const options = new gapi.auth2.SigninOptionsBuilder();\n                options.setPrompt('select_account');\n                options.setScope(scope);\n                oauthPromise = new Promise(function (resolve, reject) {\n\n                    igv.browser.presentMessageWithCallback(\"Google Login required\", function () {\n\n                        gapi.auth2.getAuthInstance().signIn(options)\n                            .then(function (user) {\n                                const authResponse = user.getAuthResponse();\n                                igv.setGoogleOauthToken(authResponse[\"access_token\"]);\n                                resolve(authResponse[\"access_token\"]);\n                                oauthPromise = undefined\n                            })\n                            .catch(function(err) {\n                                oauthPromise = undefined\n                                reject(err)\n                            })\n                    })\n                })\n\n                return oauthPromise\n            }\n        }\n\n    }\n\n\n    //Increments an anonymous usage count.  Count is anonymous, needed for our continued funding.  Please don't delete\n\n    let startupCalls = 0;\n\n    function startup() {\n\n        const href = window.document.location.href;\n        const host = igv.parseUri(href).host;\n\n        if (startupCalls === 0 && !href.includes(\"localhost\") && !href.includes(\"127.0.0.1\")) {\n            startupCalls++;\n\n            var url = \"https://data.broadinstitute.org/igv/projects/current/counter_igvjs.php?version=\" + \"0\";\n            igv.xhr.load(url).then(function (ignore) {\n                console.log(ignore);\n            }).catch(function (error) {\n                console.log(error);\n            });\n\n        }\n    }\n\n    function validateIP(address) {\n\n        const regex = new RegExp(/\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b/);\n        return regex.test(address);\n    }\n\n\n    /**\n     * Use when TextDecoder is not available (primarily IE).\n     *\n     * From: https://gist.github.com/Yaffle/5458286\n     *\n     * @param octets\n     * @returns {string}\n     */\n    function decodeUTF8(octets) {\n        var string = \"\";\n        var i = 0;\n        while (i < octets.length) {\n            var octet = octets[i];\n            var bytesNeeded = 0;\n            var codePoint = 0;\n            if (octet <= 0x7F) {\n                bytesNeeded = 0;\n                codePoint = octet & 0xFF;\n            } else if (octet <= 0xDF) {\n                bytesNeeded = 1;\n                codePoint = octet & 0x1F;\n            } else if (octet <= 0xEF) {\n                bytesNeeded = 2;\n                codePoint = octet & 0x0F;\n            } else if (octet <= 0xF4) {\n                bytesNeeded = 3;\n                codePoint = octet & 0x07;\n            }\n            if (octets.length - i - bytesNeeded > 0) {\n                var k = 0;\n                while (k < bytesNeeded) {\n                    octet = octets[i + k + 1];\n                    codePoint = (codePoint << 6) | (octet & 0x3F);\n                    k += 1;\n                }\n            } else {\n                codePoint = 0xFFFD;\n                bytesNeeded = octets.length - i;\n            }\n            string += String.fromCodePoint(codePoint);\n            i += bytesNeeded + 1;\n        }\n        return string\n    }\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/** An implementation of an interval tree, following the explanation.\n * from CLR.\n *\n * Public interface:\n *   Constructor  IntervalTree\n *   Insertion    insert\n *   Search       findOverlapping\n */\n\n\n\nvar igv = (function (igv) {\n\n    var BLACK = 1;\n    var RED = 2;\n\n    var NIL = {}\n    NIL.color = BLACK;\n    NIL.parent = NIL;\n    NIL.left = NIL;\n    NIL.right = NIL;\n\n\n    igv.IntervalTree = function () {\n        this.root = NIL;\n    }\n\n\n    igv.IntervalTree.prototype.insert = function (start, end, value) {\n\n        var interval = new Interval(start, end, value);\n        var x = new Node(interval);\n        this.treeInsert(x);\n        x.color = RED;\n        while (x != this.root && x.parent.color == RED) {\n            if (x.parent == x.parent.parent.left) {\n                var y = x.parent.parent.right;\n                if (y.color == RED) {\n                    x.parent.color = BLACK;\n                    y.color = BLACK;\n                    x.parent.parent.color = RED;\n                    x = x.parent.parent;\n                } else {\n                    if (x == x.parent.right) {\n                        x = x.parent;\n                        leftRotate.call(this, x);\n                    }\n                    x.parent.color = BLACK;\n                    x.parent.parent.color = RED;\n                    rightRotate.call(this, x.parent.parent);\n                }\n            } else {\n                var y = x.parent.parent.left;\n                if (y.color == RED) {\n                    x.parent.color = BLACK;\n                    y.color = BLACK;\n                    x.parent.parent.color = RED;\n                    x = x.parent.parent;\n                } else {\n                    if (x == x.parent.left) {\n                        x = x.parent;\n                        rightRotate.call(this, x);\n                    }\n                    x.parent.color = BLACK;\n                    x.parent.parent.color = RED;\n                    leftRotate.call(this, x.parent.parent);\n                }\n            }\n        }\n        this.root.color = BLACK;\n    }\n\n\n    /**\n     *\n     * @param start - query interval\n     * @param end - query interval\n     * @returns Array of all intervals overlapping the query region\n     */\n    igv.IntervalTree.prototype.findOverlapping = function (start, end) {\n\n\n        var searchInterval = new Interval(start, end, 0);\n\n        if (this.root === NIL) return [];\n\n        var intervals = searchAll.call(this, searchInterval, this.root, []);\n\n        if(intervals.length > 1) {\n            intervals.sort(function(i1, i2) {\n                 return i1.low - i2.low;\n            });\n        }\n\n        return intervals;\n    }\n\n    /**\n     * Dump info on intervals to console.  For debugging.\n     */\n    igv.IntervalTree.prototype.logIntervals = function() {\n\n        logNode(this.root, 0);\n\n        function logNode(node, indent) {\n\n            var space = \"\";\n            for(var i=0; i<indent; i++) space += \" \";\n            console.log(space + node.interval.low + \" \" + node.interval.high); // + \" \" + (node.interval.value ? node.interval.value : \" null\"));\n\n            indent += 5;\n\n            if(node.left != NIL) logNode(node.left, indent);\n            if(node.right != NIL) logNode(node.right, indent);\n        }\n\n    }\n\n\n    igv.IntervalTree.prototype.mapIntervals = function(func) {\n\n        applyInterval(this.root);\n\n        function applyInterval(node) {\n\n            func(node.interval);\n\n            if(node.left != NIL) applyInterval(node.left);\n            if(node.right != NIL) applyInterval(node.right);\n        }\n    }\n\n    function searchAll(interval, node, results) {\n\n        if (node.interval.overlaps(interval)) {\n            results.push(node.interval);\n        }\n\n        if (node.left != NIL && node.left.max >= interval.low) {\n            searchAll.call(this, interval, node.left, results);\n        }\n\n        if (node.right != NIL && node.right.min <= interval.high) {\n            searchAll.call(this, interval, node.right, results);\n        }\n\n        return results;\n    }\n\n    function leftRotate(x) {\n        var y = x.right;\n        x.right = y.left;\n        if (y.left != NIL) {\n            y.left.parent = x;\n        }\n        y.parent = x.parent;\n        if (x.parent == NIL) {\n            this.root = y;\n        } else {\n            if (x.parent.left == x) {\n                x.parent.left = y;\n            } else {\n                x.parent.right = y;\n            }\n        }\n        y.left = x;\n        x.parent = y;\n\n        applyUpdate.call(this, x);\n        // no need to apply update on y, since it'll y is an ancestor\n        // of x, and will be touched by applyUpdate().\n    }\n\n\n    function rightRotate(x) {\n        var y = x.left;\n        x.left = y.right;\n        if (y.right != NIL) {\n            y.right.parent = x;\n        }\n        y.parent = x.parent;\n        if (x.parent == NIL) {\n            this.root = y;\n        } else {\n            if (x.parent.right == x) {\n                x.parent.right = y;\n            } else {\n                x.parent.left = y;\n            }\n        }\n        y.right = x;\n        x.parent = y;\n\n\n        applyUpdate.call(this, x);\n        // no need to apply update on y, since it'll y is an ancestor\n        // of x, and will be touched by applyUpdate().\n    }\n\n\n    /**\n     * Note:  Does not maintain RB constraints,  this is done post insert\n     *\n     * @param x  a Node\n     */\n    igv.IntervalTree.prototype.treeInsert = function (x) {\n        var node = this.root;\n        var y = NIL;\n        while (node != NIL) {\n            y = node;\n            if (x.interval.low <= node.interval.low) {\n                node = node.left;\n            } else {\n                node = node.right;\n            }\n        }\n        x.parent = y;\n\n        if (y == NIL) {\n            this.root = x;\n            x.left = x.right = NIL;\n        } else {\n            if (x.interval.low <= y.interval.low) {\n                y.left = x;\n            } else {\n                y.right = x;\n            }\n        }\n\n        applyUpdate.call(this, x);\n    }\n\n\n    // Applies the statistic update on the node and its ancestors.\n    function applyUpdate (node) {\n        while (node != NIL) {\n            var nodeMax = node.left.max > node.right.max ? node.left.max : node.right.max;\n            var intervalHigh = node.interval.high;\n            node.max = nodeMax > intervalHigh ? nodeMax : intervalHigh;\n\n            var nodeMin = node.left.min < node.right.min ? node.left.min : node.right.min;\n            var intervalLow = node.interval.low;\n            node.min = nodeMin < intervalLow ? nodeMin : intervalLow;\n\n            node = node.parent;\n        }\n    }\n\n\n    function Interval (low, high, value) {\n        this.low = low;\n        this.high = high;\n        this.value = value;\n    }\n\n\n    Interval.prototype.equals = function (other) {\n        if (!other) {\n            return false;\n        }\n        if (this == other) {\n            return true;\n        }\n        return (this.low == otherInterval.low &&\n            this.high == otherInterval.high);\n\n    }\n\n\n    Interval.prototype.compareTo = function (other) {\n        if (this.low < other.low)\n            return -1;\n        if (this.low > other.low)\n            return 1;\n\n        if (this.high < other.high)\n            return -1;\n        if (this.high > other.high)\n            return 1;\n\n        return 0;\n    }\n\n    /**\n     * Returns true if this interval overlaps the other.\n     */\n    Interval.prototype.overlaps = function (other) {\n        try {\n            return (this.low <= other.high && other.low <= this.high);\n        } catch (e) {\n            //alert(e);\n            igv.browser.presentAlert(e, undefined);\n        }\n    }\n\n    function Node(interval) {\n        this.parent = NIL;\n        this.left = NIL;\n        this.right = NIL;\n        this.interval = interval;\n        this.color = RED;\n    }\n\n\n\n//\n//\n//    function minimum(node) {\n//        while (node.left != NIL) {\n//            node = node.left;\n//        }\n//        return node;\n//    }\n//\n//\n//    function maximum(node) {\n//\n//        while (node.right != NIL) {\n//            node = node.right;\n//        }\n//        return node;\n//    }\n//\n//\n//    function successor(x) {\n//\n//        if (x.right != NIL) {\n//            return minimum(x.right);\n//        }\n//        var y = x.parent;\n//        while (y != NIL && x == y.right) {\n//            x = y;\n//            y = y.parent;\n//        }\n//        return y;\n//    }\n//\n//\n//    function predecessor(x) {\n//        if (x.left != NIL) {\n//            return maximum(x.left);\n//        }\n//        var y = x.parent;\n//        while (y != NIL && x == y.left) {\n//            x = y;\n//            y = y.parent;\n//        }\n//        return y;\n//    }\n//\n//\n//\n//    igv.IntervalTree.prototype.allRedNodesFollowConstraints = function (node) {\n//        if (node == NIL)\n//            return true;\n//\n//        if (node.color == BLACK) {\n//            return (this.allRedNodesFollowConstraints(node.left) &&\n//                this.allRedNodesFollowConstraints(node.right));\n//        }\n//\n//        // At this point, we know we're on a RED node.\n//        return (node.left.color == BLACK &&\n//            node.right.color == BLACK &&\n//            this.allRedNodesFollowConstraints(node.left) &&\n//            this.allRedNodesFollowConstraints(node.right));\n//    }\n//\n//\n//    // Check that both ends are equally balanced in terms of black height.\n//    igv.IntervalTree.prototype.isBalancedBlackHeight = function (node) {\n//        if (node == NIL)\n//            return true;\n//        return (blackHeight(node.left) == blackHeight(node.right) &&\n//            this.isBalancedBlackHeight(node.left) &&\n//            this.isBalancedBlackHeight(node.right));\n//    }\n//\n//\n//    // The black height of a node should be left/right equal.\n//    igv.IntervalTree.prototype.blackHeight = function (node) {\n//        if (node == NIL)\n//            return 0;\n//        var leftBlackHeight = blackHeight(node.left);\n//        if (node.color == BLACK) {\n//            return leftBlackHeight + 1;\n//        } else {\n//            return leftBlackHeight;\n//        }\n//    }\n\n\n    /**\n     * Test code: make sure that the tree has all the properties\n     * defined by Red Black trees and interval trees\n     * <p/>\n     * o.  Root is black.\n     * <p/>\n     * o.  NIL is black.\n     * <p/>\n     * o.  Red nodes have black children.\n     * <p/>\n     * o.  Every path from root to leaves contains the same number of\n     * black nodes.\n     * <p/>\n     * o.  getMax(node) is the maximum of any interval rooted at that node..\n     * <p/>\n     * This code is expensive, and only meant to be used for\n     * assertions and testing.\n     */\n//\n//    igv.IntervalTree.prototype.isValid = function () {\n//        if (this.root.color != BLACK) {\n//            logger.warn(\"root color is wrong\");\n//            return false;\n//        }\n//        if (NIL.color != BLACK) {\n//            logger.warn(\"NIL color is wrong\");\n//            return false;\n//        }\n//        if (allRedNodesFollowConstraints(this.root) == false) {\n//            logger.warn(\"red node doesn't follow constraints\");\n//            return false;\n//        }\n//        if (isBalancedBlackHeight(this.root) == false) {\n//            logger.warn(\"black height unbalanced\");\n//            return false;\n//        }\n//\n//        return hasCorrectMaxFields(this.root) &&\n//            hasCorrectMinFields(this.root);\n//    }\n//\n//\n//    igv.IntervalTree.prototype.hasCorrectMaxFields = function (node) {\n//        if (node == NIL)\n//            return true;\n//        return (getRealMax(node) == (node.max) &&\n//            this.hasCorrectMaxFields(node.left) &&\n//            this.hasCorrectMaxFields(node.right));\n//    }\n//\n//\n//    igv.IntervalTree.prototype.hasCorrectMinFields = function (node) {\n//        if (node == NIL)\n//            return true;\n//        return (getRealMin(node) == (node.min) &&\n//            this.hasCorrectMinFields(node.left) &&\n//            this.hasCorrectMinFields(node.right));\n//    }\n\n    return igv;\n\n})(igv || {});\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar igv = (function (igv) {\n\n    igv.NavbarManager = function (browser) {\n        this.browser = browser;\n    };\n\n    igv.NavbarManager.prototype.navbarDidResize = function (width, isWholeGenomeView) {\n        updateNavbar.call(this, createResponsiveClassSchedule.call(this, width, isWholeGenomeView));\n    };\n\n    function updateNavbar (responsiveClassSchedule) {\n\n        this.browser[ '$toggle_button_container' ].removeClass();\n        this.browser[ '$toggle_button_container' ].addClass(responsiveClassSchedule[ '$toggle_button_container' ]);\n\n        this.browser.zoomWidget[ '$zoomContainer' ].removeClass();\n        this.browser.zoomWidget[ '$zoomContainer' ].addClass(responsiveClassSchedule[ '$zoomContainer' ]);\n    }\n\n    function createResponsiveClassSchedule(navbarWidth, isWholeGenomeView) {\n\n        let candidates = {};\n\n        if (isWholeGenomeView) {\n            this.browser.windowSizePanel.hide();\n        } else {\n            this.browser.windowSizePanel.show();\n        }\n\n        if (navbarWidth > 990) {\n            candidates['$toggle_button_container'] = 'igv-nav-bar-toggle-button-container';\n            candidates['$zoomContainer'] = 'igv-zoom-widget';\n        } else if (navbarWidth > 860) {\n            candidates['$toggle_button_container'] = 'igv-nav-bar-toggle-button-container';\n            candidates['$zoomContainer'] = 'igv-zoom-widget-900';\n        } else if (navbarWidth > 540) {\n            candidates['$toggle_button_container'] = 'igv-nav-bar-toggle-button-container-750';\n            candidates['$zoomContainer'] = 'igv-zoom-widget-900';\n        } else {\n            candidates['$toggle_button_container'] = 'igv-nav-bar-toggle-button-container-750';\n            candidates['$zoomContainer'] = 'igv-zoom-widget-900';\n            this.browser.windowSizePanel.hide();\n        }\n\n        if (isWholeGenomeView) {\n            candidates['$zoomContainer'] = 'igv-zoom-widget-hidden';\n        }\n\n        return candidates;\n    }\n\n    return igv;\n\n})(igv || {});\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2015 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n\n    igv.oauth = {\n\n        oauthTokens: {},\n\n        setToken: function (token, host) {\n\n            if (!host) {\n                this.google.access_token = token;\n            } else {\n                this.oauthTokens[host] = token;\n            }\n\n        },\n\n        getToken: function (host) {\n\n            let token;\n\n            if (!host) {\n                token = this.google.access_token;\n            } else {\n                for (let key in this.oauthTokens) {\n                    const regex = wildcardToRegExp(key);\n                    if (regex.test(host)) {\n                        token = this.oauthTokens[key];\n                        break;\n                    }\n                }\n            }\n\n            return token;\n\n        },\n\n        removeToken: function (host) {\n\n            if (!host) {\n                delete igv.oauth.google[\"access_token\"];\n            }\n            else {\n                delete this.oauthTokens[host];\n\n            }\n        },\n\n        // Special object for google -- legacy support\n        google: {\n            setToken: function(token) {\n                this.access_token = token;\n            }\n        }\n    };\n\n\n    /**\n     * @deprecated - use igv.oauth.google.setToken\n     *\n     * @param token\n     */\n    igv.setGoogleOauthToken = function (token) {\n        igv.oauth.google.access_token = token;\n    }\n\n\n    /**\n     * Creates a RegExp from the given string, converting asterisks to .* expressions,\n     * and escaping all other characters.\n     *\n     * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n     */\n    function wildcardToRegExp(s) {\n        return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n    }\n\n    /**\n     * RegExp-escapes all characters in the given string.\n     *\n     * credit https://gist.github.com/donmccurdy/6d073ce2c6f3951312dfa45da14a420f\n     */\n    function regExpEscape(s) {\n        return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n    }\n\n    return igv;\n\n})(igv || {});\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by turner on 2/17/14.\n */\nvar igv = (function (igv) {\n\n    igv.isBlank = function (line) {\n\n        var meh = line.match(/\\S+/g);\n        return !meh;\n    };\n\n    igv.isComment = function (line) {\n\n        var index = line.indexOf(\"#\");\n        return 0 == index;\n    };\n\n\n    /**\n     * Parse the document url query string for the entered parameter.\n     *\n     * @param name\n     * @returns {*}\n     */\n    igv.getQueryValue = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\\\[\").replace(/[\\]]/, \"\\\\\\]\");\n        var regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n        var regex = new RegExp(regexS);\n        var results = regex.exec(window.location.href);\n        if (results == null)\n            return undefined;\n        else\n            return results[1];\n    };\n\n\n\n\n    return igv;\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n// Reference frame classes.  Converts domain coordinates (usually genomic) to pixel coordinates\n\nvar igv = (function (igv) {\n\n\n    igv.ReferenceFrame = function (genome, chrName, start, end, bpPerPixel) {\n        this.genome = genome;\n        this.chrName = chrName;\n        this.start = start;\n        this.initialEnd = end;                 // TODO WARNING THIS IS NOT UPDATED !!!\n        this.bpPerPixel = bpPerPixel;\n    };\n\n    igv.ReferenceFrame.prototype.calculateEnd = function (pixels) {\n        return this.start + this.bpPerPixel * pixels;\n    };\n\n    igv.ReferenceFrame.prototype.calculateBPP = function (end, pixels) {\n        return (end - this.start) / pixels;\n    };\n\n    igv.ReferenceFrame.prototype.set = function (json) {\n        this.chrName = json.chrName;\n        this.start = json.start;\n        this.bpPerPixel = json.bpPerPixel;\n    };\n\n    igv.ReferenceFrame.prototype.toPixels = function (bp) {\n        return bp / this.bpPerPixel;\n    };\n\n    igv.ReferenceFrame.prototype.toBP = function (pixels) {\n        return this.bpPerPixel * pixels;\n    };\n\n    igv.ReferenceFrame.prototype.shiftPixels = function (pixels, viewportWidth) {\n\n        this.start += pixels * this.bpPerPixel;\n        this.clamp(viewportWidth);\n\n    };\n\n    igv.ReferenceFrame.prototype.clamp = function (viewportWidth) {\n        // clamp left\n        const min = this.genome.getChromosome(this.chrName).bpStart || 0\n        this.start = Math.max(min, this.start);\n\n        // clamp right\n        if (viewportWidth) {\n\n            var chromosome = this.genome.getChromosome(this.chrName);\n            var maxEnd = chromosome.bpLength;\n            var maxStart = maxEnd - (viewportWidth * this.bpPerPixel);\n\n            if (this.start > maxStart) {\n                this.start = maxStart;\n            }\n        }\n    }\n\n    igv.ReferenceFrame.prototype.getChromosome = function () {\n        return this.genome.getChromosome(this.chrName)\n    }\n\n    igv.ReferenceFrame.prototype.showLocus = function (pixels) {\n\n        if ('all' === this.chrName.toLowerCase()) {\n            return this.chrName.toLowerCase();\n        } else {\n            const ss = igv.numberFormatter(Math.floor(this.start) + 1);\n            const ee = igv.numberFormatter(Math.round(this.start + this.bpPerPixel * pixels));\n            return this.chrName + ':' + ss + '-' + ee;\n        }\n    };\n\n    igv.ReferenceFrame.prototype.description = function () {\n        return \"ReferenceFrame \" + this.chrName + \" \" + igv.numberFormatter(Math.floor(this.start)) + \" bpp \" + this.bpPerPixel;\n    };\n\n\n    return igv;\n\n})(igv || {});\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    let RnaStructTrack;\n\n    igv.trackFactory[\"arc\"] = function (config, browser) {\n\n        if (!RnaStructTrack) {\n            defineClass();\n        }\n\n        return new RnaStructTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        RnaStructTrack = igv.extend(igv.TrackBase,\n\n            function (config, browser) {\n\n                igv.TrackBase.call(this, config, browser);\n\n                // Set defaults\n                if (!config.height) {\n                    this.height = 300;\n                }\n\n                this.arcOrientation = false;\n\n                this.theta = Math.PI / 2;\n\n                if (\"bp\" === config.format) {\n                    this.featureSource = new FeatureSource(config, browser.genome);\n                }\n                else {\n                    this.featureSource = new igv.FeatureSource(config, browser.genome);\n                }\n            });\n\n        RnaStructTrack.prototype.getFeatures = function (chr, start, end) {\n\n            return this.featureSource.getFeatures(chr, start, end);\n\n        }\n\n        RnaStructTrack.prototype.draw = function (options) {\n\n            const self = this;\n\n            const theta = Math.PI / 2;\n\n            const ctx = options.context;\n            const pixelWidth = options.pixelWidth;\n            const pixelHeight = options.pixelHeight;\n            const viewportWidth = options.viewportWidth;\n            const bpPerPixel = options.bpPerPixel;\n            const bpStart = options.bpStart;\n            const xScale = bpPerPixel;\n            const orienation = self.arcOrientation;\n\n            igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n            const featureList = options.features;\n\n            if (featureList) {\n\n                // Sort by score -- draw lowest scored features first\n                sortByScore(featureList, 1);\n\n                featureList.forEach(function (feature) {\n\n                    if (feature.startLeft) {\n\n                        let sl = Math.round((feature.startLeft - bpStart) / xScale);\n                        let sr = Math.round((feature.startRight - bpStart) / xScale);\n                        let el = Math.round((feature.endLeft - bpStart) / xScale);\n                        let er = Math.round((feature.endRight - bpStart) / xScale);\n\n                        ctx.fillStyle = feature.color;\n                        ctx.strokeStyle = feature.color;\n                        ctx.beginPath();\n\n                        // First arc\n                        let x1 = (sl + er) / 2;\n                        let r1 = (er - sl) / 2;\n                        let y1 = self.height;\n                        let sa = Math.PI + (Math.PI / 2 - theta);\n                        let ea = 2 * Math.PI - (Math.PI / 2 - theta);\n\n                        if (orienation) {\n                            y1 = 0\n                            ctx.arc(x1, y1, r1, ea, sa);\n                            ctx.lineTo(er, y1);\n                        } else {\n                            ctx.arc(x1, y1, r1, sa, ea);\n                            ctx.lineTo(el, y1);\n                        }\n\n                        // Second arc\n                        const x2 = (sr + el) / 2;\n                        const r2 = (el - sr) / 2;\n                        const y2 = y1;                        // Only for theta == pi/2\n\n                        if (orienation) {\n                            ctx.arc(x2, y2, r2, sa, ea, true);\n                            ctx.lineTo(el, y2);\n                        } else {\n                            ctx.arc(x2, y2, r2, ea, sa, true);\n                            ctx.lineTo(sl, y2);\n                        }\n\n                        ctx.stroke();\n                        ctx.fill();\n\n                        feature.drawState = {x1: x1, y1: y1, r1: r1, x2: x2, y2: y2, r2: r2, sa: sa, ea: ea};\n                    }\n                    else {\n                        let s = Math.round((feature.start - bpStart) / xScale);\n                        let e = Math.round((feature.end - bpStart) / xScale);\n\n                        ctx.strokeStyle = feature.color;\n\n                        ctx.beginPath();\n\n                        // First arc\n                        let x = (s + e) / 2;\n                        let r = (e - s) / 2;\n                        let y = self.height;\n                        let sa = Math.PI + (Math.PI / 2 - theta);\n                        let ea = 2 * Math.PI - (Math.PI / 2 - theta);\n\n                        if (orienation) {\n                            y = 0\n                            ctx.arc(x, y, r, ea, sa);\n                        } else {\n                            ctx.arc(x, y, r, sa, ea);\n                        }\n\n                        ctx.stroke();\n\n                        feature.drawState = {x1: x, y1: y, r1: r, sa: sa, ea: ea};\n\n                    }\n\n                })\n            }\n        }\n\n        RnaStructTrack.prototype.popupData = function (clickState) {\n\n            // We use the featureCache property rather than method to avoid async load.  If the\n            // feature is not already loaded this won't work,  but the user wouldn't be mousing over it either.\n\n            let features = this.clickedFeatures(clickState);\n\n            if (features && features.length > 0) {\n\n                // Sort by score in descending order   (opposite order than drawn)\n                sortByScore(features, -1);\n\n                let clicked;\n                for (let f of features) {\n                    const ds = f.drawState;\n\n                    // Distance from arc radius, or outer arc for type \".bp\"\n                    const dx1 = (clickState.canvasX - ds.x1);\n                    const dy1 = (clickState.canvasY - ds.y1);\n                    const d1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n                    const outerLim = ds.r1 + 3;\n\n\n                    let d2;\n                    let innerLim\n                    if (ds.x2 === undefined) {\n                        d2 = d1;\n                        innerLim = ds.r1 - 3;\n\n                    } else {\n                        const dx2 = (clickState.canvasX - ds.x2);\n                        const dy2 = (clickState.canvasY - ds.y2);\n                        d2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n                        innerLim = ds.r2 - 3;\n                    }\n\n\n                    // Between outer and inner arcs, with some tolerance\n                    if (d1 < outerLim && d2 > innerLim) {\n                        clicked = f;\n                        break;\n                    }\n\n                }\n\n                return this.extractPopupData(clicked);\n\n            }\n        }\n\n        RnaStructTrack.prototype.menuItemList = function () {\n\n            var self = this;\n\n            return [\n                {\n                    name: \"Toggle arc direction\",\n                    click: function () {\n                        self.arcOrientation = !self.arcOrientation;\n                        self.trackView.repaintViews();\n                    }\n                }\n            ];\n\n        };\n\n        /**\n         * Return the current state of the track.  Used to create sessions and bookmarks.\n         *\n         * @returns {*|{}}\n         */\n        RnaStructTrack.prototype.getState = function () {\n\n            var config = this._super.getState.call(this)\n\n            config.arcOrientation = this.arcOrientation;\n            config.thickness = this.thickness;\n            config.color = this.color;\n            return config;\n\n        }\n\n\n        function sortByScore(featureList, direction) {\n\n            featureList.sort(function (a, b) {\n\n                const s1 = a.score === undefined ? -Number.MAX_VALUE : a.score;\n                const s2 = b.score === undefined ? -Number.MAX_VALUE : b.score;\n                const t = s1 - s2;\n                const d = direction === undefined ? 1 : direction;\n\n                return d * (s1 - s2);\n\n\n\n            });\n\n        }\n\n\n    }\n\n\n    function FeatureSource(config, genome) {\n\n        this.config = config;\n        this.genome = genome;\n    }\n\n    FeatureSource.prototype.getFeatures = function (chr, start, end) {\n\n        const self = this;\n        const genome = this.genome;\n\n        if (!this.featureCache) {\n\n            const options = igv.buildOptions(this.config);\n\n            return igv.xhr.loadString(self.config.url, options)\n\n                .then(function (data) {\n\n                    self.featureCache = new igv.FeatureCache(parseBP(data), genome);\n\n                    return self.featureCache.queryFeatures(chr, start, end);\n\n                });\n\n        }\n        else {\n            return Promise.resolve(self.featureCache.queryFeatures(chr, start, end));\n        }\n\n\n        function parseBP(data) {\n\n            if (!data) return null;\n\n            const dataWrapper = igv.getDataWrapper(data);\n\n            let header = true;\n            let line;\n            const colors = [];\n            const descriptors = [];\n            const features = [];\n\n            while (line = dataWrapper.nextLine()) {\n\n                const tokens = line.split('\\t');\n\n                if (header && line.startsWith(\"color:\")) {\n                    const color = \"rgb(\" + tokens[1] + \",\" + tokens[2] + \",\" + tokens[3] + \")\";\n                    colors.push(color);\n                    if (tokens.length > 4) {\n                        descriptors.push(tokens[4]);\n                    }\n                    // TODO - use label\n                }\n                else {\n                    header = false;\n\n                    const chr = tokens[0];\n                    const startLeftNuc = Number.parseInt(tokens[1]) - 1;\n                    const startRightNuc = Number.parseInt(tokens[2]) - 1;\n                    const endLeftNuc = Number.parseInt(tokens[3]);\n                    const endRightNuc = Number.parseInt(tokens[4]);\n                    var colorIdx = Number.parseInt(tokens[5]);\n                    const color = colors[colorIdx];\n\n\n                    let feature;\n                    if (startLeftNuc <= endRightNuc) {\n                        feature = {\n                            chr: chr,\n                            startLeft: Math.min(startLeftNuc, startRightNuc),\n                            startRight: Math.max(startLeftNuc, startRightNuc),\n                            endLeft: Math.min(endLeftNuc, endRightNuc),\n                            endRight: Math.max(endLeftNuc, endRightNuc),\n                            color: color,\n                            score: colorIdx\n                        }\n                    } else {\n                        feature = {\n                            chr: chr,\n                            startLeft: Math.min(endLeftNuc, endRightNuc),\n                            startRight: Math.max(endLeftNuc, endRightNuc),\n                            endLeft: Math.min(startLeftNuc, startRightNuc),\n                            endRight: Math.max(startLeftNuc, startRightNuc),\n                            color: color,\n                            score: colorIdx\n                        }\n                    }\n\n                    feature.start = feature.startLeft;\n                    feature.end = feature.endRight;\n\n                    if (descriptors.length > colorIdx) {\n                        feature.description = descriptors[colorIdx];\n                    }\n\n                    features.push(feature);\n                }\n            }\n\n            return features;\n        }\n    }\n\n    return igv;\n\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    var defaultHighlightColor = \"rgba(68, 134, 247, 0.25)\";\n\n    igv.ROI = function (config, genome) {\n        this.config = config;\n        this.name = config.name;\n        this.roiSource = new igv.FeatureSource(config, genome);\n        this.color = config.color || defaultHighlightColor;\n    };\n\n    igv.ROI.prototype.getFeatures = function (chr, start, end) {\n\n        return this.roiSource.getFeatures(chr, start, end);\n    };\n\n    igv.ROI.prototype.draw = function (drawConfiguration) {\n\n        var endBP,\n            region,\n            coord,\n            regions,\n            len;\n\n        regions = drawConfiguration.features;\n        if (!regions) {\n            return;\n        }\n\n        endBP = drawConfiguration.bpStart + (drawConfiguration.pixelWidth * drawConfiguration.bpPerPixel + 1);\n        for (var i = 0, len = regions.length; i < len; i++) {\n\n            region = regions[ i ];\n            if (region.end < drawConfiguration.bpStart) {\n                continue;\n            }\n\n            if (region.start > endBP) {\n                break;\n            }\n\n            coord = coordinates(region, drawConfiguration.bpStart, drawConfiguration.bpPerPixel);\n            igv.graphics.fillRect(drawConfiguration.context, coord.x, 0, coord.width, drawConfiguration.pixelHeight, { fillStyle: this.color });\n        }\n\n\n    };\n\n    function coordinates(region, startBP, bpp) {\n\n        var ss,\n            ee,\n            width;\n\n        ss = Math.round((region.start - startBP) / bpp);\n        ee = Math.round((region.end - startBP) / bpp);\n        width = ee - ss;\n\n        if (width < 3) {\n            width = 3;\n            ss -= 1;\n        }\n\n        return { x: ss, width: width };\n    }\n\n    return igv;\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2015 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    /**\n     * feature source for \"bed like\" files (tab delimited files with 1 feature per line: bed, gff, vcf, etc)\n     *\n     * @param config\n     * @constructor\n     */\n    igv.ROISource = function (config) {\n        this.config = config || {};\n        this.sourceType = (config.sourceType === undefined ? \"file\" : config.sourceType);\n        this.reader = new igv.FeatureFileReader(config);\n    };\n\n    igv.ROISource.prototype.getRegions = function (chr, bpStart, bpEnd) {\n\n        var self = this;\n        return new Promise(function (fulfill, reject) {\n\n            var genomicInterval;\n\n            genomicInterval = new igv.GenomicInterval(chr, bpStart, bpEnd);\n\n            self.reader\n                .readFeatures(chr, genomicInterval.start, genomicInterval.end)\n                .then(function (features) {\n                    fulfill(features)\n                })\n                .catch(reject);\n        });\n    };\n\n\n    return igv;\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar igv = (function (igv) {\n\n    igv.RulerSweeper = function (viewport) {\n\n        var guid;\n\n        this.viewport = viewport;\n        this.browser = viewport.browser;\n\n        this.$rulerSweeper = $('<div class=\"igv-ruler-sweeper-div\">');\n        $(viewport.contentDiv).append(this.$rulerSweeper);\n\n        guid = igv.guid();\n        this.namespace = '.sweeper_' + guid;\n\n        this.addMouseHandlers();\n    };\n\n    igv.RulerSweeper.prototype.disableMouseHandlers = function () {\n\n        $(document).off(this.namespace);\n        this.viewport.$viewport.off(this.namespace);\n    };\n\n    igv.RulerSweeper.prototype.addMouseHandlers = function () {\n\n        const browser = this.browser;\n        const self = this;\n\n        var isMouseDown,\n            isMouseIn,\n            mouseDown,\n            left,\n            threshold,\n            width,\n            dx;\n\n        this.disableMouseHandlers();\n\n        isMouseDown = isMouseIn = mouseDown = undefined;\n\n        threshold = 1;\n\n        $(this.browser.$root).on('mousedown' + this.namespace, function (e) {\n\n            isMouseIn = true;\n\n            mouseDown = igv.translateMouseCoordinates(e, self.viewport.$viewport).x;\n\n            if (true === isMouseDown ) {\n\n                self.$rulerSweeper.show();\n\n                width = threshold;\n                left = mouseDown;\n                self.$rulerSweeper.css({ left: left + 'px' });\n                self.$rulerSweeper.width(width);\n\n            }\n\n        });\n\n        $(this.browser.$root).on('mousemove' + this.namespace, function (e) {\n            var mouseCurrent;\n\n            if (isMouseDown && isMouseIn) {\n\n                mouseCurrent = igv.translateMouseCoordinates(e, self.viewport.$viewport).x;\n                mouseCurrent = Math.min(mouseCurrent, self.viewport.$viewport.width());\n                mouseCurrent = Math.max(mouseCurrent, 0);\n\n                dx = mouseCurrent - mouseDown;\n\n                width = Math.abs(dx);\n                self.$rulerSweeper.width(width);\n\n                if (dx < 0) {\n                    left = mouseDown + dx;\n                    self.$rulerSweeper.css({ left: left + 'px' });\n                }\n\n            }\n\n        });\n\n        $(this.browser.$root).on('mouseup' + this.namespace, function (e) {\n\n            let extent;\n\n            if (true === isMouseDown && true === isMouseIn) {\n\n                isMouseDown = isMouseIn = undefined;\n\n                self.$rulerSweeper.hide();\n\n                extent = {};\n                extent.start = bp.call(self, left);\n                extent.end   = bp.call(self, left + width);\n\n                if (width > threshold) {\n\n                    igv.Browser.validateLocusExtent(browser.genome.getChromosome(self.viewport.genomicState.referenceFrame.chrName).bpLength, extent, browser.minimumBases());\n\n                    self.viewport.genomicState.referenceFrame.bpPerPixel = (Math.round(extent.end) - Math.round(extent.start)) / self.viewport.$viewport.width();\n                    self.viewport.genomicState.referenceFrame.start = Math.round(extent.start);\n\n                    browser.updateViews(self.viewport.genomicState);\n                }\n\n            }\n\n        });\n\n        this.viewport.$viewport.on('mousedown' + this.namespace, function (e) {\n\n            isMouseDown = true;\n        });\n\n    };\n\n    igv.RulerSweeper.prototype.dispose = function () {\n        this.disableMouseHandlers();\n    };\n\n\n    function bp(pixel) {\n        return this.viewport.genomicState.referenceFrame.start + (pixel * this.viewport.genomicState.referenceFrame.bpPerPixel);\n    }\n\n\n\n    return igv;\n\n}) (igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    igv.RulerTrack = function (browser) {\n\n        this.browser = browser;\n        this.height = 40;\n        this.name = \"\";\n        this.id = \"ruler\";\n        this.disableButtons = true;\n        this.ignoreTrackMenu = true;\n        this.order = -Number.MAX_VALUE;\n        this.removable = false;\n        this.type = 'ruler';\n\n    };\n\n    igv.RulerTrack.prototype.updateLocusLabel = function () {\n        var self = this;\n\n        this.trackView.viewports.forEach(function (viewport) {\n            var str;\n            str = viewport.genomicState.referenceFrame.showLocus(viewport.$viewport.width());\n\n            // console.log('ruler update label - viewport ' + viewport.id + ' ' + str);\n            viewport.$rulerLabel.text(str);\n        });\n\n    };\n\n    igv.RulerTrack.prototype.appendMultiPanelCloseButton = function ($viewport, genomicState) {\n\n        const browser = this.browser;\n\n        var $close,\n            $closeButton;\n\n        $viewport.addClass('igv-viewport-ruler');\n\n        $close = $('<div class=\"igv-multi-locus-panel-close-container\">');\n        $viewport.append($close);\n\n        $close.append(igv.createIcon(\"times-circle\"));\n\n        $close.click(function (e) {\n            browser.removeMultiLocusPanelWithGenomicState(genomicState, true);\n        });\n\n    };\n\n    igv.RulerTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\n        return Promise.resolve([]);\n\n    };\n\n    igv.RulerTrack.prototype.computePixelHeight = function (ignore) {\n        return this.height;\n    };\n\n    igv.RulerTrack.prototype.draw = function (options) {\n\n        if (igv.isWholeGenomeView(options.referenceFrame)) {\n\n            options.viewport.rulerSweeper.disableMouseHandlers();\n\n            drawWholeGenome.call(this, options);\n\n        } else {\n\n            options.viewport.rulerSweeper.addMouseHandlers();\n\n            const tickHeight = 6;\n            const shim = 2;\n            const pixelWidthBP = 1 + Math.floor(options.referenceFrame.toBP(options.pixelWidth));\n            const tick = new Tick(pixelWidthBP, options);\n\n            tick.drawTicks(options, tickHeight, shim, this.height);\n            igv.graphics.strokeLine(options.context, 0, this.height - shim, options.pixelWidth, this.height - shim);\n\n        }\n\n    };\n\n    function drawWholeGenome(options) {\n\n        options.context.save();\n\n        igv.graphics.fillRect(options.context, 0, 0, options.pixelWidth, options.pixelHeight, { 'fillStyle' : 'white' });\n\n        let y = 0;\n        let h = options.pixelHeight;\n\n        for (let name of this.browser.genome.wgChromosomeNames) {\n\n            let xBP = this.browser.genome.getCumulativeOffset(name);\n            let wBP = this.browser.genome.getChromosome(name).bpLength;\n\n            let x = Math.round(xBP / options.bpPerPixel);\n            let w = Math.round(wBP / options.bpPerPixel);\n\n            renderChromosomeRect.call(this, options.context, x, y, w, h, name);\n        }\n\n        options.context.restore();\n\n    }\n\n    function renderChromosomeRect(ctx, x, y, w, h, name) {\n\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.font = '12px sans-serif';\n\n        // igv.graphics.fillRect(ctx, x, y, w, h, { 'fillStyle' : toggleColor(this.browser.genome.wgChromosomeNames.indexOf(name)) });\n\n        igv.graphics.strokeLine(ctx, x + w, y, x + w, y + h, { strokeStyle: igv.Color.greyScale(191) });\n\n        const shortName = (name.startsWith(\"chr\")) ? name.substring(3) : name;\n\n        if (w > ctx.measureText(shortName).width) {\n            igv.graphics.fillText(ctx, shortName, (x + (w/2)), (y + (h/2)), { fillStyle: igv.Color.greyScale(68) });\n        }\n\n    }\n\n    function toggleColor (value) {\n        return 0 === value % 2 ? 'rgb(250,250,250)' : 'rgb(255,255,255)';\n    }\n\n    igv.RulerTrack.prototype.supportsWholeGenome = function () {\n        return true;\n    };\n\n    igv.RulerTrack.prototype.dispose = function () {\n        // do stuff\n    };\n\n    const Tick = function (pixelWidthBP, options) {\n\n        initialize.call(this, pixelWidthBP, options);\n\n        function initialize(pixelWidthBP, options) {\n\n            var numberOfZeroes,\n                majorUnit,\n                unitMultiplier,\n                numberOfMajorTicks,\n                str;\n\n            const isSVGContext = options.context.isSVG || false;\n\n            if (pixelWidthBP < 10) {\n                set.call(this, 1, \"bp\", 1, isSVGContext);\n            }\n\n            numberOfZeroes = Math.floor(Math.log10(pixelWidthBP));\n\n            if (numberOfZeroes > 9) {\n                majorUnit = \"gb\";\n                unitMultiplier = 1e9;\n            } else if (numberOfZeroes > 6) {\n                majorUnit = \"mb\";\n                unitMultiplier = 1e6;\n            } else if (numberOfZeroes > 3) {\n                majorUnit = \"kb\";\n                unitMultiplier = 1e3;\n            } else {\n                majorUnit = \"bp\";\n                unitMultiplier = 1;\n            }\n\n            str = igv.numberFormatter(Math.floor(pixelWidthBP / unitMultiplier)) + \" \" + majorUnit;\n            this.labelWidthBP = Math.round(options.referenceFrame.toBP(options.context.measureText(str).width));\n\n            numberOfMajorTicks = pixelWidthBP / Math.pow(10, numberOfZeroes - 1);\n\n            if (numberOfMajorTicks < 25) {\n                set.call(this, Math.pow(10, numberOfZeroes - 1), majorUnit, unitMultiplier, isSVGContext);\n            } else {\n                set.call(this, Math.pow(10, numberOfZeroes) / 2, majorUnit, unitMultiplier, isSVGContext);\n            }\n\n        }\n\n        function set(majorTick, majorUnit, unitMultiplier, isSVGContext) {\n\n            // reduce label frequency by half for SVG rendering\n            this.majorTick = true === isSVGContext ? 2 * majorTick : majorTick;\n            this.majorUnit = majorUnit;\n\n            this.halfTick = majorTick / 2;\n\n            this.unitMultiplier = unitMultiplier;\n        }\n\n    };\n\n    Tick.prototype.drawTicks = function (options, tickHeight, shim, height) {\n\n        var numberOfTicks,\n            bp,\n            pixel,\n            label,\n            labelWidth,\n            labelX,\n            numer,\n            floored;\n\n\n        numberOfTicks = Math.floor(options.bpStart / this.majorTick) - 1;\n        labelWidth = 0;\n        labelX = 0;\n        pixel = 0;\n        while (pixel < options.pixelWidth) {\n\n            bp = Math.floor(numberOfTicks * this.majorTick);\n            pixel = Math.round(options.referenceFrame.toPixels((bp - 1) - options.bpStart + 0.5));\n\n            label = igv.numberFormatter(Math.floor(bp / this.unitMultiplier)) + \" \" + this.majorUnit;\n            labelWidth = options.context.measureText(label).width;\n\n            labelX = Math.round(pixel - labelWidth / 2);\n\n            igv.graphics.fillText(options.context, label, labelX, height - (tickHeight / 0.75));\n            igv.graphics.strokeLine(options.context, pixel, height - tickHeight, pixel, height - shim);\n\n            ++numberOfTicks;\n        }\n\n        numberOfTicks = Math.floor(options.bpStart / this.halfTick) - 1;\n        pixel = 0;\n        while (pixel < options.pixelWidth) {\n\n            bp = Math.floor(numberOfTicks * this.halfTick);\n            pixel = Math.round(options.referenceFrame.toPixels((bp - 1) - options.bpStart + 0.5));\n            numer = bp / this.unitMultiplier;\n            floored = Math.floor(numer);\n\n            if (numer === floored && (this.majorTick / this.labelWidthBP) > 8) {\n                label = igv.numberFormatter(Math.floor(numer)) + \" \" + this.majorUnit;\n                labelWidth = options.context.measureText(label).width;\n                labelX = pixel - labelWidth / 2;\n                igv.graphics.fillText(options.context, label, labelX, height - (tickHeight / 0.75));\n            }\n\n            igv.graphics.strokeLine(options.context, pixel, height - tickHeight, pixel, height - shim);\n\n            ++numberOfTicks;\n        }\n\n\n    };\n\n    Tick.prototype.description = function (blurb) {\n        console.log((blurb || '') + ' tick ' + igv.numberFormatter(this.majorTick) + ' label width ' + igv.numberFormatter(this.labelWidthBP) + ' multiplier ' + this.unitMultiplier);\n    };\n\n    return igv;\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014-2015 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for module definition.  This code should be last in the concatenated \"igv.js\" file.\n *\n */\n\nvar igv = (function (igv) {\n\n\n    var SampleInformation = function () {\n        this.attributes = {};\n        this.plinkLoaded = false;\n    };\n\n    SampleInformation.prototype.loadPlinkFile = function (url, config) {\n\n        var self = this;\n\n        if (!config) config = {};\n\n        return new Promise(function (fulfill, reject) {\n\n            var options = igv.buildOptions(config);    // Add oauth token, if any\n\n            igv.xhr\n                .loadString(url, options)\n\n                .then(function (data) {\n\n                    var lines = igv.splitLines(data);\n\n                    lines.forEach(function (line) {\n                        var line_arr = line.split(' ');\n                        self.attributes[line_arr[1]] = {\n                            familyId: line_arr[0],\n                            fatherId: line_arr[2],\n                            motherId: line_arr[3],\n                            sex: line_arr[4],\n                            phenotype: line_arr[5]\n                        }\n                    });\n                    self.plinkLoaded = true;\n                    fulfill(self.attributes);\n\n                })\n\n                .catch(reject);\n\n        });\n\n    };\n\n    /**\n     * Return the attributes for the given sample as a map-like object (key-value pairs)\n     * @param sample\n     */\n    SampleInformation.prototype.getAttributes = function (sample) {\n        return this.attributes[sample];\n    };\n\n    SampleInformation.prototype.getAttributeNames = function() {\n\n        if(this.hasAttributes()) {\n            return Object.keys(this.attributes[Object.keys(this.attributes)[0]]);\n        }\n        else return [];\n    };\n\n    SampleInformation.prototype.hasAttributes = function() {\n        return Object.keys(this.attributes).length > 0;\n    };\n\n\n\n    /**\n     * Decleare a global singleton SampleInformation object.\n     *\n     * @type {SampleInformation}\n     */\n    igv.sampleInformation = new SampleInformation();\n\n\n    return igv;\n})(igv || {});\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n    let SequenceTrack;\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    igv.trackFactory[\"sequence\"] = function (config, browser) {\n\n        if (!SequenceTrack) {\n            defineClass();\n        }\n\n        return new SequenceTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        SequenceTrack = function (config, browser) {\n\n            this.type = \"sequence\";\n\n            this.browser = browser;\n\n            this.removable = false;\n\n            this.config = config;\n            this.name = \"\";\n            this.id = \"sequence\";\n            this.sequenceType = config.sequenceType || \"dna\";             //   dna | rna | prot\n            this.height = 25;\n            this.disableButtons = false;\n            this.order = config.order || -Number.MAX_VALUE;\n            this.ignoreTrackMenu = false;\n\n            this.removable = false;\n            this.reversed = false;\n            this.frameTranslate = false;\n            this.complement = {'A': 'T', 'C': 'G', 'G': 'C', 'T': 'A'};\n            this.translationDict = {\n                'TTT': 'F',\n                'TTC': 'F',\n                'TTA': 'L',\n                'TTG': 'L',\n                'CTT': 'L',\n                'CTC': 'L',\n                'CTA': 'L',\n                'CTG': 'L',\n                'ATT': 'I',\n                'ATC': 'I',\n                'ATA': 'I',\n                'ATG': 'M',\n                'GTT': 'V',\n                'GTC': 'V',\n                'GTA': 'V',\n                'GTG': 'V',\n                'TCT': 'S',\n                'TCC': 'S',\n                'TCA': 'S',\n                'TCG': 'S',\n                'CCT': 'P',\n                'CCC': 'P',\n                'CCA': 'P',\n                'CCG': 'P',\n                'ACT': 'T',\n                'ACC': 'T',\n                'ACA': 'T',\n                'ACG': 'T',\n                'GCT': 'A',\n                'GCC': 'A',\n                'GCA': 'A',\n                'GCG': 'A',\n                'TAT': 'Y',\n                'TAC': 'Y',\n                'TAA': 'STOP',\n                'TAG': 'STOP',\n                'CAT': 'H',\n                'CAC': 'H',\n                'CAA': 'Q',\n                'CAG': 'Q',\n                'AAT': 'N',\n                'AAC': 'N',\n                'AAA': 'K',\n                'AAG': 'K',\n                'GAT': 'D',\n                'GAC': 'D',\n                'GAA': 'E',\n                'GAG': 'E',\n                'TGT': 'C',\n                'TGC': 'C',\n                'TGA': 'STOP',\n                'TGG': 'W',\n                'CGT': 'R',\n                'CGC': 'R',\n                'CGA': 'R',\n                'CGG': 'R',\n                'AGT': 'S',\n                'AGC': 'S',\n                'AGA': 'R',\n                'AGG': 'R',\n                'GGT': 'G',\n                'GGC': 'G',\n                'GGA': 'G',\n                'GGG': 'G'\n            };\n        };\n\n        SequenceTrack.prototype.menuItemList = function () {\n            var self = this;\n\n            return [\n                {\n                    name: self.reversed ? \"Forward\" : \"Reverse\",\n                    click: function () {\n                        self.reversed = !self.reversed;\n                        self.trackView.repaintViews();\n                    }\n                },\n                {\n                    name: self.frameTranslate ? \"Close Translation\" : \"Three-frame Translate\",\n                    click: function () {\n                        self.frameTranslate = !self.frameTranslate;\n                        if (self.frameTranslate) {\n                            self.trackView.viewports.forEach(function (vp) {\n                                vp.setContentHeight(115);\n                            })\n                            self.trackView.setTrackHeight(115);\n                        } else {\n                            self.trackView.viewports.forEach(function (vp) {\n                                vp.setContentHeight(25);\n                            })\n                            self.trackView.setTrackHeight(25);\n                        }\n                        self.trackView.repaintViews()\n\n                    }\n                }\n            ];\n        };\n\n        SequenceTrack.prototype.translateSequence = function (seq) {\n            var threeFrame = [[], [], []];\n            var self = this;\n\n            [0, 1, 2].forEach(function (fNum) {\n                var idx = fNum;\n                var obj, st;\n\n                while ((seq.length - idx) >= 3) {\n                    obj = {};\n                    st = seq.slice(idx, idx + 3);\n\n                    if (self.reversed) {\n                        st = st.split('').reverse().join('');\n                    }\n\n                    obj.codons = st;\n                    obj.aminoA = self.translationDict[st];\n                    threeFrame[fNum].push(obj);\n                    obj = null;\n                    idx += 3;\n                }\n            });\n\n            return threeFrame;\n        };\n\n        SequenceTrack.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel) {\n\n            const browser = this.browser;\n\n\n                if (bpPerPixel && bpPerPixel > 1) {\n                    return Promise.resolve(null);\n                } else {\n                    return browser.genome.sequence.getSequence(chr, bpStart, bpEnd)\n                        .then(function (sequence) {\n                           return {\n                               bpStart: bpStart,\n                               sequence: sequence\n                           }\n                        });\n                }\n\n        };\n\n        SequenceTrack.prototype.draw = function (options) {\n\n            const self = this;\n            const ctx = options.context;\n\n            if (options.features) {\n\n                const sequence = options.features.sequence;\n                const sequenceBpStart = options.features.bpStart;\n                const bpEnd = 1 + options.bpStart + (options.pixelWidth * options.bpPerPixel);\n                \n                let height = 15;\n                for (let bp = sequenceBpStart; bp <= bpEnd; bp++) {\n\n                    let seqOffsetBp = Math.floor(bp - sequenceBpStart);\n\n                    if (seqOffsetBp < sequence.length) {\n                        let letter = sequence[seqOffsetBp];\n\n                        if (this.reversed) {\n                            letter = this.complement[letter.toUpperCase()];\n                        }\n\n                        let offsetBP = bp - options.bpStart;\n                        let aPixel = offsetBP      / options.bpPerPixel;\n                        let bPixel = (offsetBP + 1) / options.bpPerPixel;\n\n                        let color = fillColor.call(this, letter);\n\n\n                        if (options.bpPerPixel > 1/10) {\n                            igv.graphics.fillRect(ctx, aPixel, 5, bPixel - aPixel, height - 5, {fillStyle: color});\n                        } else {\n                            let xPixel = 0.5 * (aPixel + bPixel - ctx.measureText(letter).width);\n                            igv.graphics.strokeText(ctx, letter, xPixel, height, { strokeStyle: color });\n                        }\n                    }\n                }\n\n                if (this.frameTranslate) {\n\n                    let transSeq;\n                    if (this.reversed) {\n                        transSeq = sequence.split('').map(function (cv) {\n                            return self.complement[cv];\n                        });\n                        transSeq = transSeq.join('');\n                    } else {\n                        transSeq = sequence;\n                    }\n\n                    let y = height;\n                    let translatedSequence = this.translateSequence(transSeq);\n                    for (let arr of translatedSequence) {\n\n                        let i = translatedSequence.indexOf(arr);\n                        let fNum = i;\n                        let h = 25;\n\n                        y = (i === 0) ? y + 10 : y + 30; //Little less room at first.\n\n                        for (let cv of arr) {\n\n                            let aaS;\n                            let idx = arr.indexOf(cv);\n                            let xSeed = (idx + fNum) + (2 * idx);\n                            let color = 0 === idx % 2 ? 'rgb(160,160,160)' : 'rgb(224,224,224)';\n\n                            let p0 = Math.floor(xSeed / options.bpPerPixel);\n                            let p1 = Math.floor((xSeed + 3) / options.bpPerPixel);\n                            let pc = Math.round((p0 + p1) / 2);\n\n                            if (cv.aminoA.indexOf('STOP') > -1) {\n                                color = 'rgb(255, 0, 0)';\n                                aaS = 'STOP'; //Color blind accessible\n                            } else {\n                                aaS = cv.aminoA;\n                            }\n\n                            if (cv.aminoA === 'M') {\n                                color = 'rgb(0, 153, 0)';\n                                aaS = 'START'; //Color blind accessible\n                            }\n\n                            igv.graphics.fillRect(ctx, p0, y, p1 - p0, h, { fillStyle: color });\n\n                            if (options.bpPerPixel <= 1 / 10) {\n                                igv.graphics.strokeText(ctx, aaS, pc - (ctx.measureText(aaS).width / 2), y + 15);\n                            }\n\n                        }\n\n                    }\n\n                }\n\n            }\n\n        };\n\n        function fillColor(index) {\n\n            if (this.color) {\n                return this.color;\n            } else if (\"dna\" === this.sequenceType) {\n                return igv.nucleotideColors[ index ] || 'gray';\n            } else {\n                return 'rgb(0, 0, 150)';\n            }\n\n        }\n\n        SequenceTrack.prototype.supportsWholeGenome = function () {\n            return false;\n        };\n\n        SequenceTrack.prototype.computePixelHeight = function (ignore) {\n            return this.height;\n        }\n    }\n\n    return igv;\n})\n(igv || {});\n\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n/**\n * Minimal support for the legacy IGV desktop session format.\n */\n\nvar igv = (function (igv) {\n    /*\n     var stringAttributes = [\"name\"],\n     colorAttributes = [\"color\", \"altColor\"],\n     intAttributes = [\"height\", \"featureVisibilityWindow\"],\n     booleanAttributes = [\"autoScale\"];*/\n\n    igv.XMLSession = function (xmlString, knownGenomes) {\n\n        var self = this, parser, xmlDoc, elements;\n\n        parser = new DOMParser();\n        xmlDoc = parser.parseFromString(xmlString, \"text/xml\");\n\n        processRootNode();\n\n        elements = xmlDoc.getElementsByTagName(\"Resource\");\n\n        self.tracks = [];\n\n        var resourceMap = {};\n        Array.from(elements).forEach(function (res, idx) {\n            var res = {\n                url: res.getAttribute(\"path\"),\n                indexURL: res.getAttribute(\"index\"),\n                order: idx\n            };\n            self.tracks.push(res);\n            resourceMap[res.url] = res;\n        });\n\n        // Check for optional Track section\n        elements = xmlDoc.getElementsByTagName(\"Track\");\n        if (elements && elements.length > 0) {\n\n            // Track order is defined by elements, reset\n            self.tracks = [];\n\n            Array.from(elements).forEach(function (track) {\n\n                var id, res, claszz, subtracks, mergedTrack;\n\n                subtracks = track.getElementsByTagName(\"Track\");\n\n                if (subtracks && subtracks.length > 0) {\n\n                    mergedTrack = {\n                        type: 'merged',\n                        tracks: []\n                    };\n                    extractTrackAttributes(track, mergedTrack);\n\n                    self.tracks.push(mergedTrack);\n\n                    Array.from(subtracks).forEach(function (t) {\n\n                        t.processed = true;\n\n                        var id, res;\n\n                        id = t.getAttribute(\"id\");\n                        res = resourceMap[id];\n\n                        if (res) {\n                            mergedTrack.tracks.push(res);\n                            extractTrackAttributes(t, res);\n                            res.autoscale = false;\n                            mergedTrack.height = res.height;      //\n                        }\n                    })\n                }\n                else if (!track.processed) {\n                    id = track.getAttribute(\"id\");\n                    res = resourceMap[id];\n                    if (res) {\n                        self.tracks.push(res);\n                        extractTrackAttributes(track, res);\n                    }\n\n                }\n            })\n        }\n\n        function extractTrackAttributes(track, config) {\n\n            var color, height, autoScale, altColor, dataRange, dataRangeCltn, windowFunction, visWindow, indexed, autoscaleGroup;\n\n            config.name = track.getAttribute(\"name\");\n            color = track.getAttribute(\"color\");\n            if (color) {\n                config.color = \"rgb(\" + color + \")\";\n            }\n            altColor = track.getAttribute(\"altColor\");\n            if (color) {\n                config.altColor = \"rgb(\" + altColor + \")\";\n            }\n            height = track.getAttribute(\"height\");\n            if (height) {\n                config.height = parseInt(height);\n            }\n            autoScale = track.getAttribute(\"autoScale\");\n            if (autoScale) {\n                config.autoScale = (autoScale === \"true\");\n            }\n            autoscaleGroup = track.getAttribute(\"autoscaleGroup\");\n            if (autoscaleGroup) {\n                config.autoscaleGroup = autoscaleGroup;\n            }\n            windowFunction = track.getAttribute(\"windowFunction\");\n            if (windowFunction) {\n                config.windowFunction = windowFunction;\n            }\n            visWindow = track.getAttribute(\"visibilityWindow\") || track.getAttribute(\"featureVisibilityWindow\");\n            if (visWindow) {\n                config.visibilityWindow = visWindow;\n            }\n            indexed = track.getAttribute(\"indexed\");\n            if (indexed) {\n                config.indexed = (indexed === \"true\");\n            }\n\n            dataRangeCltn = track.getElementsByTagName(\"DataRange\");\n            if (dataRangeCltn.length > 0) {\n                dataRange = dataRangeCltn.item(0);\n                if (!autoScale) {\n                    config.min = parseInt(dataRange.getAttribute(\"minimum\"));\n                    config.max = parseInt(dataRange.getAttribute(\"maximum\"));\n                }\n                config.logScale = dataRange.getAttribute(\"type\") === \"LOG\";\n            }\n\n        }\n\n        function processRootNode() {\n            var elements, session, genome, locus, ucscID;\n\n            elements = xmlDoc.getElementsByTagName(\"Session\");\n            if (!elements || elements.length === 0) {\n                //TODO throw error\n            }\n            session = elements.item(0);\n            genome = session.getAttribute(\"genome\");\n            locus = session.getAttribute(\"locus\");\n            ucscID = session.getAttribute(\"ucscID\");\n\n            if (knownGenomes && knownGenomes.hasOwnProperty(genome)) {\n                self.genome = genome;\n\n            } else {\n                self.reference = {\n                    fastaURL: genome\n                }\n                if (ucscID) {\n                    self.reference.id = ucscID;\n                }\n            }\n            if (locus) {\n                self.locus = locus;\n            }\n\n        }\n\n\n    };\n\n\n    return igv;\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    var transformations;\n\n    /**\n     *\n     * @constructor\n     *\n     */\n    igv.SVG = function () {\n        this.svg = '';\n        this.contents = [];\n        transformations = [];\n    };\n\n\n    /**\n     * Set styling properties. Returns a string for the 'style' attribute.\n     *\n     * @param properties - object with SVG properties\n     *\n     * @returns {string}\n     */\n    igv.SVG.prototype.setProperties = function (properties) {\n\n        var str = '';\n\n        for (var key in properties) {\n            if (properties.hasOwnProperty(key)) {\n                var value = properties[key];\n\n                if (key === 'font-family') {\n                    str += 'font-family:' + value + ';';\n                } else if (key === 'font-size') {\n                    str += 'font-size:' + value + ';';\n                } else if (key == 'fillStyle') {\n                    str += 'fill:' + value + ';';\n                } else if (key === 'fill') {\n                    str += 'fill:' + value + ';';\n                } else if (key == 'strokeStyle') {\n                    str += 'stroke:' + value + ';';\n                } else if (key === 'stroke') {\n                    str += 'stroke:' + value + ';';\n                } else if (key === 'stroke-width') {\n                    str += 'stroke-width:' + value + ';';\n                } else {\n                    console.log('Unknown property: ' + key);\n                }\n            }\n        }\n\n\n\n        //if (str != '') {\n        //    return str;\n        //}\n\n        // TODO: What should be done if there are no properties in the object?\n        return str;\n\n    };\n\n    igv.SVG.prototype.setTransforms = function (transforms, x, y) {\n        var str = '';\n\n        for (var key in transforms) {\n            if (transforms.hasOwnProperty(key)) {\n                var value = transforms[key];\n\n                if (key === 'rotate') {\n                    str += 'rotate(' + value['angle'];\n\n                    str += ',' + x;\n                    str += ',' + y;\n\n                    str += ')';\n\n                } else if (key === 'translate') {\n                    str += 'translate(' + value[x];\n                    if ('y' in value) {\n                        str += ',' + value['y'];\n                    }\n\n                    str += ')';\n                } else {\n                    console.log('Unknown transform: ' + key);\n                }\n            }\n\n            str += ' ';\n        }\n\n        // TODO: What should be done if there are no transformations in the object?\n        return str;\n    };\n\n    igv.SVG.prototype.clearRect = function (x, y, w, h) {\n\n    }\n\n    igv.SVG.prototype.strokeLine = function (x1, y1, x2, y2, properties, transforms) {\n        var str = '';\n\n        str += '<line x1=\"' + x1 + '\" y1=\"' + y1 + '\" x2=\"' + x2 + '\" y2=\"' + y2 +'\"';\n\n        if (properties) {\n            str += ' style=\"' + this.setProperties(properties) + '\"';\n        }\n\n        if (transforms) {\n            str += ' transform=\"' + this.setTransforms(transforms, x1, y1) + '\"';\n        }\n\n        str += '/>';\n\n        this.contents.push(str);\n    };\n\n    /**\n     *\n     * @param x - x coordinate - upper left corner.\n     * @param y - y coordinate - upper left corner.\n     * @param w - width of the rectangle expanding rightwards.\n     * @param h - height of the rectangle expanding downwards.\n     * @param properties - style attribute for the SVG rectangle.\n     */\n    igv.SVG.prototype.fillRect = function (x, y, w, h, properties, transforms) {\n        var str = '';\n\n        str += '<rect ' + 'x=\"' + x + '\" y=\"' + y;\n        str += '\" width=\"' + w + '\" height=\"' + h + '\"';\n\n        if (properties) {\n            str += ' style=\"' + this.setProperties(properties) + '\"';\n        }\n\n        if (transforms) {\n            str += ' transform=\"' + this.setTransforms(transforms, x, y) + '\"';\n        }\n\n        str += '/>';\n\n        this.contents.push(str);\n\n    };\n\n    /**\n     *\n     * @param centerX - x coordinate - center of rectangle.\n     * @param centerY - y coordinate - center of rectangle.\n     * @param width - width of the rectangle.\n     * @param height - height of the rectangle.\n     * @param properties - style attribute for the SVG rectangle.\n     */\n    igv.SVG.prototype.fillRectWithCenter = function (centerX, centerY, width, height, properties, transforms) {\n        var str = '';\n\n        str += '<rect ' + 'x=\"' + (centerX - (width / 2)) + '\" y=\"' + (centerY - (height / 2));\n        str += '\" width=\"' + width + '\" height=\"' + height + '\"';\n\n        if (properties) {\n            str += ' style=\"' + this.setProperties(properties) + '\"';\n        }\n\n        if (transforms) {\n            str += ' transform=\"' + this.setTransforms(transforms, centerX, centerY) + '\"';\n        }\n\n        str += '/>';\n\n\n        this.contents.push(str);\n    };\n\n\n    /**\n     *\n     * @param x - array of \"x\" values\n     * @param y - array of \"y\" values\n     * @param properties\n     * @param transforms\n     */\n    igv.SVG.prototype.fillPolygon = function (x, y, properties, transforms) {\n        var str = '';\n\n        str += '<polygon points=\"';\n\n        for (var index = 0; index < x.length; index++) {\n            str += ' ' + x[index] + ',' + y[index];\n        }\n\n        str += '\"';\n\n        if (properties) {\n            str += ' style=\"' + this.setProperties(properties) + '\"';\n        }\n\n        if (transforms) {\n            str += ' transform=\"' + this.setTransforms(transforms, x, y) + '\"';\n        }\n\n        str += '/>';\n\n        this.contents.push(str);\n\n    };\n\n    /**\n     * Generates text on the svg canvas.\n     *\n     * @param text\n     * @param x - x coordinate for the SVG text.\n     * @param y - y coordinate for the SVG text.\n     * @param properties - style attribute for the SVG text.\n     * @param transforms\n     */\n    igv.SVG.prototype.fillText = function (text, x, y, properties, transforms) {\n        var str = '';\n\n        str += '<text x=\"' + x + '\" y=\"' + y + '\"';\n\n        if (properties) {\n            str += ' style=\"' + this.setProperties(properties) + '\"';\n        }\n\n        if (transforms) {\n            str += ' transform=\"' + this.setTransforms(transforms, x, y) + '\"';\n        }\n\n        str += '>';\n        str += text;\n        str += '</text>';\n\n        this.contents.push(str);\n    };\n\n    /**\n     * TODO: This is a duplicate of fillText as SVG has fill and\n     * TODO: stroke values for text instead of separate types.\n     *\n     * Generates text on the svg canvas.\n     *\n     * @param text\n     * @param x - x coordinate for the SVG text.\n     * @param y - y coordinate for the SVG text.\n     * @param properties - style attribute for the SVG text.\n     * @param transforms\n     */\n    igv.SVG.prototype.strokeText = function (text, x, y, properties, transforms) {\n        var str = '';\n\n        str += '<text x=\"' + x + '\" y=\"' + y + '\"';\n        if (properties) {\n            str += ' style=\"' + this.setProperties(properties) + '\"';\n        }\n\n        if (transforms) {\n            str += ' transform=\"' + this.setTransforms(transforms, x, y) + '\"';\n        }\n\n        str += '>';\n        str += text;\n        str += '</text>';\n\n        this.contents.push(str);\n    };\n\n    igv.SVG.prototype.strokeCircle = function (x, y, radius, properties, transforms) {\n        var str = '';\n\n        str += '<circle cx=\"' + x + '\" cy=\"' + y + '\" r=\"' + radius + '\" stroke=\"black\" fill-opacity=\"0.0\"/>';\n\n        this.contents.push(str);\n    };\n\n    /**\n     * Convers the SVG object into a string to put in html.\n     *\n     * @returns {string}\n     */\n    igv.SVG.prototype.string = function () {\n        var string = '';\n\n        string += '<svg width=\"100%\" height=\"100%\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">';\n\n        for (var index = 0; index < this.contents.length; index++) {\n            string += '\\n' + this.contents[index];\n        }\n\n        //string += '<text x=\"350\" y=\"250\" transform=\"rotate(60 350 250)\">Hello!</text>';\n\n        string += '</svg>';\n\n        return string;\n    };\n\n    igv.SVG.prototype.innerString = function () {\n        var string = '';\n\n        for (var index = 0; index < this.contents.length; index++) {\n            string += '\\n' + this.contents[index];\n        }\n\n        //string += '<text x=\"350\" y=\"250\" transform=\"rotate(60 350 250)\">Hello!</text>';\n\n\n        return string;\n    };\n\n\n    //igv.SVG.prototype.rotate = function(angle, x, y) {\n    //    transformations.push('rotate(' + angle + ',' + x + ',' + y +')');\n    //};\n\n    //igv.SVG.prototype.translate\n\n    return igv;\n})(igv || {});\n\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 11/22/2016.\n */\n\n\nvar igv = (function (igv) {\n\n\n    var GZIP_FLAG = 0x1;\n\n    igv.TDFReader = function (config, genome) {\n        this.config = config;\n        this.genome = genome;\n        this.path = config.url;\n        this.groupCache = {};\n        this.datasetCache = {};\n    };\n\n\n    igv.TDFReader.prototype.readHeader = function () {\n\n        var self = this;\n\n        if (this.magic !== undefined) {\n            return Promise.resolve(this);   // Already read\n        }\n\n        return igv.xhr.loadArrayBuffer(self.path, igv.buildOptions(self.config, {range: {start: 0, size: 64000}}))\n\n            .then(function (data) {\n\n                var binaryParser = new igv.BinaryParser(new DataView(data));\n\n                self.magic = binaryParser.getInt();\n                self.version = binaryParser.getInt();\n                self.indexPos = binaryParser.getLong();\n                self.indexSize = binaryParser.getInt();\n                var headerSize = binaryParser.getInt();\n\n\n                if (self.version >= 2) {\n                    var nWindowFunctions = binaryParser.getInt();\n                    self.windowFunctions = [];\n                    while (nWindowFunctions-- > 0) {\n                        self.windowFunctions.push(binaryParser.getString());\n                    }\n                }\n\n                self.trackType = binaryParser.getString();\n                self.trackLine = binaryParser.getString();\n\n                var nTracks = binaryParser.getInt();\n                self.trackNames = [];\n                while (nTracks-- > 0) {\n                    self.trackNames.push(binaryParser.getString());\n                }\n\n                self.genomeID = binaryParser.getString();\n                self.flags = binaryParser.getInt();\n\n                self.compressed = (self.flags & GZIP_FLAG) != 0;\n\n                // Now read index\n                return igv.xhr.loadArrayBuffer(self.path, igv.buildOptions(self.config, {\n                    range: {\n                        start: self.indexPos,\n                        size: self.indexSize\n                    }\n                }))\n            })\n            .then(function (data) {\n\n                var binaryParser = new igv.BinaryParser(new DataView(data));\n\n                self.datasetIndex = {};\n                var nEntries = binaryParser.getInt();\n                while (nEntries-- > 0) {\n                    var name = binaryParser.getString();\n                    var pos = binaryParser.getLong();\n                    var size = binaryParser.getInt();\n                    self.datasetIndex[name] = {position: pos, size: size};\n                }\n\n                self.groupIndex = {};\n                nEntries = binaryParser.getInt();\n                while (nEntries-- > 0) {\n                    name = binaryParser.getString();\n                    pos = binaryParser.getLong();\n                    size = binaryParser.getInt();\n                    self.groupIndex[name] = {position: pos, size: size};\n                }\n\n                return self;   // The header data is stored in \"self\"\n\n            })\n\n    }\n\n    igv.TDFReader.prototype.readDataset = function (chr, windowFunction, zoom) {\n\n        var self = this,\n            dsName,\n            key;\n\n        key = chr + \"_\" + windowFunction + \"_\" + zoom;\n\n        if (self.datasetCache[key]) {\n            return Promise.resolve(self.datasetCache[key]);\n        }\n\n        else {\n            return self.readHeader()\n\n                .then(function (ignore) {\n\n                    var wf = (self.version < 2) ? \"\" : \"/\" + windowFunction,\n                        zoomString = (chr.toLowerCase() === \"all\" || zoom === undefined) ? \"0\" : zoom.toString(),\n                        indexEntry;\n\n                    if (windowFunction === \"raw\") {\n                        dsName = \"/\" + chr + \"/raw\";\n                    }\n                    else {\n                        dsName = \"/\" + chr + \"/z\" + zoomString + wf;\n                    }\n                    indexEntry = self.datasetIndex[dsName];\n\n                    if (indexEntry === undefined) {\n                        return undefined;\n                    }\n                    else {\n\n                        return igv.xhr.loadArrayBuffer(self.path, igv.buildOptions(self.config, {\n                            range: {\n                                start: indexEntry.position,\n                                size: indexEntry.size\n                            }\n                        }))\n                    }\n                })\n                .then(function (data) {\n\n                    if (!data) {\n                        return undefined;\n                    }\n\n                    var binaryParser = new igv.BinaryParser(new DataView(data));\n\n                    var nAttributes = binaryParser.getInt();\n                    var attributes = {};\n                    while (nAttributes-- > 0) {\n                        attributes[binaryParser.getString()] = binaryParser.getString();\n                    }\n\n                    var dataType = binaryParser.getString();\n                    var tileWidth = binaryParser.getFloat();\n\n                    var nTiles = binaryParser.getInt();\n                    var tiles = [];\n                    while (nTiles-- > 0) {\n                        tiles.push({position: binaryParser.getLong(), size: binaryParser.getInt()});\n                    }\n\n                    var dataset = {\n                        name: dsName,\n                        attributes: attributes,\n                        dataType: dataType,\n                        tileWidth: tileWidth,\n                        tiles: tiles\n                    };\n\n                    self.datasetCache[key] = dataset;\n\n                    return dataset;\n\n                })\n        }\n\n\n    }\n\n    igv.TDFReader.prototype.readRootGroup = function () {\n\n        const self = this;\n        const genome = this.genome;\n        const rootGroup = this.groupCache[\"/\"];\n\n        if (rootGroup) {\n            return Promise.resolve(rootGroup);\n        }\n        else {\n            return self.readGroup(\"/\").then(function (group) {\n\n                const names = group[\"chromosomes\"];\n                const maxZoomString = group[\"maxZoom\"];\n\n                // Now parse out interesting attributes.  This is a side effect, and bad bad bad,  but the alternative is messy as well.\n                if (maxZoomString) {\n                    self.maxZoom = Number(maxZoomString);\n                }\n\n                // Chromosome names\n                self.chrAliasTable = {};\n                if (names) {\n                    names.split(\",\").forEach(function (chr) {\n                        var canonicalName = genome.getChromosomeName(chr);\n                        self.chrAliasTable[canonicalName] = chr;\n                    })\n                }\n                return group;\n            })\n        }\n    }\n\n    igv.TDFReader.prototype.readGroup = function (name) {\n\n        var self = this, group;\n\n        var group = self.groupCache[name];\n        if (group) {\n            return Promise.resolve(group);\n        }\n        else {\n            return self.readHeader()\n\n                .then(function (reader) {\n\n                    var indexEntry = self.groupIndex[name];\n\n                    if (indexEntry === undefined) {\n                        return undefined;\n                    }\n                    else {\n\n                        return igv.xhr.loadArrayBuffer(self.path, igv.buildOptions(self.config, {\n                            range: {\n                                start: indexEntry.position,\n                                size: indexEntry.size\n                            }\n                        }))\n                    }\n                })\n                .then(function (data) {\n\n                    if (!data) {\n                        return undefined;\n                    }\n\n                    var binaryParser = new igv.BinaryParser(new DataView(data));\n\n                    var nAttributes = binaryParser.getInt();\n                    var group = {name: name};\n                    while (nAttributes-- > 0) {\n                        group[binaryParser.getString()] = binaryParser.getString();\n                    }\n\n                    self.groupCache[name] = group;\n\n                    return group;\n                })\n        }\n    }\n\n\n    function createFixedStep(binaryParser, nTracks) {\n        var nPositions = binaryParser.getInt(),\n            start = binaryParser.getInt(),\n            span = binaryParser.getFloat(),\n            np = nPositions,\n            nt = nTracks,\n            data,\n            dtrack;\n\n\n        data = [];\n        while (nt-- > 0) {\n            np = nPositions;\n            dtrack = [];\n            while (np-- > 0) {\n                dtrack.push(binaryParser.getFloat());\n            }\n            data.push(dtrack);\n        }\n\n        return {\n            type: \"fixedStep\",\n            start: start,\n            span: span,\n            data: data,\n            nTracks: nTracks,\n            nPositions: nPositions\n        }\n    }\n\n    function createVariableStep(binaryParser, nTracks) {\n\n        var tileStart = binaryParser.getInt(),\n            span = binaryParser.getFloat(),\n            nPositions = binaryParser.getInt(),\n            np = nPositions,\n            nt = nTracks,\n            start = [],\n            data,\n            dtrack;\n\n        while (np-- > 0) {\n            start.push(binaryParser.getInt());\n        }\n\n        var nS = binaryParser.getInt();  // # of samples, ignored but should === nTracks\n\n        data = [];\n        while (nt-- > 0) {\n            np = nPositions;\n            dtrack = [];\n            while (np-- > 0) {\n                dtrack.push(binaryParser.getFloat());\n            }\n            data.push(dtrack);\n        }\n\n        return {\n            type: \"variableStep\",\n            tileStart: tileStart,\n            span: span,\n            start: start,\n            data: data,\n            nTracks: nTracks,\n            nPositions: nPositions\n        }\n    }\n\n    function createBed(binaryParser, nTracks, type) {\n        var nPositions, start, end, nS, data, name, n, nt, np, dtrack;\n\n        nPositions = binaryParser.getInt();\n\n        n = nPositions;\n        start = [];\n        while (n-- > 0) {\n            start.push(binaryParser.getInt());\n        }\n\n        n = nPositions;\n        end = [];\n        while (n-- > 0) {\n            end.push(binaryParser.getInt());\n        }\n\n        var nS = binaryParser.getInt();  // # of samples, ignored but should === nTracks\n\n        data = [];\n        nt = nTracks;\n        while (nt-- > 0) {\n            np = nPositions;\n            dtrack = [];\n            while (np-- > 0) {\n                dtrack.push(binaryParser.getFloat());\n            }\n            data.push(dtrack);\n        }\n\n        if (type === \"bedWithName\") {\n            n = nPositions;\n            name = [];\n            while (n-- > 0) {\n                name.push(binaryParser.getString());\n            }\n        }\n\n        return {\n            type: type,\n            start: start,\n            end: end,\n            data: data,\n            name: name,\n            nTracks: nTracks,\n            nPositions: nPositions\n        }\n\n    }\n\n    igv.TDFReader.prototype.readTiles = function (tileIndeces, nTracks) {\n\n        var self = this;\n\n        tileIndeces.sort(function (a, b) {\n            return a.position - b.position;\n        })\n\n        tileIndeces = tileIndeces.filter(function (idx) {\n            return idx.size > 0;\n        });\n\n        if (tileIndeces.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        var firstEntry = tileIndeces[0];\n        var lastEntry = tileIndeces[tileIndeces.length - 1];\n        var position = firstEntry.position;\n        var size = (lastEntry.position + lastEntry.size) - position;\n\n\n        return igv.xhr.loadArrayBuffer(self.path, igv.buildOptions(self.config, {\n            range: {\n                start: position,\n                size: size\n            }\n        }))\n            .then(function (data) {\n\n                var tiles = [];\n\n                // Loop through and decode tiles\n                tileIndeces.forEach(function (indexEntry) {\n\n                    var start = indexEntry.position - position;\n                    var size = indexEntry.size;\n                    if (size > 0) {\n                        var tileData;\n\n                        if (self.compressed) {\n                            var inflate = new Zlib.Inflate(new Uint8Array(data, start, size));\n                            var plain = inflate.decompress();\n                            tileData = plain.buffer;\n                        } else {\n                            tileData = data.slice(start, start + size);\n                        }\n\n\n                        var binaryParser = new igv.BinaryParser(new DataView(tileData));\n                        var type = binaryParser.getString();\n                        var tile;\n\n                        switch (type) {\n                            case \"fixedStep\":\n                                tile = createFixedStep(binaryParser, nTracks);\n                                break;\n                            case \"variableStep\":\n                                tile = createVariableStep(binaryParser, nTracks);\n                                break;\n                            case \"bed\":\n                            case \"bedWithName\":\n                                tile = createBed(binaryParser, nTracks, type);\n                                break;\n                            default:\n                                throw \"Unknown tile type: \" + type;\n                        }\n\n                        tiles.push(tile);\n                    }\n                });\n\n                return tiles;\n\n            });\n\n        // Read raw data for all tiles into a buffer\n    }\n\n    igv.TDFReader.prototype.readTile = function (indexEntry, nTracks) {\n\n        var self = this;\n\n        return igv.xhr.loadArrayBuffer(self.path, igv.buildOptions(self.config, {\n            range: {\n                start: indexEntry.position,\n                size: indexEntry.size\n            }\n        }))\n            .then(function (data) {\n\n                if (self.compressed) {\n                    var inflate = new Zlib.Inflate(new Uint8Array(data));\n                    var plain = inflate.decompress();\n                    data = plain.buffer;\n                }\n\n                var binaryParser = new igv.BinaryParser(new DataView(data));\n\n                var type = binaryParser.getString();\n\n                switch (type) {\n                    case \"fixedStep\":\n                        return createFixedStep(binaryParser, nTracks);\n                        break;\n                    case \"variableStep\":\n                        return createVariableStep(binaryParser, nTracks);\n                        break;\n                    case \"bed\":\n                    case \"bedWithName\":\n                        return createBed(binaryParser, nTracks, type);\n                        break;\n                    default:\n                        throw \"Unknown tile type: \" + type;\n                }\n            });\n\n    }\n\n    return igv;\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinso on 11/27/16.\n */\n\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    igv.TDFSource = function (config, genome) {\n\n        this.genome = genome;\n        this.windowFunction = config.windowFunction || \"mean\";\n        this.reader = new igv.TDFReader(config, genome);\n    };\n\n    igv.TDFSource.prototype.getFeatures = function (chr, bpStart, bpEnd, bpPerPixel) {\n\n        const self = this;\n        const    genomicInterval = new igv.GenomicInterval(chr, bpStart, bpEnd);\n        const genome = this.genome;\n\n        if (chr.toLowerCase() === \"all\") {\n            return Promise.resolve([]);      // Whole genome view not yet supported\n        }\n\n        genomicInterval.bpPerPixel = bpPerPixel;\n\n\n        return getRootGroup()\n\n            .then(function (group) {\n\n                var zoom = zoomLevelForScale(chr, bpPerPixel, genome),\n                    queryChr = self.reader.chrAliasTable[chr],\n                    maxZoom = self.reader.maxZoom,\n                    wf;\n\n                if (queryChr === undefined) queryChr = chr;\n                if (maxZoom === undefined) maxZoom = -1;\n\n                wf = zoom > maxZoom ? \"raw\" : self.windowFunction;\n\n                return self.reader.readDataset(queryChr, wf, zoom);\n            })\n\n            .then(function (dataset) {\n\n                if (dataset == null) {\n                    return [];\n                }\n\n                var tileWidth = dataset.tileWidth,\n                    startTile = Math.floor(bpStart / tileWidth),\n                    endTile = Math.floor(bpEnd / tileWidth),\n                    i,\n                    p = [],\n                    NTRACKS = 1;   // TODO read this\n\n\n                return self.reader.readTiles(dataset.tiles.slice(startTile, endTile + 1), NTRACKS);\n\n            })\n\n            .then(function (tiles) {\n\n                var features = [];\n\n                tiles.forEach(function (tile) {\n                    switch (tile.type) {\n                        case \"bed\":\n                            decodeBedTile(tile, chr, bpStart, bpEnd, bpPerPixel, features);\n                            break;\n                        case \"variableStep\":\n                            decodeVaryTile(tile, chr, bpStart, bpEnd, bpPerPixel, features);\n                            break;\n                        case \"fixedStep\":\n                            decodeFixedTile(tile, chr, bpStart, bpEnd, bpPerPixel, features);\n                            break;\n                        default:\n                            reject(\"Unknown tile type: \" + tile.type);\n                            return;\n                    }\n                });\n\n                features.sort(function (a, b) {\n                    return a.start - b.start;\n                })\n\n\n                return features;\n            })\n\n\n        function getRootGroup() {\n            if (self.rootGroup) {\n                return Promise.resolve(self.rootGroup);\n            } else {\n                return self.reader.readRootGroup()\n                    .then(function (rootGroup) {\n                        self.rootGroup = rootGroup;\n                        return rootGroup;\n                    });\n            }\n        }\n    }\n    \n    igv.TDFSource.prototype.supportsWholeGenome = function() {\n        return false;\n    }\n\n    function decodeBedTile(tile, chr, bpStart, bpEnd, bpPerPixel, features) {\n\n        var nPositions = tile.nPositions,\n            starts = tile.start,\n            ends = tile.end,\n            data = tile.data[0],   // Single track for now\n            i;\n\n        for (i = 0; i < nPositions; i++) {\n\n            var s = starts[i];\n            var e = ends[i];\n\n            if (e < bpStart) continue;\n            if (s > bpEnd) break;\n\n            features.push({\n                chr: chr,\n                start: s,\n                end: e,\n                value: data[i]\n            });\n        }\n    }\n\n    function decodeVaryTile(tile, chr, bpStart, bpEnd, bpPerPixel, features) {\n\n        var nPositions = tile.nPositions,\n            starts = tile.start,\n            span = tile.span,\n            data = tile.data[0],   // Single track for now\n            i;\n\n        for (i = 0; i < nPositions; i++) {\n\n            var s = starts[i];\n            var e = s + span;\n\n            if (e < bpStart) continue;\n            if (s > bpEnd) break;\n\n            features.push({\n                chr: chr,\n                start: s,\n                end: e,\n                value: data[i]\n            });\n        }\n    }\n\n    function decodeFixedTile(tile, chr, bpStart, bpEnd, bpPerPixel, features) {\n\n        var nPositions = tile.nPositions,\n            s = tile.start,\n            span = tile.span,\n            data = tile.data[0],   // Single track for now\n            i;\n\n        for (i = 0; i < nPositions; i++) {\n\n            var e = s + span;\n\n            if (s > bpEnd) break;\n\n            if (e >= bpStart) {\n\n                if (!Number.isNaN(data[i])) {\n                    features.push({\n                        chr: chr,\n                        start: s,\n                        end: e,\n                        value: data[i]\n                    });\n                }\n            }\n\n            s = e;\n        }\n    }\n\n\n    var log2 = Math.log(2);\n\n    function zoomLevelForScale(chr, bpPerPixel, genome) {\n\n        // Convert bpPerPixel to IGV \"zoom\" level.   This is a bit convoluted,  IGV computes zoom levels assuming\n        // display in a 700 pixel window.  The fully zoomed out view of a chromosome is zoom level \"0\".\n        // Zoom level 1 is magnified 2X,  and so forth\n\n        var chrSize = genome.getChromosome(chr).bpLength;\n\n        return Math.ceil(Math.log(Math.max(0, (chrSize / (bpPerPixel * 700)))) / log2);\n    }\n\n\n    return igv;\n\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2018 Regents of the University of California\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Author:  Jim Robinson,  2018\n */\n\n\"use strict\";\n\nvar igv = (function (igv) {\n\n\n    igv.extend = function (parent, child) {\n\n        child.prototype = Object.create(parent.prototype);\n        child.prototype.constructor = child;\n        child.prototype._super = Object.getPrototypeOf(child.prototype);\n        return child;\n    }\n\n    /**\n     * A collection of properties and methods shared by all (or most) track types.   Used as a mixin\n     * by prototype chaining.\n     *\n     * @param config\n     * @param browser\n     * @constructor\n     */\n    igv.TrackBase = function (config, browser) {\n\n        if (config.displayMode) {\n            config.displayMode = config.displayMode.toUpperCase();\n        }\n\n        this.config = config;\n        this.browser = browser;\n        this.url = config.url;\n        this.type = config.type;\n\n        config.name = config.name || config.label;   // synonym for name, label is deprecated\n        if (config.name) {\n            this.name = config.name;\n        }\n        else {\n            if (igv.isFilePath(config.url)) this.name = config.url.name;\n            else this.name = config.url;\n        }\n\n        this.order = config.order;\n\n        if (\"civic-ws\" === config.sourceType) {    // Ugly proxy for specialized track type\n            this.color = \"rgb(155,20,20)\";\n        }\n        else {\n            this.color = config.color || config.defaultColor || \"rgb(0,0,150)\";\n        }\n\n\n        this.autoscaleGroup = config.autoscaleGroup;\n\n        this.removable = config.removable === undefined ? true : config.removable;      // Defaults to true\n\n        this.height = config.height || 100;\n        this.autoHeight = config.autoHeight === undefined ? (config.height === undefined) : config.autoHeight;\n        this.minHeight = config.minHeight || Math.min(25, this.height);\n        this.maxHeight = config.maxHeight || Math.max(1000, this.height);\n\n        this.visibilityWindow = config.visibilityWindow;\n\n    };\n\n    /**\n     * Default implementation -- return the current state of the \"this\" object, which should be a this.  Used\n     * to create session object for bookmarking, sharing.  Updates the track \"config\" object to reflect the\n     * current state.  Only simple properties (string, number, boolean) are updated.\n     */\n    igv.TrackBase.prototype.getState = function () {\n\n        const config = Object.assign({}, this.config);\n        const self = this;\n\n        Object.keys(config).forEach(function (key) {\n            const value = self[key];\n            if (value && (igv.isSimpleType(value) || typeof value === \"boolean\")) {\n                config[key] = value;\n            }\n        })\n\n        return config;\n    };\n\n    igv.TrackBase.prototype.supportsWholeGenome = function () {\n        return false;\n    }\n\n    igv.TrackBase.prototype.clickedFeatures = function (clickState) {\n\n        // We use the cached features rather than method to avoid async load.  If the\n        // feature is not already loaded this won't work,  but the user wouldn't be mousing over it either.\n        const features = clickState.viewport.getCachedFeatures();\n\n        if (!features || features.length === 0) {\n            return [];\n        }\n\n        const genomicLocation = clickState.genomicLocation;\n\n        // We need some tolerance around genomicLocation\n        const tolerance = 3 * clickState.referenceFrame.bpPerPixel;\n        const ss = Math.floor(genomicLocation) - tolerance;\n        const ee = Math.ceil(genomicLocation) + tolerance;\n\n        return (igv.FeatureUtils.findOverlapping(features, ss, ee));\n    };\n\n\n    /**\n     * Default popup text function -- just extracts string and number properties in random order.\n     * @param feature\n     * @returns {Array}\n     */\n    igv.TrackBase.prototype.extractPopupData = function (feature) {\n\n        const filteredProperties = new Set(['row', 'color']);\n        const data = [];\n\n        let alleles, alleleFreqs;\n        for (var property in feature) {\n\n            if (feature.hasOwnProperty(property) && !filteredProperties.has(property) &&\n                igv.isSimpleType(feature[property])) {\n\n                data.push({name: property, value: feature[property]});\n\n                if (property === \"alleles\") {\n                    alleles = feature[property];\n                } else if (property === \"alleleFreqs\") {\n                    alleleFreqs = feature[property];\n                }\n            }\n        }\n\n        const genomeId = this.getGenomeId()\n        if (alleles && alleleFreqs) {\n\n            if (alleles.endsWith(\",\")) {\n                alleles = alleles.substr(0, alleles.length - 1);\n            }\n            if (alleleFreqs.endsWith(\",\")) {\n                alleleFreqs = alleleFreqs.substr(0, alleleFreqs.length - 1);\n            }\n\n            let a = alleles.split(\",\");\n            let af = alleleFreqs.split(\",\");\n            if (af.length > 1) {\n                let b = [];\n                for (let i = 0; i < af.length; i++) {\n                    b.push({a: a[i], af: Number.parseFloat(af[i])});\n                }\n                b.sort(function (x, y) {\n                    return x.af - y.af\n                });\n\n                let ref = b[b.length - 1].a;\n                if (ref.length === 1) {\n                    for (let i = b.length - 2; i >= 0; i--) {\n                        let alt = b[i].a;\n                        if (alt.length === 1) {\n                            const cravatLink = igv.TrackBase.getCravatLink(feature.chr, feature.start + 1, ref, alt, genomeId)\n                            if(cravatLink) {\n                                data.push(\"<hr/>\");\n                                data.push(cravatLink);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n\n        return data;\n\n\n    }\n\n    igv.TrackBase.prototype.getGenomeId = function () {\n        return this.browser.genome ? this.browser.genome.id : undefined\n    }\n\n    igv.TrackBase.getCravatLink = function (chr, position, ref, alt, genomeID) {\n\n        if (\"hg38\" === genomeID || \"GRCh38\" === genomeID) {\n\n            const cravatChr = chr.startsWith(\"chr\") ? chr : \"chr\" + chr\n\n            return \"<a target='_blank' \" +\n                \"href='http://www.cravat.us/CRAVAT/variant.html?variant=\" +\n                cravatChr + \"_\" + position + \"_+_\" + ref + \"_\" + alt + \"'>Cravat \" + ref + \"->\" + alt + \"</a>\"\n        }\n        else {\n            return undefined\n        }\n    }\n//chr22 40418496 - A G\n\n    return igv;\n\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n// Generic functions applicable to all track types\n\nvar igv = (function (igv) {\n\n    igv.knownFileExtensions = new Set([\n\n        \"narrowpeak\",\n        \"broadpeak\",\n        \"peaks\",\n        \"bedgraph\",\n        \"wig\",\n        \"gff3\",\n        \"gff\",\n        \"gtf\",\n        \"fusionjuncspan\",\n        \"refflat\",\n        \"seg\",\n        \"aed\",\n        \"bed\",\n        \"vcf\",\n        \"bb\",\n        \"bigbed\",\n        \"bw\",\n        \"bigwig\",\n        \"bam\",\n        \"tdf\",\n        \"refgene\",\n        \"genepred\",\n        \"genepredext\",\n        \"bedpe\",\n        \"bp\",\n        \"snp\",\n        \"rmsk\",\n        \"cram\"\n    ]);\n\n    /**\n     * Return a custom format object with the given name.\n     * @param name\n     * @returns {*}\n     */\n    igv.getFormat = function (name) {\n\n        if (igv.browser && igv.browser.formats && igv.browser.format[name]) {\n\n            return expandFormat(igv.browser.formats[name]);\n\n        } else if (igv.FileFormats && igv.FileFormats[name]) {\n\n            return expandFormat(igv.FileFormats[name]);\n        }\n        else {\n            return undefined;\n        }\n\n        function expandFormat(format) {\n\n            const fields = format.fields;\n            const keys = ['chr', 'start', 'end'];\n\n            for (let i = 0; i < fields.length; i++) {\n                for (let key of keys) {\n                    if (key === fields[i]) {\n                        format[key] = i;\n                    }\n                }\n            }\n\n            return format;\n        }\n    };\n\n    igv.createTrack = function (config, browser) {\n\n        // Lowercase format\n        if (config.format) {\n            config.format = config.format.toLowerCase();\n        }\n\n\n        let type = (undefined === config.type) ? 'unknown_type' : config.type.toLowerCase();\n\n        if (\"data\" === type) type = \"wig\";   // deprecated\n\n        // add browser to track config\n        let trackConfig = Object.assign({}, config);\n\n        trackConfig.browser = browser;\n\n        let track\n        switch (type) {\n\n            case \"annotation\":\n            case \"genes\":\n            case \"fusionjuncspan\":\n            case \"snp\":\n                track = igv.trackFactory[\"feature\"](trackConfig, browser);\n                break;\n\n            default:\n\n                if (igv.trackFactory.hasOwnProperty(type)) {\n                    track = igv.trackFactory[type](trackConfig, browser);\n                }\n                else {\n                    track = undefined;\n                }\n        }\n\n        if (config.roi && track) {\n            track.roi = [];\n            config.roi.forEach(function (r) {\n                track.roi.push(new igv.ROI(r, browser.genome));\n            });\n        }\n\n        return track\n\n    };\n\n    igv.inferTrackTypes = function (config) {\n\n        function translateDeprecatedTypes(config) {\n\n            if (config.featureType) {  // Translate deprecated \"feature\" type\n                config.type = config.type || config.featureType;\n                config.featureType = undefined;\n            }\n            if (\"bed\" === config.type) {\n                config.type = \"annotation\";\n                config.format = config.format || \"bed\";\n            } else if (\"annotations\" === config.type) {\n                config.type = \"annotation\"\n            }\n            else if (\"alignments\" === config.type) {\n                config.type = \"alignment\"\n            }\n            else if (\"bam\" === config.type) {\n                config.type = \"alignment\";\n                config.format = \"bam\"\n            }\n\n            else if (\"vcf\" === config.type) {\n                config.type = \"variant\";\n                config.format = \"vcf\"\n            }\n\n            else if (\"t2d\" === config.type) {\n                config.type = \"gwas\";\n            }\n\n            else if (\"FusionJuncSpan\" === config.type && !config.format) {\n                config.format = \"fusionjuncspan\";\n            }\n\n            else if (\"aed\" === config.type) {\n                config.type = \"annotation\";\n                config.format = config.format || \"aed\";\n            }\n        }\n\n        function inferFileFormat(config) {\n\n            var path;\n\n            if (config.format) {\n                config.format = config.format.toLowerCase();\n                return;\n            }\n\n            path = igv.isFilePath(config.url) ? config.url.name : config.url;\n\n            config.format = igv.inferFileFormat(path);\n        }\n\n        function inferTrackType(config) {\n\n            if (config.type) return;\n\n            if (config.format) {\n\n                switch (config.format.toLowerCase()) {\n                    case \"bw\":\n                    case \"bigwig\":\n                    case \"wig\":\n                    case \"bedgraph\":\n                    case \"tdf\":\n                        config.type = \"wig\";\n                        break;\n                    case \"vcf\":\n                        config.type = \"variant\";\n                        break;\n                    case \"seg\":\n                        config.type = \"seg\";\n                        break;\n                    case \"bam\":\n                    case \"cram\":\n                        config.type = \"alignment\";\n                        break;\n                    case \"bedpe\":\n                    case \"bedpe-loop\":\n                        config.type = \"interaction\";\n                        break;\n                    case \"bp\":\n                        config.type = \"arc\"\n                        break;\n                    default:\n                        config.type = \"annotation\";\n                }\n            }\n        }\n\n        translateDeprecatedTypes(config);\n\n        if (undefined === config.sourceType && config.url) {\n            config.sourceType = \"file\";\n        }\n\n        if (\"file\" === config.sourceType) {\n            if (undefined === config.format) {\n                inferFileFormat(config);\n            }\n        }\n\n        if (undefined === config.type) {\n            inferTrackType(config);\n        }\n\n\n    };\n\n    igv.inferFileFormat = function (fn) {\n\n        var idx, ext;\n\n        fn = fn.toLowerCase();\n\n        // Special case -- UCSC refgene files\n        if (fn.endsWith(\"refgene.txt.gz\") ||\n            fn.endsWith(\"refgene.txt\") ||\n            fn.endsWith(\"refgene.sorted.txt.gz\")) {\n            return \"refgene\";\n        }\n\n\n        //Strip parameters -- handle local files later\n        idx = fn.indexOf(\"?\");\n        if (idx > 0) {\n            fn = fn.substr(0, idx);\n        }\n\n        //Strip aux extensions .gz, .tab, and .txt\n        if (fn.endsWith(\".gz\")) {\n            fn = fn.substr(0, fn.length - 3);\n        }\n\n        if (fn.endsWith(\".txt\") || fn.endsWith(\".tab\")) {\n            fn = fn.substr(0, fn.length - 4);\n        }\n\n\n        idx = fn.lastIndexOf(\".\");\n        ext = idx < 0 ? fn : fn.substr(idx + 1);\n\n        switch (ext) {\n            case \"bw\":\n                return \"bigwig\";\n            case \"bb\":\n                return \"bigbed\";\n\n            default:\n                if (igv.knownFileExtensions.has(ext)) {\n                    return ext;\n                }\n                else {\n                    return undefined;\n                }\n        }\n\n    };\n\n    igv.setTrackLabel = function ($label, track, label) {\n\n        track.name = label;\n        track.config.name = label;\n\n        $label.empty();\n        $label.html(track.name);\n\n        const txt = $label.text();\n        $label.attr('title', txt);\n    };\n\n    igv.getTrackLabelText = function (track) {\n        var vp,\n            txt;\n\n        vp = track.trackView.viewports[0];\n        txt = vp.$trackLabel.text();\n\n        return txt;\n    };\n\n    igv.inferIndexPath = function (url, extension) {\n\n        var path, idx;\n\n        if (url instanceof File) {\n            throw new Error(\"Cannot infer an index path for a local File.  Please select explicitly\")\n        }\n\n        if (url.includes(\"?\")) {\n            idx = url.indexOf(\"?\");\n            return url.substring(0, idx) + \".\" + extension + url.substring(idx);\n        } else {\n            return url + \".\" + extension;\n        }\n\n\n    };\n\n    igv.paintAxis = function (ctx, pixelWidth, pixelHeight) {\n\n        var x1,\n            x2,\n            y1,\n            y2,\n            a,\n            b,\n            reference,\n            shim,\n            font = {\n                'font': 'normal 10px Arial',\n                'textAlign': 'right',\n                'strokeStyle': \"black\"\n            };\n\n        if (undefined === this.dataRange || undefined === this.dataRange.max || undefined === this.dataRange.min) {\n            return;\n        }\n\n        igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n        reference = 0.95 * pixelWidth;\n        x1 = reference - 8;\n        x2 = reference;\n\n        //shim = 0.5 * 0.125;\n        shim = .01;\n        y1 = y2 = shim * pixelHeight;\n\n        a = {x: x2, y: y1};\n\n        // tick\n        igv.graphics.strokeLine(ctx, x1, y1, x2, y2, font);\n        igv.graphics.fillText(ctx, prettyPrint(this.dataRange.max), x1 + 4, y1 + 12, font);\n\n        //shim = 0.25 * 0.125;\n        y1 = y2 = (1.0 - shim) * pixelHeight;\n\n        b = {x: x2, y: y1};\n\n        // tick\n        igv.graphics.strokeLine(ctx, x1, y1, x2, y2, font);\n        igv.graphics.fillText(ctx, prettyPrint(this.dataRange.min), x1 + 4, y1 - 4, font);\n\n        igv.graphics.strokeLine(ctx, a.x, a.y, b.x, b.y, font);\n\n        function prettyPrint(number) {\n            // if number >= 100, show whole number\n            // if >= 1 show 1 significant digits\n            // if <  1 show 2 significant digits\n\n            if (number === 0) {\n                return \"0\";\n            } else if (Math.abs(number) >= 10) {\n                return number.toFixed();\n            } else if (Math.abs(number) >= 1) {\n                return number.toFixed(1);\n            } else {\n                return number.toFixed(2);\n            }\n        }\n\n    };\n\n    /**\n     * Configure item list for contextual (right-click) track popup menu.\n     * @param viewport\n     * @param genomicLocation - (bp)\n     * @param xOffset - (pixels) within track extent\n     * @param yOffset - (pixels) within track extent\n     */\n    igv.trackContextMenuItemList = function (viewport, genomicLocation, xOffset, yOffset) {\n\n        var config,\n            menuItems;\n\n        config =\n            {\n                viewport: viewport,\n                genomicState: viewport.genomicState,\n                genomicLocation: genomicLocation,\n                x: xOffset,\n                y: yOffset\n            };\n\n        menuItems = [];\n        if (typeof viewport.trackView.track.contextMenuItemList === \"function\") {\n            menuItems = viewport.trackView.track.contextMenuItemList(config);\n        }\n\n        return menuItems;\n    };\n\n    /**\n     * Configure item list for track \"gear\" menu.\n     * @param trackView\n     */\n    igv.trackMenuItemList = function (trackView) {\n\n        const vizWindowTypes = new Set(['alignment', 'annotation', 'variant', 'eqtl', 'snp']);\n\n        const hasVizWindow = trackView.track.config && trackView.track.config.visibilityWindow !== undefined;\n\n        let menuItems = [];\n\n        if (trackView.track.config.type !== 'sequence') {\n            menuItems.push(igv.trackRenameMenuItem(trackView));\n            menuItems.push(igv.trackHeightMenuItem(trackView));\n        }\n\n        if (doProvideColoSwatchWidget(trackView.track)) {\n            menuItems.push(igv.colorPickerMenuItem(trackView))\n        }\n\n        if (trackView.track.menuItemList) {\n            menuItems = menuItems.concat(trackView.track.menuItemList());\n        }\n\n        if (hasVizWindow || vizWindowTypes.has(trackView.track.config.type)) {\n            menuItems.push('<hr/>');\n            menuItems.push(igv.visibilityWindowMenuItem(trackView));\n        }\n\n        if (trackView.track.removable !== false) {\n            menuItems.push('<hr/>');\n            menuItems.push(igv.trackRemovalMenuItem(trackView));\n        }\n\n        return menuItems;\n    };\n\n    function doProvideColoSwatchWidget(track) {\n        return (\n            \"alignment\" === track.type ||\n            \"annotation\" === track.type ||\n            \"variant\" === track.type ||\n            \"wig\" === track.type);\n    };\n\n    igv.trackMenuItemListHelper = function (itemList, $popover) {\n\n        var list = [];\n\n        if (itemList.length > 0) {\n\n            list = itemList.map(function (item, i) {\n                var $e;\n\n                // name and object fields checked for backward compatibility\n                if (item.name) {\n                    $e = $('<div>');\n                    $e.text(item.name);\n                } else if (item.object) {\n                    $e = item.object\n                }\n                else if (typeof item.label === 'string') {\n                    $e = $('<div>');\n                    $e.text(item.label)\n                }\n                else if (typeof item === 'string') {\n\n                    if (item.startsWith(\"<\")) {\n                        $e = $(item);\n                    } else {\n                        $e = $(\"<div>\" + item + \"</div>\");\n                    }\n                }\n\n                if (0 === i) {\n                    $e.addClass('igv-track-menu-border-top');\n                }\n\n                if (item.click) {\n                    $e.on('click', handleClick);\n                    $e.on('touchend', function (e) {\n                        handleClick(e);\n                    });\n                    $e.on('mouseup', function (e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    })\n\n                    function handleClick(e) {\n                        item.click();\n                        $popover.hide();\n                        e.preventDefault();\n                        e.stopPropagation()\n                    }\n                }\n\n                return {object: $e, init: (item.init || undefined)};\n            });\n        }\n\n        return list;\n    };\n\n    /**\n     * Configure item for track \"gear\" menu.\n     * @param trackView\n     * @param menuItemLabel - menu item string\n     * @param dialogLabelHandler - dialog label creation handler\n     * @param dialogInputValue\n     * @param dialogClickHandler\n     */\n    igv.trackMenuItem = function (trackView, menuItemLabel, dialogLabelHandler, dialogInputValue, dialogClickHandler) {\n\n        var $e,\n            clickHandler;\n\n        $e = $('<div>');\n\n        $e.text(menuItemLabel);\n\n        clickHandler = function () {\n\n            trackView.browser.inputDialog.configure(dialogLabelHandler, dialogInputValue, dialogClickHandler, undefined, undefined);\n            trackView.browser.inputDialog.show($(trackView.trackDiv));\n\n        };\n\n        return {object: $e, click: clickHandler};\n    };\n\n    igv.visibilityWindowMenuItem = function (trackView) {\n\n        const menuClickHandler = function () {\n\n            const dialogClickHandler = function () {\n\n                let value = trackView.browser.inputDialog.$input.val().trim();\n\n                if ('' === value || undefined === value) {\n                    value = -1;\n                }\n\n                value = Number.parseInt(value);\n\n                trackView.track.visibilityWindow = value;\n                trackView.track.config.visibilityWindow = value;\n\n                trackView.updateViews();\n            };\n\n            trackView.browser.inputDialog.configure({\n                label: 'Visibility Window',\n                input: (trackView.track.visibilityWindow),\n                click: dialogClickHandler\n            });\n            trackView.browser.inputDialog.present($(trackView.trackDiv));\n\n        };\n\n        const $e = $('<div>');\n        $e.text('Set visibility window');\n\n        return {object: $e, click: menuClickHandler};\n\n\n    };\n\n    igv.trackRemovalMenuItem = function (trackView) {\n\n        var $e,\n            menuClickHandler;\n\n        $e = $('<div>');\n        $e.text('Remove track');\n\n        menuClickHandler = function () {\n            trackView.browser.removeTrack(trackView.track);\n        };\n\n        return {object: $e, click: menuClickHandler};\n\n    };\n\n    igv.dataRangeMenuItem = function (trackView) {\n\n        var $e,\n            clickHandler;\n\n        $e = $('<div>');\n        $e.text('Set data range');\n\n        clickHandler = function () {\n            trackView.browser.dataRangeDialog.configure({trackView: trackView});\n            trackView.browser.dataRangeDialog.present($(trackView.trackDiv));\n        };\n\n        return {object: $e, click: clickHandler};\n    };\n\n    igv.colorPickerMenuItem = function (trackView) {\n        var $e,\n            clickHandler;\n\n        $e = $('<div>');\n        $e.text('Set track color');\n\n        clickHandler = function () {\n            trackView.presentColorPicker();\n        };\n\n        return {\n            object: $e,\n            click: clickHandler\n        };\n\n    };\n\n    igv.trackRenameMenuItem = function (trackView) {\n\n        var $e,\n            menuClickHandler;\n\n        $e = $('<div>');\n        $e.text('Set track name');\n\n        menuClickHandler = function () {\n\n            var dialogClickHandler;\n\n            dialogClickHandler = function () {\n                var value;\n\n                value = trackView.browser.inputDialog.$input.val().trim();\n\n                value = ('' === value || undefined === value) ? 'untitled' : value;\n\n                trackView.browser.setTrackLabelName(trackView, value);\n\n            };\n\n            trackView.browser.inputDialog.configure({\n                label: 'Track Name',\n                input: (igv.getTrackLabelText(trackView.track) || 'unnamed'),\n                click: dialogClickHandler\n            });\n            trackView.browser.inputDialog.present($(trackView.trackDiv));\n\n        };\n\n        return {object: $e, click: menuClickHandler};\n\n\n    };\n\n    igv.trackHeightMenuItem = function (trackView) {\n\n        var $e,\n            menuClickHandler;\n\n        $e = $('<div>');\n        $e.text('Set track height');\n\n        menuClickHandler = function () {\n            var dialogClickHandler;\n\n            dialogClickHandler = function () {\n\n                var number;\n\n                number = parseFloat(trackView.browser.inputDialog.$input.val(), 10);\n\n                if (undefined !== number) {\n\n                    // If explicitly setting the height adust min or max, if neccessary.\n                    if (trackView.track.minHeight !== undefined && trackView.track.minHeight > number) {\n                        trackView.track.minHeight = number;\n                    }\n                    if (trackView.track.maxHeight !== undefined && trackView.track.maxHeight < number) {\n                        trackView.track.minHeight = number;\n                    }\n                    trackView.setTrackHeight(number, true, true);\n\n                    // Explicitly setting track height turns off autoHeight\n                    trackView.track.autoHeight = false;\n                }\n\n            };\n\n            trackView.browser.inputDialog.configure({\n                label: 'Track Height',\n                input: trackView.trackDiv.clientHeight,\n                click: dialogClickHandler\n            });\n            trackView.browser.inputDialog.present($(trackView.trackDiv));\n\n        };\n\n        return {object: $e, click: menuClickHandler};\n\n\n    };\n\n    return igv;\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\nvar igv = (function (igv) {\n\n    var dragged,\n        dragDestination;\n\n    igv.TrackView = function (browser, $container, track) {\n\n        var self = this,\n            width,\n            $track,\n            config,\n            guid;\n\n        this.browser = browser;\n        this.track = track;\n        track.trackView = this;\n\n        $track = $('<div class=\"igv-track-div\">');\n        this.trackDiv = $track.get(0);\n        $container.append($track);\n\n        guid = igv.guid();\n        this.namespace = '.trackview_' + guid;\n\n        if (this.track instanceof igv.RulerTrack) {\n            this.trackDiv.dataset.rulerTrack = \"rulerTrack\";\n        }\n\n        if (track.height) {\n            this.trackDiv.style.height = track.height + \"px\";\n        }\n\n        if (typeof track.paintAxis === 'function') {\n            appendLeftHandGutter.call(this, $(this.trackDiv));\n        }\n\n        this.$viewportContainer = $('<div class=\"igv-viewport-container\">');\n        $(this.trackDiv).append(this.$viewportContainer);\n\n        this.viewports = [];\n        width = this.browser.viewportContainerWidth() / this.browser.genomicStateList.length;\n        browser.genomicStateList.forEach(function (genomicState) {\n\n            var viewport;\n            viewport = new igv.Viewport(self, self.$viewportContainer, genomicState, width);\n            self.viewports.push(viewport);\n\n        });\n\n        this.decorateViewports();\n\n        this.configureViewportContainer(this.$viewportContainer, this.viewports);\n\n        if (true === this.track.ignoreTrackMenu) {\n            // do nothing\n        } else {\n            igv.appendRightHandGutter.call(this, $(this.trackDiv));\n        }\n\n        if (this.track instanceof igv.RulerTrack) {\n            // do nuthin\n        } else {\n            attachDragWidget.call(this, $(this.trackDiv), this.$viewportContainer);\n        }\n\n        if (\"sequence\" === this.track.type) {\n            // do nothing\n        } else if (this.track instanceof igv.RulerTrack) {\n            // do nothing\n        } else {\n            this.createColorPicker();\n        }\n\n\n    };\n\n    igv.TrackView.prototype.renderSVGContext = function (context, offset) {\n\n        for (let viewport of this.viewports) {\n\n            const index = viewport.browser.genomicStateList.indexOf(viewport.genomicState);\n            const bbox = viewport.$viewport.get(0).getBoundingClientRect();\n\n            let o =\n                {\n                    deltaX: offset.deltaX + index * viewport.$viewport.width(),\n                    deltaY: offset.deltaY + bbox.y\n                };\n\n            viewport.renderSVGContext(context, o);\n        }\n\n    };\n\n    igv.TrackView.prototype.configureViewportContainer = function ($viewportContainer, viewports) {\n\n        if (\"hidden\" === $viewportContainer.css(\"overflow-y\")) {\n\n            this.scrollbar = new TrackScrollbar($viewportContainer, viewports, this.browser.$root);\n\n            $viewportContainer.append(this.scrollbar.$outerScroll);\n        }\n\n        return $viewportContainer;\n    };\n\n    igv.TrackView.prototype.removeViewportWithLocusIndex = function (index) {\n\n        this.viewports[index].$viewport.remove();\n        this.viewports.splice(index, 1);\n\n        this.decorateViewports();\n    };\n\n    igv.TrackView.prototype.decorateViewports = function () {\n        var self = this;\n\n        this.viewports.forEach(function (viewport, index) {\n            var $viewport;\n\n            $viewport = viewport.$viewport;\n\n            if (self.viewports.length > 1) {\n                $viewport.find('.igv-multi-locus-panel-close-container').show();\n                $viewport.find('.igv-multi-locus-panel-label-div').show();\n            } else {\n                $viewport.find('.igv-multi-locus-panel-close-container').hide();\n                $viewport.find('.igv-multi-locus-panel-label-div').hide();\n            }\n\n            if (index < self.viewports.length && (1 + index) !== self.viewports.length) {\n                $viewport.addClass('igv-viewport-div-border-right');\n            } else {\n                $viewport.removeClass('igv-viewport-div-border-right');\n            }\n\n        });\n\n    };\n\n    function appendLeftHandGutter($parent) {\n\n        var self = this,\n            $leftHandGutter,\n            $canvas;\n\n        $leftHandGutter = $('<div class=\"igv-left-hand-gutter\">');\n        this.leftHandGutter = $leftHandGutter[0];\n        $parent.append($leftHandGutter);\n\n        if (this.track.dataRange) {\n\n            $leftHandGutter.click(function (e) {\n                self.browser.dataRangeDialog.configure({trackView: self});\n                self.browser.dataRangeDialog.present($(self.trackDiv));\n            });\n\n            $leftHandGutter.addClass('igv-clickable');\n        }\n\n        $canvas = $('<canvas class =\"igv-track-control-canvas\">');\n        $leftHandGutter.append($canvas);\n        this.controlCanvas = $canvas.get(0);\n        resizeControlCanvas.call(this, $leftHandGutter.outerWidth(), $leftHandGutter.outerHeight())\n    }\n\n    igv.appendRightHandGutter = function ($parent) {\n\n        let $div = $('<div class=\"igv-right-hand-gutter\">');\n        $parent.append($div);\n\n        igv.createTrackGearPopover.call(this, $div);\n    };\n\n    igv.createTrackGearPopover = function ($parent) {\n\n        let $cogContainer = $(\"<div>\", {class: 'igv-trackgear-container'});\n        $parent.append($cogContainer);\n\n        $cogContainer.append(igv.createIcon('cog'));\n\n        this.trackGearPopover = new igv.TrackGearPopover($parent);\n        this.trackGearPopover.$popover.hide();\n\n        let self = this;\n        $cogContainer.click(function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.trackGearPopover.presentMenuList(-(self.trackGearPopover.$popover.width()), 0, igv.trackMenuItemList(self));\n        });\n\n    };\n\n    function resizeControlCanvas(width, height) {\n\n        var devicePixelRatio = window.devicePixelRatio;\n\n        if (this.leftHandGutter) {\n\n            if (this.controlCanvas) {\n                $(this.controlCanvas).remove();\n            }\n\n            var $canvas = $('<canvas class =\"igv-track-control-canvas\">');\n            this.controlCanvas = $canvas[0];\n            $(this.leftHandGutter).append($canvas);\n\n            this.controlCanvas.height = devicePixelRatio * height;\n            this.controlCanvas.width = devicePixelRatio * width;\n            this.controlCanvas.style.height = height + \"px\";\n            this.controlCanvas.style.width = width + \"px\";\n            this.controlCtx = this.controlCanvas.getContext(\"2d\");\n            this.controlCtx.scale(devicePixelRatio, devicePixelRatio);\n        }\n    }\n\n    function attachDragWidget($track, $viewportContainer) {\n\n        const self = this;\n        const browser = this.browser;\n\n        this.$trackDragScrim = $('<div class=\"igv-track-drag-scrim\">');\n        $viewportContainer.append(this.$trackDragScrim);\n        this.$trackDragScrim.hide();\n\n        self.$trackManipulationHandle = $('<div class=\"igv-track-manipulation-handle\">');\n        $track.append(self.$trackManipulationHandle);\n\n        self.$trackManipulationHandle.on('mousedown', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.$trackDragScrim.show();\n            browser.startTrackDrag(self);\n        });\n\n        self.$trackManipulationHandle.on('mouseup', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            browser.endTrackDrag();\n            self.$trackDragScrim.hide();\n        });\n\n        $track.on('mouseenter', function (e) {\n\n            if (browser.dragTrack) {\n                e.preventDefault();\n                e.stopPropagation();\n                browser.updateTrackDrag(self);\n            }\n\n        });\n\n        self.$trackManipulationHandle.on('mouseleave', function (e) {\n\n            if (!browser.dragTrack) {\n                e.preventDefault();\n                e.stopPropagation();\n                self.$trackDragScrim.hide();\n            }\n        });\n    }\n\n    igv.TrackView.prototype.dataRange = function () {\n        return this.track.dataRange ? this.track.dataRange : undefined;\n    };\n\n    igv.TrackView.prototype.setDataRange = function (min, max, autoscale) {\n\n        if (min !== undefined) {\n            this.track.dataRange.min = min;\n            this.track.config.min = min;\n        }\n\n        if (max !== undefined) {\n            this.track.dataRange.max = max;\n            this.track.config.max = max;\n        }\n\n        this.track.autoscale = autoscale;\n        this.track.config.autoScale = autoscale;\n\n        this.repaintViews();\n    };\n\n    igv.TrackView.prototype.setColor = function (color) {\n        this.track.color = color;\n        this.track.config.color = color;\n        window.defaultColor = color;\n        delete window.colorBy;\n        this.repaintViews(true);\n    };\n\n    igv.TrackView.prototype.setColorSource = function (srcName){\n        window.colorBy = srcName;\n        this.repaintViews(true);\n    };\n    igv.TrackView.prototype.createColorPicker = function () {\n\n        let self = this;\n\n        const config =\n            {\n                $parent: $(this.trackDiv),\n\n                width: 384,\n\n                height: undefined,\n                closeHandler: () => {\n                    self.colorPicker.$container.hide();\n                }\n            };\n\n        this.colorPicker = new igv.genericContainer(config);\n\n        igv.createColorSwatchSelector(this.colorPicker.$container, rgb => this.setColor(rgb), rgb => this.setColorSource(rgb), this.track.color);\n\n        self.colorPicker.$container.hide();\n\n    };\n\n    igv.TrackView.prototype.presentColorPicker = function () {\n        const bbox = this.trackDiv.getBoundingClientRect();\n        this.colorPicker.origin = {x: bbox.x, y: 0};\n        this.colorPicker.$container.offset({left: this.colorPicker.origin.x, top: this.colorPicker.origin.y});\n        this.colorPicker.$container.show();\n    };\n\n    igv.TrackView.prototype.setTrackHeight = function (newHeight, update, force) {\n\n        if (!force) {\n            if (this.track.minHeight) {\n                newHeight = Math.max(this.track.minHeight, newHeight);\n            }\n\n            if (this.track.maxHeight) {\n                newHeight = Math.min(this.track.maxHeight, newHeight);\n            }\n        }\n\n        this.track.height = newHeight;\n        this.track.config.height = newHeight;\n\n        $(this.trackDiv).height(newHeight);\n\n        // If the track does not manage its own content height set it here\n        if (typeof this.track.computePixelHeight !== \"function\") {\n            this.viewports.forEach(function (vp) {\n                vp.setContentHeight(newHeight);\n                if (vp.tile) vp.tile.invalidate = true;\n            });\n            this.repaintViews();\n        }\n\n\n        resizeControlCanvas.call(this, $(this.leftHandGutter).outerWidth(), newHeight);\n\n\n        if (this.track.paintAxis) {\n            this.track.paintAxis(this.controlCtx, $(this.controlCanvas).width(), $(this.controlCanvas).height());\n        }\n\n        if (this.scrollbar) {\n            this.scrollbar.update();\n        }\n    }\n\n    igv.TrackView.prototype.isLoading = function () {\n        for (let i = 0; i < this.viewports.length; i++) {\n            if (this.viewports[i].isLoading()) return true;\n        }\n    };\n\n    igv.TrackView.prototype.resize = function () {\n\n        var width;\n\n        width = this.browser.viewportContainerWidth() / this.browser.genomicStateList.length;\n\n        if (width === 0) return;\n        this.viewports.forEach(function (viewport) {\n            viewport.setWidth(width);\n        });\n\n        var $leftHandGutter = $(this.leftHandGutter);\n        resizeControlCanvas.call(this, $leftHandGutter.outerWidth(), $leftHandGutter.outerHeight());\n\n        this.updateViews(true);\n\n    };\n\n    /**\n     * Repaint all viewports without loading any new data.   Use this for events that change visual aspect of data,\n     * e.g. color, sort order, etc, but do not change the genomic state.\n     */\n    igv.TrackView.prototype.repaintViews = function () {\n        this.viewports.forEach(function (viewport) {\n            viewport.repaint();\n        });\n        if (this.track.paintAxis) {\n            this.track.paintAxis(this.controlCtx, $(this.controlCanvas).width(), $(this.controlCanvas).height());\n        }\n    }\n\n\n    /**\n     * Functional code to execute a series of promises (actually promise factories) sequntially.\n     * Credit: Joel Thoms  https://hackernoon.com/functional-javascript-resolving-promises-sequentially-7aac18c4431e\n     *\n     * @param funcs\n     */\n    const promiseSerial = funcs =>\n        funcs.reduce((promise, func) =>\n                promise.then(result => func().then(Array.prototype.concat.bind(result))),\n            Promise.resolve([]))\n\n\n    /**\n     * Update viewports to reflect current genomic state, possibly loading additional data.\n     */\n    igv.TrackView.prototype.updateViews = async function (force) {\n\n        if (!(this.browser && this.browser.genomicStateList)) return;\n\n        const visibleViewports = this.viewports.filter(vp => vp.isVisible())\n\n        visibleViewports.forEach(function (viewport) {\n            viewport.shift();\n        });\n\n        // List of viewports that need reloading\n        const rpV = viewportsToReload.call(this, force);\n        for (let vp of rpV) {\n            await vp.loadFeatures()\n        }\n\n        const isDragging = this.browser.isDragging;\n\n        if (!isDragging && this.track.autoscale) {\n            let allFeatures = [];\n            for(let vp of visibleViewports) {\n                const referenceFrame = vp.genomicState.referenceFrame;\n                const start = referenceFrame.start;\n                const end = start + referenceFrame.toBP($(vp.contentDiv).width());\n\n                if (vp.tile && vp.tile.features) {\n                        allFeatures = allFeatures.concat(igv.FeatureUtils.findOverlapping(vp.tile.features, start, end));\n\n                }\n            }\n\n            if (typeof this.track.doAutoscale === 'function') {\n                this.track.doAutoscale(allFeatures);\n            } else {\n                this.track.dataRange = igv.doAutoscale(allFeatures);\n            }\n        }\n\n\n        // Must repaint all viewports if autoscaling\n        if (!isDragging && (this.track.autoscale || this.track.autoscaleGroup)) {\n            for(let vp of visibleViewports) {\n                vp.repaint();\n            }\n        }\n        else {\n            for(let vp of rpV) {\n                vp.repaint();\n            }\n        }\n\n        adjustTrackHeight.call(this);\n\n    }\n\n    /**\n     * Return a promise to get all in-view features.  Used for group autoscaling.\n     */\n    igv.TrackView.prototype.getInViewFeatures = function (force) {\n\n        if (!(this.browser && this.browser.genomicStateList)) {\n            return Promise.resolve([]);\n        }\n\n        var self = this, promises, rpV;\n\n        // List of viewports that need reloading\n        rpV = viewportsToReload.call(this, force);\n\n        promises = rpV.map(function (vp) {\n            return vp.loadFeatures();\n        });\n\n        return Promise.all(promises)\n\n            .then(function (tiles) {\n                var allFeatures = [];\n                self.viewports.forEach(function (vp) {\n                    if (vp.tile && vp.tile.features) {\n                        var referenceFrame, chr, start, end, cache;\n                        referenceFrame = vp.genomicState.referenceFrame;\n                        start = referenceFrame.start;\n                        end = start + referenceFrame.toBP($(vp.contentDiv).width());\n                        allFeatures = allFeatures.concat(igv.FeatureUtils.findOverlapping(vp.tile.features, start, end));\n                    }\n                });\n                return allFeatures;\n            })\n\n    };\n\n\n    function viewportsToReload(force) {\n\n        var rpV;\n\n        // List of viewports that need reloading\n        rpV = this.viewports.filter(function (viewport) {\n            if (!viewport.isVisible()) {\n                return false\n            }\n            if (!viewport.checkZoomIn()) {\n                return false\n            }\n            else {\n                var bpPerPixel, referenceFrame, chr, start, end;\n                referenceFrame = viewport.genomicState.referenceFrame;\n                chr = referenceFrame.chrName;\n                start = referenceFrame.start;\n                end = start + referenceFrame.toBP($(viewport.contentDiv).width());\n                bpPerPixel = referenceFrame.bpPerPixel;\n                return force || (!viewport.tile || viewport.tile.invalidate || !viewport.tile.containsRange(chr, start, end, bpPerPixel));\n            }\n        });\n\n        return rpV;\n\n    }\n\n    igv.TrackView.prototype.checkContentHeight = function () {\n        this.viewports.forEach(function (vp) {\n            vp.checkContentHeight();\n        })\n        adjustTrackHeight.call(this);\n    }\n\n    function adjustTrackHeight() {\n\n        var maxHeight = this.maxContentHeight();\n        if (this.track.autoHeight) {\n            this.setTrackHeight(maxHeight, false);\n        }\n        else if (this.track.paintAxis) {   // Avoid duplication, paintAxis is already called in setTrackHeight\n            this.track.paintAxis(this.controlCtx, $(this.controlCanvas).width(), $(this.controlCanvas).height());\n        }\n\n        if (this.scrollbar) {\n            const currentTop = this.viewports[0].getContentTop();\n            const newTop = Math.min(0, this.$viewportContainer.height() - minContentHeight(this.viewports));\n            if (currentTop < newTop) {\n                this.viewports.forEach(function (viewport) {\n                    $(viewport.contentDiv).css(\"top\", newTop + \"px\");\n                });\n            }\n            this.scrollbar.update();\n        }\n    }\n\n    igv.TrackView.prototype.maxContentHeight = function () {\n        return maxContentHeight(this.viewports);\n    }\n\n    function maxContentHeight(viewports) {\n        const heights = viewports.map((viewport) => viewport.getContentHeight());\n        return Math.max(...heights);\n    }\n\n    function minContentHeight(viewports) {\n        const heights = viewports.map((viewport) => viewport.getContentHeight());\n        return Math.min(...heights);\n    }\n\n    /**\n     * Do any cleanup here\n     */\n    igv.TrackView.prototype.dispose = function () {\n\n        const self = this;\n\n        if (this.$trackManipulationHandle) {\n            this.$trackManipulationHandle.off();\n        }\n\n        if (this.$innerScroll) {\n            this.$innerScroll.off();\n        }\n\n        if (this.scrollbar) {\n            this.scrollbar.dispose();\n        }\n\n        $(document).off(this.namespace);\n\n        if (typeof this.track.dispose === \"function\") {\n            this.track.dispose();\n        }\n\n        var track = this.track;\n        if (typeof track.dispose === 'function') {\n            track.dispose();\n        }\n        Object.keys(track).forEach(function (key) {\n            track[key] = undefined;\n        })\n\n        this.viewports.forEach(function (viewport) {\n            viewport.dispose();\n        })\n\n\n        if (dragged === this) {\n            dragged = undefined;\n        }\n\n        if (dragDestination === this) {\n            dragDestination = undefined;\n        }\n\n        Object.keys(this).forEach(function (key) {\n            self[key] = undefined;\n        })\n\n    };\n\n\n    igv.TrackView.prototype.scrollBy = function (delta) {\n        console.log(\"scrollby \" + delta)\n        this.scrollbar.moveScrollerBy(delta);\n    };\n\n    igv.createColorSwatchSelector = function ($genericContainer, colorHandler, colorSrcHandler, defaultColor) {\n\n        let appleColors = Object.values(igv.appleCrayonPalette);\n\n        if (defaultColor && !(typeof defaultColor === 'function')) {\n\n            // Remove 'snow' color.\n            appleColors.splice(11, 1);\n\n            // Add default color.\n            appleColors.unshift(igv.Color.rgbToHex(defaultColor));\n        }\n\n        let $swatchSubtitle = $('<h3 style=\"clear:both; width:100%\">Color by unique color</h3>');\n        $genericContainer.append($swatchSubtitle);\n        for (let color of appleColors) {\n\n            let $swatch = $('<div>', {class: 'igv-color-swatch'});\n            $genericContainer.append($swatch);\n\n            $swatch.css('background-color', color);\n\n            if ('white' === color) {\n                // do nothing\n                console.log('-');\n            } else {\n\n                $swatch.hover(() => {\n                        $swatch.get(0).style.borderColor = color;\n                    },\n                    () => {\n                        $swatch.get(0).style.borderColor = 'white';\n                    });\n\n                $swatch.on('click.trackview', (event) => {\n                    event.stopPropagation();\n                    colorHandler(color);\n                });\n\n                $swatch.on('touchend.trackview', (event) => {\n                    event.stopPropagation();\n                    colorHandler(color);\n                });\n\n            }\n\n        }\n\n        let $catSubtitle = $('<h3 style=\"clear:both; width:100%\">Color by attribute</h3>');\n        $genericContainer.append($catSubtitle);\n\n        const types = window.igv_config['color_fields'];\n        const $div  = $('<div style=\"clear:both\"></div>');\n        $genericContainer.append($($div));\n        const $select = $('<select></select>');\n        $div.append($select);\n        for (let entry of types){\n            const $option = $('<option value=\"'+entry+'\">'+entry+'</option>');\n            $select.append($option);\n        }\n        $select.change(() => {\n            const type = $select.val();\n            colorSrcHandler(type);\n        });\n\n    };\n\n    const TrackScrollbar = function ($viewportContainer, viewports, rootDiv) {\n\n        const self = this;\n        let lastY;\n\n        const guid = igv.guid();\n        const namespace = '.trackscrollbar' + guid;\n        this.namespace = namespace;\n\n        const $outerScroll = $('<div class=\"igv-scrollbar-outer-div\">');\n        this.$outerScroll = $outerScroll;\n        this.$innerScroll = $('<div>');\n\n        this.$outerScroll.append(this.$innerScroll);\n\n        this.$viewportContainer = $viewportContainer;\n        this.viewports = viewports;\n\n        this.$innerScroll.on(\"mousedown\", mouseDown);\n\n        this.$innerScroll.on(\"click\", function (event) {\n            event.stopPropagation();\n        });\n\n        this.$outerScroll.on(\"click\", function (event) {\n            self.moveScrollerBy(event.offsetY - self.$innerScroll.height() / 2);\n            event.stopPropagation();\n\n        });\n\n        function mouseDown(event) {\n\n            event.preventDefault();\n\n            const page = igv.pageCoordinates(event);\n\n            lastY = page.y;\n\n            $(document).on('mousemove' + namespace, mouseMove);\n            $(document).on('mouseup' + namespace, mouseUp);\n            $(document).on('mouseleave' + namespace, mouseUp);\n\n            // prevents start of horizontal track panning)\n            event.stopPropagation();\n        }\n\n        function mouseMove(event) {\n\n            event.preventDefault();\n            event.stopPropagation();\n\n            const page = igv.pageCoordinates(event);\n            self.moveScrollerBy(page.y - lastY);\n            lastY = page.y;\n\n        }\n\n        function mouseUp(event) {\n            $(document).off(self.namespace);\n        }\n\n    };\n\n    TrackScrollbar.prototype.moveScrollerBy = function (delta) {\n\n        const y = this.$innerScroll.position().top + delta;\n        this.moveScrollerTo(y);\n\n    }\n\n    TrackScrollbar.prototype.moveScrollerTo = function (y) {\n\n\n        const outerScrollHeight = this.$outerScroll.height();\n        const innerScrollHeight = this.$innerScroll.height();\n\n        const newTop = Math.min(Math.max(0, y), outerScrollHeight - innerScrollHeight);\n\n        const contentDivHeight = maxContentHeight(this.viewports);\n        const contentTop = -Math.round(newTop * (contentDivHeight / this.$viewportContainer.height()));\n\n        this.$innerScroll.css(\"top\", newTop + \"px\");\n\n        this.viewports.forEach(function (viewport) {\n            $(viewport.contentDiv).css(\"top\", contentTop + \"px\");\n        });\n\n    }\n\n    TrackScrollbar.prototype.dispose = function () {\n        $(window).off(this.namespace);\n    };\n\n    TrackScrollbar.prototype.update = function () {\n\n        var viewportContainerHeight,\n            contentHeight,\n            newInnerHeight;\n\n        viewportContainerHeight = this.$viewportContainer.height();\n\n        contentHeight = maxContentHeight(this.viewports);\n\n        newInnerHeight = Math.round((viewportContainerHeight / contentHeight) * viewportContainerHeight);\n\n        if (contentHeight > viewportContainerHeight) {\n            this.$outerScroll.show();\n            this.$innerScroll.height(newInnerHeight);\n        } else {\n            this.$outerScroll.hide();\n        }\n    };\n\n\n    return igv;\n\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by turner on 4/29/15.\n */\nvar igv = (function (igv) {\n\n    igv.AlertDialog = function ($parent, browser) {\n\n        this.$parent = $parent;\n        this.browser = browser;\n\n        // container\n        this.$container = $(\"<div>\", { class:'igv-alert-dialog-container' });\n        $parent.append(this.$container);\n        this.$container.offset( { left:0, top:0 } );\n\n        // header\n        let $header = $(\"<div>\");\n        this.$container.append($header);\n\n        // body container\n        let $div = $(\"<div>\", { id:'igv-alert-dialog-body' });\n        this.$container.append( $div );\n\n        // body copy\n        this.$body = $(\"<div>\", { id:'igv-alert-dialog-body-copy' });\n        $div.append( this.$body );\n\n        let self = this;\n        // igv.attachDialogCloseHandlerWithParent($header, function () {\n        //     self.$body.html('');\n        //     self.$container.offset( { left:0, top:0 } );\n        //     self.$container.hide();\n        // });\n\n        // ok container\n        let $ok_container = $(\"<div>\");\n        this.$container.append($ok_container);\n\n        // ok\n        this.$ok = $(\"<div>\");\n        $ok_container.append(this.$ok);\n\n        this.$ok.text('OK');\n\n        this.$ok.on('click', function () {\n            self.$body.html('');\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n\n        igv.makeDraggable(this.$container.get(0), $header.get(0));\n\n        this.$container.hide();\n    };\n\n    igv.AlertDialog.prototype.configure = function (config) {\n        this.$body.html(config.label);\n    };\n\n    igv.AlertDialog.prototype.presentMessageWithCallback = function (message, callback) {\n\n        this.$body.text(message);\n\n        let css =\n            {\n                left: (this.$parent.width() - this.$container.width())/2,\n                top: (this.$parent.height() - this.$container.height())/2\n            };\n        this.$container.css(css);\n\n        this.$container.show();\n\n        this.$ok.text('OK');\n\n        let self = this;\n        this.$ok.on('click', function () {\n\n            callback('OK');\n\n            self.$body.html('');\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n\n    };\n\n\n    igv.AlertDialog.prototype.present = function ($alternativeParent) {\n\n        var obj,\n            $p;\n\n        $p = $alternativeParent || this.$parent;\n        obj =\n            {\n                left: ($p.width() - this.$container.width())/2,\n                top: ($p.height() - this.$container.height())/2\n\n            };\n        this.$container.css(obj);\n\n        this.$container.show();\n    };\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by dat on 9/1/16.\n */\nvar igv = (function (igv) {\n\n    \"use strict\";\n    \n    igv.CenterGuide = function ($guideParent, $controlParent, config, browser) {\n     \n        const self = this;\n        \n        this.browser = browser;\n\n        this.$container = $('<div class=\"igv-center-guide igv-center-guide-thin\">');\n        \n        $guideParent.append(this.$container);\n\n        if (true === config.showCenterGuideButton) {\n\n            this.$centerGuideToggle = $('<div class=\"igv-nav-bar-button\">');\n            $controlParent.append(this.$centerGuideToggle);\n            this.$centerGuideToggle.text('center line');\n\n            this.$centerGuideToggle.on('click', function () {\n                if (true === browser.isCenterGuideVisible) {\n                    self.doHide();\n                } else {\n                    self.doShow();\n                }\n            });\n\n        }\n\n    };\n\n    igv.CenterGuide.prototype.doHide = function () {\n        if (this.$centerGuideToggle) {\n            this.$centerGuideToggle.removeClass('igv-nav-bar-button-clicked');\n        }\n        this.browser.hideCenterGuide();\n    };\n\n    igv.CenterGuide.prototype.doShow = function () {\n\n        if (this.$centerGuideToggle) {\n            this.$centerGuideToggle.addClass('igv-nav-bar-button-clicked');\n        }\n\n        this.browser.showCenterGuide();\n    };\n\n    igv.CenterGuide.prototype.setState = function (isCenterGuideVisible) {\n\n        if (this.$centerGuideToggle) {\n\n            if (true === isCenterGuideVisible) {\n                this.$centerGuideToggle.addClass('igv-nav-bar-button-clicked');\n            } else {\n                this.$centerGuideToggle.removeClass('igv-nav-bar-button-clicked');\n            }\n\n        }\n\n    };\n\n    igv.CenterGuide.prototype.forcedHide = function () {\n\n        if (this.$centerGuideToggle) {\n            this.$centerGuideToggle.hide();\n        }\n\n        if (true === this.browser.isCenterGuideVisible) {\n            this.$container.hide();\n        }\n\n    };\n\n    igv.CenterGuide.prototype.forcedShow = function () {\n\n        if (this.$centerGuideToggle) {\n            this.$centerGuideToggle.show();\n        }\n\n        if (true === this.browser.isCenterGuideVisible) {\n            this.$container.show();\n        }\n\n    };\n\n    igv.CenterGuide.prototype.repaint = function () {\n\n        var ppb,\n            xy,\n            halfWidth,\n            width,\n            left,\n            ls,\n            ws,\n            center,\n            referenceFrame;\n\n        if (this.browser.genomicStateList) {\n\n            referenceFrame = this.browser.genomicStateList[ 0 ].referenceFrame;\n            ppb = 1.0/referenceFrame.bpPerPixel;\n\n            if (ppb > 1) {\n\n                xy = this.browser.trackViews[ 0 ].$viewportContainer.position();\n                halfWidth = Math.round( this.browser.trackViews[ 0 ].$viewportContainer.width() / 2 );\n\n                center = xy.left + halfWidth;\n                width = referenceFrame.toPixels(1);\n                left = center - 0.5 * width;\n\n                ls = Math.round(left).toString() + 'px';\n                ws = Math.round(width).toString() + 'px';\n                this.$container.css({ left:ls, width:ws });\n\n                this.$container.removeClass('igv-center-guide-thin');\n                this.$container.addClass('igv-center-guide-wide');\n            } else {\n\n                this.$container.css({ left:'50%', width:'1px' });\n\n                this.$container.removeClass('igv-center-guide-wide');\n                this.$container.addClass('igv-center-guide-thin');\n            }\n\n        }\n\n\n    };\n\n    igv.CenterGuide.prototype.resize = function () {\n        this.repaint();\n    };\n\n    return igv;\n\n}) (igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California \n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar igv = (function (igv) {\n\n    igv.ChromosomeSelectWidget = function (browser, $parent) {\n\n        this.showAllChromosomes = browser.config.showAllChromosomes\n\n        this.$container = $('<div>', { class:'igv-chromosome-select-widget-container' });\n        $parent.append(this.$container);\n\n        this.$select = $('<select>', { 'name': 'chromosome-select-widget' });\n        this.$container.append(this.$select);\n\n        this.$select.on('change', function () {\n            browser.search($(this).val());\n            $(this).blur();\n        });\n\n    };\n\n    igv.ChromosomeSelectWidget.prototype.update = function (genome) {\n        var self = this,\n            list;\n\n        this.$select.empty();\n\n        list = this.showAllChromosomes ? genome.chromosomeNames.slice() : genome.wgChromosomeNames.slice();  // slice used to copy list\n        list.unshift('all');\n        list.forEach(function (name) {\n            var $o;\n\n            $o = $('<option>', { 'value':name });\n            self.$select.append($o);\n            $o.text(name);\n        });\n\n    };\n\n    return igv;\n\n})(igv || {});\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by dat on 3/26/18.\n */\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    igv.CursorGuide = function ($cursorGuideParent, $controlParent, config, browser) {\n\n        const self = this;\n\n        this.browser = browser;\n\n        this.$guide = $('<div class=\"igv-cursor-tracking-guide\">');\n        $cursorGuideParent.append(this.$guide);\n\n        // Guide line is bound within track area, and offset by 5 pixels so as not to interfere mouse clicks.\n        $cursorGuideParent.on('mousemove.cursor-guide', (e) => {\n\n            e.preventDefault();\n\n            const $canvas = $(document.elementFromPoint(e.clientX, e.clientY));\n            const $viewportContent = $canvas.parent();\n\n            if ($viewportContent.hasClass('igv-viewport-content-div')) {\n\n                const { bp, start, end, interpolant }  = mouseHandler(e, $viewportContent, this.$guide, $cursorGuideParent, browser);\n\n                // console.log('x ' + interpolant.toFixed(3) + ' bp ' + igv.numberFormatter(bp) + ' start ' + igv.numberFormatter(start) + ' end ' + igv.numberFormatter(end));\n\n                if (this.customMouseHandler) {\n                    this.customMouseHandler({ bp, start, end, interpolant });\n                }\n            }\n\n        });\n\n        if (true === config.showCursorTrackingGuideButton) {\n\n            this.$button = $('<div class=\"igv-nav-bar-button\">');\n            $controlParent.append(this.$button);\n            this.$button.text('cursor guide');\n\n            this.$button.on('click', function () {\n                if (true === browser.cursorGuideVisible) {\n                    self.doHide();\n                } else {\n                    self.doShow();\n                }\n            });\n\n        }\n\n    };\n\n    let mouseHandler = (event, $viewportContent, $guideLine, $guideParent, browser) => {\n\n        // pixel location of guide line\n        const guideParentMouseXY = igv.getMouseXY($guideParent.get(0), event);\n        const left = guideParentMouseXY.x + 'px';\n        $guideLine.css({ left: left });\n\n\n        // base-pair location of guide line\n        const viewportContentMouseXY = igv.getMouseXY($viewportContent.get(0), event);\n\n        const index = $viewportContent.data('genomicStateIndex');\n\n        const referenceFrame = browser.genomicStateList[ index ].referenceFrame;\n\n        const _startBP = referenceFrame.start;\n        const _endBP = 1 + referenceFrame.start + (viewportContentMouseXY.width * referenceFrame.bpPerPixel);\n\n        // bp = bp + (pixel * (bp / pixel))\n        const bp = Math.round(_startBP + viewportContentMouseXY.x * referenceFrame.bpPerPixel);\n\n        // TODO: Can we make use of this in the custom mouse handler (ie: Tracing3D)\n        const $trackContainer = $viewportContent.closest('.igv-track-container-div');\n        const trackContainerMouseXY = igv.getMouseXY($trackContainer.get(0), event);\n\n\n        return { $host: $trackContainer, host_css_left: left, bp, start: _startBP, end: _endBP, interpolant: viewportContentMouseXY.xNormalized };\n    };\n\n    igv.CursorGuide.prototype.doHide = function () {\n        if (this.$button) {\n            this.$button.removeClass('igv-nav-bar-button-clicked');\n        }\n        this.browser.hideCursorGuide();\n    };\n\n    igv.CursorGuide.prototype.doShow = function () {\n        this.$button.addClass('igv-nav-bar-button-clicked');\n        this.browser.showCursorGuide();\n    };\n\n    igv.CursorGuide.prototype.setState = function (cursorGuideVisible) {\n\n        if (this.$button) {\n\n            if (true === cursorGuideVisible) {\n                this.$button.addClass('igv-nav-bar-button-clicked');\n            } else {\n                this.$button.removeClass('igv-nav-bar-button-clicked');\n            }\n\n        }\n    };\n\n    igv.CursorGuide.prototype.disable = function () {\n        this.doHide();\n        this.$guide.hide();\n    };\n\n    igv.CursorGuide.prototype.enable = function () {\n        if (this.$button) {\n            this.$button.show();\n        }\n    };\n\n    return igv;\n\n}) (igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California \n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    igv.DataRangeDialog = function ($parent, browser) {\n        var self = this,\n            $header,\n            $buttons,\n            $div;\n\n        this.browser = browser;\n\n        // dialog container\n        this.$container = $(\"<div>\", { class:'igv-generic-dialog-container' });\n        $parent.append(this.$container);\n        this.$container.offset( { left:0, top:0 } );\n\n        // dialog header\n        $header = $(\"<div>\", { class:'igv-generic-dialog-header' });\n        this.$container.append($header);\n        igv.attachDialogCloseHandlerWithParent($header, function () {\n            self.$minimum_input.val(undefined);\n            self.$maximum_input.val(undefined);\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n\n\n        // minimun\n        this.$minimum = $(\"<div>\", { class:'igv-generic-dialog-label-input'});\n        this.$container.append(this.$minimum);\n        //\n        $div = $('<div>');\n        $div.text('Minimum');\n        this.$minimum.append($div);\n        //\n        this.$minimum_input = $(\"<input>\");\n        this.$minimum.append(this.$minimum_input);\n\n\n        // maximum\n        this.$maximum = $(\"<div>\", { class:'igv-generic-dialog-label-input'});\n        this.$container.append(this.$maximum);\n        //\n        $div = $('<div>');\n        $div.text('Maximum');\n        this.$maximum.append($div);\n        //\n        this.$maximum_input = $(\"<input>\");\n        this.$maximum.append(this.$maximum_input);\n\n        // ok | cancel\n        $buttons = $(\"<div>\", { class:'igv-generic-dialog-ok-cancel' });\n        this.$container.append($buttons);\n\n        // ok\n        this.$ok = $(\"<div>\");\n        $buttons.append(this.$ok);\n        this.$ok.text('OK');\n\n        // cancel\n        this.$cancel = $(\"<div>\");\n        $buttons.append(this.$cancel);\n        this.$cancel.text('Cancel');\n\n        this.$cancel.on('click', function () {\n            self.$minimum_input.val(undefined);\n            self.$maximum_input.val(undefined);\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n\n        //this.$container.draggable({ handle:$header.get(0) });\nigv.makeDraggable(this.$container.get(0), $header.get(0));\n\n        this.$container.hide();\n    };\n\n    igv.DataRangeDialog.prototype.configure = function (config) {\n\n        var self = this,\n            dataRange,\n            min,\n            max;\n\n        dataRange = config.trackView.dataRange();\n\n        if(dataRange) {\n            min = dataRange.min;\n            max = dataRange.max;\n        } else {\n            min = 0;\n            max = 100;\n        }\n\n        this.$minimum_input.val(min);\n        this.$maximum_input.val(max);\n\n        this.$minimum_input.unbind();\n        this.$minimum_input.on('keyup', function (e) {\n            if (13 === e.keyCode) {\n                processResults.call(self, config);\n            }\n        });\n\n        this.$maximum_input.unbind();\n        this.$maximum_input.on('keyup', function (e) {\n            if (13 === e.keyCode) {\n                processResults.call(self, config);\n            }\n        });\n\n        this.$ok.unbind();\n        this.$ok.on('click', function () {\n            processResults.call(self, config);\n        });\n    };\n\n    function processResults (config) {\n        var self = this,\n            min,\n            max;\n\n        min = parseFloat(this.$minimum_input.val());\n        max = parseFloat(this.$maximum_input.val());\n        if(isNaN(min) || isNaN(max)) {\n            self.browser.presentAlert(\"Must input numeric values\", undefined);\n        } else {\n\n            if (true === config.trackView.track.autoscale) {\n                $('#datarange-autoscale').trigger('click');\n            }\n\n            config.trackView.setDataRange(min, max, false);\n        }\n\n        this.$minimum_input.val(undefined);\n        this.$maximum_input.val(undefined);\n        this.$container.offset( { left:0, top:0 } );\n        this.$container.hide();\n    }\n\n    igv.DataRangeDialog.prototype.present = function ($parent) {\n\n        var offset_top,\n            scroll_top;\n\n        offset_top = $parent.offset().top;\n        scroll_top = $('body').scrollTop();\n\n        this.$container.offset( { left: $parent.width() - this.$container.width(), top: (offset_top + scroll_top) } );\n        this.$container.show();\n    };\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2018 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n/**\n * Make the target element movable by clicking and dragging on the handle.  This is not a general purprose function,\n * it makes several options specific to igv dialogs, the primary one being that the\n * target is absolutely positioned in pixel coordinates\n\n */\nvar igv = (function (igv) {\n\n    const namespace = \".igv_drag\";\n\n    let dragData;   // Its assumed we are only dragging one element at a time.\n\n    igv.makeDraggable = function (target, handle) {\n\n        $(handle).on('mousedown' + namespace, dragStart.bind(target));\n\n    };\n\n\n    function dragStart(event) {\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        const styleX = Math.round(parseFloat(this.style.left.replace(\"px\", \"\")));\n        const styleY = Math.round(parseFloat(this.style.top.replace(\"px\", \"\")));\n        const dragFunction = drag.bind(this);\n        const dragEndFunction = dragEnd.bind(this);\n\n        dragData =\n            {\n                dragFunction: dragFunction,\n                dragEndFunction: dragEndFunction,\n                dx: styleX - event.screenX,\n                dy: styleY - event.screenY\n            };\n\n        $(document).on('mousemove' + namespace, dragFunction);\n        $(document).on('mouseup' + namespace, dragEndFunction);\n        $(document).on('mouseleave' + namespace, dragEndFunction);\n        $(document).on('mouseexit' + namespace, dragEndFunction);\n\n    }\n\n    function drag(event) {\n\n        if(!dragData) {\n            console.log(\"No drag data!\");\n            return;\n        }\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        const styleX = dragData.dx + event.screenX;\n        const styleY = dragData.dy + event.screenY;\n\n        this.style.left = styleX + \"px\";\n        this.style.top = styleY + \"px\";\n\n        // console.log('drag ' + 'x ' + styleX + ' y ' + styleY);\n    }\n\n    function dragEnd(event) {\n\n        if(!dragData) {\n            console.log(\"No drag data!\");\n            return;\n        }\n\n\n        event.stopPropagation();\n        event.preventDefault();\n\n        const styleX = dragData.dx + event.screenX;\n        const styleY = dragData.dy + event.screenY;\n\n        // console.log('drag end ' + 'x ' + styleX + ' y ' + styleY);\n\n        this.style.left = styleX + \"px\";\n        this.style.top = styleY + \"px\";\n\n        $(document).off(namespace);\n        dragData = undefined;\n    }\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nigv.genericContainer = function ({ $parent, width, height, closeHandler }) {\n\n    var self = this,\n        $header,\n        $fa;\n\n    this.namespace = '.generic_container_' + igv.guid();\n\n    let $container = $('<div>', { class: 'igv-generic-container' });\n    $parent.append($container);\n    this.$container = $container;\n\n    if (width) {\n        this.$container.width(width);\n    }\n\n    if (height) {\n        this.$container.height(height);\n    }\n\n    let bbox = $parent.get(0).getBoundingClientRect();\n    this.origin = { x: bbox.x, y: bbox.y };\n    this.$container.offset( { left: this.origin.x, top: this.origin.y } );\n\n    // header\n    $header = $('<div>');\n    this.$container.append($header);\n\n    // close button\n    let $div = $('<i>');\n    $header.append($div);\n\n    $div.append( igv.createIcon(\"times\") );\n\n    $div.on('mousedown' + self.namespace, function (e) {\n        e.stopPropagation();\n    });\n\n    $div.on('mouseup' + self.namespace, function (e) {\n        e.stopPropagation();\n    });\n\n    $div.on('click' + self.namespace, function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        closeHandler(e);\n    });\n\n    $div.on('touchend' + self.namespace, function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        closeHandler(e);\n    });\n\n    igv.makeDraggable(this.$container.get(0), $header.get(0));\n\n};\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    igv.InputDialog = function ($parent, browser) {\n        var self = this,\n            $header,\n            $buttons;\n\n        this.browser = browser;\n\n        // dialog container\n        this.$container = $(\"<div>\", { class:'igv-generic-dialog-container' });\n        $parent.append(this.$container);\n        this.$container.offset( { left:0, top:0 } );\n\n        // dialog header\n        $header = $(\"<div>\", { class:'igv-generic-dialog-header' });\n        this.$container.append($header);\n        igv.attachDialogCloseHandlerWithParent($header, function () {\n            self.$input.val(undefined);\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n\n        // dialog label\n        this.$label = $(\"<div>\", { class:'igv-generic-dialog-one-liner'});\n        this.$container.append(this.$label);\n        this.$label.text('Unlabeled');\n\n        // input container\n        this.$input_container = $(\"<div>\", { class:'igv-generic-dialog-input'});\n        this.$container.append(this.$input_container);\n        //\n        this.$input = $(\"<input>\");\n        this.$input_container.append(this.$input);\n\n\n        // ok | cancel\n        $buttons = $(\"<div>\", { class:'igv-generic-dialog-ok-cancel' });\n        this.$container.append($buttons);\n\n        // ok\n        this.$ok = $(\"<div>\");\n        $buttons.append(this.$ok);\n        this.$ok.text('OK');\n\n        // cancel\n        this.$cancel = $(\"<div>\");\n        $buttons.append(this.$cancel);\n        this.$cancel.text('Cancel');\n\n        this.$cancel.on('click', function () {\n            self.$input.val(undefined);\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n\n        //this.$container.draggable({ handle:$header.get(0) });\n        igv.makeDraggable(this.$container.get(0), $header.get(0));\n\n        this.$container.hide();\n    };\n\n    igv.InputDialog.prototype.configure = function (config) {\n\n        var self = this;\n\n        this.$label.text(config.label);\n        \n        this.$input.val(config.input);\n\n        this.$input.unbind();\n        this.$input.on('keyup', function (e) {\n            if (13 === e.keyCode) {\n                config.click();\n                self.$input.val(undefined);\n                self.$container.offset( { left:0, top:0 } );\n                self.$container.hide();\n            }\n        });\n\n        this.$ok.unbind();\n        this.$ok.on('click', function () {\n\n            config.click();\n\n            self.$input.val(undefined);\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n\n    };\n\n    igv.InputDialog.prototype.present = function ($parent) {\n\n        var offset_top,\n            scroll_top;\n\n        offset_top = $parent.offset().top;\n        scroll_top = $('body').scrollTop();\n\n        this.$container.offset( { left: $parent.width() - this.$container.width(), top: (offset_top + scroll_top) } );\n        this.$container.show();\n    };\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by turner on 9/19/14.\n */\nvar igv = (function (igv) {\n\n    igv.Popover = function ($parent, browser) {\n        this.browser = browser;\n        this.$parent = initializationHelper.call(this, $parent);\n    };\n\n    function initializationHelper($parent) {\n\n        var self = this,\n            $popoverHeader;\n\n        // popover container\n        this.$popover = $('<div class=\"igv-popover\">');\n\n        $parent.append(this.$popover);\n\n        // popover header\n        $popoverHeader = $('<div class=\"igv-popover-header\">');\n        this.$popover.append($popoverHeader);\n\n        igv.attachDialogCloseHandlerWithParent($popoverHeader, function () {\n            self.hide();\n        });\n\n        // popover content\n        this.$popoverContent = $('<div>');\n\n        this.$popover.append(this.$popoverContent);\n\n       // this.$popover.draggable({handle: $popoverHeader.get(0)});\n       igv.makeDraggable(this.$popover.get(0), $popoverHeader.get(0));\n\n        return $parent;\n\n    }\n\n    igv.Popover.prototype.hide = function () {\n        this.$popover.hide();\n    };\n\n    igv.Popover.prototype.presentTrackContextMenu = function (e, menuItems) {\n\n        var $container,\n            $popover = this.$popover;\n\n        // Only 1 popover open at a time\n        $('.igv-popover').hide();\n\n        if (menuItems.length > 0) {\n\n            menuItems = igv.trackMenuItemListHelper(menuItems, $popover);\n\n            this.$popoverContent.empty();\n            this.$popoverContent.removeClass();\n            this.$popoverContent.addClass(\"igv-popover-track-popup-content\");\n\n            for (let item of menuItems) {\n                this.$popoverContent.append(item.object);\n            }\n\n            const page = igv.pageCoordinates(e);\n            $popover.css(clampPopoverLocation(page.x, page.y, this));\n            $popover.show();\n        }\n\n    };\n\n    igv.Popover.prototype.presentTrackContent = function (pageX, pageY, content) {\n\n        // Only 1 popover open at a time\n        $('.igv-popover').hide();\n\n        if (undefined === content) {\n            return;\n        }\n\n        this.$popoverContent.empty();\n        this.$popoverContent.removeClass();\n        this.$popoverContent.addClass(\"igv-popover-track-popup-content\");\n\n        this.$popoverContent.html(content);\n\n        this.$popover.css(clampPopoverLocation(pageX, pageY, this));\n        this.$popover.show();\n\n    };\n\n    igv.Popover.prototype.dispose = function () {\n        this.$popover.empty();\n        this.$popoverContent.empty();\n        Object.keys(this).forEach(function (key) {\n            this[key] = undefined;\n        })\n    };\n\n    function clampPopoverLocation(pageX, pageY, popover) {\n\n        var left,\n            containerCoordinates = {x: pageX, y: pageY},\n            containerRect = {x: 0, y: 0, width: $(window).width(), height: $(window).height()},\n            popupRect,\n            popupX = pageX,\n            popupY = pageY;\n\n        popupX -= popover.$parent.offset().left;\n        popupY -= popover.$parent.offset().top;\n        popupRect = {\n            x: popupX,\n            y: popupY,\n            width: popover.$popover.outerWidth(),\n            height: popover.$popover.outerHeight()\n        };\n\n        left = popupX;\n        if (containerCoordinates.x + popupRect.width > containerRect.width) {\n            left = popupX - popupRect.width;\n        }\n\n        return {\"left\": left + \"px\", \"top\": popupY + \"px\"};\n    }\n\n    return igv;\n\n})(igv || {});\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by dat on 6/14/19.\n */\nvar igv = (function (igv) {\n\n    igv.SVGSaveControl = function ($parent, browser) {\n\n        let $button = $('<div class=\"igv-nav-bar-button\">');\n        $parent.append($button);\n\n        $button.text('Save SVG');\n\n        $button.on('click.svg-save-control', () => {\n            // browser.renderSVG({ $container: $('#igv-svg-container') })\n            browser.renderSVG({});\n        });\n    };\n\n    return igv;\n\n}) (igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by turner on 1/8/19.\n */\nvar igv = (function (igv) {\n\n    igv.TrackGearPopover = function ($parent) {\n\n        // popover container\n        this.$popover = $('<div>', { class: 'igv-trackgear-popover' });\n        $parent.append(this.$popover);\n\n        // popover header\n        let $popoverHeader = $('<div>', { class: 'igv-trackgear-popover-header' });\n        this.$popover.append($popoverHeader);\n\n        let self = this;\n        igv.attachDialogCloseHandlerWithParent($popoverHeader, function () {\n            self.$popover.hide();\n        });\n\n        this.$popoverContent = $('<div>');\n        this.$popover.append(this.$popoverContent);\n\n        igv.makeDraggable(this.$popover.get(0), $popoverHeader.get(0));\n\n        $popoverHeader.on('click.track_gear_popover', function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n            // absorb click to prevent it leaking through to parent DOM element\n        });\n\n    };\n\n    igv.TrackGearPopover.prototype.presentMenuList = function (dx, dy, list) {\n\n        var self = this,\n            $container;\n\n        if (list.length > 0) {\n\n            this.$popoverContent.empty();\n\n            list = igv.trackMenuItemListHelper(list, self.$popover);\n\n            for (let item of list) {\n\n                if (item.init) {\n                    item.init();\n                }\n\n                let $e = item.object;\n                if (0 === list.indexOf(item)) {\n                    $e.removeClass('igv-track-menu-border-top');\n                }\n\n                if ($e.hasClass('igv-track-menu-border-top') || $e.hasClass('igv-trackgear-popover-check-container')) {\n                    // do nothing\n                } else if ($e.is('div')) {\n                    $e.addClass('igv-trackgear-popover-shim');\n                }\n\n                this.$popoverContent.append($e);\n\n            }\n\n            this.$popover.css({ left: (dx + 'px'), top: (dy + 'px') });\n            this.$popover.show();\n\n        }\n    };\n\n    igv.TrackGearPopover.prototype.dispose = function () {\n        this.$popover.empty();\n        this.$popoverContent.empty();\n        Object.keys(this).forEach(function (key) {\n            this[key] = undefined;\n        })\n    };\n\n    return igv;\n\n})(igv || {});\n\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by dat on 3/26/18.\n */\nvar igv = (function (igv) {\n\n    igv.TrackLabelControl = function ($parent, browser) {\n        \n        var self = this;\n\n        this.browser = browser;\n        \n        this.$button = $('<div class=\"igv-nav-bar-button\">');\n        $parent.append(this.$button);\n        this.$button.text('track labels');\n\n        this.$button.on('click', function () {\n            if (true === browser.trackLabelsVisible) {\n                self.doHide();\n            } else {\n                self.doShow();\n            }\n        });\n    };\n\n    igv.TrackLabelControl.prototype.doHide = function () {\n        this.$button.removeClass('igv-nav-bar-button-clicked');\n        this.browser.hideTrackLabels();\n    };\n\n    igv.TrackLabelControl.prototype.doShow = function () {\n        this.$button.addClass('igv-nav-bar-button-clicked');\n        this.browser.showTrackLabels();\n    };\n\n    igv.TrackLabelControl.prototype.setState = function (trackLabelsVisible) {\n        if (true === trackLabelsVisible) {\n            this.$button.addClass('igv-nav-bar-button-clicked');\n        } else {\n            this.$button.removeClass('igv-nav-bar-button-clicked');\n        }\n    };\n\n    igv.TrackLabelControl.prototype.disable = function () {\n        this.doHide();\n        this.$button.hide();\n    };\n\n    igv.TrackLabelControl.prototype.enable = function () {\n        this.$button.show();\n    };\n\n    return igv;\n\n}) (igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by turner on 12/11/14.\n */\nvar igv = (function (igv) {\n\n    igv.TrackMenuPopupDialog = function (trackMenu, dialogLabel, inputValue, ok, width, height) {\n\n        var myself = this,\n            dialogLabelRE,\n            inputValueRE,\n            htmlString;\n\n        htmlString = '<div id=\"dialog-form\" title=\"DIALOG_LABEL\"><p class=\"validateTips\"></p><form><fieldset><input type=\"text\" name=\"name\" id=\"name\" value=\"INPUT_VALUE\"></fieldset></form></div>';\n\n        dialogLabelRE = new RegExp(\"DIALOG_LABEL\", \"g\");\n        htmlString = htmlString.replace(dialogLabelRE, dialogLabel);\n\n        inputValueRE = new RegExp(\"INPUT_VALUE\", \"g\");\n        htmlString = htmlString.replace(inputValueRE, inputValue);\n\n        $( \"body\" ).append( $.parseHTML( htmlString ) );\n\n        this.dialogForm = $( \"#dialog-form\" );\n        this.form = this.dialogForm.find( \"form\" );\n        this.name = $( \"#name\" );\n        this.tips = $( \".validateTips\" );\n\n        this.dialogForm.dialog({\n\n            autoOpen: false,\n\n            width: (width || 320),\n\n            height: (height || 256),\n\n            modal: true,\n\n            buttons: {\n                ok: ok,\n\n                cancel: function() {\n\n                    myself.dialogForm.dialog( \"close\" );\n                }\n            },\n\n            close: function() {\n\n                myself.form[ 0 ].reset();\n                myself.dialogForm.remove();\n                myself.dialogForm = undefined;\n                if (trackMenu) trackMenu.hide();\n            }\n        });\n\n        this.form.on(\"submit\", function( event ) {\n\n            event.preventDefault();\n\n            $( \"#users\" ).find(\" tbody\").append( \"<tr>\" + \"<td>\" + myself.name.val() + \"</td>\" + \"</tr>\" );\n            myself.dialogForm.dialog( \"close\" );\n        });\n\n    };\n\n    igv.TrackMenuPopupDialog.prototype.updateTips = function ( t ) {\n\n        var myself = this;\n\n        this.tips.text( t ).addClass( \"ui-state-highlight\" );\n\n        setTimeout(function() {\n            myself.tips.removeClass( \"ui-state-highlight\", 1500 );\n        }, 500 );\n    };\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016-2017 The Regents of the University of California\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar igv = (function (igv) {\n\n    igv.TrackRemovalDialog = function ($parent, browser) {\n        var self = this,\n            $header,\n            $buttons;\n\n        this.browser = browser;\n\n        // dialog container\n        this.$container = $(\"<div>\", { class:'igv-generic-dialog-container' });\n        $parent.append(this.$container);\n        this.$container.offset( { left:0, top:0 } );\n\n        // dialog header\n        $header = $(\"<div>\", { class:'igv-generic-dialog-header' });\n        this.$container.append($header);\n        igv.attachDialogCloseHandlerWithParent($header, function () {\n            self.$track_name.text(undefined);\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n\n        // dialog label\n        this.$label = $(\"<div>\", { class:'igv-generic-dialog-one-liner'});\n        this.$container.append(this.$label);\n        this.$label.text('Remove track:');\n\n        // track name\n        this.$track_name = $(\"<div>\", { class:'igv-generic-dialog-one-liner igv-ellipsis' });\n        this.$container.append(this.$track_name);\n        // this.$track_name.text('this is a really long track name so I better make it interesting');\n\n        // ok | cancel\n        $buttons = $(\"<div>\", { class:'igv-generic-dialog-ok-cancel' });\n        this.$container.append($buttons);\n\n        // ok\n        this.$ok = $(\"<div>\");\n        $buttons.append(this.$ok);\n        this.$ok.text('OK');\n\n        // cancel\n        this.$cancel = $(\"<div>\");\n        $buttons.append(this.$cancel);\n        this.$cancel.text('Cancel');\n\n        this.$cancel.on('click', function () {\n            self.$track_name.text(undefined);\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n\n        // this.$container.draggable({ handle:$header.get(0) });\n        igv.makeDraggable(this.$container.get(0), $header.get(0));\n        this.$container.hide();\n    };\n\n    igv.TrackRemovalDialog.prototype.configure = function (config) {\n\n        var self = this;\n\n        this.$track_name.text(config.name || 'unnamed');\n\n        this.$ok.unbind();\n        this.$ok.on('click', function () {\n            config.click();\n            self.$track_name.text(undefined);\n            self.$container.offset( { left:0, top:0 } );\n            self.$container.hide();\n        });\n    };\n\n    igv.TrackRemovalDialog.prototype.present = function ($parent) {\n\n        var offset_top,\n            scroll_top;\n\n        offset_top = $parent.offset().top;\n        scroll_top = $('body').scrollTop();\n\n        this.$container.offset( { left: $parent.width() - this.$container.width(), top: (offset_top + scroll_top) } );\n        this.$container.show();\n    };\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by turner on 3/18/15.\n */\nvar igv = (function (igv) {\n\n    igv.UserFeedback = function ($parent) {\n\n        this.$container = $('<div class=\"igv-user-feedback\">');\n        $parent.append(this.$container);\n\n        // header\n        let $header = $('<div>');\n        this.$container.append($header);\n\n        // alert\n        let $exclamation = $('<div>');\n        $header.append($exclamation);\n\n        let $a = igv.createIcon(\"exclamation-triangle\", 'red');\n        $exclamation.append( $a );\n\n        // dismiss\n        let $dismiss = $('<div>');\n        $header.append($dismiss);\n\n        let $b = igv.createIcon(\"times-circle\", 'grey');\n        $dismiss.append( $b );\n\n        // body copy\n        let $bodyCopyContainer = $('<div>');\n        this.$container.append($bodyCopyContainer);\n\n        let $bodyCopy = $('<div>');\n        $bodyCopyContainer.append($bodyCopy);\n        $bodyCopy.text('i am user feedback');\n\n        let self;\n        $dismiss.click(function () {\n            $bodyCopy.html('');\n            self.$container.hide();\n        });\n\n    };\n\n    igv.UserFeedback.prototype.show = function () {\n        this.$container.show();\n    };\n\n    igv.UserFeedback.prototype.hide = function () {\n        this.$container.hide();\n    };\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by dat on 9/1/16.\n */\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    igv.ZoomWidget = function (browser, $parent) {\n\n        let $div;\n\n        this.$zoomContainer = $('<div class=\"igv-zoom-widget\">');\n        $parent.append(this.$zoomContainer);\n\n        // zoom out\n        $div = $('<div>');\n        this.$zoomContainer.append($div);\n\n        $div.append(igv.createIcon(\"minus-circle\"));\n\n        $div.on('click', function () {\n            browser.zoomOut();\n        });\n\n        // Range slider\n        $div = $('<div>');\n        this.$zoomContainer.append($div);\n\n        this.$slider = $('<input type=\"range\"/>');\n        $div.append(this.$slider);\n\n        this.$slider.on('change', function (e) {\n            browser.zoomWithRangePercentage(e.target.value/100.0);\n        });\n\n        // zoom in\n        $div = $('<div>');\n        this.$zoomContainer.append($div);\n\n        $div.append(igv.createIcon(\"plus-circle\"));\n\n        $div.on('click', function () {\n            browser.zoomIn();\n        });\n\n        this.currentChr = undefined;\n\n        let self = this;\n        browser.on('locuschange', function () {\n            browser.updateZoomSlider(self.$slider);\n        })\n    };\n\n    igv.ZoomWidget.prototype.hide = function () {\n        this.$zoomContainer.hide();\n    };\n\n    igv.ZoomWidget.prototype.show = function () {\n        this.$zoomContainer.show()\n    };\n\n    igv.ZoomWidget.prototype.hideSlider = function () {\n        this.$slider.hide();\n    };\n\n    igv.ZoomWidget.prototype.showSlider = function () {\n        this.$slider.show();\n    };\n\n    return igv;\n\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n/**\n * Parser for VCF files.\n */\n\nvar igv = (function (igv) {\n\n    igv.createVCFVariant = function (tokens) {\n\n        var variant = new igv.Variant();\n\n        variant.chr = tokens[0]; // TODO -- use genome aliases\n        variant.pos = parseInt(tokens[1]);\n        variant.names = tokens[2];    // id in VCF\n        variant.referenceBases = tokens[3];\n        variant.alternateBases = tokens[4];\n        variant.quality = parseInt(tokens[5]);\n        variant.filter = tokens[6];\n        variant.info = getInfoObject(tokens[7]);\n\n        init(variant);\n\n        return variant;\n\n        //\n        function getInfoObject(infoStr) {\n\n            if (!infoStr) return undefined;\n\n            var info = {};\n            infoStr.split(';').forEach(function (elem) {\n                var element = elem.split('=');\n                info[element[0]] = element[1];\n            });\n            return info;\n        };\n\n    }\n\n    function init(variant) {\n\n        if (variant.info && variant.info[\"VT\"]) {\n            variant.type = variant.info[\"VT\"].toLowerCase();\n        } else if (variant.info && variant.info[\"PERIOD\"]) {\n            variant.type = \"str\";\n        }\n        if (\"str\" === variant.type) {\n            return initSTR(variant)\n        }\n\n\n        const ref = variant.referenceBases;\n        const altBases = variant.alternateBases\n\n\n        // Check for reference block\n        if (isRef(altBases) || \".\" === altBases) {\n            variant.type = \"refblock\";\n            variant.heterozygosity = 0;\n            variant.start = variant.pos - 1;      // convert to 0-based coordinate convention\n            variant.end = variant.start + ref.length\n\n        } else {\n\n            const altTokens = altBases.split(\",\").filter(token => token.length > 0);\n            variant.alleles = [];\n            variant.start = variant.pos;\n            variant.end = variant.pos;\n\n            for (let alt of altTokens) {\n\n                variant.alleles.push(alt);\n                let alleleStart\n                let alleleEnd\n\n                // We don't yet handle  SV and other special alt representations\n                if (\"sv\" === variant.type || !isKnownAlt(alt)) {\n                    // Unknown alt representation (SA or other special tag)\n                    alleleStart = variant.pos - 1\n                    alleleEnd = alleleStart + ref.length\n\n                } else {\n\n                    let altLength = alt.length;\n                    let lengthOnRef = ref.length;\n\n                    // Trim off matching bases.  Try first match, then right -> left,  then any remaining left -> right\n                    let s = 0;\n                    if (ref.charCodeAt(0) === alt.charCodeAt(0)) {\n                        s++;\n                        altLength--;\n                        lengthOnRef--;\n                    }\n\n                    // right -> left from end\n                    while (altLength > 0 && lengthOnRef > 0) {\n                        if (alt.charCodeAt(s + altLength - 1) === ref.charCodeAt(s + lengthOnRef - 1)) {\n                            altLength--;\n                            lengthOnRef--;\n                        } else {\n                            break;\n                        }\n                    }\n\n                    // if any remaining, left -> right\n                    while (altLength > 0 && lengthOnRef > 0) {\n                        if (alt.charCodeAt(s + altLength - 1) === ref.charCodeAt(s + lengthOnRef - 1)) {\n                            s++;\n                            altLength--;\n                            lengthOnRef--;\n                        } else {\n                            break;\n                        }\n                    }\n\n                    alleleStart = variant.pos + s - 1;      // -1 for zero based coordinates\n                    alleleEnd = alleleStart + Math.max(1, lengthOnRef)     // insertions have zero length on ref, but we give them 1\n                }\n\n                variant.start = Math.min(variant.start, alleleStart);\n                variant.end = Math.max(variant.end, alleleEnd);\n\n            }\n\n        }\n    }\n\n    const knownAltBases = new Set([\"A\", \"C\", \"T\", \"G\"].map(c => c.charCodeAt(0)))\n\n    function isKnownAlt(alt) {\n        for (let i = 0; i < alt.length; i++) {\n            if (!knownAltBases.has(alt.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n\n    }\n\n    function initSTR(variant) {\n\n        var altTokens = variant.alternateBases.split(\",\"),\n            minAltLength = variant.referenceBases.length,\n            maxAltLength = variant.referenceBases.length;\n\n        variant.alleles = [];\n\n        altTokens.forEach(function (alt, index) {\n            variant.alleles.push(alt);\n            minAltLength = Math.min(minAltLength, alt.length);\n            maxAltLength = Math.max(maxAltLength, alt.length);\n        });\n\n        variant.start = variant.pos - 1;\n        variant.end = variant.start + variant.referenceBases.length;\n\n        if (variant.info && variant.info.AC && variant.info.AN) {\n            variant.heterozygosity = calcHeterozygosity(variant.info.AC, variant.info.AN).toFixed(3);\n        }\n\n\n        // Alternate allele lengths used for STR color scale.\n        variant.minAltLength = minAltLength;\n        variant.maxAltLength = maxAltLength;\n\n\n        function calcHeterozygosity(ac, an) {\n            var sum = 0,\n                altFreqs = Array.isArray(ac) ? ac : ac.split(','),\n                altCount = 0,\n                refFrac;\n\n            an = Array.isArray(an) ? parseInt(an[0]) : parseInt(an);\n            altFreqs.forEach(function (altFreq) {\n                var a = parseInt(altFreq),\n                    altFrac = a / an;\n                sum += altFrac * altFrac;\n                altCount += a;\n            });\n\n            refFrac = (an - altCount) / an;\n            sum += refFrac * refFrac;\n            return 1 - sum;\n        };\n    }\n\n\n    igv.Variant = function () {\n\n    }\n\n    igv.Variant.prototype.popupData = function (genomicLocation, genomeId) {\n\n        var self = this,\n            fields, gt;\n\n        fields = [\n            {name: \"Chr\", value: this.chr},\n            {name: \"Pos\", value: this.pos},\n            {name: \"Names\", value: this.names ? this.names : \"\"},\n            {name: \"Ref\", value: this.referenceBases},\n            {name: \"Alt\", value: this.alternateBases},\n            {name: \"Qual\", value: this.quality},\n            {name: \"Filter\", value: this.filter}\n        ];\n\n        if (this.referenceBases.length === 1 && !isRef(this.alternateBases)) {\n            let ref = this.referenceBases;\n            if (ref.length === 1) {\n                let altArray = this.alternateBases.split(\",\");\n                fields.push(\"<hr/>\");\n                for (let i = 0; i < altArray.length; i++) {\n                    let alt = this.alternateBases[i];\n                    if (alt.length === 1) {\n                        let l = igv.TrackBase.getCravatLink(this.chr, this.pos, ref, alt, genomeId)\n                        if (l) {\n                            fields.push(l);\n                            fields.push('<hr>');\n                        }\n                    }\n                }\n            }\n        }\n\n        if (this.hasOwnProperty(\"heterozygosity\")) {\n            fields.push({name: \"Heterozygosity\", value: this.heterozygosity});\n        }\n\n        // Special case of VCF with a single sample\n        if (this.calls && this.calls.length === 1) {\n            fields.push('<hr>');\n            gt = this.alleles[this.calls[0].genotype[0]] + this.alleles[this.calls[0].genotype[1]];\n            fields.push({name: \"Genotype\", value: gt});\n        }\n\n\n        if (this.info) {\n            fields.push('<hr>');\n            Object.keys(this.info).forEach(function (key) {\n                fields.push({name: key, value: arrayToString(self.info[key])});\n            });\n        }\n\n\n        return fields;\n\n\n    };\n\n    igv.Variant.prototype.isRefBlock = function () {\n        return \"refblock\" === this.type;\n    }\n\n    function isRef(altAlleles) {\n\n        return !altAlleles ||\n            altAlleles.trim().length === 0 ||\n            altAlleles === \"<NON_REF>\" ||\n            altAlleles === \"<*>\";\n\n    }\n\n    function arrayToString(value, delim) {\n\n        if (delim === undefined) delim = \",\";\n\n        if (!(Array.isArray(value))) {\n            return value;\n        }\n        return value.join(delim);\n    }\n\n\n    /**\n     * @deprecated - the GA4GH API has been deprecated.  This code no longer maintained.\n     * @param json\n     * @returns {Variant}\n     */\n    igv.createGAVariant = function (json) {\n\n        var variant = new igv.Variant();\n\n        variant.chr = json.referenceName;\n        variant.start = parseInt(json.start);  // Might get overriden below\n        variant.end = parseInt(json.end);      // Might get overriden below\n        variant.pos = variant.start + 1;       // GA4GH is 0 based.\n        variant.names = arrayToString(json.names, \"; \");\n        variant.referenceBases = json.referenceBases;\n        variant.alternateBases = arrayToString(json.alternateBases);\n        variant.quality = json.quality;\n        variant.filter = arrayToString(json.filter);\n\n\n        // Flatten GA4GH attributes array\n        variant.info = {};\n        if (json.info) {\n            Object.keys(json.info).forEach(function (key) {\n                var value,\n                    valueArray = json.info[key];\n\n                if (Array.isArray(valueArray)) {\n                    value = valueArray.join(\",\");\n                } else {\n                    value = valueArray;\n                }\n                variant.info[key] = value;\n            });\n        }\n\n\n        // Need to build a hash of calls for fast lookup\n        // Note from the GA4GH spec on call ID:\n        //\n        // The ID of the call set this variant call belongs to. If this field is not present,\n        // the ordering of the call sets from a SearchCallSetsRequest over this GAVariantSet\n        // is guaranteed to match the ordering of the calls on this GAVariant.\n        // The number of results will also be the same.\n        variant.calls = {};\n        var order = 0, id;\n        if (json.calls) {\n            json.calls.forEach(function (call) {\n                id = call.callSetId;\n                variant.calls[id] = call;\n                order++;\n\n            })\n        }\n\n        init(variant);\n\n        return variant;\n\n    }\n\n\n    return igv;\n})(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 University of California San Diego\n * Author: Jim Robinson\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Created by jrobinson on 4/15/16.\n */\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    const DEFAULT_VISIBILITY_WINDOW = 100000;\n    const MAX_PIXEL_HEIGHT = 30000;\n    const strColors = [\"rgb(150,150,150)\", \"rgb(255,0,0)\", \"rgb(255,255,0)\", \"rgb(0,0,255)\", \"rgb(0,255,0)\", \"rgb(128,0,128)\"];\n\n    const type = \"variant\";\n\n    let VariantTrack;\n\n    if (!igv.trackFactory) {\n        igv.trackFactory = {};\n    }\n\n    igv.trackFactory[type] = function (config, browser) {\n\n        if (!VariantTrack) {\n            defineClass();\n        }\n\n        return new VariantTrack(config, browser);\n    }\n\n\n    function defineClass() {\n\n        VariantTrack = igv.extend(igv.TrackBase,\n\n            function (config, browser) {\n\n                this.type = type;\n\n                this.visibilityWindow = config.visibilityWindow === undefined ? 'compute' : config.visibilityWindow;\n\n                igv.TrackBase.call(this, config, browser);\n\n                this.displayMode = config.displayMode || \"EXPANDED\";    // COLLAPSED | EXPANDED | SQUISHED\n                this.labelDisplayMode = config.labelDisplayMode;\n\n                this.variantHeight = config.variantHeight || 10;\n                this.squishedCallHeight = config.squishedCallHeight || 1;\n                this.expandedCallHeight = config.expandedCallHeight || 10;\n                this.expandedVGap = config.expandedVGap !== undefined ? config.expandedVGap : 2;\n                this.squishedVGap = config.squishedVGap !== undefined ? config.squishedVGap : 1;\n\n                this.expandedGroupGap = config.expandedGroupGap || 10;\n                this.squishedGroupGap = config.squishedGroupGap || 5;\n\n                this.featureHeight = config.featureHeight || 14;\n\n                this.featureSource = new igv.FeatureSource(config, browser.genome);\n\n                this.homrefColor = config.homrefColor || \"rgb(200, 200, 200)\"\n                this.homvarColor = config.homvarColor || \"rgb(17,248,254)\";\n                this.hetvarColor = config.hetvarColor || \"rgb(34,12,253)\";\n\n                this.sortDirection = \"ASC\";\n\n                this.nRows = 1;  // Computed dynamically\n                this.groupBy = \"None\";\n                this.filterBy = undefined;\n                this.filters = [];\n            });\n\n        VariantTrack.prototype.getFileHeader = function () {\n\n            const self = this;\n\n            if (typeof self.featureSource.getFileHeader === \"function\") {\n\n                if (self.header) {\n                    return Promise.resolve(self.header);\n                }\n                else {\n                    return self.featureSource.getFileHeader()\n\n                        .then(function (header) {\n\n                            if (header) {\n\n                                // Header (from track line).  Set properties,unless set in the config (config takes precedence)\n                                if (header.name && !self.config.name) {\n                                    self.name = header.name;\n                                }\n                                if (header.color && !self.config.color) {\n                                    self.color = \"rgb(\" + header.color + \")\";\n                                }\n\n                                self.callSets = {};\n                                self.callSetGroups = ['None'];\n                                self.callSets.None = header.callSets;\n\n                                // header.features => file is not index, all features loaded\n                                if (!header.features && 'compute' === self.visibilityWindow) {\n                                    computeVisibilityWindow.call(self);\n                                }\n                            }\n                            self.header = header;\n                            return header;\n\n                        })\n                }\n            }\n            else {\n                return Promise.resolve(null);\n            }\n\n        }\n\n        function getCallsetsLength() {\n            let length = 0;\n            const callSets = (this.filterBy) ? this.filteredCallSets : this.callSets;\n            Object.keys(callSets).forEach(function (key) {\n                if (callSets[key]) length += callSets[key].length;\n            });\n            return length;\n        }\n\n\n        function computeVisibilityWindow() {\n\n            if (this.callSets) {\n                const length = getCallsetsLength.call(this);\n                if (length < 10) {\n                    this.visibilityWindow = DEFAULT_VISIBILITY_WINDOW;\n                }\n                else {\n                    this.visibilityWindow = 1000 + ((2500 / length) * 40);\n                }\n            }\n            else {\n                this.visibilityWindow = DEFAULT_VISIBILITY_WINDOW;\n            }\n\n        }\n\n        VariantTrack.prototype.getFeatures = function (chr, bpStart, bpEnd) {\n\n            var self = this;\n\n            return this.getFileHeader()\n                .then(function (header) {\n                    return self.featureSource.getFeatures(chr, bpStart, bpEnd);\n                });\n        }\n\n\n        /**\n         * The required height in pixels required for the track content.   This is not the visible track height, which\n         * can be smaller (with a scrollbar) or larger.\n         *\n         * @param features\n         * @returns {*}\n         */\n        VariantTrack.prototype.computePixelHeight = function (features) {\n\n            const callSets = (this.filterBy) ? this.filteredCallSets : this.callSets;\n            const nCalls = callSets ? getCallsetsLength.call(this) : 0;\n\n            // Adjust call height if required for max canvas size.\n            if (nCalls > 0) {\n                let maxCallHeight = MAX_PIXEL_HEIGHT / nCalls;\n                this.squishedCallHeight = Math.min(this.squishedCallHeight, maxCallHeight);\n                this.expandedCallHeight = Math.min(this.expandedCallHeight, maxCallHeight);\n            }\n\n\n            if (this.displayMode === \"COLLAPSED\") {\n                this.nRows = 1;\n                return 10 + this.variantHeight;\n            }\n            else {\n                var maxRow = 0;\n                if (features && (typeof features.forEach === \"function\")) {\n                    features.forEach(function (feature) {\n                        if (feature.row && feature.row > maxRow) maxRow = feature.row;\n\n                    });\n                }\n                const vGap = (this.displayMode === 'EXPANDED') ? this.expandedVGap : this.squishedVGap;\n                const nRows = maxRow + 1;\n                const h = 10 + nRows * (this.variantHeight + vGap);\n                this.nRows = nRows;  // Needed in draw function\n\n                const groupsLength = Object.keys(callSets).length;\n                const groupGap = (this.displayMode === 'EXPANDED') ? this.expandedGroupGap : this.squishedGroupGap;\n                const groupSpace = (groupsLength - 1) * groupGap;\n                const callHeight = (this.displayMode === \"EXPANDED\" ? this.expandedCallHeight : this.squishedCallHeight);\n                return h + vGap + groupSpace + (nCalls + 1) * (callHeight + vGap);\n\n            }\n\n        };\n\n        VariantTrack.prototype.draw = function (options) {\n\n            var self = this,\n                featureList = options.features,\n                ctx = options.context,\n                bpPerPixel = options.bpPerPixel,\n                bpStart = options.bpStart,\n                pixelWidth = options.pixelWidth,\n                pixelHeight = options.pixelHeight,\n                bpEnd = bpStart + pixelWidth * bpPerPixel + 1,\n                callHeight = (\"EXPANDED\" === this.displayMode ? this.expandedCallHeight : this.squishedCallHeight),\n                vGap = (this.displayMode === 'EXPANDED') ? this.expandedVGap : this.squishedVGap,\n                groupGap = (this.displayMode === 'EXPANDED') ? this.expandedGroupGap : this.squishedGroupGap,\n                px, px1, pw, py, h, style, i, variant, call, callSet, j, k, group, allRef, allVar, callSets,\n                callSetGroups, nCalls,\n                firstAllele, secondAllele, lowColorScale, highColorScale, period, callsDrawn, len, variantColors;\n\n            this.variantBandHeight = 10 + this.nRows * (this.variantHeight + vGap);\n\n            callSets = (this.filterBy) ? this.filteredCallSets : this.callSets;\n            callSetGroups = (this.filterBy) ? this.filteredCallSetGroups : this.callSetGroups;\n            nCalls = getCallsetsLength.call(this);\n\n            igv.graphics.fillRect(ctx, 0, 0, pixelWidth, pixelHeight, {'fillStyle': \"rgb(255, 255, 255)\"});\n\n            if (callSets && nCalls > 0 && \"COLLAPSED\" !== this.displayMode) {\n                igv.graphics.strokeLine(ctx, 0, this.variantBandHeight, pixelWidth, this.variantBandHeight, {strokeStyle: 'rgb(224,224,224) '});\n            }\n\n            if (featureList) {\n\n                for (i = 0, len = featureList.length; i < len; i++) {\n\n                    variant = featureList[i];\n                    if (variant.end < bpStart) continue;\n                    if (variant.start > bpEnd) break;\n\n                    py = 10 + (\"COLLAPSED\" === this.displayMode ? 0 : variant.row * (this.variantHeight + vGap));\n                    h = this.variantHeight;\n\n                    // Compute pixel width.   Minimum width is 3 pixels,  if > 5 pixels create gap between variants\n                    px = Math.round((variant.start - bpStart) / bpPerPixel);\n                    px1 = Math.round((variant.end - bpStart) / bpPerPixel);\n                    pw = Math.max(1, px1 - px);\n                    if (pw < 3) {\n                        pw = 3;\n                        px -= 1;\n                    } else if (pw > 5) {\n                        px += 1;\n                        pw -= 2;\n                    }\n\n                    if ('str' === variant.type) {\n                        ctx.fillStyle = getSTRColor(variant);\n                    } else {\n                        ctx.fillStyle = this.color;\n                    }\n                    ctx.fillRect(px, py, pw, h);\n\n\n                    if (nCalls > 0 && variant.calls && \"COLLAPSED\" !== this.displayMode) {\n\n                        h = callHeight;\n\n                        if ('str' === variant.type) {\n                            lowColorScale = new igv.GradientColorScale(\n                                {\n                                    low: variant.minAltLength, lowR: 135, lowG: 206,\n                                    lowB: 250,\n                                    high: variant.referenceBases.length,\n                                    highR: 150,\n                                    highG: 150,\n                                    highB: 150\n                                }\n                            );\n                            highColorScale = new igv.GradientColorScale(\n                                {\n                                    low: variant.referenceBases.length,\n                                    lowR: 150,\n                                    lowG: 150,\n                                    lowB: 150,\n                                    high: variant.maxAltLength,\n                                    highR: 255,\n                                    highG: 69,\n                                    highB: 0\n                                }\n                            );\n                        }\n\n                        callsDrawn = 0;\n                        for (j = 0; j < callSetGroups.length; j++) {\n                            group = callSets[callSetGroups[j]];\n                            for (k = 0; k < group.length; k++) {\n                                callSet = group[k];\n                                call = variant.calls[callSet.id];\n                                if (call) {\n\n                                    py = self.variantBandHeight + vGap + (callsDrawn + variant.row) * (h + vGap) + (j * groupGap);\n\n                                    if ('str' === variant.type) {\n\n                                        if (!isNaN(call.genotype[0])) {\n                                            firstAllele = getAlleleString(call, variant, 0);\n                                            secondAllele = getAlleleString(call, variant, 1);\n\n                                            // gradient color scheme based on allele length\n                                            ctx.fillStyle = getFillColor(firstAllele);\n                                            ctx.fillRect(px, py, pw, h / 2);\n                                            ctx.fillStyle = getFillColor(secondAllele);\n                                            ctx.fillRect(px, py + h / 2, pw, h / 2);\n                                            if (self.displayMode === 'EXPANDED') {\n                                                ctx.beginPath();\n                                                ctx.moveTo(px, py + h / 2);\n                                                ctx.lineTo(px + pw, py + h / 2);\n                                                ctx.strokeStyle = '#000';\n                                                ctx.stroke();\n                                            }\n\n                                        } else {\n                                            ctx.strokeStyle = \"#B0B0B0\";\n                                        }\n\n\n                                    } else {\n                                        // Not STR -- color by zygosity\n\n                                        allVar = allRef = true;  // until proven otherwise\n                                        call.genotype.forEach(function (g) {\n                                            if (g != 0) allRef = false;\n                                            if (g == 0) allVar = false;\n                                        });\n\n                                        if (allRef) {\n                                            ctx.fillStyle = this.homrefColor;\n                                        } else if (allVar) {\n                                            ctx.fillStyle = this.homvarColor;\n                                        } else {\n                                            ctx.fillStyle = this.hetvarColor;\n                                        }\n\n                                        ctx.fillRect(px, py, pw, h);\n                                    }\n                                }\n                                callsDrawn++;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                console.log(\"No feature list\");\n            }\n\n            function getFillColor(allele) {\n                if (allele.length < variant.referenceBases.length) {\n                    return lowColorScale.getColor(allele.length);\n                } else if (allele.length > variant.referenceBases.length) {\n                    return highColorScale.getColor(allele.length);\n                } else {\n                    return \"rgb(150,150,150)\"; // gray for reference length\n                }\n            }\n\n            function getSTRColor(variant) {\n\n                var period, idx = 0;\n                if (variant.info[\"PERIOD\"]) {\n                    period = parseInt(variant.info[\"PERIOD\"]);\n                    idx = Math.max(0, Math.min(period, strColors.length - 1));\n                }\n                return strColors[idx];\n\n            }\n\n        };\n\n        function getAlleleString(call, variant, alleleNum) {\n            if (alleleNum <= 0) alleleNum = 0;\n            else alleleNum = 1;\n            return (call.genotype[alleleNum] > 0) ? variant.alleles[call.genotype[alleleNum] - 1] : variant.referenceBases;\n        }\n\n        /**\n         * Return \"popup data\" for feature @ genomic location.  Data is an array of key-value pairs\n         */\n        VariantTrack.prototype.popupData = function (config) {\n\n            const featureList = config.viewport.getCachedFeatures();\n            if (!featureList || featureList.length === 0) return [];\n\n            const genomicLocation = config.genomicLocation\n            const referenceFrame = config.viewport.genomicState.referenceFrame\n            const tolerance = Math.floor(2 * referenceFrame.bpPerPixel)  // We need some tolerance around genomicLocation, start with +/- 2 pixels\n            const genomeID = this.browser.genome.id\n            const popupData = []\n\n            for(let variant of featureList)  {\n\n                //var row, callHeight, callSets, callSetGroups, cs, call;\n\n                if ((variant.start <= genomicLocation + tolerance) &&\n                    (variant.end > genomicLocation - tolerance)) {\n\n                    if (popupData.length > 0) {\n                        popupData.push('<HR>')\n                    }\n\n                    if (\"COLLAPSED\" == self.displayMode) {\n                        Array.prototype.push.apply(popupData, variant.popupData(genomicLocation, this.type));\n                    }\n\n                    else {\n                        const yOffset = config.y\n                        const vGap = (this.displayMode === 'EXPANDED') ? this.expandedVGap : this.squishedVGap\n                        const groupGap = (this.displayMode === 'EXPANDED') ? this.expandedGroupGap : this.squishedGroupGap\n\n                        if (yOffset <= this.variantBandHeight) {  // Variant\n                            const row = (Math.floor)((yOffset - 10) / (this.variantHeight + vGap));\n                            if (variant.row === row) {\n                                Array.prototype.push.apply(popupData, variant.popupData(genomicLocation, genomeID), this.type);\n                            }\n                        }\n                        else { // Genotype\n                            const callSets = (this.filterBy) ? this.filteredCallSets : this.callSets;\n                            const callSetGroups = (this.filterBy) ? this.filteredCallSetGroups : this.callSetGroups;\n\n                            if (callSets && variant.calls) {\n\n                                const callHeight = (\"SQUISHED\" === this.displayMode ? this.squishedCallHeight : this.expandedCallHeight);\n                                var totalCalls = 0;\n\n                                let row\n                                for (let group = 0; group < callSetGroups.length; group++) {\n                                    var groupName = callSetGroups[group];\n                                    var groupCalls = callSets[groupName].length;\n                                    if (yOffset <= this.variantBandHeight + vGap + (totalCalls + groupCalls) *\n                                        (callHeight + vGap) + (group * groupGap)) {\n                                        row = Math.floor((yOffset - (this.variantBandHeight + vGap + totalCalls * (callHeight + vGap)\n                                            + (group * groupGap))) / (callHeight + vGap));\n                                        break;\n                                    }\n                                    totalCalls += groupCalls;\n                                }\n\n                                if (row >= 0) {\n                                    const cs = callSets[groupName][row];\n                                    const call = variant.calls[cs.id];\n                                    Array.prototype.push.apply(popupData, extractGenotypePopupData(call, variant, genomeID));\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            return popupData;\n\n        };\n\n        /**\n         * Genotype popup text.\n         * @param call\n         * @param variant\n         * @returns {Array}\n         */\n        function extractGenotypePopupData(call, variant, genomeId) {\n\n            var gt = '', popupData, i, allele, numRepeats = '', alleleFrac = '';\n            let cravatLinks = [];\n            popupData = [];\n\n            if ('str' === variant.type) {\n\n                var info = variant.info;\n                var alt_ac = (info.AC) ? info.AC.split(',') : undefined;\n                if (!isNaN(call.genotype[0])) {\n                    for (i = 0; i < call.genotype.length; i++) {\n                        allele = getAlleleString(call, variant, i);\n                        gt += allele;\n                        numRepeats += (allele.length / info.PERIOD).toString();\n                        var ac = (call.genotype[i] === 0) ? info.REFAC : alt_ac[call.genotype[i] - 1];\n                        alleleFrac += (parseInt(ac) / parseInt(info.AN)).toFixed(3);\n                        if (i < call.genotype.length - 1) {\n                            gt += \" | \";\n                            numRepeats += \" | \";\n                            alleleFrac += \" | \";\n                        }\n                    }\n                }\n            } else {\n                // Not STR\n                let ref = variant.referenceBases;\n                call.genotype.forEach(function (i) {\n                    if (i === 0) {\n                        gt += variant.referenceBases;\n                    }\n                    else {\n                        let alt = variant.alternateBases[i - 1];\n                        gt += alt;\n                    }\n                });\n            }\n\n\n            if (call.callSetName !== undefined) {\n                popupData.push({name: 'Name', value: call.callSetName});\n            }\n            popupData.push({name: 'Genotype', value: gt});\n            if (numRepeats) {\n                popupData.push({name: 'Repeats', value: numRepeats});\n            }\n            if (alleleFrac) {\n                popupData.push({name: 'Allele Fraction', value: alleleFrac});\n            }\n            if (call.phaseset !== undefined) {\n                popupData.push({name: 'Phase set', value: call.phaseset});\n            }\n            if (call.genotypeLikelihood !== undefined) {\n                popupData.push({name: 'genotypeLikelihood', value: call.genotypeLikelihood.toString()});\n            }\n\n            var attr = igv.sampleInformation.getAttributes(call.callSetName);\n            if (attr) {\n                Object.keys(attr).forEach(function (attrName) {\n                    var displayText = attrName.replace(/([A-Z])/g, \" $1\");\n                    displayText = displayText.charAt(0).toUpperCase() + displayText.slice(1);\n                    popupData.push({name: displayText, value: attr[attrName]});\n                });\n            }\n\n            var infoKeys = Object.keys(call.info);\n            if (infoKeys.length) {\n                popupData.push(\"<hr>\");\n            }\n            infoKeys.forEach(function (key) {\n                popupData.push({name: key, value: call.info[key]});\n            });\n\n            if (cravatLinks.length > 0) {\n                popupData.push(\"<HR/>\");\n                popupData = popupData.concat(cravatLinks);\n            }\n\n            return popupData;\n        }\n\n        VariantTrack.prototype.contextMenuItemList = function (clickState) {\n\n            const self = this;\n            const menuItems = [];\n\n            if (this.groupBy !== 'None' && igv.sampleInformation.hasAttributes()) {\n                menuItems.push({\n                    label: 'Sort groups',\n                    click: function () {\n                        try {\n                            self.callSetGroups.sort(function (a, b) {\n                                return a - b;\n                            });\n                        } catch (err) {\n                            self.callSetGroups.sort();\n                        }\n                        self.trackView.repaintViews();\n                    }\n                })\n            }\n\n            const featureList = this.clickedFeatures(clickState);\n\n            if (this.callSets && featureList && featureList.length > 0) {\n\n                featureList.forEach(function (variant) {\n\n                    if ('str' === variant.type) {\n\n                        menuItems.push({\n                            label: 'Sort by allele length',\n                            click: function () {\n                                sortCallSetsByAlleleLength(self.callSets, variant, self.sortDirection);\n                                if (this.filterBy) {\n                                    sortCallSetsByAlleleLength(self.filteredCallSets, variant, self.sortDirection)\n                                }\n                                self.sortDirection = (self.sortDirection === \"ASC\") ? \"DESC\" : \"ASC\";\n                                self.trackView.repaintViews();\n                            }\n                        });\n\n                    }\n\n                });\n            }\n\n\n            function sortCallSetsByAlleleLength(callSets, variant, direction) {\n                var d = (direction === \"DESC\") ? 1 : -1;\n                Object.keys(callSets).forEach(function (property) {\n                    callSets[property].sort(function (a, b) {\n                        var aNan = isNaN(variant.calls[a.id].genotype[0]);\n                        var bNan = isNaN(variant.calls[b.id].genotype[0]);\n                        if (aNan && bNan) {\n                            return 0;\n                        } else if (aNan) {\n                            return 1;\n                        } else if (bNan) {\n                            return -1;\n                        } else {\n                            var a0 = getAlleleString(variant.calls[a.id], variant, 0);\n                            var a1 = getAlleleString(variant.calls[a.id], variant, 1);\n                            var b0 = getAlleleString(variant.calls[b.id], variant, 0);\n                            var b1 = getAlleleString(variant.calls[b.id], variant, 1);\n                            var result = Math.max(b0.length, b1.length) - Math.max(a0.length, a1.length);\n                            if (result === 0) {\n                                result = Math.min(b0.length, b1.length) - Math.min(a0.length, a1.length);\n                            }\n                            return d * result;\n                        }\n                    });\n                });\n            }\n\n\n            return menuItems;\n\n        };\n\n        VariantTrack.prototype.groupCallSets = function (attribute) {\n\n            var self = this;\n\n            if (this.filterBy) {\n                var filteredCallSetResults = createGroups(attribute, this.filteredCallSets);\n                this.filteredCallSets = filteredCallSetResults[0];\n                this.filteredCallSetGroups = filteredCallSetResults[1];\n            }\n            var callSetResults = createGroups(attribute, this.callSets);\n            this.callSets = callSetResults[0];\n            this.callSetGroups = callSetResults[1];\n\n            this.groupBy = attribute;\n            this.trackView.repaintViews();\n\n            function createGroups(attribute, callSets) {\n                var groupedCallSets = {}, callSetGroups = [], group, attr, key,\n                    result = [];\n                Object.keys(callSets).forEach(function (i) {\n\n                    group = callSets[i];\n                    group.forEach(function (callSet) {\n\n                        key = 'None';\n\n                        if (attribute !== 'None') {\n                            attr = igv.sampleInformation.getAttributes(callSet.name);\n                            if (attr && attr[attribute]) {\n                                key = attr[attribute];\n                            }\n                        }\n\n                        if (!groupedCallSets.hasOwnProperty(key)) {\n                            groupedCallSets[key] = [];\n                            callSetGroups.push(key);\n                        }\n\n                        groupedCallSets[key].push(callSet);\n                    })\n                });\n\n                // group families in order: father, mother, then children\n                if (\"familyId\" === attribute) {\n                    Object.keys(groupedCallSets).forEach(function (i) {\n                        group = groupedCallSets[i];\n                        group.sort(function (a, b) {\n                            var attrA = igv.sampleInformation.getAttributes(a.name);\n                            var attrB = igv.sampleInformation.getAttributes(b.name);\n                            if (attrA[\"fatherId\"] === \"0\" && attrA[\"motherId\"] === \"0\") {\n                                if (attrB[\"fatherId\"] === \"0\" && attrB[\"motherId\"] === \"0\") {\n                                    if (attrA[\"sex\"] === \"1\") {\n                                        if (attrB[\"sex\"] === \"1\") {\n                                            return 0;\n                                        } else {\n                                            return -1;\n                                        }\n                                    } else if (attrB[\"sex\"] === \"1\") {\n                                        return 1;\n                                    } else {\n                                        return parseInt(attrB[\"sex\"]) - parseInt(attrA[\"sex\"]);\n                                    }\n                                } else {\n                                    return -1;\n                                }\n                            } else if (attrB[\"fatherId\"] === \"0\" && attrB[\"motherId\"] === \"0\") {\n                                return 1;\n                            } else {\n                                if (attrA[\"sex\"] === \"1\") {\n                                    if (attrB[\"sex\"] === \"1\") {\n                                        return 0;\n                                    } else {\n                                        return -1;\n                                    }\n                                } else if (attrB[\"sex\"] === \"1\") {\n                                    return 1;\n                                } else {\n                                    return parseInt(attrB[\"sex\"]) - parseInt(attrA[\"sex\"]);\n                                }\n                            }\n                        });\n                    });\n                }\n\n                result.push(groupedCallSets);\n                result.push(callSetGroups);\n                return result;\n            }\n        };\n\n\n        VariantTrack.prototype.filterByFamily = function (value) {\n            var self = this;\n            if (\"\" === value) {\n                self.filters = [];\n                self.filterBy = undefined;\n            } else {\n                try {\n                    self.filters = value.split(\",\");\n                    self.filterBy = \"familyId\";\n                    self.filteredCallSets = {};\n                    self.filteredCallSetGroups = [];\n                    Object.keys(this.callSets).forEach(function (groupName) {\n                        var group = self.callSets[groupName];\n                        group.forEach(function (callSet) {\n                            var attrs = igv.sampleInformation.getAttributes(callSet.name);\n                            var attribute = attrs[self.filterBy];\n                            if (self.filters.indexOf(attribute) !== -1) {\n                                if (!self.filteredCallSets.hasOwnProperty(groupName)) {\n                                    self.filteredCallSets[groupName] = [];\n                                    self.filteredCallSetGroups.push(groupName);\n                                }\n                                self.filteredCallSets[groupName].push(callSet);\n                            }\n                        });\n                    });\n                } catch (err) {\n                    console.log(err);\n                }\n            }\n        };\n\n\n        VariantTrack.prototype.menuItemList = function () {\n\n            var self = this,\n                menuItems = [],\n                mapped;\n\n\n            menuItems.push({object: $('<div class=\"igv-track-menu-border-top\">')});\n\n            [\"COLLAPSED\", \"SQUISHED\", \"EXPANDED\"].forEach(function (displayMode) {\n                var lut =\n                    {\n                        \"COLLAPSED\": \"Collapse\",\n                        \"SQUISHED\": \"Squish\",\n                        \"EXPANDED\": \"Expand\"\n                    };\n\n                menuItems.push(\n                    {\n                        object: igv.createCheckbox(lut[displayMode], displayMode === self.displayMode),\n                        click: function () {\n                            self.displayMode = displayMode;\n                            self.trackView.repaintViews();\n                        }\n                    });\n            });\n\n\n            if (igv.sampleInformation.hasAttributes()) {\n\n                menuItems.push({object: $('<div class=\"igv-track-menu-border-top\">')});\n\n                var attributes = igv.sampleInformation.getAttributeNames();\n\n                attributes.push(\"None\");\n\n                attributes.forEach(function (attribute) {\n                    // var label = attribute.replace(/([A-Z])/g, \" $1\");\n                    var label = attribute.charAt(0).toUpperCase() + attribute.slice(1);\n                    menuItems.push({\n                        object: igv.createCheckbox(label, attribute === self.groupBy),\n                        click: function () {\n                            self.groupCallSets(attribute);\n                        }\n                    });\n                });\n            }\n\n            if (igv.sampleInformation.getAttributeNames().indexOf(\"familyId\") !== -1) {\n                menuItems.push(igv.trackMenuItem(this.trackView, \"Filter by Family ID\", \"Family IDs\", this.filters.join(\",\"),\n                    function () {\n                        var value;\n\n                        value = self.trackView.browser.inputDialog.$input.val().trim();\n\n                        if (undefined !== value) {\n                            self.filterByFamily(value);\n                            self.trackView.repaintViews();\n                        }\n\n                    }, true));\n            }\n\n            return menuItems;\n\n        };\n    }\n\n    return igv;\n\n})\n(igv || {});\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n/**\n * Parser for VCF files.\n */\n\nvar igv = (function (igv) {\n\n\n    igv.VcfParser = function (type) {\n        this.type = type;\n    }\n\n    igv.VcfParser.prototype.parseHeader = function (data) {\n\n        var dataWrapper,\n            tokens,\n            line,\n            j,\n            header = {},\n            id,\n            values,\n            ltIdx,\n            gtIdx,\n            type;\n\n        dataWrapper = igv.getDataWrapper(data);\n\n        // First line must be file format\n        line = dataWrapper.nextLine();\n        if (line.startsWith(\"##fileformat\")) {\n            header.version = line.substr(13);\n        }\n        else {\n            throw new Error(\"Invalid VCF file: missing fileformat line\");\n        }\n\n        while (line = dataWrapper.nextLine()) {\n\n            if (line.startsWith(\"#\")) {\n\n                id = null;\n                values = {};\n\n                if (line.startsWith(\"##\")) {\n\n                    if (line.startsWith(\"##INFO\") || line.startsWith(\"##FILTER\") || line.startsWith(\"##FORMAT\")) {\n\n                        ltIdx = line.indexOf(\"<\");\n                        gtIdx = line.lastIndexOf(\">\");\n\n                        if (!(ltIdx > 2 && gtIdx > 0)) {\n                            console.log(\"Malformed VCF header line: \" + line);\n                            continue;\n                        }\n\n                        type = line.substring(2, ltIdx - 1);\n                        if (!header[type])  header[type] = {};\n\n                        //##INFO=<ID=AF,Number=A,Type=Float,Description=\"Allele frequency based on Flow Evaluator observation counts\">\n                        // ##FILTER=<ID=NOCALL,Description=\"Generic filter. Filtering details stored in FR info tag.\">\n                        // ##FORMAT=<ID=AF,Number=A,Type=Float,Description=\"Allele frequency based on Flow Evaluator observation counts\">\n\n                        tokens = igv.splitStringRespectingQuotes(line.substring(ltIdx + 1, gtIdx - 1), \",\");\n\n                        tokens.forEach(function (token) {\n                            var kv = token.split(\"=\");\n                            if (kv.length > 1) {\n                                if (kv[0] === \"ID\") {\n                                    id = kv[1];\n                                }\n                                else {\n                                    values[kv[0]] = kv[1];\n                                }\n                            }\n                        });\n\n                        if (id) {\n                            header[type][id] = values;\n                        }\n                    }\n                    else {\n                        // Ignoring other ## header lines\n                    }\n                }\n                else if (line.startsWith(\"#CHROM\")) {\n                    tokens = line.split(\"\\t\");\n\n                    if (tokens.length > 8) {\n\n                        // call set names -- use column index for id\n                        header.callSets = [];\n                        for (j = 9; j < tokens.length; j++) {\n                            header.callSets.push({id: j, name: tokens[j]});\n                        }\n                    }\n                }\n\n            }\n            else {\n                break;\n            }\n\n        }\n\n        this.header = header;  // Will need to intrepret genotypes and info field\n\n        return header;\n    }\n\n    function extractCallFields(tokens) {\n\n        var callFields = {\n                genotypeIndex: -1,\n                fields: tokens\n            },\n            i;\n\n        for (i = 0; i < tokens.length; i++) {\n            if (\"GT\" === tokens[i]) {\n                callFields.genotypeIndex = i;\n            }\n        }\n\n        return callFields;\n\n    }\n\n    /**\n     * Parse data as a collection of Variant objects.\n     *\n     * @param data\n     * @returns {Array}\n     */\n    igv.VcfParser.prototype.parseFeatures = function (data) {\n\n        var dataWrapper,\n            line,\n            allFeatures = [],\n            callSets = this.header.callSets,\n            variant,\n            tokens,\n            callFields,\n            index,\n            token;\n\n\n        dataWrapper = igv.getDataWrapper(data);\n\n        while (line = dataWrapper.nextLine()) {\n\n            if (!line.startsWith(\"#\")) {\n\n                tokens = line.split(\"\\t\");\n\n                if (tokens.length >= 8) {\n                \n                    variant = igv.createVCFVariant(tokens);\n\n                    if (variant.isRefBlock())  continue;     // Skip reference blocks\n                   \n                    variant.header = this.header;       // Keep a pointer to the header to interpret fields for popup text\n                    allFeatures.push(variant);\n\n                    if (tokens.length > 9) {\n\n                        // Format\n                        callFields = extractCallFields(tokens[8].split(\":\"));\n\n                        variant.calls = {};\n\n                        for (index = 9; index < tokens.length; index++) {\n\n                            token = tokens[index];\n\n                            var callSet = callSets[index - 9],\n                                call = {\n                                    callSetName: callSet.name,\n                                    info: {}\n                                };\n\n                            variant.calls[callSet.id] = call;\n\n                            token.split(\":\").forEach(function (callToken, idx) {\n\n                                switch (idx) {\n                                    case callFields.genotypeIndex:\n                                        call.genotype = [];\n                                        callToken.split(/[\\|\\/]/).forEach(function (s) {\n                                            call.genotype.push(parseInt(s));\n                                        });\n                                        break;\n\n                                    default:\n                                        call.info[callFields.fields[idx]] = callToken;\n                                }\n                            });\n                        }\n\n                    }\n\n                }\n            }\n        }\n\n        return allFeatures;\n    }\n\n\n    return igv;\n})(igv || {});\n\n/**\n * Created by dat on 9/16/16.\n */\n\n\n\nvar igv = (function (igv) {\n\n    \"use strict\";\n\n    const NOT_LOADED_MESSAGE = 'Error loading track data';\n    const MAX_PIXEL_HEIGHT = 32000;\n    const MAX_PIXEL_COUNT = 200000000;\n\n    igv.Viewport = function (trackView, $container, genomicState, width) {\n\n        const self = this;\n\n        this.trackView = trackView;\n        this.genomicState = genomicState;\n        this.browser = trackView.browser;\n\n        // viewport\n        this.$viewport = $('<div class=\"igv-viewport-div\">');\n        $container.append(this.$viewport);\n\n        // viewport-content\n        const $div = $(\"<div>\", {class: 'igv-viewport-content-div'});\n        this.$viewport.append($div);\n\n        // know the genomic state index\n        const index = this.browser.genomicStateList.indexOf(genomicState);\n        $div.data('genomicStateIndex', index);\n\n        $div.height(this.$viewport.height());\n        this.contentDiv = $div.get(0);\n\n        // viewport canvas\n        const $canvas = $('<canvas>');\n        $(this.contentDiv).append($canvas);\n\n        this.canvas = $canvas.get(0);\n        this.ctx = this.canvas.getContext(\"2d\");\n\n        this.setWidth(width);\n\n        if (\"sequence\" === trackView.track.type) {\n\n            this.$viewport.addClass('igv-viewport-sequence');\n        }\n\n        if ('ruler' === trackView.track.type) {\n\n            this.rulerSweeper = new igv.RulerSweeper(this);\n\n            trackView.track.appendMultiPanelCloseButton(this.$viewport, this.genomicState);\n\n            this.$rulerLabel = $('<div class = \"igv-multi-locus-panel-label-div\">');\n\n            this.$rulerLabel.click(function (e) {\n                self.browser.selectMultiLocusPanelWithGenomicState(self.genomicState);\n            });\n\n            $(this.contentDiv).append(this.$rulerLabel);\n\n            if (true === igv.isWholeGenomeView(this.genomicState.referenceFrame)) {\n                enableRulerTrackMouseHandlers.call(this);\n            } else {\n                disableRulerTrackMouseHandlers.call(this);\n            }\n\n        } else {\n            addMouseHandlers.call(this);\n\n            // const $spinnerContainer = $('<div class=\"igv-viewport-spinner\">');\n            // const dimen = 32;\n            // $spinnerContainer.css({'font-size': dimen + 'px'});\n\n            this.$spinner = $('<div class=\"igv-viewport-spinner\">');\n            this.$spinner.append(igv.createIcon(\"spinner\"));\n\n            this.$viewport.append(this.$spinner);\n            this.stopSpinner();\n\n            if (\"sequence\" !== trackView.track.type) {\n\n                this.popover = new igv.Popover(self.browser.$content);\n\n                let str = trackView.track.name.toLowerCase().split(' ').join('_');\n                str = str + '_' + this.browser.genomicStateList.indexOf(this.genomicState);\n\n                this.popover.$popover.attr('id', str);\n\n                self.$zoomInNotice = createZoomInNotice.call(this, $(this.contentDiv));\n            }\n        }\n\n        if (trackView.track.name) {\n\n            this.$trackLabel = $('<div class=\"igv-track-label\">');\n            this.$viewport.append(this.$trackLabel);\n\n            igv.setTrackLabel(this.$trackLabel, trackView.track, trackView.track.name);\n\n            if (false === self.browser.trackLabelsVisible) {\n                this.$trackLabel.hide();\n            }\n\n            this.$trackLabel.click(function (e) {\n                let str;\n\n                e.stopPropagation();\n\n                if (typeof trackView.track.description === 'function') {\n                    str = trackView.track.description();\n                } else {\n                    str = trackView.track.name;\n                }\n\n                const page = igv.pageCoordinates(e);\n\n                self.popover.presentTrackContent(page.x, page.y, str);\n\n            });\n            this.$trackLabel.mousedown(function (e) {\n                // Prevent bubbling\n                e.stopPropagation();\n            });\n            this.$trackLabel.mouseup(function (e) {\n                // Prevent  bubbling\n                e.stopPropagation();\n            });\n            this.$trackLabel.mousemove(function (e) {\n                // Prevent  bubbling\n                e.stopPropagation();\n            });\n\n\n        }\n\n    };\n\n    function createZoomInNotice($parent) {\n\n        const $notice = $('<div class=\"zoom-in-notice-container\">');\n        $parent.append($notice);\n\n        const $e = $('<div>');\n        $notice.append($e);\n        $e.text('Zoom in to see features');\n\n        $notice.hide();\n\n        return $notice;\n    }\n\n    igv.Viewport.prototype.isVisible = function () {\n        return this.$viewport.width()\n    }\n\n    igv.Viewport.prototype.setWidth = function (width) {\n        this.$viewport.outerWidth(width);\n        this.canvas.style.width = (this.$viewport.width() + 'px');\n        this.canvas.setAttribute('width', this.$viewport.width());\n    };\n\n    igv.Viewport.prototype.startSpinner = function () {\n\n        const $spinner = this.$spinner;\n        if ($spinner) {\n            $spinner.addClass(\"fa5-spin\");\n            $spinner.show();\n        }\n    };\n\n    igv.Viewport.prototype.stopSpinner = function () {\n\n        const $spinner = this.$spinner;\n        if ($spinner) {\n            $spinner.hide();\n            $spinner.removeClass(\"fa5-spin\");\n        }\n    };\n\n    igv.Viewport.prototype.showMessage = function (message) {\n        if (!this.messageDiv) {\n            this.messageDiv = document.createElement('div');\n            this.messageDiv.className = 'igv-viewport-message';\n            this.contentDiv.append(this.messageDiv)\n        }\n        this.messageDiv.textContent = message;\n        this.messageDiv.style.display = 'inline-block'\n    };\n\n    igv.Viewport.prototype.hideMessage = function (message) {\n        if (this.messageDiv)\n            this.messageDiv.style.display = 'none'\n    };\n\n\n    igv.Viewport.prototype.checkZoomIn = function () {\n\n        if (!(viewIsReady.call(this))) {\n            return false;\n        }\n\n        if (this.$zoomInNotice) {\n            if (showZoomInNotice.call(this)) {\n                if (this.canvas) {\n                    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                    this.tile = undefined;\n                }\n                this.$zoomInNotice.show();\n                return false;\n            } else {\n                this.$zoomInNotice.hide();\n                return true;\n            }\n        }\n\n        return true;\n\n\n        function showZoomInNotice() {\n\n            const referenceFrame = this.genomicState.referenceFrame;\n\n            if (referenceFrame.chrName.toLowerCase() === \"all\" && !this.trackView.track.supportsWholeGenome()) {\n                return true;\n            }\n            else {\n                return (\n                    this.trackView.track.visibilityWindow !== undefined &&\n                    this.trackView.track.visibilityWindow > 0 &&\n                    (referenceFrame.bpPerPixel * this.$viewport.width() > this.trackView.track.visibilityWindow));\n            }\n        }\n    }\n\n    igv.Viewport.prototype.shift = function () {\n        const self = this;\n        const referenceFrame = self.genomicState.referenceFrame;\n\n        if (self.canvas &&\n            self.tile &&\n            self.tile.chr === referenceFrame.chrName &&\n            self.tile.bpPerPixel === referenceFrame.bpPerPixel) {\n\n            const pixelOffset = Math.round((self.tile.startBP - referenceFrame.start) / referenceFrame.bpPerPixel);\n            self.canvas.style.left = pixelOffset + \"px\";\n        }\n    }\n\n    igv.Viewport.prototype.loadFeatures = function () {\n\n        var self = this;\n\n        const genomicState = self.genomicState;\n        const referenceFrame = genomicState.referenceFrame;\n\n        const chr = referenceFrame.chrName;\n\n        // Expand the requested range so we can pan a bit without reloading.  But not beyond chromosome bounds\n        const chrLength = this.browser.genome.getChromosome(chr).bpLength;\n\n        const pixelWidth = $(self.contentDiv).width() * 3;\n        const bpWidth = pixelWidth * referenceFrame.bpPerPixel;\n        const bpStart = Math.floor(Math.max(0, referenceFrame.start - bpWidth / 3));\n        const bpEnd = Math.ceil(Math.min(chrLength, bpStart + bpWidth));\n\n\n        if (self.loading && self.loading.start === bpStart && self.loading.end === bpEnd) {\n            return Promise.resolve(undefined);\n        }\n\n        self.loading = {start: bpStart, end: bpEnd};\n\n        self.startSpinner();\n\n        // console.log('get features');\n        return getFeatures.call(self, referenceFrame.chrName, bpStart, bpEnd, referenceFrame.bpPerPixel, self)\n\n            .then(function (features) {\n                self.hideMessage();\n                self.tile = new Tile(referenceFrame.chrName, bpStart, bpEnd, referenceFrame.bpPerPixel, features);\n                self.loading = false;\n                self.stopSpinner();\n                return self.tile;\n            })\n\n            .catch(function (error) {\n                self.showMessage(NOT_LOADED_MESSAGE);\n                self.loading = false;\n                self.stopSpinner();\n                throw error;\n            })\n    }\n\n\n    /**\n     *\n     * @param tile - the tile is created whenever features are loaded.  It contains the genomic state\n     * representing the features,as well as the features.  The object evolved, at one time it was an image tile.\n     * Should be renamed.\n     */\n    igv.Viewport.prototype.repaint = function (tile) {\n\n        var self = this;\n\n        //\n        if (!tile) {\n            tile = this.tile;\n        }\n        if (!tile) {\n            return;\n        }\n\n        const isWGV = igv.isWholeGenomeView(this.genomicState.referenceFrame);\n\n        const features = tile.features;\n\n        const genomicState = this.genomicState;\n        const referenceFrame = genomicState.referenceFrame;\n\n        const bpPerPixel = isWGV ? referenceFrame.initialEnd / this.$viewport.width() : tile.bpPerPixel;\n        const bpStart = isWGV ? 0 : tile.startBP;\n        const bpEnd = isWGV ? referenceFrame.initialEnd : tile.endBP;\n        const pixelWidth = isWGV ? this.$viewport.width() : Math.ceil((bpEnd - bpStart) / bpPerPixel);\n\n        let pixelHeight = self.getContentHeight();\n        if (0 === pixelWidth || 0 === pixelHeight) {\n            if (self.canvas) {\n                $(self.canvas).remove();\n            }\n            return;\n        }\n\n        // Always use high DPI if in compressed display mode, otherwise use preference setting;\n        let devicePixelRatio;\n        if (\"FILL\" === this.trackView.track.displayMode) {\n            devicePixelRatio = window.devicePixelRatio;\n        } else {\n            devicePixelRatio = (this.trackView.track.supportHiDPI === false) ? 1 : window.devicePixelRatio;\n        }\n\n        // Set limits on canvas size.  See https://github.com/igvteam/igv.js/issues/792\n        const origPixelHeight = pixelHeight;\n        pixelHeight = Math.min(Math.floor(MAX_PIXEL_COUNT / (pixelWidth * devicePixelRatio)), pixelHeight);\n        pixelHeight = Math.min(Math.floor(MAX_PIXEL_HEIGHT) / (devicePixelRatio * devicePixelRatio), pixelHeight);\n        if (pixelHeight < origPixelHeight) {\n            console.error(\"Maximum pixel height exceeded for track \" + this.trackView.track.name);\n        }\n\n\n        const drawConfiguration =\n            {\n                features: features,\n\n                pixelWidth: pixelWidth,\n                pixelHeight: pixelHeight,\n\n                bpStart: bpStart,\n                bpEnd: bpEnd,\n                bpPerPixel: bpPerPixel,\n\n                referenceFrame: referenceFrame,\n                genomicState: genomicState,\n\n                selection: self.selection,\n\n                viewport: self,\n                viewportWidth: self.$viewport.width(),\n                viewportContainerX: referenceFrame.toPixels(referenceFrame.start - bpStart),\n                viewportContainerWidth: this.browser.viewportContainerWidth()\n            };\n\n\n        const newCanvas = $('<canvas>').get(0);\n        newCanvas.style.width = pixelWidth + \"px\";\n        newCanvas.style.height = pixelHeight + \"px\";\n        newCanvas.width = devicePixelRatio * pixelWidth;\n        newCanvas.height = devicePixelRatio * pixelHeight;\n        const ctx = newCanvas.getContext(\"2d\");\n        ctx.scale(devicePixelRatio, devicePixelRatio);\n\n        const pixelOffset = Math.round((bpStart - referenceFrame.start) / referenceFrame.bpPerPixel);\n        newCanvas.style.position = 'absolute';\n        newCanvas.style.left = pixelOffset + \"px\";\n        newCanvas.style.top = self.canvas.style.top + \"px\";\n        drawConfiguration.context = ctx;\n\n        ctx.save();\n\n        draw.call(this, drawConfiguration, features);\n\n        ctx.restore();\n\n        if (self.canvas) {\n            $(self.canvas).remove();\n        }\n\n        self.canvas = newCanvas;\n        self.ctx = ctx;\n        $(self.contentDiv).append(newCanvas);\n\n\n    };\n\n    /**\n     *\n     * @param tile - the tile is created whenever features are loaded.  It contains the genomic state\n     * representing the features,as well as the features.  The object evolved, at one time it was an image tile.\n     * Should be renamed.\n     */\n    igv.Viewport.prototype.toSVG = function (tile) {\n\n        const genomicState = this.genomicState;\n        const referenceFrame = genomicState.referenceFrame;\n        const bpPerPixel = tile.bpPerPixel;\n        const features = tile.features;\n        const pixelWidth = this.$viewport.width();\n        const pixelHeight = this.$viewport.height();\n        const bpStart = referenceFrame.start;\n        const bpEnd = referenceFrame.start + pixelWidth * referenceFrame.bpPerPixel;\n\n        const ctx = new C2S(\n            {\n                // svg\n                width: pixelWidth,\n                height: pixelHeight,\n                viewbox:\n                    {\n                        x: 0,\n                        y: -$(this.contentDiv).position().top,\n                        width: pixelWidth,\n                        height: pixelHeight\n                    }\n\n            });\n\n        const drawConfiguration =\n            {\n                viewport: this,\n                context: ctx,\n                pixelWidth: pixelWidth,\n                pixelHeight: pixelHeight,\n                bpStart: bpStart,\n                bpEnd: bpEnd,\n                bpPerPixel: bpPerPixel,\n                referenceFrame: referenceFrame,\n                genomicState: this.genomicState,\n                selection: this.selection,\n                viewportWidth: pixelWidth,\n                viewportContainerX: 0,\n                viewportContainerWidth: this.browser.viewportContainerWidth()\n            };\n\n        draw.call(this, drawConfiguration, features);\n\n        return ctx.getSerializedSvg(true);\n\n    };\n\n    async function draw(drawConfiguration, features) {\n\n        if (features) {\n            drawConfiguration.features = features;\n            this.trackView.track.draw(drawConfiguration);\n        }\n\n        const browser = this.browser;\n\n        const roi = mergeArrays(browser.roi, this.trackView.track.roi)\n\n        if (roi) {\n            for (let r of roi) {\n                const f = await\n                    r.getFeatures(drawConfiguration.referenceFrame.chrName, drawConfiguration.bpStart, drawConfiguration.bpEnd)\n                if (f && f.length > 0) {\n                    drawConfiguration.features = f;\n                    r.draw(drawConfiguration);\n                }\n\n            }\n        }\n    }\n\n\n    function viewIsReady() {\n        return this.browser && this.browser.genomicStateList && this.genomicState.referenceFrame;\n    }\n\n    function enableRulerTrackMouseHandlers() {\n\n        const index = this.browser.genomicStateList.indexOf(this.genomicState);\n        const namespace = '.ruler_track_viewport_' + index;\n\n        // console.log(' enable ruler mouse handler ' + index);\n\n        let self = this;\n        this.$viewport.on('click' + namespace, (e) => {\n\n            const pixel = igv.translateMouseCoordinates(e, self.$viewport.get(0)).x;\n            const bp = Math.round(self.genomicState.referenceFrame.start + self.genomicState.referenceFrame.toBP(pixel));\n\n            let searchString;\n\n            if (1 === self.browser.genomicStateList.length) {\n                searchString = self.browser.genome.getChromosomeCoordinate(bp).chr;\n            } else {\n\n                let loci = self.browser.genomicStateList.map((genomicState) => {\n                    return genomicState.locusSearchString;\n                });\n\n                loci[self.browser.genomicStateList.indexOf(self.genomicState)] = self.browser.genome.getChromosomeCoordinate(bp).chr;\n\n                searchString = loci.join(' ');\n            }\n\n            self.browser.search(searchString);\n        });\n\n\n    }\n\n    function disableRulerTrackMouseHandlers() {\n\n\n        const index = this.browser.genomicStateList.indexOf(this.genomicState);\n        const namespace = '.ruler_track_viewport_' + index;\n\n        // console.log('disable ruler mouse handler ' + index);\n\n        this.$viewport.off(namespace);\n    }\n\n    igv.Viewport.prototype.setContentHeight = function (contentHeight) {\n        // Maximum height of a canvas is ~32,000 pixels on Chrome, possibly smaller on other platforms\n        contentHeight = Math.min(contentHeight, 32000);\n\n        $(this.contentDiv).height(contentHeight);\n\n        if (this.tile) this.tile.invalidate = true;\n    };\n\n    igv.Viewport.prototype.getContentHeight = function () {\n        return $(this.contentDiv).height();\n    };\n\n    igv.Viewport.prototype.getContentTop = function () {\n        return this.contentDiv.offsetTop;\n    }\n\n    igv.Viewport.prototype.isLoading = function () {\n        return this.loading;\n    };\n\n    igv.Viewport.prototype.saveImage = function () {\n\n        if (!this.ctx) return;\n\n        const devicePixelRatio = window.devicePixelRatio;\n        const w = this.$viewport.width() * devicePixelRatio;\n        const h = this.$viewport.height() * devicePixelRatio;\n        const x = -$(this.canvas).position().left * devicePixelRatio;\n        const y = -$(this.contentDiv).position().top * devicePixelRatio;\n\n        const imageData = this.ctx.getImageData(x, y, w, h);\n        const exportCanvas = document.createElement('canvas');\n        const exportCtx = exportCanvas.getContext('2d');\n        exportCanvas.width = imageData.width;\n        exportCanvas.height = imageData.height;\n        exportCtx.putImageData(imageData, 0, 0);\n\n        // filename = this.trackView.track.name + \".png\";\n        const filename = (this.$trackLabel.text() ? this.$trackLabel.text() : \"image\") + \".png\";\n        const data = exportCanvas.toDataURL(\"image/png\");\n        igv.download(filename, data);\n    };\n\n    igv.Viewport.prototype.renderSVGContext = function (context, offset) {\n\n        const yScrollDelta = $(this.contentDiv).position().top;\n        const viewportBBox = this.$viewport.get(0).getBoundingClientRect();\n\n\n        let str = this.trackView.track.name || this.trackView.track.id;\n        str = str.replace(/\\W/g, '');\n\n        const index = this.browser.genomicStateList.indexOf(this.genomicState);\n        const id = str.toLowerCase() + '_genomic_index_' + index;\n\n        // If present, paint axis canvas. Only in first multi-locus panel.\n        if (0 === index && typeof this.trackView.track.paintAxis === 'function') {\n\n            const w = $(this.trackView.controlCanvas).width();\n            const h = $(this.trackView.controlCanvas).height();\n\n            context.addTrackGroupWithTranslationAndClipRect((id + '_axis'), offset.deltaX - w, offset.deltaY, w, h, 0);\n\n            context.save();\n            this.trackView.track.paintAxis(context, w, h);\n            context.restore();\n        }\n\n        const dx = offset.deltaX + (index * context.multiLocusGap);\n        const dy = offset.deltaY + yScrollDelta;\n\n        context.addTrackGroupWithTranslationAndClipRect(id, dx, dy, viewportBBox.width, viewportBBox.height, -yScrollDelta);\n\n        const width = this.$viewport.width();\n        const height = this.$viewport.height();\n\n        let referenceFrame = this.genomicState.referenceFrame;\n\n        context.save();\n\n        const drawConfig =\n            {\n                context: context,\n\n                viewport: this,\n\n                referenceFrame: referenceFrame,\n\n                genomicState: this.genomicState,\n\n                pixelWidth: width,\n                pixelHeight: height,\n\n                viewportWidth: width,\n\n                viewportContainerX: 0,\n                viewportContainerWidth: this.browser.viewportContainerWidth(),\n\n                bpStart: referenceFrame.start,\n                bpEnd: referenceFrame.start + width * referenceFrame.bpPerPixel,\n\n                bpPerPixel: referenceFrame.bpPerPixel,\n\n                selection: this.selection\n            };\n\n        const features = this.tile ? this.tile.features : [];\n\n        draw.call(this, drawConfig, features);\n\n        context.restore();\n\n\n    };\n\n    igv.Viewport.prototype.saveSVG = function () {\n        const str = this.$trackLabel ? this.$trackLabel.text() : this.trackView.track.id;\n        const filename = str + \".svg\";\n        const svg = this.toSVG(this.tile);\n        const data = URL.createObjectURL(new Blob([svg], {\n            type: \"application/octet-stream\"\n        }));\n        igv.download(filename, data);\n    };\n\n    /**\n     * Called when the associated track is removed.  Do any needed cleanup here.\n     */\n    igv.Viewport.prototype.dispose = function () {\n        const self = this;\n\n        if (this.popover) {\n            this.popover.$popover.off();\n            this.popover.$popover.empty();\n            this.popover.$popover.remove();\n        }\n\n        $(this.canvas).off();\n        $(this.canvas).empty();\n\n        $(this.contentDiv).off();\n        $(this.contentDiv).empty();\n\n        this.$viewport.off();\n        this.$viewport.empty();\n\n        // Null out all properties -- this should not be neccessary, but just in case there is a\n        // reference to self somewhere we want to free memory.\n        Object.keys(this).forEach(function (key, i, list) {\n            self[key] = undefined;\n        })\n    };\n\n    igv.Viewport.prototype.getCachedFeatures = function () {\n        return this.tile ? this.tile.features : [];\n    };\n\n    var Tile = function (chr, tileStart, tileEnd, bpPerPixel, features) {\n        this.chr = chr;\n        this.startBP = tileStart;\n        this.endBP = tileEnd;\n        this.bpPerPixel = bpPerPixel;\n        this.features = features;\n    };\n\n    Tile.prototype.containsRange = function (chr, start, end, bpPerPixel) {\n        return this.bpPerPixel === bpPerPixel && start >= this.startBP && end <= this.endBP && chr === this.chr;\n    };\n\n    Tile.prototype.overlapsRange = function (chr, start, end) {\n        return this.chr === chr && end >= this.startBP && start <= this.endBP;\n    };\n\n    function addMouseHandlers() {\n\n        const self = this;\n        const browser = this.browser;\n\n        let lastMouseX;\n        let mouseDownCoords;\n\n        let popupTimerID;\n\n        let lastClickTime = 0;\n\n        this.$viewport.on(\"contextmenu\", function (e) {\n\n            // Ignore if we are doing a drag.  This can happen with touch events.\n            if (self.browser.isDragging) {\n                return false;\n            }\n            const clickState = createClickState(e, self);\n\n            if (undefined === clickState) {\n                return false;\n            }\n\n\n            e.preventDefault();\n\n            // Track specific items\n            let menuItems = [];\n            if (typeof self.trackView.track.contextMenuItemList === \"function\") {\n                menuItems = self.trackView.track.contextMenuItemList(clickState);\n            }\n\n            // Add items common to all tracks\n            if (menuItems.length > 0) {\n                menuItems.push({label: $('<HR>')});\n            }\n            menuItems.push(\n                {\n                    label: 'Save Image (PNG)',\n                    click: function () {\n                        self.saveImage();\n                    }\n                });\n\n            menuItems.push(\n                {\n                    label: 'Save Image (SVG)',\n                    click: function () {\n                        self.saveSVG();\n                    }\n                });\n\n            self.popover.presentTrackContextMenu(e, menuItems);\n\n        });\n\n\n        /**\n         * Mouse click down,  notify browser for potential drag (pan), and record position for potential click.\n         */\n        this.$viewport.on('mousedown', function (e) {\n            self.enableClick = true;\n            browser.mouseDownOnViewport(e, self);\n            mouseDownCoords = igv.pageCoordinates(e);\n        });\n\n        this.$viewport.on('touchstart', function (e) {\n            self.enableClick = true;\n            browser.mouseDownOnViewport(e, self);\n            mouseDownCoords = igv.pageCoordinates(e);\n        });\n\n        /**\n         * Mouse is released.  Ignore if this is a context menu click, or the end of a drag action.   If neither of\n         * those, it is a click.\n         */\n        this.$viewport.on('mouseup', handleMouseUp);\n\n        this.$viewport.on('touchend', handleMouseUp);\n\n        this.$viewport.on('click', function (e) {\n            if (self.enableClick) {\n                handleClick(e);\n            }\n        });\n\n        function handleMouseUp(e) {\n\n\n            // Any mouse up cancels drag and scrolling\n            if (self.browser.isDragging || self.browser.isScrolling) {\n                self.browser.cancelTrackPan();\n                e.preventDefault();\n                e.stopPropagation();\n\n                self.enableClick = false;   // Until next mouse down\n\n                return;\n            }\n\n            self.browser.cancelTrackPan();\n            self.browser.endTrackDrag();\n        }\n\n        function handleClick(e) {\n\n            if (3 === e.which || e.ctrlKey) {\n                return;\n            }\n\n            // Close any currently open popups\n            $('.igv-popover').hide();\n\n\n            if (browser.isDragging || browser.isScrolling) {\n                return;\n            }\n\n            // // Interpret mouseDown + mouseUp < 5 pixels as a click.\n            // if(!mouseDownCoords) {\n            //     return;\n            // }\n            // const coords = igv.pageCoordinates(e);\n            // const dx = coords.x - mouseDownCoords.x;\n            // const dy = coords.y - mouseDownCoords.y;\n            // const dist2 = dx*dx + dy*dy;\n            // if(dist2 > 25) {\n            //     mouseDownCoords = undefined;\n            //     return;\n            // }\n\n            // Treat as a mouse click, its either a single or double click.\n            // Handle here and stop propogation / default\n            e.preventDefault();\n            e.stopPropagation();\n\n            const mouseX = igv.translateMouseCoordinates(e, self.$viewport.get(0)).x;\n            const mouseXCanvas = igv.translateMouseCoordinates(e, self.canvas).x;\n            const referenceFrame = self.genomicState.referenceFrame;\n            const xBP = Math.floor((referenceFrame.start) + referenceFrame.toBP(mouseXCanvas));\n\n            const time = Date.now();\n\n            if (time - lastClickTime < browser.constants.doubleClickDelay) {\n\n                // double-click\n                if (popupTimerID) {\n                    window.clearTimeout(popupTimerID);\n                    popupTimerID = undefined;\n                }\n\n                const centerBP = Math.round(referenceFrame.start + referenceFrame.toBP(mouseX));\n\n                let string;\n\n                if ('all' === referenceFrame.chrName.toLowerCase()) {\n\n                    const chr = browser.genome.getChromosomeCoordinate(centerBP).chr;\n\n                    if (1 === browser.genomicStateList.length) {\n                        string = chr;\n                    } else {\n                        let loci = browser.genomicStateList.map(function (g) {\n                            return g.locusSearchString;\n                        });\n                        loci[browser.genomicStateList.indexOf(self.genomicState)] = chr;\n                        string = loci.join(' ');\n                    }\n\n                    browser.search(string);\n\n                } else {\n                    browser.zoomWithScaleFactor(0.5, centerBP, self)\n                }\n\n\n            } else {\n                // single-click\n\n                if (e.shiftKey && typeof self.trackView.track.shiftClick === \"function\") {\n\n                    self.trackView.track.shiftClick(xBP, e);\n\n                } else if (typeof self.trackView.track.popupData === \"function\") {\n\n                    popupTimerID = setTimeout(function () {\n\n                            var content = getPopupContent(e, self);\n                            if (content) {\n                                const page = igv.pageCoordinates(e);\n                                self.popover.presentTrackContent(page.x, page.y, content);\n                            }\n                            clearTimeout(popupTimerID);\n                            popupTimerID = undefined;\n                        },\n                        browser.constants.doubleClickDelay);\n                }\n            }\n\n            lastClickTime = time;\n        }\n\n        function createClickState(e, viewport) {\n\n            const referenceFrame = viewport.genomicState.referenceFrame;\n            const viewportCoords = igv.translateMouseCoordinates(e, viewport.contentDiv);\n            const canvasCoords = igv.translateMouseCoordinates(e, viewport.canvas);\n            const genomicLocation = ((referenceFrame.start) + referenceFrame.toBP(viewportCoords.x));\n\n            if (undefined === genomicLocation || null === viewport.tile) {\n                return undefined;\n            }\n\n            return {\n                viewport: viewport,\n                referenceFrame: referenceFrame,\n                genomicLocation: genomicLocation,\n                x: viewportCoords.x,\n                y: viewportCoords.y,\n                canvasX: canvasCoords.x,\n                canvasY: canvasCoords.y\n            }\n\n        }\n\n        /**\n         * Return markup for popup info window\n         *\n         * @param e\n         * @param viewport\n         * @returns {*}\n         */\n        function getPopupContent(e, viewport) {\n\n            const clickState = createClickState(e, viewport);\n\n            if (undefined === clickState) {\n                return;\n            }\n\n            let track = viewport.trackView.track;\n            const dataList = track.popupData(clickState);\n\n            const popupClickHandlerResult = browser.fireEvent('trackclick', [track, dataList]);\n\n            let content;\n            if (undefined === popupClickHandlerResult || true === popupClickHandlerResult) {\n                // Indicates handler did not handle the result, or the handler wishes default behavior to occur\n                if (dataList && dataList.length > 0) {\n                    content = formatPopoverText(dataList);\n                }\n\n            } else if (typeof popupClickHandlerResult === 'string') {\n                content = popupClickHandlerResult;\n            }\n\n            return content;\n        }\n\n        /**\n         * Format markup for popover text from an array of name value pairs [{name, value}]\n         */\n        function formatPopoverText(nameValueArray) {\n\n            var markup = \"<table class=\\\"igv-popover-table\\\">\";\n\n            nameValueArray.forEach(function (nameValue) {\n\n                if (nameValue.name) {\n                    markup += \"<tr><td class=\\\"igv-popover-td\\\">\" + \"<div class=\\\"igv-popover-name-value\\\">\" + \"<span class=\\\"igv-popover-name\\\">\" + nameValue.name + \"</span>\" + \"<span class=\\\"igv-popover-value\\\">\" + nameValue.value + \"</span>\" + \"</div>\" + \"</td></tr>\";\n                } else {\n                    // not a name/value pair\n                    markup += \"<tr><td>\" + nameValue.toString() + \"</td></tr>\";\n                }\n            });\n\n            markup += \"</table>\";\n            return markup;\n\n\n        }\n    }\n\n    function getFeatures(chr, start, end, bpPerPixel) {\n\n        const self = this;\n\n        const track = self.trackView.track;\n\n        if (self.tile && self.tile.containsRange(chr, start, end, bpPerPixel)) {\n            return Promise.resolve(self.tile.features);\n        }\n        else if (typeof track.getFeatures === \"function\") {\n\n            return track.getFeatures(chr, start, end, bpPerPixel, self)\n\n                .then(function (features) {\n\n                    self.cachedFeatures = features;      // TODO -- associate with \"tile\"\n\n                    self.checkContentHeight();\n\n                    return features;\n\n                })\n        }\n        else {\n            return Promise.resolve(undefined);\n        }\n    }\n\n    igv.Viewport.prototype.checkContentHeight = function () {\n\n        let track = this.trackView.track;\n\n        if (\"FILL\" === track.displayMode) {\n            this.setContentHeight(this.$viewport.height())\n        }\n\n        else if (typeof track.computePixelHeight === 'function') {\n\n            let features = this.cachedFeatures;\n\n            if (features) {\n                let requiredContentHeight = track.computePixelHeight(features);\n                let currentContentHeight = $(this.contentDiv).height();\n                if (requiredContentHeight !== currentContentHeight) {\n                    this.setContentHeight(requiredContentHeight);\n                }\n            }\n        }\n    }\n\n    /**\n     * Merge 2 arrays.  a and/or b can be undefined.  If both are undefined, return undefined\n     * @param a An array or undefined\n     * @param b An array or undefined\n     */\n    function mergeArrays(a, b) {\n        if(a && b) return a.concat(b)\n        else if(a) return a\n        else return b\n\n    }\n\n    return igv;\n\n})\n(igv || {});\n\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Broad Institute\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar igv = (function (igv) {\n\n    igv.WindowSizePanel = function ($parent, browser) {\n\n        this.$content = $('<div class=\"igv-windowsizepanel-content-div\">');\n        $parent.append(this.$content);\n        this.browser = browser;\n\n    };\n\n    igv.WindowSizePanel.prototype.show = function () {\n        this.$content.show();\n    };\n\n    igv.WindowSizePanel.prototype.hide = function () {\n        this.$content.hide();\n    };\n\n    igv.WindowSizePanel.prototype.updateWithGenomicState = function (genomicState) {\n        this.$content.text( igv.prettyBasePairNumber(Math.round( this.browser.viewportWidth() * genomicState.referenceFrame.bpPerPixel )) );\n    };\n\n    return igv;\n})\n(igv || {});\n/* Module header based on https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n */\n\n//  HEADER\n// (function (root, factory) {\n//     if (typeof define === 'function' && define.amd) {\n//         // AMD. Register as an anonymous module.\n//         define([], factory);\n//     } else if (typeof module === 'object' && module.exports) {\n//         // Node. Does not work with strict CommonJS, but\n//         // only CommonJS-like environments that support module.exports,\n//         // like Node.\n//         module.exports = factory();\n//     } else {\n//         // Browser globals (root is window)\n//         root.igv = factory();\n//     }\n//}(this, function () {\n\n    // Just return a value to define the module export.\n    // This example returns an object, but the module\n    // can return a function as the exported value.\n    return igv;\n\n}));\n\n\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"],"sourceRoot":""}